(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "./node_modules/moment/locale sync recursive ^\\.\\/.*$":
/*!**************************************************!*\
  !*** ./node_modules/moment/locale sync ^\.\/.*$ ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": "./node_modules/moment/locale/af.js",
	"./af.js": "./node_modules/moment/locale/af.js",
	"./ar": "./node_modules/moment/locale/ar.js",
	"./ar-dz": "./node_modules/moment/locale/ar-dz.js",
	"./ar-dz.js": "./node_modules/moment/locale/ar-dz.js",
	"./ar-kw": "./node_modules/moment/locale/ar-kw.js",
	"./ar-kw.js": "./node_modules/moment/locale/ar-kw.js",
	"./ar-ly": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ly.js": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ma": "./node_modules/moment/locale/ar-ma.js",
	"./ar-ma.js": "./node_modules/moment/locale/ar-ma.js",
	"./ar-sa": "./node_modules/moment/locale/ar-sa.js",
	"./ar-sa.js": "./node_modules/moment/locale/ar-sa.js",
	"./ar-tn": "./node_modules/moment/locale/ar-tn.js",
	"./ar-tn.js": "./node_modules/moment/locale/ar-tn.js",
	"./ar.js": "./node_modules/moment/locale/ar.js",
	"./az": "./node_modules/moment/locale/az.js",
	"./az.js": "./node_modules/moment/locale/az.js",
	"./be": "./node_modules/moment/locale/be.js",
	"./be.js": "./node_modules/moment/locale/be.js",
	"./bg": "./node_modules/moment/locale/bg.js",
	"./bg.js": "./node_modules/moment/locale/bg.js",
	"./bm": "./node_modules/moment/locale/bm.js",
	"./bm.js": "./node_modules/moment/locale/bm.js",
	"./bn": "./node_modules/moment/locale/bn.js",
	"./bn.js": "./node_modules/moment/locale/bn.js",
	"./bo": "./node_modules/moment/locale/bo.js",
	"./bo.js": "./node_modules/moment/locale/bo.js",
	"./br": "./node_modules/moment/locale/br.js",
	"./br.js": "./node_modules/moment/locale/br.js",
	"./bs": "./node_modules/moment/locale/bs.js",
	"./bs.js": "./node_modules/moment/locale/bs.js",
	"./ca": "./node_modules/moment/locale/ca.js",
	"./ca.js": "./node_modules/moment/locale/ca.js",
	"./cs": "./node_modules/moment/locale/cs.js",
	"./cs.js": "./node_modules/moment/locale/cs.js",
	"./cv": "./node_modules/moment/locale/cv.js",
	"./cv.js": "./node_modules/moment/locale/cv.js",
	"./cy": "./node_modules/moment/locale/cy.js",
	"./cy.js": "./node_modules/moment/locale/cy.js",
	"./da": "./node_modules/moment/locale/da.js",
	"./da.js": "./node_modules/moment/locale/da.js",
	"./de": "./node_modules/moment/locale/de.js",
	"./de-at": "./node_modules/moment/locale/de-at.js",
	"./de-at.js": "./node_modules/moment/locale/de-at.js",
	"./de-ch": "./node_modules/moment/locale/de-ch.js",
	"./de-ch.js": "./node_modules/moment/locale/de-ch.js",
	"./de.js": "./node_modules/moment/locale/de.js",
	"./dv": "./node_modules/moment/locale/dv.js",
	"./dv.js": "./node_modules/moment/locale/dv.js",
	"./el": "./node_modules/moment/locale/el.js",
	"./el.js": "./node_modules/moment/locale/el.js",
	"./en-SG": "./node_modules/moment/locale/en-SG.js",
	"./en-SG.js": "./node_modules/moment/locale/en-SG.js",
	"./en-au": "./node_modules/moment/locale/en-au.js",
	"./en-au.js": "./node_modules/moment/locale/en-au.js",
	"./en-ca": "./node_modules/moment/locale/en-ca.js",
	"./en-ca.js": "./node_modules/moment/locale/en-ca.js",
	"./en-gb": "./node_modules/moment/locale/en-gb.js",
	"./en-gb.js": "./node_modules/moment/locale/en-gb.js",
	"./en-ie": "./node_modules/moment/locale/en-ie.js",
	"./en-ie.js": "./node_modules/moment/locale/en-ie.js",
	"./en-il": "./node_modules/moment/locale/en-il.js",
	"./en-il.js": "./node_modules/moment/locale/en-il.js",
	"./en-in": "./node_modules/moment/locale/en-in.js",
	"./en-in.js": "./node_modules/moment/locale/en-in.js",
	"./en-nz": "./node_modules/moment/locale/en-nz.js",
	"./en-nz.js": "./node_modules/moment/locale/en-nz.js",
	"./eo": "./node_modules/moment/locale/eo.js",
	"./eo.js": "./node_modules/moment/locale/eo.js",
	"./es": "./node_modules/moment/locale/es.js",
	"./es-do": "./node_modules/moment/locale/es-do.js",
	"./es-do.js": "./node_modules/moment/locale/es-do.js",
	"./es-us": "./node_modules/moment/locale/es-us.js",
	"./es-us.js": "./node_modules/moment/locale/es-us.js",
	"./es.js": "./node_modules/moment/locale/es.js",
	"./et": "./node_modules/moment/locale/et.js",
	"./et.js": "./node_modules/moment/locale/et.js",
	"./eu": "./node_modules/moment/locale/eu.js",
	"./eu.js": "./node_modules/moment/locale/eu.js",
	"./fa": "./node_modules/moment/locale/fa.js",
	"./fa.js": "./node_modules/moment/locale/fa.js",
	"./fi": "./node_modules/moment/locale/fi.js",
	"./fi.js": "./node_modules/moment/locale/fi.js",
	"./fil": "./node_modules/moment/locale/fil.js",
	"./fil.js": "./node_modules/moment/locale/fil.js",
	"./fo": "./node_modules/moment/locale/fo.js",
	"./fo.js": "./node_modules/moment/locale/fo.js",
	"./fr": "./node_modules/moment/locale/fr.js",
	"./fr-ca": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ca.js": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ch": "./node_modules/moment/locale/fr-ch.js",
	"./fr-ch.js": "./node_modules/moment/locale/fr-ch.js",
	"./fr.js": "./node_modules/moment/locale/fr.js",
	"./fy": "./node_modules/moment/locale/fy.js",
	"./fy.js": "./node_modules/moment/locale/fy.js",
	"./ga": "./node_modules/moment/locale/ga.js",
	"./ga.js": "./node_modules/moment/locale/ga.js",
	"./gd": "./node_modules/moment/locale/gd.js",
	"./gd.js": "./node_modules/moment/locale/gd.js",
	"./gl": "./node_modules/moment/locale/gl.js",
	"./gl.js": "./node_modules/moment/locale/gl.js",
	"./gom-deva": "./node_modules/moment/locale/gom-deva.js",
	"./gom-deva.js": "./node_modules/moment/locale/gom-deva.js",
	"./gom-latn": "./node_modules/moment/locale/gom-latn.js",
	"./gom-latn.js": "./node_modules/moment/locale/gom-latn.js",
	"./gu": "./node_modules/moment/locale/gu.js",
	"./gu.js": "./node_modules/moment/locale/gu.js",
	"./he": "./node_modules/moment/locale/he.js",
	"./he.js": "./node_modules/moment/locale/he.js",
	"./hi": "./node_modules/moment/locale/hi.js",
	"./hi.js": "./node_modules/moment/locale/hi.js",
	"./hr": "./node_modules/moment/locale/hr.js",
	"./hr.js": "./node_modules/moment/locale/hr.js",
	"./hu": "./node_modules/moment/locale/hu.js",
	"./hu.js": "./node_modules/moment/locale/hu.js",
	"./hy-am": "./node_modules/moment/locale/hy-am.js",
	"./hy-am.js": "./node_modules/moment/locale/hy-am.js",
	"./id": "./node_modules/moment/locale/id.js",
	"./id.js": "./node_modules/moment/locale/id.js",
	"./is": "./node_modules/moment/locale/is.js",
	"./is.js": "./node_modules/moment/locale/is.js",
	"./it": "./node_modules/moment/locale/it.js",
	"./it-ch": "./node_modules/moment/locale/it-ch.js",
	"./it-ch.js": "./node_modules/moment/locale/it-ch.js",
	"./it.js": "./node_modules/moment/locale/it.js",
	"./ja": "./node_modules/moment/locale/ja.js",
	"./ja.js": "./node_modules/moment/locale/ja.js",
	"./jv": "./node_modules/moment/locale/jv.js",
	"./jv.js": "./node_modules/moment/locale/jv.js",
	"./ka": "./node_modules/moment/locale/ka.js",
	"./ka.js": "./node_modules/moment/locale/ka.js",
	"./kk": "./node_modules/moment/locale/kk.js",
	"./kk.js": "./node_modules/moment/locale/kk.js",
	"./km": "./node_modules/moment/locale/km.js",
	"./km.js": "./node_modules/moment/locale/km.js",
	"./kn": "./node_modules/moment/locale/kn.js",
	"./kn.js": "./node_modules/moment/locale/kn.js",
	"./ko": "./node_modules/moment/locale/ko.js",
	"./ko.js": "./node_modules/moment/locale/ko.js",
	"./ku": "./node_modules/moment/locale/ku.js",
	"./ku.js": "./node_modules/moment/locale/ku.js",
	"./ky": "./node_modules/moment/locale/ky.js",
	"./ky.js": "./node_modules/moment/locale/ky.js",
	"./lb": "./node_modules/moment/locale/lb.js",
	"./lb.js": "./node_modules/moment/locale/lb.js",
	"./lo": "./node_modules/moment/locale/lo.js",
	"./lo.js": "./node_modules/moment/locale/lo.js",
	"./lt": "./node_modules/moment/locale/lt.js",
	"./lt.js": "./node_modules/moment/locale/lt.js",
	"./lv": "./node_modules/moment/locale/lv.js",
	"./lv.js": "./node_modules/moment/locale/lv.js",
	"./me": "./node_modules/moment/locale/me.js",
	"./me.js": "./node_modules/moment/locale/me.js",
	"./mi": "./node_modules/moment/locale/mi.js",
	"./mi.js": "./node_modules/moment/locale/mi.js",
	"./mk": "./node_modules/moment/locale/mk.js",
	"./mk.js": "./node_modules/moment/locale/mk.js",
	"./ml": "./node_modules/moment/locale/ml.js",
	"./ml.js": "./node_modules/moment/locale/ml.js",
	"./mn": "./node_modules/moment/locale/mn.js",
	"./mn.js": "./node_modules/moment/locale/mn.js",
	"./mr": "./node_modules/moment/locale/mr.js",
	"./mr.js": "./node_modules/moment/locale/mr.js",
	"./ms": "./node_modules/moment/locale/ms.js",
	"./ms-my": "./node_modules/moment/locale/ms-my.js",
	"./ms-my.js": "./node_modules/moment/locale/ms-my.js",
	"./ms.js": "./node_modules/moment/locale/ms.js",
	"./mt": "./node_modules/moment/locale/mt.js",
	"./mt.js": "./node_modules/moment/locale/mt.js",
	"./my": "./node_modules/moment/locale/my.js",
	"./my.js": "./node_modules/moment/locale/my.js",
	"./nb": "./node_modules/moment/locale/nb.js",
	"./nb.js": "./node_modules/moment/locale/nb.js",
	"./ne": "./node_modules/moment/locale/ne.js",
	"./ne.js": "./node_modules/moment/locale/ne.js",
	"./nl": "./node_modules/moment/locale/nl.js",
	"./nl-be": "./node_modules/moment/locale/nl-be.js",
	"./nl-be.js": "./node_modules/moment/locale/nl-be.js",
	"./nl.js": "./node_modules/moment/locale/nl.js",
	"./nn": "./node_modules/moment/locale/nn.js",
	"./nn.js": "./node_modules/moment/locale/nn.js",
	"./oc-lnc": "./node_modules/moment/locale/oc-lnc.js",
	"./oc-lnc.js": "./node_modules/moment/locale/oc-lnc.js",
	"./pa-in": "./node_modules/moment/locale/pa-in.js",
	"./pa-in.js": "./node_modules/moment/locale/pa-in.js",
	"./pl": "./node_modules/moment/locale/pl.js",
	"./pl.js": "./node_modules/moment/locale/pl.js",
	"./pt": "./node_modules/moment/locale/pt.js",
	"./pt-br": "./node_modules/moment/locale/pt-br.js",
	"./pt-br.js": "./node_modules/moment/locale/pt-br.js",
	"./pt.js": "./node_modules/moment/locale/pt.js",
	"./ro": "./node_modules/moment/locale/ro.js",
	"./ro.js": "./node_modules/moment/locale/ro.js",
	"./ru": "./node_modules/moment/locale/ru.js",
	"./ru.js": "./node_modules/moment/locale/ru.js",
	"./sd": "./node_modules/moment/locale/sd.js",
	"./sd.js": "./node_modules/moment/locale/sd.js",
	"./se": "./node_modules/moment/locale/se.js",
	"./se.js": "./node_modules/moment/locale/se.js",
	"./si": "./node_modules/moment/locale/si.js",
	"./si.js": "./node_modules/moment/locale/si.js",
	"./sk": "./node_modules/moment/locale/sk.js",
	"./sk.js": "./node_modules/moment/locale/sk.js",
	"./sl": "./node_modules/moment/locale/sl.js",
	"./sl.js": "./node_modules/moment/locale/sl.js",
	"./sq": "./node_modules/moment/locale/sq.js",
	"./sq.js": "./node_modules/moment/locale/sq.js",
	"./sr": "./node_modules/moment/locale/sr.js",
	"./sr-cyrl": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr-cyrl.js": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr.js": "./node_modules/moment/locale/sr.js",
	"./ss": "./node_modules/moment/locale/ss.js",
	"./ss.js": "./node_modules/moment/locale/ss.js",
	"./sv": "./node_modules/moment/locale/sv.js",
	"./sv.js": "./node_modules/moment/locale/sv.js",
	"./sw": "./node_modules/moment/locale/sw.js",
	"./sw.js": "./node_modules/moment/locale/sw.js",
	"./ta": "./node_modules/moment/locale/ta.js",
	"./ta.js": "./node_modules/moment/locale/ta.js",
	"./te": "./node_modules/moment/locale/te.js",
	"./te.js": "./node_modules/moment/locale/te.js",
	"./tet": "./node_modules/moment/locale/tet.js",
	"./tet.js": "./node_modules/moment/locale/tet.js",
	"./tg": "./node_modules/moment/locale/tg.js",
	"./tg.js": "./node_modules/moment/locale/tg.js",
	"./th": "./node_modules/moment/locale/th.js",
	"./th.js": "./node_modules/moment/locale/th.js",
	"./tk": "./node_modules/moment/locale/tk.js",
	"./tk.js": "./node_modules/moment/locale/tk.js",
	"./tl-ph": "./node_modules/moment/locale/tl-ph.js",
	"./tl-ph.js": "./node_modules/moment/locale/tl-ph.js",
	"./tlh": "./node_modules/moment/locale/tlh.js",
	"./tlh.js": "./node_modules/moment/locale/tlh.js",
	"./tr": "./node_modules/moment/locale/tr.js",
	"./tr.js": "./node_modules/moment/locale/tr.js",
	"./tzl": "./node_modules/moment/locale/tzl.js",
	"./tzl.js": "./node_modules/moment/locale/tzl.js",
	"./tzm": "./node_modules/moment/locale/tzm.js",
	"./tzm-latn": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm-latn.js": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm.js": "./node_modules/moment/locale/tzm.js",
	"./ug-cn": "./node_modules/moment/locale/ug-cn.js",
	"./ug-cn.js": "./node_modules/moment/locale/ug-cn.js",
	"./uk": "./node_modules/moment/locale/uk.js",
	"./uk.js": "./node_modules/moment/locale/uk.js",
	"./ur": "./node_modules/moment/locale/ur.js",
	"./ur.js": "./node_modules/moment/locale/ur.js",
	"./uz": "./node_modules/moment/locale/uz.js",
	"./uz-latn": "./node_modules/moment/locale/uz-latn.js",
	"./uz-latn.js": "./node_modules/moment/locale/uz-latn.js",
	"./uz.js": "./node_modules/moment/locale/uz.js",
	"./vi": "./node_modules/moment/locale/vi.js",
	"./vi.js": "./node_modules/moment/locale/vi.js",
	"./x-pseudo": "./node_modules/moment/locale/x-pseudo.js",
	"./x-pseudo.js": "./node_modules/moment/locale/x-pseudo.js",
	"./yo": "./node_modules/moment/locale/yo.js",
	"./yo.js": "./node_modules/moment/locale/yo.js",
	"./zh-cn": "./node_modules/moment/locale/zh-cn.js",
	"./zh-cn.js": "./node_modules/moment/locale/zh-cn.js",
	"./zh-hk": "./node_modules/moment/locale/zh-hk.js",
	"./zh-hk.js": "./node_modules/moment/locale/zh-hk.js",
	"./zh-mo": "./node_modules/moment/locale/zh-mo.js",
	"./zh-mo.js": "./node_modules/moment/locale/zh-mo.js",
	"./zh-tw": "./node_modules/moment/locale/zh-tw.js",
	"./zh-tw.js": "./node_modules/moment/locale/zh-tw.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./node_modules/moment/locale sync recursive ^\\.\\/.*$";

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/app.component.html":
/*!**************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/app.component.html ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"appContainer\">\n<mat-sidenav-container>\n  <mat-sidenav #sidenav role=\"navigation\" [position]=\"sidenavPosition\" *ngIf=\"responsiveService.isEmbedded || responsiveService.onMobileViewPort\">\n    <header-sidebar [preference]=\"preference\" [miniWebsite]=\"miniWebsite\"></header-sidebar>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <div id=\"content-wrap\" [ngClass]=\"{'contentWrapEmbedded': responsiveService.isEmbedded}\">\n      <app-header *ngIf=\"!isLoading && !isEmbedded\" [miniWebsite]=\"miniWebsite\" [schedulerLink]=\"schedulerLink\" [preference]=\"preference\" [isAuthenticated]=\"isAuthenticated\"></app-header>\n      <main [ngClass]=\"{'container mt-5': !isEmbedded}\" *ngIf=\"!isLoading && !errorLoading\" id=\"routerOutletContainer\">\n        <router-outlet></router-outlet>\n      </main>\n      <div class=\"container\" *ngIf=\"errorLoading\" >\n        <mat-card id=\"errorBox\" class=\"col-12 mt-5 noBorderBottom\">\n          <mat-card-content>\n            <div class=\"alert\" appAlert baseStyle=\"error\">{{errorMessage}}</div>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n    <footer class=\"footer\" id=\"footer\" *ngIf=\"!isLoading\" [hidden]=\"isEmbedded\"\n            backgroundStyling containerId=\"footer\"\n            textFormatting textId=\"footer\">\n      <div class=\"container\">\n        <a href=\"http://timetap.com/\" id=\"footerTimeTapLink\" appLink linkId=\"footerTimeTapLink\" target=\"_blank\">Web Scheduler</a> by TimeTap &copy; {{activeYear}} Addy Systems LLC. All rights reserved. Version {{version}}\n\n      </div>\n    </footer>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n\n  <div class=\"appLoadingContainer\" *ngIf=\"isLoading\">\n    <span *ngIf=\"miniWebsite === undefined\"><i class=\"fa fa-spinner fa-spin fa-fw\"></i> Loading...</span>\n    <mat-progress-spinner *ngIf=\"miniWebsite !== undefined\" mode=\"indeterminate\" value=\"50\" class=\"loadingSpinner\"></mat-progress-spinner>\n    <span *ngIf=\"miniWebsite !== undefined\" class=\"spinnerText\">Loading...</span>\n  </div>\n\n\n\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/auth/cookie-banner/cookie-banner.component.html":
/*!*******************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/auth/cookie-banner/cookie-banner.component.html ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"showBanner\">\n    <p>\n        For continuous improvement of user experience this website uses  cookies for collecting your IP address and individual statistics.\n    </p>\n\n    <button (click)=\"agreeToShare()\">OK</button>\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/auth/login/login.component.html":
/*!***************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/auth/login/login.component.html ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 mat-dialog-title id=\"loginTitle\">{{preference.labelMap.loginTitle}}</h1>\n<mat-dialog-content class=\"mat-dialog-form\" id=\"loginForm\">\n    <form class=\"row\" #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit(loginForm)\" (keydown.enter)=\"onSubmit(loginForm)\">\n        <div class=\"col-12\">\n            <div class=\"alert\" appAlert baseStyle=\"error\" role=\"alert\" *ngIf=\"loginFailed\">\n                {{preference.labelMap.loginErrorMsg}}\n            </div>\n            <div class=\"alert\" appAlert baseStyle=\"error\" role=\"alert\" *ngIf=\"noClientRecordsFound\">\n                We are unable to locate your details at this time. Please try  <a (click)=\"forgotPassword(loginForm)\" appLink>resetting your password</a> and logging in again.\n            </div>\n            <div id=\"loginDescription\" class=\"mat-dialog-desc alert alert-success\" *ngIf=\"description !== null\">\n                {{description}}\n            </div>\n        </div>\n        <mat-form-field class=\"col\">\n            <input type=\"email\"\n                   matInput\n                   placeholder=\"{{preference.labelMap.loginModalEmailLabel}}\"\n                   [(ngModel)]=\"email\"\n                   name=\"email\"\n                   email\n                   required\n                   #emailInput/>\n        </mat-form-field>\n        <div class=\"w-100\"></div>\n        <mat-form-field class=\"col\" >\n            <input type=\"password\"\n                   matInput\n                   placeholder=\"{{preference.labelMap.loginModalPasswordLabel}}\"\n                   ngModel\n                   name=\"password\"\n                   required\n                   #pwInput=\"ngModel\"/>\n        </mat-form-field>\n        <div class=\"w-100\"></div>\n        <div class=\"col submit-button\">\n            <button id=\"loginBtnSubmit\" (click)=\"loginForm.ngSubmit.emit()\" [disabled]=\"loginForm.invalid || loggingIn\" mat-stroked-button\n                    buttonStyling baseStyle=\"primary\" class=\"col\">\n                <span *ngIf=\"!loggingIn\">{{preference.labelMap.loginBtnLabel}}</span>\n                <span *ngIf=\"loggingIn\"><i class=\"fa fa-spinner fa-spin fa-fw\"></i> {{preference.labelMap.loginBtnLabelLoggingIn}}</span>\n            </button>\n        </div>\n        <div class=\"w-100\"></div>\n        <div class=\"col dialogActionLinks forgotPasswordBlock\">\n            <a (click)=\"forgotPassword(loginForm)\" id=\"forgotPwdLink\" appLink linkId=\"forgotPwdLink\">{{preference.labelMap.loginForgotPwd}}</a>\n        </div>\n        <div class=\"w-100\" *ngIf=\"showRegisterBtn\"></div>\n        <div class=\"col dialogActionLinks registerForAccountBlock\" *ngIf=\"showRegisterBtn\">\n            {{preference.labelMap.switchToRegisterText}}\n            <a (click)=\"openRegister(loginForm)\" id=\"switchToRegisterLink\" appLink linkId=\"switchToRegisterLink\">{{preference.labelMap.switchToRegisterLink}}</a>\n        </div>\n    </form>\n</mat-dialog-content>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/auth/register/register.component.html":
/*!*********************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/auth/register/register.component.html ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 mat-dialog-title id=\"registerTitle\">{{title}}</h1>\n<mat-dialog-content class=\"mat-dialog-form\" id=\"registrationForm\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div id=\"registerDescription\" class=\"mat-dialog-desc\" *ngIf=\"!clientNotFoundNoNewRegistrations\">\n                {{description}}\n            </div>\n            <div id=\"registerDescription\" class=\"alert\" appAlert baseStyle=\"error\" role=\"alert\" *ngIf=\"clientNotFoundNoNewRegistrations\">\n                {{description}}\n            </div>\n            <div class=\"alert\" appAlert baseStyle=\"error\" role=\"alert\" *ngIf=\"loginFailed\">\n                {{preference.labelMap.registerLoginErrorMsg}}\n            </div>\n            <div id=\"requiredFieldsEmpty\" class=\"alert\" appAlert baseStyle=\"error\" *ngIf=\"requiredFieldsEmpty && !registeringClient\">\n                {{requiredFieldsEmptyMsg}}\n            </div>\n            <div class=\"alert\" appAlert baseStyle=\"error\" role=\"alert\" *ngIf=\"timezonesFailed || registrationFailed || checkingEmailFailed\">\n                {{preference.labelMap.registerErrorMsg}}\n            </div>\n        </div>\n    </div>\n    <form class=\"row\" #registrationForm=\"ngForm\" (ngSubmit)=\"checkClientEmail(registrationForm)\" *ngIf=\"!clientNeedsToRegister\">\n        <mat-form-field class=\"col\">\n            <input type=\"email\"\n                   matInput\n                   placeholder=\" {{preference.labelMap.registerForgotPwdEnterEmailPlaceholder}}\"\n                   [(ngModel)]=\"email\"\n                   name=\"email\"\n                   email\n                   required\n                   [pattern]=\"preference.emailValidationRegex\"\n                   #emailInput=\"ngModel\"/>\n            <mat-error *ngIf=\"!emailInput.hasError('required')\">Email is invalid</mat-error>\n        </mat-form-field>\n        <div class=\"w-100\"></div>\n        <div class=\"col submit-button\">\n            <button id=\"registerBtnSubmit\" (click)=\"registrationForm.ngSubmit.emit()\" [disabled]=\"registrationForm.invalid || checkingEmail\" mat-stroked-button\n                    buttonStyling baseStyle=\"primary\" class=\"col\">\n                <span *ngIf=\"checkingEmail\"><i class=\"fa fa-spinner fa-spin fa-fw\"></i></span> {{buttonLabel}}\n            </button>\n        </div>\n    </form>\n    <span *ngIf=\"clientNeedsToRegister\">\n            <app-scheduler-pref-field-form [fieldDefnList]=\"newClient.fields\" [clientInfoForm]=\"registrationForm\" [editing]=\"true\" [addConnectedClient]=\"connectClient\"\n                                           [preference]=\"preference\" [selectClientOnForm]=\"false\" [disableEmailAddress]=\"disableEmailAddress\">\n            </app-scheduler-pref-field-form>\n        <!--\n        <app-scheduler-pref-field-form [fieldDefnList]=\"preference.schedulerPreferenceFieldDefnList\" [earliestApptDate]=\"earliestApptDate\"\n                                   [clientInfoForm]=\"clientInfoForm\" [preference]=\"preference\" [editing]=\"true\" [selectedReason]=\"selectedReason\"\n                                   *ngIf=\"!savingAppointment\" (onFormLoaded)=\"onFormLoaded(event)\" (onFileUploading)=\"uploadingFile(event)\" [selectClientOnForm]=\"true\"></app-scheduler-pref-field-form>\n        -->\n    </span>\n    <div class=\"w-100\"></div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"clientNeedsToRegister\">\n        <button type=\"button\"\n                id=\"registerBtnSubmit\"\n                mat-stroked-button\n                buttonStyling baseStyle=\"primary\"\n                class=\"btn btn-block\"\n                (click)=\"registerClient()\"\n                [disabled]=\"registeringClient\">\n            <i *ngIf=\"registeringClient\" class=\"fa fa-spinner fa-spin fa-fw\"> </i>{{buttonLabel}}\n        </button>\n</mat-dialog-actions>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/auth/reset-password/reset-password.component.html":
/*!*********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/auth/reset-password/reset-password.component.html ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 mat-dialog-title id=\"registerTitle\">{{title}}</h1>\n<mat-dialog-content class=\"mat-dialog-form\" id=\"registrationForm\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"alert\" appAlert baseStyle=\"error\" role=\"alert\" *ngIf=\"resetPwdError\">\n                {{resetPwdErrorMsg}}\n            </div>\n            <div class=\"alert\" appAlert baseStyle=\"info\" role=\"alert\" *ngIf=\"loading\">\n                {{preference.labelMap.loadingMsgGeneric}}\n            </div>\n            <div class=\"alert\" appAlert baseStyle=\"success\" role=\"alert\" *ngIf=\"resendPasswordRequestSuccess\">\n                {{resendPasswordRequestSuccessMsg}}\n            </div>\n            <div id=\"resetPwdDescription\" class=\"mat-dialog-desc\" *ngIf=\"passwordResetRequestActive && !loading\">\n                {{description}}\n            </div>\n        </div>\n    </div>\n    <form class=\"row\" #resetPwdForm=\"ngForm\" (ngSubmit)=\"checkPasswords(resetPwdForm)\" *ngIf=\"passwordResetRequestActive && !loading\">\n        <mat-form-field class=\"col\">\n            <input type=\"password\"\n                   matInput\n                   placeholder=\"{{preference.labelMap.resetPwdEnterPasswordPlaceholder}}\"\n                   [(ngModel)]=\"password\"\n                   name=\"password\"\n                   password\n                   required\n                   [disabled]=\"resettingPasswords\"\n                   #passwordInput=\"ngModel\"/>\n            <mat-error *ngIf=\"!passwordInput.hasError('required')\">{{preference.labelMap.resetPwdEnterPasswordErrorMsg}}</mat-error>\n        </mat-form-field>\n        <div class=\"w-100\"></div>\n        <mat-form-field class=\"col\">\n            <input type=\"password\"\n                   matInput\n                   placeholder=\"{{preference.labelMap.resetPwdConfirmPasswordPlaceholder}}\"\n                   [(ngModel)]=\"confirmPassword\"\n                   name=\"confirmPassword\"\n                   confirmPassword\n                   required\n                   [disabled]=\"resettingPasswords\"\n                   #confirmPasswordInput=\"ngModel\"/>\n            <mat-error *ngIf=\"!confirmPasswordInput.hasError('required')\">{{preference.labelMap.resetPwdConfirmPasswordErrorMsg}}</mat-error>\n        </mat-form-field>\n\n        <div class=\"w-100\"></div>\n        <div class=\"col submit-button\">\n            <button id=\"resetPwdSubmit\" (click)=\"resetPwdForm.ngSubmit.emit()\" [disabled]=\"resetPwdForm.invalid || resettingPasswords\" mat-stroked-button\n                    buttonStyling baseStyle=\"primary\" class=\"col\">\n                <span *ngIf=\"resettingPasswords\"><i class=\"fa fa-spinner fa-spin fa-fw\"></i></span> {{buttonLabel}}\n            </button>\n        </div>\n        <div class=\"col submit-button\">\n            <button id=\"resetPwdClose\" (click)=\"dismissModal()\" [disabled]=\"resettingPasswords\" mat-stroked-button\n                    buttonStyling baseStyle=\"default\" class=\"col\">\n                {{preference.labelMap.modalCloseBtnLabel}}\n            </button>\n        </div>\n    </form>\n    <div class=\"row\" *ngIf=\"!passwordResetRequestActive && !loading\">\n        <div class=\"col submit-button\">\n            <button id=\"resendPasswordResetRequestBtn\" (click)=\"resendPasswordResetRequest()\" [disabled]=\"resettingPasswords\" mat-stroked-button\n                    buttonStyling baseStyle=\"primary\" class=\"col\">\n                <span *ngIf=\"resendingRequest\"><i class=\"fa fa-spinner fa-spin fa-fw\"></i></span> {{resendRequestBtnLabel}}\n            </button>\n        </div>\n        <div class=\"col submit-button\">\n            <button id=\"resendPasswordClose\" (click)=\"dismissModal()\" [disabled]=\"resendingRequest\" mat-stroked-button\n                    buttonStyling baseStyle=\"default\" class=\"col\">\n                {{preference.labelMap.modalCloseBtnLabel}}\n            </button>\n        </div>\n    </div>\n    <div class=\"w-100\"></div>\n</mat-dialog-content>\n\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/booking-components/availability-calendar/availability-calendar.component.html":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/booking-components/availability-calendar/availability-calendar.component.html ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-form-field appearance=\"standard\">\n    <mat-label>Select Date</mat-label>\n    <input matInput type=\"text\" #apptDateSelector\n           [required]=\"true\"\n           placeholder=\"Select Date\"\n           (focus)=\"showCalendar()\"\n           (keydown.tab)=\"navigateAvailableDates($event, apptDateSelector.value)\" (keydown.shift.tab)=\"navigateAvailableDates($event, apptDateSelector.value)\"\n           [(ngModel)]=\"dateForDisplay\" (ngModelChange)=\"dateChanged(apptDateSelector.value)\" name=\"startDate\" [disabled]=\"!editing\">\n    <mat-icon  fontSet=\"fa\" fontIcon=\"alarm\" matSuffix></mat-icon>\n</mat-form-field>\n<div class=\"calendar-dropdown\" *ngIf=\"calendarVisible\">\n    <div class=\"row\" (click)=\"$event.preventDefault()\">\n        <div class=\"col-2 text-center\">\n            <button class=\"btn btn-default\" (click)=\"previousMonth(currentMonthData, $event)\"  [disabled]=\"!allowGetPrevMonth\" aria-label=\"Previous Month\">\n                <i class=\"fa fa-chevron-left\"></i>\n            </button>\n        </div>\n        <div class=\"text-center col-8\">\n            <h3 id=\"calendarMonthLabel\">\n                {{calendarMonthTitle}}\n            </h3>\n        </div>\n        <div class=\"col-2 text-center\" id=\"nextMonthButton\">\n            <button class=\"btn btn-default\" (click)=\"nextMonth(currentMonthData, $event)\" [disabled]=\"!allowGetNextMonth\" aria-label=\"Next Month\">\n                <i class=\"fa fa-chevron-right\"></i>\n            </button>\n        </div>\n    </div>\n    <!--    <div class=\"row schedulerPanelLoading\" *ngIf=\"!monthAvailabilityLoaded && !errorLoading\">-->\n    <!--        <mat-progress-spinner mode=\"indeterminate\" value=\"50\" class=\"loadingSpinner\"></mat-progress-spinner><span class=\"spinnerText\">Loading...</span>-->\n    <!--    </div>-->\n    <div class=\"row calendarHeader\" *ngIf=\"monthAvailabilityLoaded\" (click)=\"$event.preventDefault()\">\n        <div class=\"daySpan2 col-xs-2\" *ngFor=\"let weekday of weekdays\">\n            {{weekday}}\n        </div>\n    </div>\n    <div id=\"calendarBox\" *ngIf=\"monthAvailabilityLoaded\" (click)=\"$event.preventDefault()\">\n        <div class=\"day dayBox\" *ngFor=\"let day of monthDays\" [tabIndex]=\"day.available ? 0 : -1\" (keyup.enter)=\"setDay(day, $event)\"\n             backgroundStyling [containerClass]=\"day.dayNumInMonth===activeDay ? 'selectedDayOnCalendar' : day.available ? 'dayHasAvailability' : 'noAvailabilityOnDay'\"\n             [defaultColor]=\"day.dayNumInMonth===activeDay ? '#1C827C' : day.available ? '#6BC7C1' : 'transparent'\"\n             (click)=\"setDay(day, $event)\"\n             [ngClass]=\"{'dayHasAvailability': day.available, 'noAvailabilityOnDay': !day.available, 'selectedDayOnCalendar': day.dayNumInMonth===activeDay,\n             'allowClickNonAvailableDays': checkAllowClickNonAvailableDay(day)}\">\n            <div textFormatting  [textClass]=\"day.dayNumInMonth===activeDay ? 'selectedDayOnCalendar' : day.available ? 'dayHasAvailability' : 'noAvailabilityOnDay'\"\n                 [inheritedColorOverride]=\"day.dayNumInMonth===activeDay ? '#ffffff' : '#000000'\"\n                 [ngClass]=\"{'blankTxt': !day.isDayInMonth}\" style=\"padding:10px\">\n                {{day.dayNumInMonth}}\n            </div>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/booking-components/time-picker/time-picker.component.html":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/booking-components/time-picker/time-picker.component.html ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"input-group timepicker\" *ngIf=\"!editing\">\n    <div class=\"input-group-append\">\n        <input (focus)=\"showTimepicker()\" (blur)=\"hideTimepicker()\" [attr.aria-label]=\"ariaLabel\" [disabled]=\"!editing\"\n               class=\"form-control\" value=\"{{displayTime}}\" type=\"text\" />\n        <button (click)=\"showTimepicker()\" [disabled]=\"!editing\" type=\"button\" class=\"btn btn-secondary\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            <i class=\"la la-clock-o\"></i>\n        </button>\n    </div>\n</div>\n<timepicker *ngIf=\"editing\" [(ngModel)]=\"timepickerTime\" (ngModelChange)=\"setTime()\"  [hourStep]=\"hstep\" [minuteStep]=\"mstep\"></timepicker>\n\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/client-account-header/client-account-header.component.html":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/client-account-header/client-account-header.component.html ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-toolbar id=\"{{headerId}}\" *ngIf=\"preference !== undefined\" class=\"toolbarCardHeader\">\n    <mat-toolbar-row [ngClass]=\"{'noClientSelectorBackBtn': !showBackButton}\" *ngIf=\"(!responsiveService.onMobileViewPort || !showClientSelector) && !(responsiveService.onMobileViewPort && showConnectClientButton)\">\n        <div class=\"col-2\">\n            <button type=\"button\"\n                    id=\"backBtn\"\n                    mat-stroked-button\n                    *ngIf=\"showBackButton\"\n                    buttonStyling baseStyle=\"basic\"\n                    (click)=\"goBack()\">\n                {{preference.labelMap.labelBack}}\n            </button>\n        </div>\n        <div class=\"col-8\">\n            <mat-card-title id=\"{{titleId}}\">\n                <h2 textFormatting textClass=\"myAccountScreenTitle\">{{title}}</h2>\n            </mat-card-title>\n        </div>\n        <div class=\"col-2\">\n            <mat-form-field id=\"loggedInClientSelector\" *ngIf=\"showClientSelector\">\n                <mat-select placeholder=\"{{preference.labelMap[viewingClientsLabel]}}\" [(value)]=\"selectedClient\">\n                    <mat-option *ngFor=\"let client of clientAccount.clientList\" [value]=\"client\" (onSelectionChange)=\"selectClient($event, client)\" selected=\"\">\n                        {{client.fullName}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n            <button type=\"button\"\n                    id=\"addNewClientBtn\"\n                    class=\"no-print\"\n                    mat-stroked-button\n                    *ngIf=\"showConnectClientButton\"\n                    buttonStyling baseStyle=\"primary\" fullHeight=\"true\" catchOverflow=\"true\" lineHeight=\"20px\"\n                    (click)=\"addNewClient()\">\n                {{preference.labelMap.clientProfileAddNewClientLabel}}\n            </button>\n            <button type=\"button\"\n                    id=\"printBtn\"\n                    class=\"no-print\"\n                    mat-stroked-button\n                    *ngIf=\"!showClientSelector && !showConnectClientButton && showPrintButton\"\n                    buttonStyling float=\"right\"\n                    (click)=\"printPage()\">\n                {{preference.labelMap.printBtnLabel}}\n            </button>\n        </div>\n    </mat-toolbar-row>\n    <mat-toolbar-row class=\"showClientSelector\" *ngIf=\"responsiveService.onMobileViewPort && (showClientSelector || showConnectClientButton)\">\n        <button type=\"button\"\n                id=\"backBtn\"\n                mat-stroked-button\n                *ngIf=\"showBackButton\"\n                buttonStyling baseStyle=\"basic\"\n                (click)=\"goBack()\">\n            {{preference.labelMap.labelBack}}\n        </button>\n        <mat-form-field *ngIf=\"showClientSelector\" id=\"loggedInClientSelector\">\n            <mat-select placeholder=\"{{preference.labelMap[viewingClientsLabel]}}\" [(value)]=\"selectedClient\">\n                <mat-option *ngFor=\"let client of clientAccount.clientList\" [value]=\"client\" (onSelectionChange)=\"selectClient($event, client)\" selected=\"\">\n                    {{client.fullName}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <button type=\"button\"\n                id=\"addNewClientBtn\"\n                mat-stroked-button\n                *ngIf=\"showConnectClientButton\"\n                buttonStyling baseStyle=\"primary\"\n                (click)=\"addNewClient()\">\n            {{preference.labelMap.clientProfileAddNewClientLabel}}\n        </button>\n    </mat-toolbar-row>\n    <mat-toolbar-row *ngIf=\"responsiveService.onMobileViewPort && (showClientSelector || showConnectClientButton)\">\n        <mat-card-title id=\"{{titleId}}\">\n            <h2>{{title}}</h2>\n        </mat-card-title>\n    </mat-toolbar-row>\n</mat-toolbar>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/client-account-home/client-account-home.component.html":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/client-account-home/client-account-home.component.html ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card id=\"myAccountHome\" class=\"myAccountCard\" backgroundStyling containerClass=\"myAccountCard\" [ngClass]=\"{'embeddedView': responsiveService.isEmbedded}\">\n    <client-account-header *ngIf=\"dataLoaded && !errorLoading\" headerId=\"myAccountHomeHeader\" (onSelectClient)=\"selectClient($event)\"\n                           [preference]=\"preference\" [clientAccount]=\"clientAccount\" [selectedClient]=\"selectedClient\"\n                           [showBackButton]=\"false\" [showClientSelector]=\"clientAccount.clientList.length > 1\"\n                           titleId=\"myAccountHomeTitle\"\n                           viewingClientsLabel=\"viewingAccountForLabel\"\n                           title=\"{{loggedInWelcomeTitle}}\"></client-account-header>\n    <mat-card-content *ngIf=\"dataLoaded && !errorLoading\">\n        <div id=\"clientFormsMsg\" *ngIf=\"unsubmittedFormsList !== undefined && unsubmittedFormsList !== null && unsubmittedFormsList.length > 0\"\n             class=\"alert\" appAlert baseStyle=\"info\">\n            <span [innerHTML]=\"formsToFillOutText | safeHtml\"></span>\n            <ul>\n                <li *ngFor=\"let form of unsubmittedFormsList\">\n                    {{form.formName}}, Status: {{form.status | titlecase}} - <a (click)=\"goToForm(form)\" appLink >Fill out form</a>\n                </li>\n            </ul>\n        </div>\n        <div id=\"loggedInWelcomeText\" [innerHTML]=\"loggedInWelcomeText | safeHtml\"></div>\n        <div class=\"row\" id=\"myAccountActionBtns\">\n            <div [ngClass]=\"{'col-lg-3 col-md-6 col-6': preference.showClientInvoices, 'col-md-4': !preference.showClientInvoices}\">\n                <button type=\"button\" (click)=\"bookNewAppt()\" id=\"bookNewApptBtn\" mat-stroked-button\n                        class=\"py-5\" buttonStyling baseStyle=\"basic\" fullHeight=\"true\" catchOverflow=\"true\">\n                    {{preference.labelMap.bookNewApptLabel}}\n                </button>\n            </div>\n            <div [ngClass]=\"{'col-lg-3 col-md-6 col-6': preference.showClientInvoices, 'col-md-4': !preference.showClientInvoices}\">\n                <button type=\"button\" (click)=\"viewAppts()\" id=\"viewApptBtn\" mat-stroked-button\n                        class=\"py-5\" buttonStyling baseStyle=\"basic\" fullHeight=\"true\" catchOverflow=\"true\">\n                    {{preference.labelMap.viewApptLabel}}\n                </button>\n            </div>\n            <div class=\"col-lg-3 col-md-6 col-6\" *ngIf=\"preference.showClientInvoices\">\n                <button type=\"button\" (click)=\"viewInvoices()\" id=\"viewInvoiceBtn\" mat-stroked-button\n                        class=\"py-5\" buttonStyling baseStyle=\"basic\" fullHeight=\"true\" catchOverflow=\"true\">\n                    {{preference.labelMap.viewInvoiceLabel}}\n                </button>\n            </div>\n            <div [ngClass]=\"{'col-lg-3 col-md-6 col-6': preference.showClientInvoices, 'col-md-4': !preference.showClientInvoices}\">\n                <button type=\"button\" (click)=\"viewProfile()\" id=\"myProfileBtn\" mat-stroked-button\n                        class=\"py-5\" buttonStyling baseStyle=\"basic\" fullHeight=\"true\" catchOverflow=\"true\">\n                    {{preference.labelMap.myAccountMyProfileBtnLabel}}\n                </button>\n            </div>\n        </div>\n    </mat-card-content>\n    <mat-card-content *ngIf=\"!dataLoaded && errorLoading\" class=\"myAccountCard\">\n        <div class=\"errorText\" *ngIf=\"errorLoading && preference === undefined\">\n            {{errorMessage}}\n        </div>\n    </mat-card-content>\n</mat-card>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/client-account.component.html":
/*!****************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/client-account.component.html ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<router-outlet></router-outlet>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/client-profile/client-forms/client-forms.component.html":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/client-profile/client-forms/client-forms.component.html ***!
  \******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card-content id=\"clientProfileFields\">\n    <mat-table [dataSource]=\"disclaimerFormList\" matSort backgroundStyling defaultColor=\"transparent\">\n\n        <ng-container  *ngFor=\"let col of columnDefs\" [matColumnDef]=\"col.name\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header>{{ col.title }}</mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                <span *ngIf=\"col.filter===undefined || col.filter === null\">\n                    {{ dataTablesService.getProperty(element, col.name) }}\n                </span>\n                <span *ngIf=\"col.filter!== undefined && col.filter !== null\" [innerHTML]=\"dataTablesService.getFilterDisplay(element, col, selectedClient)\"></span>\n            </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\">\n            <mat-header-cell *matHeaderCellDef>\n                Actions\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                <button type=\"button\" mat-stroked-button class=\"viewDetailBtn viewApptDetailBtn\" buttonStyling baseStyle=\"basic\" btnClass=\"viewDetailBtn\"\n                        (click)=\"goToForm(element)\" [innerHTML]=\"preference.labelMap['clientProfileViewFormsBtn'] | safeHtml\">\n                </button>\n            </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"noForms\" >\n            <mat-footer-cell *matFooterCellDef [attr.aria-rowspan]=\"displayedColumns.length\" class=\"emptyDataList\">\n                <div class=\"alert alert-info\">\n                    {{preference.labelMap.clientProfileNoFormsMsg}}\n                </div>\n            </mat-footer-cell>\n        </ng-container>\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row *matRowDef=\"let element; columns: displayedColumns\"\n                 class=\"element-row\">\n        </mat-row>\n        <mat-footer-row *matFooterRowDef=\"['noForms']\" [hidden]=\"disclaimerFormList.data.length > 0\"></mat-footer-row>\n    </mat-table>\n</mat-card-content>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/client-profile/client-packages/client-packages.component.html":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/client-profile/client-packages/client-packages.component.html ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-table [dataSource]=\"packageSoldList\" matSort multiTemplateDataRows backgroundStyling defaultColor=\"transparent\" [ngClass]=\"{'mobileTable': responsiveService.onMobileViewPort}\">\n    <ng-container matColumnDef=\"expand\">\n        <mat-header-cell *matHeaderCellDef>\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n            <button mat-icon-button>\n                <i class=\"fas\" [ngClass]=\"{'fa-minus-circle': element.expanded, 'fa-plus-circle': !element.expanded}\"></i>\n            </button>\n        </mat-cell>\n    </ng-container>\n    <ng-container  *ngFor=\"let col of columnDefs\" [matColumnDef]=\"col.name\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>{{ col.title }}</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n                        <span *ngIf=\"col.filter===undefined || col.filter === null\">\n                            {{ dataTablesService.getProperty(element, col.name) }}\n                        </span>\n            <span *ngIf=\"col.filter!== undefined && col.filter !== null\">\n                            {{ dataTablesService.getFilterDisplay(element, col, selectedClient) }}\n                        </span>\n        </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"expandedDetail\" *ngIf=\"displayedColumns !== undefined\">\n        <mat-cell *matCellDef=\"let element\" [attr.colspan]=\"displayedColumns.length\">\n            <div class=\"element-detail container\"><!--[@detailExpand]=\"element == expandedPackage ? 'expanded' : 'collapsed'\"-->\n                <appointments-table *ngIf=\"expandedPackage !== undefined\" [apptData]=\"expandedPackage.appts\" [selectedClient]=\"selectedClient\" [preference]=\"preference\" [noApptsFoundProp]=\"'clientPackageNoApptsMsg'\"\n                                    [loaded]=\"expandedPackage.apptsLoaded\" [errorLoading]=\"expandedPackage.errorLoading\" [loading]=\"expandedPackage.loadingAppts\">\n                </appointments-table>\n            </div>\n        </mat-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let element; columns: displayedColumns\"\n             class=\"element-row\"\n             [class.expanded-row]=\"expandedPackage === element\"\n             (click)=\"expandRow(element)\">\n    </mat-row>\n    <mat-row *matRowDef=\"let element; columns: ['expandedDetail']\" class=\"detail-row\"\n             [class.detail-row-expanded]=\"expandedPackage === element\"></mat-row>\n</mat-table>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/client-profile/client-payment-info/client-payment-info.component.html":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/client-profile/client-payment-info/client-payment-info.component.html ***!
  \********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card-content id=\"clientProfileFields\">\n    <mat-table [dataSource]=\"creditCardList\" matSort backgroundStyling defaultColor=\"transparent\">\n\n        <ng-container  *ngFor=\"let col of columnDefs\" [matColumnDef]=\"col.name\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header>{{ col.title }}</mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                        <span *ngIf=\"col.filter===undefined || col.filter === null\">\n                            {{ dataTablesService.getProperty(element, col.name) }}\n                        </span>\n                <span *ngIf=\"col.filter!== undefined && col.filter !== null\">\n                            {{ dataTablesService.getFilterDisplay(element, col, selectedClient) }}\n                        </span>\n            </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\">\n            <mat-header-cell *matHeaderCellDef>\n                Actions\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                <button type=\"button\" mat-stroked-button class=\"viewDetailBtn viewApptDetailBtn\" buttonStyling baseStyle=\"error\" btnClass=\"viewDetailBtn\"\n                        (click)=\"deleteCard(element)\" [innerHTML]=\"preference.labelMap['clientPaymentsDeleteBtn'] | safeHtml\">\n                </button>\n            </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"noStoredPayment\" >\n            <mat-footer-cell *matFooterCellDef [attr.aria-rowspan]=\"displayedColumns.length\" class=\"emptyDataList\">\n                <div class=\"alert alert-info\">\n                    {{preference.labelMap.clientPaymentsNoCardsOnFile}}\n                </div>\n            </mat-footer-cell>\n        </ng-container>\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row *matRowDef=\"let element; columns: displayedColumns\"\n                 class=\"element-row\">\n        </mat-row>\n        <mat-footer-row *matFooterRowDef=\"['noStoredPayment']\" [hidden]=\"creditCardList.data.length > 0\"></mat-footer-row>\n    </mat-table>\n</mat-card-content>\n<mat-card-actions id=\"clientDetailFooter\" class=\"actionBtnsCenterFooter myAccountFooter\">\n    <button type=\"button\"\n            id=\"clientDetailsEditBtn\"\n            mat-stroked-button\n            class=\"btn px-4 mx-4\"\n            (click)=\"addCard()\"\n            buttonStyling baseStyle=\"primary\" catchOverflow=\"true\">\n        {{preference.labelMap.clientPaymentsAddCardBtn}}\n    </button>\n</mat-card-actions>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/client-profile/client-profile-container/client-profile-container.component.html":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/client-profile/client-profile-container/client-profile-container.component.html ***!
  \******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card id=\"clientProfile\" class=\"myAccountCard\" backgroundStyling containerClass=\"myAccountCard\" [ngClass]=\"{'embeddedView': responsiveService.isEmbedded, 'mobileView': responsiveService.onMobileViewPort}\">\n    <client-account-header headerId=\"clientProfileHeader\" (onSelectClient)=\"selectClient($event)\" (onGoBack)=\"goBack()\"\n                           [preference]=\"preference\" [clientAccount]=\"clientAccount\" [selectedClient]=\"selectedClient\"\n                           [showBackButton]=\"true\" [showClientSelector]=\"clientAccount.clientList.length > 1\"\n                           titleId=\"clientProfileTitle\"\n                           viewingClientsLabel=\"viewingProfileForLabel\"\n                           title=\"{{clientProfileTitle}}\"></client-account-header>\n    <mat-card-content id=\"profileViewSelector\" *ngIf=\"availableViews.length > 1\">\n        <h4>{{selectedView.label}}</h4>\n        <mat-form-field>\n            <mat-select placeholder=\"View\"\n                        [(value)]=\"selectedView\" [(ngModel)]=\"selectedView\" name=\"availableViews\">\n                <mat-option *ngFor=\"let view of availableViews\" [value]=\"view\">\n                    {{view.label}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </mat-card-content>\n    <client-profile-details *ngIf=\"selectedView && selectedView.value==='details'\"\n        [selectedClient]=\"selectedClient\" [preference]=\"preference\" [clientAccount]=\"clientAccount\">\n    </client-profile-details>\n    <client-packages *ngIf=\"selectedView !== undefined && selectedView.value==='packages'\"\n        [selectedClient]=\"selectedClient\" [preference]=\"preference\" [clientAccount]=\"clientAccount\">\n    </client-packages>\n    <client-payment-info *ngIf=\"selectedView !== undefined && selectedView.value==='paymentInfo'\" [preference]=\"preference\" [selectedClient]=\"selectedClient\"></client-payment-info>\n    <client-forms *ngIf=\"selectedView !== undefined && selectedView.value === 'disclaimerForms'\"\n        [selectedClient]=\"selectedClient\" [preference]=\"preference\">\n    </client-forms>\n    <email-settings *ngIf=\"selectedView && selectedView.value === 'emailSettings'\" [selectedClient]=\"selectedClient\"></email-settings>\n</mat-card>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/client-profile/client-profile-details/client-profile-details.component.html":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/client-profile/client-profile-details/client-profile-details.component.html ***!
  \**************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "    <mat-card-content id=\"clientProfileFields\">\n        <app-scheduler-pref-field-form [fieldDefnList]=\"selectedClient.fields\" [clientSaving]=\"savingClient\" [editing]=\"editing\" (onFileUploading)=\"uploadingFile(event)\"\n                                       [clientInfoForm]=\"clientInfoForm\" [preference]=\"preference\" [selectClientOnForm]=\"false\" [disableEmailAddress]=\"true\"></app-scheduler-pref-field-form>\n    </mat-card-content>\n    <mat-card-actions id=\"clientDetailFooter\" class=\"actionBtnsCenterFooter myAccountFooter\">\n        <button type=\"button\"\n                id=\"clientDetailsEditBtn\"\n                mat-stroked-button\n                class=\"btn px-4 mx-4\"\n                (click)=\"editDetails()\"\n                buttonStyling baseStyle=\"primary\" catchOverflow=\"true\"\n                *ngIf=\"!editing\">\n            {{preference.labelMap.clientDetailsEditBtnLabel}}\n        </button>\n        <button type=\"button\"\n                id=\"saveClientEditBtn\"\n                mat-stroked-button\n                class=\"btn px-4 mx-4\"\n                (click)=\"saveChanges()\"\n                buttonStyling baseStyle=\"success\" catchOverflow=\"true\"\n                [disabled]=\"savingClient || clientInfoForm.invalid || disableSave\"\n                *ngIf=\"editing\">\n            <i *ngIf=\"savingClient\" class=\"fa fa-spinner fa-spin fa-fw\"></i>\n            {{preference.labelMap.clientDetailsSaveEditBtnLabel}}\n        </button>\n        <button type=\"button\"\n                id=\"cancelClientEditBtn\"\n                mat-stroked-button\n                class=\"btn px-4 mx-4\"\n                buttonStyling baseStyle=\"basic\" catchOverflow=\"true\"\n                (click)=\"cancelEdits()\"\n                *ngIf=\"editing\">\n            {{preference.labelMap.clientDetailsCancelEditBtnLabel}}\n        </button>\n    </mat-card-actions>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/client-profile/client-profile.component.html":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/client-profile/client-profile.component.html ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<router-outlet></router-outlet>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/view-appointments/booking-object-details/appointment-detail/appointment-detail.component.html":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/view-appointments/booking-object-details/appointment-detail/appointment-detail.component.html ***!
  \********************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card id=\"apptDetail\" *ngIf=\"!reschedulingAppt\" class=\"myAccountCard\" backgroundStyling containerClass=\"myAccountCard\" [ngClass]=\"{'embeddedView': responsiveService.isEmbedded}\">\n    <client-account-header headerId=\"apptDetailHeader\" (onGoBack)=\"goBack()\"\n                           [preference]=\"preference\"\n                           [showBackButton]=\"showBackButton\" [showClientSelector]=\"false\" [hideConnectButton]=\"true\"\n                           titleId=\"apptDetailTitle\"\n                           title=\"{{preference.labelMap.apptDetailTitle}}\"></client-account-header>\n    <mat-card-content id=\"apptDetailText\" class=\"detailViewText\">\n        <div *ngIf=\"clientConfirmFlow && apptCanBeConfirmed\" class=\"alert\" appAlert baseStyle=\"info\">\n            {{preference.labelMap.clientConfirmedApptMsg}}\n        </div>\n        <div *ngIf=\"clientConfirmFlow && !apptCanBeConfirmed\" class=\"alert\" appAlert baseStyle=\"error\">\n            {{clientApptCannotBeConfirmedMsg}}\n        </div>\n        <div *ngIf=\"showRescheduleConfirm\" class=\"alert\" appAlert baseStyle=\"success\">\n            {{preference.labelMap.apptDetailRescheduleConfirmMsg}}\n        </div>\n        <div *ngIf=\"errorLoading\" class=\"alert\" appAlert baseStyle=\"error\">\n            {{preference.labelMap.errorLoadingLabel}}\n        </div>\n        <div *ngIf=\"errorReschedulingAppointment\" class=\"alert\" appAlert baseStyle=\"error\">\n            {{preference.labelMap.errorReschedulingAppointment}}\n        </div>\n        <div *ngIf=\"apptLoaded && appt.subStatus==='PENDING_CONFIRMATION'\" class=\"alert\" appAlert baseStyle=\"info\">\n            {{preference.labelMap.apptDetailPendingApptInfoMsg}}\n        </div>\n        <div *ngIf=\"apptLoaded && !rescheduleSaving\">\n            <dl class=\"row\">\n                <dt class=\"col-3\"><strong>Status:</strong></dt>\n                <dd class=\"col-9\">\n                    <mat-chip class=\"mat-chip mat-standard-chip {{chipClass}}\"\n                              ttChip [baseStyle]=\"chipBaseStyle\" [chipClass]=\"chipClass\">\n                        {{apptStatus}}\n                    </mat-chip>\n                </dd>\n            </dl>\n        </div>\n\n        <div *ngIf=\"apptLoaded && !rescheduleSaving\"  [innerHTML]=\"apptDetailText | safeHtml\">\n        </div>\n        <div class=\"alert\" appAlert baseStyle=\"info\" *ngIf=\"apptLoading || rescheduleSaving\">\n            <i class=\"fa fa-spinner fa-spin fa-fw\"></i> Loading appointment details...\n        </div>\n    </mat-card-content>\n    <mat-card-actions id=\"apptDetailFooter\" class=\"actionBtnsCenterFooter myAccountFooter\">\n        <button type=\"button\" *ngIf=\"showAddToCalendarBtn\"\n                id=\"addToCalendar\"\n                mat-stroked-button\n                class=\"btn\" [ngClass]=\"{'px-4 mr-4': !this.responsiveService.onMobileViewPort}\"\n                (click)=\"addToCalendar()\"\n                buttonStyling btnId=\"addToCalendar\" baseStyle=\"basic\"\n                [classesOnMobile]=\"['px-2','mr-2']\" [fullHeight]=\"responsiveService.onMobileViewPort?true:false\" [catchOverflow]=\"responsiveService.onMobileViewPort?true:false\">\n            {{preference.labelMap.addToCalendarBtn}}\n        </button>\n        <button *ngIf=\"preference.rescheduleHrs !== null\"\n                type=\"button\"\n                id=\"rescheduleBtn\"\n                mat-stroked-button\n                class=\"btn\" [ngClass]=\"{'px-4 mx-4': !this.responsiveService.onMobileViewPort}\"\n                buttonStyling baseStyle=\"primary\" [classesOnMobile]=\"['px-2','mx-2']\"\n                [fullHeight]=\"responsiveService.onMobileViewPort?true:false\" [catchOverflow]=\"responsiveService.onMobileViewPort?true:false\"\n                (click)=\"rescheduleAppt()\">\n            {{preference.labelMap.rescheduleBtnLabel}}\n        </button>\n        <button type=\"button\"\n                id=\"cancelBtn\"\n                mat-stroked-button\n                class=\"btn\" [ngClass]=\"{'px-4 mx-4': !this.responsiveService.onMobileViewPort}\"\n                buttonStyling baseStyle=\"error\" [classesOnMobile]=\"['px-2','ml-2']\"\n                [fullHeight]=\"responsiveService.onMobileViewPort?true:false\" [catchOverflow]=\"responsiveService.onMobileViewPort?true:false\"\n                (click)=\"cancelAppt()\"\n                *ngIf=\"preference.cancelHrs !== -1\">\n            {{preference.labelMap.cancelBtnLabel}}\n        </button>\n    </mat-card-actions>\n</mat-card>\n<mat-card id=\"reschedulingAppt\" *ngIf=\"reschedulingAppt\">\n    <time-panel [preference]=\"preference\"\n                [panel]=\"timePanel\"\n                (onMovePanels)=\"saveRescheduled($event)\"\n                [CSFilterObj]=\"CSFilterObj\"\n                [inputValues]=\"inputValues\"\n                [directionComingFrom]=\"directionComingFrom\">\n    </time-panel>\n</mat-card>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/view-appointments/booking-object-details/repeating-appointment-detail/repeating-appointment-detail.component.html":
/*!****************************************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/view-appointments/booking-object-details/repeating-appointment-detail/repeating-appointment-detail.component.html ***!
  \****************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card id=\"repeatingApptDetail\" class=\"myAccountCard\" backgroundStyling containerClass=\"myAccountCard\" [ngClass]=\"{'embeddedView': responsiveService.isEmbedded}\">\n    <client-account-header headerId=\"repeatingApptDetailHeader\" (onGoBack)=\"goBack()\"\n                           [preference]=\"preference\"\n                           [showBackButton]=\"true\" [showClientSelector]=\"false\" [hideConnectButton]=\"true\"\n                           titleId=\"repeatingApptDetailTitle\"\n                           title=\"{{preference.labelMap.repeatingApptDetailTitle}}\"></client-account-header>\n    <mat-card-content id=\"repeatingApptDetailText\" class=\"detailViewText\">\n        <div *ngIf=\"loaded\" class=\"row\">\n            <div class=\"col-12 col-md-6\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"row\">\n                            <dt class=\"col-6 col-md-3\">\n                                <strong>{{preference.labelMap.statusLabel}}</strong>\n                            </dt>\n                            <dd class=\"col-6 col-md-9\">\n                                <mat-chip class=\"mat-chip mat-standard-chip {{chipClass}}\"\n                                          ttChip [baseStyle]=\"chipBaseStyle\" [chipClass]=\"chipClass\">\n                                    {{status}}\n                                </mat-chip>\n                            </dd>\n                            <dt class=\"col-6 col-md-3\">\n                                <strong>{{preference.labelMap.repeatingApptDetailStartDateLabel}}</strong>\n                            </dt>\n                            <dd class=\"col-6 col-md-9\">\n                                {{repeatingAppt.startDate| date:'shortDate'}}\n                            </dd>\n                            <dt class=\"col-6 col-md-3\">\n                                <strong>{{repeatingApptDetailDaysRepeatsLabel}}</strong>\n                            </dt>\n                            <dd class=\"col-6 col-md-9\">\n                                <mat-chip-list aria-labelledby=\"weekdays\">\n                                    <mat-chip *ngFor=\"let weekday of weekdays\" aria-label=\"weekday\" aria-selected=\"true\" tabindex=\"1\" aria-checked=\"true\"\n                                              class=\"selectedWeekdayChip\" ttChip baseStyle=\"basic\" chipClass=\"selectedWeekdayChip\">\n                                        {{weekday.dayOfWeekName}}\n                                    </mat-chip>\n                                </mat-chip-list>\n                            </dd>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-12 col-md-6\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"row\">\n                            <dt class=\"col-6 col-md-3\">\n                                <strong>{{preference.labelMap.repeatingApptDetailIdLabel}}</strong>\n                            </dt>\n                            <dd class=\"col-6 col-md-9\">\n                                {{repeatingAppt.recurringAppointmentId}}\n                            </dd>\n                            <dt class=\"col-6 col-md-3\">\n                                <strong>{{preference.labelMap.repeatingApptDetailEndDateLabel}}</strong>\n                            </dt>\n                            <dd class=\"col-6 col-md-9\">\n                                <span *ngIf=\"repeatingAppt.endDate!=null; else nullEndDateContent\">\n                                    {{repeatingAppt.endDate | date:'shortDate'}}\n                                </span>\n                                <ng-template #nullEndDateContent>\n                                    {{preference.labelMap.endDateNullLabel}}\n                                </ng-template>\n\n                            </dd>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-12\">\n                <appointments-table [apptData]=\"appts\" [selectedClient]=\"selectedClient\" [preference]=\"preference\" noApptsFoundProp=\"noApptsMsg\"\n                                    [loaded]=\"loaded\" [errorLoading]=\"errorLoading\" [loading]=\"loading\" columnToAdd=\"%APPT_STATUS%\">\n                </appointments-table>\n            </div>\n        </div>\n        <div *ngIf=\"loading\">\n            <div class=\"alert\" appAlert baseStyle=\"info\">\n                <i class=\"fa fa-spinner fa-spin fa-fw\"></i> Loading repeating appointment details...\n            </div>\n        </div>\n\n    </mat-card-content>\n    <mat-card-actions id=\"repeatingApptDetailFooter\" class=\"actionBtnsCenterFooter myAccountFooter\" *ngIf=\"loaded\">\n        <button type=\"button\" *ngIf=\"showAddToCalendarBtn\"\n                id=\"addToCalendar\"\n                mat-stroked-button\n                class=\"btn\" [ngClass]=\"{'px-4 mr-4': !this.responsiveService.onMobileViewPort}\"\n                (click)=\"addToCalendar()\"\n                buttonStyling btnId=\"addToCalendar\" baseStyle=\"basic\"\n                [classesOnMobile]=\"['px-2','mr-2']\" [fullHeight]=\"responsiveService.onMobileViewPort?true:false\" [catchOverflow]=\"responsiveService.onMobileViewPort?true:false\">\n            {{preference.labelMap.addToCalendarBtn}}\n        </button>\n        <button type=\"button\"\n                id=\"cancelBtn\"\n                mat-stroked-button\n                class=\"btn\" [ngClass]=\"{'px-4 mx-4': !this.responsiveService.onMobileViewPort}\"\n                buttonStyling baseStyle=\"error\" [classesOnMobile]=\"['px-2','ml-2']\"\n                [fullHeight]=\"responsiveService.onMobileViewPort?true:false\" [catchOverflow]=\"responsiveService.onMobileViewPort?true:false\"\n                (click)=\"cancelRepeatingAppt()\"\n                *ngIf=\"preference.cancelHrs !== -1\">\n            {{preference.labelMap.cancelBtnLabel}}\n        </button>\n    </mat-card-actions>\n</mat-card>\n\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/view-appointments/booking-object-details/waitlist-registration-detail/waitlist-registration-detail.component.html":
/*!****************************************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/view-appointments/booking-object-details/waitlist-registration-detail/waitlist-registration-detail.component.html ***!
  \****************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card id=\"waitlistRegistrationDetail\" class=\"myAccountCard\" backgroundStyling containerClass=\"myAccountCard\" [ngClass]=\"{'embeddedView': responsiveService.isEmbedded}\">\n    <client-account-header headerId=\"waitlistRegistrationDetailHeader\" (onGoBack)=\"goBack()\"\n                           [preference]=\"preference\"\n                           [showBackButton]=\"true\" [showClientSelector]=\"false\" [hideConnectButton]=\"true\"\n                           titleId=\"repeatingApptDetailTitle\"\n                           title=\"{{preference.labelMap.waitlistRegistrationDetailTitle}}\"></client-account-header>\n    <mat-card-content id=\"waitlistRegistrationDetailText\" class=\"detailViewText\">\n        <div *ngIf=\"loaded\" class=\"row\">\n            <div class=\"col-12 col-md-6\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"row\">\n                            <dt class=\"col-6 col-md-3\">\n                                <strong>{{preference.labelMap.statusLabel}}</strong>\n                            </dt>\n                            <dd class=\"col-6 col-md-9\">\n                                <mat-chip class=\"mat-chip mat-standard-chip {{chipClass}}\"\n                                          ttChip [baseStyle]=\"chipBaseStyle\" [chipClass]=\"chipClass\">\n                                    {{status}}\n                                </mat-chip>\n                            </dd>\n                            <dt class=\"col-6 col-md-3\">\n                                <strong>{{preference.labelMap.waitlistRegistrationDetailDateLabel}}</strong>\n                            </dt>\n                            <dd class=\"col-6 col-md-9\">\n                                <span *ngIf=\"waitlist.preferredDate!=null; else nullPreferredDate\">\n                                    {{waitlist.preferredDate | date:'shortDate'}} from {{waitlist.preferredDateStart | date:'shortTime'}} - {{waitlist.preferredDateEnd | date: 'shortTime'}}\n                                </span>\n                                <ng-template #nullPreferredDate>\n                                    {{preference.labelMap.waitListFirstAvailableInTimeCart}}\n                                </ng-template>\n\n                            </dd>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-12 col-md-6\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"row\">\n                            <dt class=\"col-6 col-md-3\" >\n                                <strong>{{preference.labelMap.waitlistRegistrationIdLabel}}</strong>\n                            </dt>\n                            <dd class=\"col-6 col-md-9\">\n                                {{waitlist.waitListId}}\n                            </dd>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-12\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"row\">\n                            <dt class=\"col-12\" style=\"text-align: left\">\n                                <strong>{{preference.labelMap.waitlistRegistrationDetailAvailableTimes}}</strong>\n                            </dt>\n                        </div>\n                    </div>\n                </div>\n                <client-waitlist-times-table [waitlistClaims]=\"waitlistClaims\" [selectedClient]=\"selectedClient\" [clientHash]=\"clientHash\"></client-waitlist-times-table>\n            </div>\n        </div>\n        <div *ngIf=\"loading\">\n            <div class=\"alert\" appAlert baseStyle=\"info\">\n                <i class=\"fa fa-spinner fa-spin fa-fw\"></i> Loading waitlist registration details...\n            </div>\n        </div>\n\n    </mat-card-content>\n    <mat-card-actions id=\"repeatingApptDetailFooter\" class=\"actionBtnsCenterFooter myAccountFooter\" *ngIf=\"loaded\">\n        <button type=\"button\"\n                id=\"cancelBtn\"\n                mat-stroked-button\n                class=\"btn\" [ngClass]=\"{'px-4 mx-4': !this.responsiveService.onMobileViewPort}\"\n                buttonStyling baseStyle=\"error\" [classesOnMobile]=\"['px-2','ml-2']\"\n                [fullHeight]=\"responsiveService.onMobileViewPort?true:false\" [catchOverflow]=\"responsiveService.onMobileViewPort?true:false\"\n                (click)=\"cancelWaitlist()\">\n            {{preference.labelMap.waitlistRegistrationDetailCancelBtnLabel}}\n        </button>\n    </mat-card-actions>\n</mat-card>\n\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/view-appointments/cancel-appointment/cancel-appointment.component.html":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/view-appointments/cancel-appointment/cancel-appointment.component.html ***!
  \*********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 mat-dialog-title id=\"loginTitle\">{{cancelModalTitle}}</h1>\n<mat-dialog-content class=\"mat-dialog-form\" id=\"loginForm\">\n    <form class=\"row\" #cancelForm=\"ngForm\" (ngSubmit)=\"cancelBookingObject(cancelForm)\">\n        <div class=\"col-12\">\n            <div *ngIf=\"cancelFailed || noCancelReasonEntered\" class=\"alert\" appAlert baseStyle=\"error\">\n                <span *ngIf=\"cancelFailed\">{{cancelErrorMsg}}</span>\n                <span *ngIf=\"noCancelReasonEntered\">{{cancelNoReasonEnteredErrorMsg}}</span>\n            </div>\n            <div id=\"cancelModalDescription\" class=\"mat-dialog-desc\" *ngIf=\"preference.labelMap.cancelAppointmentModalDescription !== ''\">\n                {{cancelModalDescription}}\n            </div>\n        </div>\n        <mat-form-field class=\"col\">\n            <textarea matInput *ngIf=\"cancelReasonType === 'text'\"\n                   placeholder=\"{{preference.labelMap.cancelModalReasonTitle}}\"\n                   [(ngModel)]=\"cancelReason\"\n                   name=\"cancelReason\"\n                   cancelReason\n                   [required]=\"!preference.cancelReasonOptional\"\n                   #cancelReasonInput>\n            </textarea>\n            <mat-select *ngIf=\"cancelReasonType === 'list'\" placeholder=\"{{preference.labelMap.cancelModalReasonTitle}}\"\n                        [(value)]=\"cancelReason\" [(ngModel)]=\"cancelReason\" [required]=\"!preference.cancelReasonOptional\" name=\"cancelReason\">\n                <mat-option *ngFor=\"let reason of cancelReasonListArray\" [value]=\"reason\" selected=\"\">\n                    {{reason}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n        <div class=\"w-100\"></div>\n        <div class=\"col submit-button\">\n            <button mat-stroked-button color=\"primary\" id=\"cancelBtn\" class=\"col\" [disabled]=\"cancelForm.invalid || cancelling\">\n                <i class=\"fa fa-spinner fa-spin fa-fw\" *ngIf=\"cancelling\"></i> {{preference.labelMap.cancelBtnLabel}}\n            </button>\n        </div>\n    </form>\n</mat-dialog-content>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/view-appointments/view-appointments-list/appointments-table/appointments-table.component.html":
/*!********************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/view-appointments/view-appointments-list/appointments-table/appointments-table.component.html ***!
  \********************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"loaded && !loading && tableData.data.length > 0\">\n    <mat-table class=\"data-table\" [dataSource]=\"tableData\" matSort backgroundStyling defaultColor=\"transparent\">\n        <ng-container *ngFor=\"let col of columnDefs\" [matColumnDef]=\"col.name\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header\n                             [ngClass]=\"{'chipCell': col.filter==='chip'}\">\n                {{ col.title }}\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\" (click)=\"viewDetailsNonAction(element)\"\n                      [ngClass]=\"{'chipCell': col.filter==='chip'}\">\n                <span *ngIf=\"!col.filter\" [innerHTML]=\"dataTablesService.getProperty(element, col.name) | safeHtml\">\n                </span>\n                <span *ngIf=\"col.filter && col.filter !== 'chip'\">\n                    {{ dataTablesService.getFilterDisplay(element, col, selectedClient) }}\n                </span>\n                <mat-chip *ngIf=\"col.filter && col.filter === 'chip'\" class=\"mat-chip mat-standard-chip {{element[idProp]}}\"\n                          ttChip [baseStyle]=\"dataTablesService.getFilterDisplay(element, col, selectedClient)\" [chipClass]=\"element[idProp]\">\n                    {{ dataTablesService.getProperty(element, col.name) }}\n                </mat-chip>\n\n            </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\" *ngIf=\"!responsiveService.onMobileViewPort\">\n            <mat-header-cell *matHeaderCellDef>{{preference.labelMap.viewDetailsBtnLabel}}</mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                <button type=\"button\" mat-stroked-button class=\"viewDetailBtn viewApptDetailBtn\" buttonStyling baseStyle=\"basic\" btnClass=\"viewDetailBtn\"\n                        (click)=\"viewDetails(element)\" [innerHTML]=\"preference.labelMap['viewApptDetailBtnLabel'] | safeHtml\">\n                </button>\n            </mat-cell>\n        </ng-container>\n        <mat-header-row *matHeaderRowDef=\"displayedColumns; let first = first;\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n    </mat-table>\n</div>\n<div *ngIf=\"loaded && !loading && tableData.data.length === 0\">\n    <div class=\"alert\" role=\"alert\" appAlert baseStyle=\"info\">\n        {{preference.labelMap[noApptsFoundProp]}}\n    </div>\n</div>\n<div *ngIf=\"loading\">\n    <div class=\"alert\" role=\"alert\" appAlert baseStyle=\"info\">\n        <i class=\"fa fa-spinner fa-spin fa-fw\"></i> {{preference.labelMap.loadingMsgAppts}}\n    </div>\n</div>\n<div class=\"alert\" role=\"alert\" appAlert baseStyle=\"error\" *ngIf=\"!loaded && !loading && errorLoading && preference === undefined\">\n    {{preference.labelMap.genericErrorMsg}}\n</div>\n<div class=\"alert\" role=\"alert\" appAlert baseStyle=\"error\" *ngIf=\"!loaded && !loading && errorLoading && preference !== undefined\">\n    {{preference.labelMap.apptListErrorLoadingMsg}}\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/view-appointments/view-appointments-list/view-appointments-list.component.html":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/view-appointments/view-appointments-list/view-appointments-list.component.html ***!
  \*****************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card id=\"viewAppointments\" *ngIf=\"pageLoaded\" class=\"myAccountCard\" backgroundStyling containerClass=\"myAccountCard\" [ngClass]=\"{'embeddedView': responsiveService.isEmbedded}\">\n    <client-account-header headerId=\"viewAppointmentsHeader\" (onSelectClient)=\"selectClient($event)\" (onGoBack)=\"goBack()\"\n                           [preference]=\"preference\" [clientAccount]=\"clientAccount\" [selectedClient]=\"selectedClient\"\n                           [showBackButton]=\"true\" [showClientSelector]=\"clientAccount.clientList.length > 1\"\n                           titleId=\"viewAppointmentsTitle\"\n                           viewingClientsLabel=\"viewingApptsForLabel\"\n                           title=\"{{preference.labelMap[titleBarProp]}}\"></client-account-header>\n    <mat-card-content>\n        <div class=\"btn-group statusBtns\" role=\"group\">\n                <button type=\"button\" class=\"apptStatusBtn\" mat-stroked-button buttonStyling baseStyle=\"basic\" btnClass=\"apptStatusBtn\"\n                        *ngFor=\"let status of apptStatuses\" (click)=\"selectStatus(status)\">\n                    <span *ngIf=\"status.selected\"><i class=\"fas fa-check-circle\"></i></span>\n                    <span *ngIf=\"!status.selected\"><i class=\"far fa-circle\"></i></span>\n                    {{preference.labelMap[status.buttonLabel]}}\n                </button>\n        </div>\n        <appointments-table *ngIf=\"selectedListView==='APPOINTMENTS'\" [apptData]=\"appts\" [selectedClient]=\"selectedClient\" [preference]=\"preference\" [noApptsFoundProp]=\"noApptsFoundProp\"\n                            [loaded]=\"dataLoaded\" [errorLoading]=\"errorLoading\" [loading]=\"loadingData\">\n        </appointments-table>\n        <repeating-appointments-table *ngIf=\"selectedListView==='REPEATING'\" [repeatingApptData]=\"repeatingAppts\" [selectedClient]=\"selectedClient\" [preference]=\"preference\"\n                                      [noApptsFoundProp]=\"noApptsFoundProp\" [loaded]=\"dataLoaded\" [errorLoading]=\"errorLoading\" [loading]=\"loadingData\"></repeating-appointments-table>\n        <waitlist-registrations-table *ngIf=\"selectedListView==='WAITLIST'\" [waitlistRegistrationData]=\"waitlists\" [selectedClient]=\"selectedClient\" [preference]=\"preference\"\n                                      [noApptsFoundProp]=\"noApptsFoundProp\" [loaded]=\"dataLoaded\" [errorLoading]=\"errorLoading\" [loading]=\"loadingData\"></waitlist-registrations-table>\n    </mat-card-content>\n</mat-card>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/view-appointments/view-appointments.component.html":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/view-appointments/view-appointments.component.html ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<router-outlet></router-outlet>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/view-invoices/invoice-detail/invoice-detail.component.html":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/view-invoices/invoice-detail/invoice-detail.component.html ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card id=\"invoiceDetail\" *ngIf=\"!enteringPayment\" class=\"myAccountCard\" backgroundStyling containerClass=\"myAccountCard\" [ngClass]=\"{'embeddedView': responsiveService.isEmbedded}\">\n    <client-account-header headerId=\"invoiceDetailHeader\" (onGoBack)=\"goBack()\"\n                           [preference]=\"preference\"\n                           [showBackButton]=\"true\" [showClientSelector]=\"false\" [hideConnectButton]=\"true\"\n                           titleId=\"invoiceDetailTitle\"\n                           title=\"{{detailTitle}}\"></client-account-header>\n    <mat-card-content id=\"invoiceDetailText\" class=\"detailViewText\">\n        <div *ngIf=\"apptConfirmationTextWhenInvoicePaid !== null\" class=\"alert\" appAlert baseStyle=\"success\" [innerHTML]=\"apptConfirmationTextWhenInvoicePaid\"></div>\n        <div *ngIf=\"invoiceLoaded\" class=\"row\">\n            <div class=\"col-12 col-md-6\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"row\">\n                            <dt class=\"col-6 col-md-3\">\n                                <strong>{{preference.labelMap.invoiceStatusLabel}}</strong>\n                            </dt>\n                            <dd class=\"col-6 col-md-9\">\n                                <mat-chip-list>\n                                    <mat-chip [ngClass]=\"{'invoiceStatusOpenChip': invoice.status === 'OPEN',\n                                            'invoiceStatusClosedChip': invoice.status === 'CLOSED',\n                                            'invoiceStatusVoidChip': invoice.status === 'VOID'}\" ttChip\n                                              baseStyle=\"{{invoiceStatusChipBaseStyle}}\" chipClass=\"{{invoiceStatusClass}}\">\n                                        {{invoice.status | titlecase}}<span *ngIf=\"invoice.subStatus && invoice.subStatus.toUpperCase() !== invoice.status\">: {{invoice.subStatus | titlecase}}</span>\n                                    </mat-chip>\n                                </mat-chip-list>\n                            </dd>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-12 col-md-6\">\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"row\">\n                            <dt class=\"col-6 col-md-3\">\n                                <strong>{{preference.labelMap.invoiceIdLabel}}</strong>\n                            </dt>\n                            <dd class=\"col-6 col-md-9\">\n                                <span *ngIf=\"invoice.invoiceNumber !== null\">{{invoice.invoiceNumber}}</span>\n                                <span *ngIf=\"invoice.invoiceNumber === null\">{{invoice.invoiceId}}</span>\n                            </dd>\n                            <dt class=\"col-6 col-md-3\">\n                                <strong>{{preference.labelMap.invoiceDateIssuedLabel}}</strong>\n                            </dt>\n                            <dd class=\"col-6 col-md-9\">\n                                {{invoice.invoiceDate | date:'shortDate'}}\n                            </dd>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-12 mt-3\">\n                        <mat-table [dataSource]=\"invoiceItems\" matSort backgroundStyling defaultColor=\"transparent\">\n                            <ng-container  *ngFor=\"let col of columnDefs\" [matColumnDef]=\"col.name\">\n                                <mat-header-cell *matHeaderCellDef mat-sort-header>{{ col.title }}</mat-header-cell>\n                                <mat-cell *matCellDef=\"let element\">\n                                    <span *ngIf=\"col.filter === null && col.name !== 'showPackagePurchaseOption'\" [innerHTML]=\"getProperty(element, col.name)\">\n                                    </span>\n                                    <span *ngIf=\"col.filter === null && col.name === 'showPackagePurchaseOption' && element.showPackagePurchaseOption\">\n                                        <a (click)=\"togglePackageSelectorPopup(element)\">{{preference.labelMap.invoiceItemsSelectPackage}}</a>\n                                    </span>\n                                    <span *ngIf=\"col.filter !== null\" [innerHTML]=\"getFilterDisplay(element, col)\">\n                                    </span>\n                                </mat-cell>\n                            </ng-container>\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n                        </mat-table>\n            </div>\n            <div class=\"col-12 mt-3\">\n                <div class=\"row invoiceTotalRow\" [ngClass]=\"{'justify-content-end': responsiveService.innerWidth >= responsiveService.mdScreenBreakPoint}\">\n                    <div class=\"col-12 col-md-5\">\n                        <div class=\"row\">\n                            <dt class=\"col-6 col-md-4\">\n                                <strong>{{preference.labelMap.invoiceSubTotalLabel}}</strong>\n                            </dt>\n                            <dd class=\"col-6 col-md-8\">\n                                {{invoice.subtotalAmount | localeCurrency:currency}}\n                            </dd>\n                            <dt class=\"col-6 col-md-4\" *ngIf=\"invoice.transactionFeeAmount !== null && invoice.transactionFeeAmount !== 0\">\n                                <strong>{{preference.labelMap.invoiceTransactionFeeLabel}}</strong>\n                            </dt>\n                            <dd class=\"col-6 col-md-8\" *ngIf=\"invoice.transactionFeeAmount !== null && invoice.transactionFeeAmount !== 0\">\n                                {{invoice.transactionFeeAmount | localeCurrency:currency}}\n                            </dd>\n                            <dt class=\"col-6 col-md-4\" *ngIf=\"invoice.taxAmount !== null && invoice.taxAmount !== 0\">\n                                <strong>{{preference.labelMap.invoiceTaxLabel}}</strong>\n                            </dt>\n                            <dd class=\"col-6 col-md-8\" *ngIf=\"invoice.taxAmount !== null && invoice.taxAmount !== 0\">\n                                {{invoice.taxAmount | localeCurrency:currency}}\n                            </dd>\n                            <dt class=\"col-6 col-md-4\">\n                                <strong>{{preference.labelMap.invoiceTotalLabel}}</strong>\n                            </dt>\n                            <dd class=\"col-6 col-md-8\">\n                                {{invoice.invoiceTotalAmount | localeCurrency:currency}}\n                            </dd>\n                            <dt class=\"col-6 col-md-4\">\n                                <strong>{{preference.labelMap.invoicePaidToDateLabel}}</strong>\n                            </dt>\n                            <dd class=\"col-6 col-md-8\">\n                                {{invoice.paidAmount | localeCurrency:currency}}\n                            </dd>\n                            <dd class=\"col-12 invoiceBalanceDivider\">\n                            </dd>\n                            <dt class=\"col-6 col-md-4\">\n                                <strong>{{preference.labelMap.invoiceBalanceLabel}}</strong>\n                            </dt>\n                            <dd class=\"col-6 col-md-8\">\n                                {{invoice.balanceAmount | localeCurrency:currency}}\n                            </dd>\n                            <dt class=\"col-6 col-md-4 pl-0\" *ngIf=\"this.invoice.paymentAmount < this.invoice.balanceAmount\">\n                                <strong>{{preference.labelMap.invoiceDepositAmountLabel}}</strong>\n                            </dt>\n                            <dd class=\"col-6 col-md-8\" *ngIf=\"this.invoice.paymentAmount < this.invoice.balanceAmount\">\n                                {{invoice.paymentAmount | localeCurrency:currency}}\n                            </dd>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n        <div *ngIf=\"invoiceLoading\">\n            <div class=\"alert\" appAlert baseStyle=\"info\">\n                <i class=\"fa fa-spinner fa-spin fa-fw\"></i> Loading invoice details...\n            </div>\n        </div>\n\n    </mat-card-content>\n    <mat-card-actions id=\"apptDetailFooter\" class=\"actionBtnsCenterFooter myAccountFooter\" *ngIf=\"invoiceLoaded\">\n        <button *ngIf=\"invoice.balanceAmount > 0 && invoice.status === 'OPEN' && invoice.showPayNowButton\"\n                [disabled]=\"connectingWithPaymentPortal\"\n                type=\"button\" id=\"payNowBtn\"\n                mat-stroked-button class=\"btn px-4 mx-4\"\n                buttonStyling baseStyle=\"primary\"\n                (click)=\"payInvoice()\">\n            <span *ngIf=\"!connectingWithPaymentPortal && !errorConnectingWithPaymentPortal\">{{payBtnLabel}}</span>\n            <span *ngIf=\"!connectingWithPaymentPortal && errorConnectingWithPaymentPortal\"><i class=\"fas fa-exclamation-triangle\"></i> {{errorConnectingWithPaymentPortalMsg}}</span>\n            <span *ngIf=\"connectingWithPaymentPortal\"><i class=\"fa fa-spinner fa-spin fa-fw\"></i> {{preference.labelMap.invoiceConnectingWithPaymentPortal}}</span>\n        </button>\n        <button type=\"button\"\n                [hidden]=\"connectingWithPaymentPortal && responsiveService.onMobileViewPort\"\n                id=\"downloadBtn\"\n                mat-stroked-button\n                class=\"btn px-4 mx-4\"\n                buttonStyling baseStyle=\"basic\"\n                (click)=\"printInvoice()\">\n            {{preference.labelMap.invoiceDownloadBtnLabel}}\n        </button>\n    </mat-card-actions>\n</mat-card>\n<mat-card id=\"PaymentForm\" class=\"myAccountCard\" backgroundStyling containerClass=\"myAccountCard\" *ngIf=\"enteringPayment\">\n    <client-account-header headerId=\"PaymentFormHeader\" (onGoBack)=\"hidePaymentForm(invoice)\"\n                           [preference]=\"preference\"\n                           [showBackButton]=\"true\" [showClientSelector]=\"false\"\n                           titleId=\"invoiceEnterPaymentTitle\"\n                           title=\"{{preference.labelMap.invoiceEnterPaymentTitle}}\"></client-account-header>\n    <mat-accordion>\n        <mat-expansion-panel  *ngIf=\"creditCards.length !== 0\" [expanded]=\"!enterNewCard\" (opened)=\"enterNewCard = false\" (closed)=\"enterNewCard = true\">\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    Charge with Card On File\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n\n            <mat-radio-group class=\"credit-cards-radio-group\"\n                    [(ngModel)]=\"selectedCard\">\n                <mat-radio-button class=\"credit-cards-radio-button mat-radio-button-tt\" *ngFor=\"let card of creditCards\" [value]=\"card\">\n                    {{card.brand}} ending in {{card.last4}} expiring {{card.expiration}}\n                </mat-radio-button>\n            </mat-radio-group>\n            <div>\n                <button id=\"chargeCardOnFile\" mat-stroked-button (click)=\"chargeCardOnFile()\" class=\"button-credit-card btn btn-block\"\n                        buttonStyling baseStyle=\"success\" btnStyleId=\"creditCardButton\" [disabled]=\"chargingCard\">\n                    <span *ngIf=\"!chargingCard\">{{submitBtnLabel}}</span>\n                    <span *ngIf=\"chargingCard\"><i class=\"fa fa-spinner fa-spin fa-fw\"></i> {{submittingBtnLabel}}</span>\n                </button>\n            </div>\n        </mat-expansion-panel>\n        <mat-expansion-panel [expanded]=\"enterNewCard\" (opened)=\"enterNewCard = true\" (closed)=\"enterNewCard = false\"\n                             [ngClass]=\"{'noCreditCards': creditCards.length===0}\"\n                             [hideToggle]=\"creditCards.length === 0\" [disabled]=\"creditCards.length===0\">\n            <mat-expansion-panel-header *ngIf=\"creditCards.length > 0\">\n                <mat-panel-title>\n                    Enter a New Card\n                </mat-panel-title>\n            </mat-expansion-panel-header>\n            <square-payment-form *ngIf=\"enteringPayment && paymentMap.gateway==='SQUARE'\" (onGoBack)=\"hidePaymentForm($event)\"\n                                 [preference]=\"preference\" [invoice]=\"invoice\" [currency]=\"currency\" path=\"invoice\" [paymentFormHidden]=\"paymentFormHidden\"\n                                 [submitBtnLabel]=\"submitBtnLabel\" [submittingBtnLabel]=\"submittingBtnLabel\" [submitFailBtnLabel]=\"submitFailBtnLabel\">\n            </square-payment-form>\n            <stripe-payment-form *ngIf=\"enteringPayment && (paymentMap.gateway==='STRIPE' || paymentMap.gateway === 'LUMAPAY')\" (onGoBack)=\"hidePaymentForm($event)\"\n                                 [preference]=\"preference\" [invoice]=\"invoice\" [currency]=\"currency\" path=\"invoice\"\n                                 [submitBtnLabel]=\"submitBtnLabel\" [submittingBtnLabel]=\"submittingBtnLabel\">\n            </stripe-payment-form>\n        </mat-expansion-panel>\n    </mat-accordion>\n\n</mat-card>\n\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/view-invoices/invoice-detail/prompt-package-pay/prompt-package-pay.component.html":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/view-invoices/invoice-detail/prompt-package-pay/prompt-package-pay.component.html ***!
  \********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 mat-dialog-title id=\"selectPayAmountTitle\">{{preference.labelMap.promptPayWithPackageTitle}}</h1>\n<mat-dialog-content>\n    <div [innerHTML]=\"preference.labelMap.promptPayWithPackageDesc\"></div>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <div class=\"col-6\" style=\"text-align: center\">\n        <button type=\"button\"\n                id=\"selectPayAmountDueBtn\"\n                mat-stroked-button\n                class=\"btn\" buttonStyling baseStyle=\"basic\" fullHeight=\"true\" catchOverflow=\"true\"\n                (click)=\"selectPayWithPackage(true)\">\n            <span [innerHTML]=\"preference.labelMap.promptPayWithPackageBtn\"></span>\n        </button>\n    </div>\n    <div class=\"col-6\" style=\"text-align: center\">\n        <button type=\"button\"\n                id=\"selectPayBalanceAmountBtn\"\n                mat-stroked-button\n                class=\"btn\" buttonStyling baseStyle=\"primary\" fullHeight=\"true\" catchOverflow=\"true\"\n                (click)=\"selectPayWithPackage(false)\">\n            <span [innerHTML]=\"preference.labelMap.promptPayWithPackageCreditCardBtn\"></span>\n        </button>\n    </div>\n</mat-dialog-actions>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/view-invoices/payment-portals/square/square.component.html":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/view-invoices/payment-portals/square/square.component.html ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card-content id=\"squarePaymentFormDetail\" class=\"detailViewText\">\n    <div *ngIf=\"!paymentFormLoaded\">\n        <div class=\"alert\" appAlert baseStyle=\"info\">\n            <i class=\"fa fa-spinner fa-spin fa-fw\"></i> Loading payment form...\n        </div>\n    </div>\n    <div class=\"row\">\n        <form id=\"nonce-form\" class=\"col-10 col-offset-1\">\n            <div class=\"alert\" id=\"paymentsErrorBox\" role=\"alert\" appAlert baseStyle=\"error\" hidden=\"true\"></div>\n            <div id=\"card\"></div>\n            <mat-checkbox *ngIf=\"paymentFormLoaded && path==='invoice'\" class=\"mat-checkbox-tt\" [(ngModel)]=\"saveClientPayment\" name=\"savePaymentInfo\" (change)=\"setSaveClientPayment()\">\n                {{preference.labelMap.invoiceCreditCardSavePayment}}\n            </mat-checkbox>\n            <button id=\"sq-creditcard\" mat-stroked-button class=\"button-credit-card btn btn-block\" [ngClass]=\"{'hidePayBtn': !paymentFormLoaded}\"\n                    buttonStyling baseStyle=\"success\" btnStyleId=\"creditCardButton\">\n                {{submitBtnLabel}}\n            </button>\n            <input type=\"hidden\" id=\"sq-id\" name=\"sq-id\">\n            <input type=\"hidden\" id=\"invoiceHash\" name=\"invoiceHash\">\n            <input type=\"hidden\" id=\"balanceAmount\" name=\"balanceAmount\">\n            <input type=\"hidden\" id=\"paymentAmount\" name=\"paymentAmount\">\n            <input type=\"hidden\" id=\"card-nonce\" name=\"nonce\">\n            <input type=\"hidden\" id=\"clientId\" name=\"clientId\">\n            <input type=\"hidden\" id=\"saveClientPayment\" name=\"saveClientPayment\">\n        </form>\n    </div>\n</mat-card-content>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/view-invoices/payment-portals/stripe/stripe.component.html":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/view-invoices/payment-portals/stripe/stripe.component.html ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card-content id=\"stripePaymentFormDetail\" class=\"detailViewText\">\n    <div *ngIf=\"!paymentFormLoaded\">\n        <div class=\"alert\" role=\"alert\" appAlert baseStyle=\"info\">\n            <i class=\"fa fa-spinner fa-spin fa-fw\"></i> Loading payment form...\n        </div>\n    </div>\n<!-- *ngIf=\"paymentFormLoaded\"-->\n    <div [hidden]=\"!paymentFormLoaded\" class=\"row\">\n        <div class=\"col-12\">\n            <form id=\"stripeCreditCardForm\" #stripeForm=\"ngForm\">\n                    <div id=\"card-element\">\n                        <!-- A Stripe Element will be inserted here. -->\n                    </div>\n\n                    <!-- Used to display Element errors. -->\n                    <div id=\"card-errors\" role=\"alert\" class=\"alert\" appAlert baseStyle=\"error\"></div>\n\n<!--                    <div #cardElement>-->\n<!--                        &lt;!&ndash; A Stripe Element will be inserted here. &ndash;&gt;-->\n<!--                    </div>-->\n\n\n<!--                    &lt;!&ndash; Used to display Element errors. &ndash;&gt;-->\n<!--                    <p>{{ cardErrors }}</p>-->\n                <mat-checkbox *ngIf=\"path==='invoice'\" class=\"mat-checkbox-tt\" [(ngModel)]=\"saveClientPayment\" name=\"savePaymentInfo\" (change)=\"setSaveClientPayment()\">\n                    {{preference.labelMap.invoiceCreditCardSavePayment}}\n                </mat-checkbox>\n                <button id=\"stripe-creditcard\" mat-stroked-button class=\"button-credit-card btn btn-block\"\n                        buttonStyling baseStyle=\"success\" btnStyleId=\"creditCardButton\">\n                    {{submitBtnLabel}}\n                </button>\n<!--                    <stroked-button btnId=\"stripe-creditcard\" btnType=\"submit\" [fullWidth]=\"true\" classesToApply=\"button-credit-card btn btn-block\"-->\n<!--                                    btnLabel=\"{{invoiceCreditCardChargeLabel}}\" baseStyle=\"primary\">-->\n<!--                    </stroked-button>-->\n                <input type=\"hidden\" id=\"invoiceHash\" name=\"invoiceHash\">\n                <input type=\"hidden\" id=\"authOnly\" name=\"authOnly\">\n                <input type=\"hidden\" id=\"balanceAmount\" name=\"balanceAmount\">\n                <input type=\"hidden\" id=\"paymentAmount\" name=\"paymentAmount\">\n                <input type=\"hidden\" id=\"clientId\" name=\"clientId\">\n                <input type=\"hidden\" id=\"saveClientPayment\" name=\"saveClientPayment\">\n            </form>\n        </div>\n    </div>\n</mat-card-content>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/view-invoices/view-invoices-list/view-invoices-list.component.html":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/view-invoices/view-invoices-list/view-invoices-list.component.html ***!
  \*****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card id=\"viewInvoices\" *ngIf=\"pageLoaded\" class=\"myAccountCard\" backgroundStyling containerClass=\"myAccountCard\" [ngClass]=\"{'embeddedView': responsiveService.isEmbedded}\">\n    <client-account-header headerId=\"viewInvoicesHeader\" (onSelectClient)=\"selectClient($event)\" (onGoBack)=\"goBack()\"\n                           [preference]=\"preference\" [clientAccount]=\"clientAccount\" [selectedClient]=\"selectedClient\"\n                           [showBackButton]=\"true\" [showClientSelector]=\"clientAccount.clientList.length > 1\"\n                           titleId=\"viewInvoicesTitle\"\n                           viewingClientsLabel=\"viewingInvoicesForLabel\"\n                           title=\"{{preference.labelMap[titleBarProp]}}\"></client-account-header>\n    <mat-card-content>\n        <div class=\"btn-group statusBtns\" role=\"group\">\n            <button type=\"button\" class=\"invoiceStatusBtn\" mat-stroked-button buttonStyling baseStyle=\"basic\" btnClass=\"invoiceStatusBtn\"\n                    *ngFor=\"let status of invoiceStatuses\" (click)=\"selectStatus(status)\">\n                <span *ngIf=\"status.selected\"><i class=\"fas fa-check-circle\"></i></span>\n                <span *ngIf=\"!status.selected\"><i class=\"far fa-circle\"></i></span>\n                {{preference.labelMap[status.buttonLabel]}}\n            </button>\n        </div>\n<!--        <div class=\"btn-group statusBtns\" role=\"group\">-->\n<!--            <stroked-button *ngFor=\"let status of invoiceStatuses\" (click)=\"selectStatus(status)\"  icon=\"{{status.selected ? 'fas fa-check-circle':'far fa-circle'}}\" [fullWidth]=\"true\"-->\n<!--                            classesToApply=\"view{{status.status | titlecase}}Btn\" btnClass=\"invoiceStatusBtn\" baseStyle=\"basic\" btnLabel=\"{{preference.labelMap[status.buttonLabel]}}\">-->\n<!--            </stroked-button>-->\n<!--        </div>-->\n        <div *ngIf=\"invoicesLoaded && !loadingInvoices && invoices.data.length > 0\">\n            <mat-table [dataSource]=\"invoices\" matSort backgroundStyling defaultColor=\"transparent\">\n                <ng-container  *ngFor=\"let col of columnDefs\" [matColumnDef]=\"col.name\" >\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>{{ col.title }}</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" (click)=\"viewInvoiceDetailsNonActions(element)\">\n                        <span *ngIf=\"col.filter === null\">\n                            {{ getProperty(element, col.name) }}\n                        </span>\n                        <span *ngIf=\"col.filter !== null\">\n                            {{ getFilterDisplay(element, col) }}\n                        </span>\n                    </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"actions\" *ngIf=\"!responsiveService.onMobileViewPort\">\n                    <mat-header-cell *matHeaderCellDef>View Details</mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\">\n                        <button type=\"button\" mat-stroked-button class=\"viewDetailBtn viewInvoiceDetailBtn\" buttonStyling baseStyle=\"basic\" btnClass=\"viewDetailBtn\"\n                                (click)=\"viewInvoiceDetails(element)\" [innerHTML]=\"preference.labelMap['invoicesViewDetailBtnLabel'] | safeHtml\">\n                        </button>\n                    </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n            </mat-table>\n        </div>\n        <div *ngIf=\"invoicesLoaded && !loadingInvoices && invoices.data.length === 0\">\n            <div class=\"alert\" role=\"alert\" appAlert baseStyle=\"info\">\n                {{preference.labelMap[noInvoicesFoundProp]}}\n            </div>\n        </div>\n        <div *ngIf=\"loadingInvoices\">\n            <div class=\"alert\" role=\"alert\" appAlert baseStyle=\"info\">\n                <i class=\"fa fa-spinner fa-spin fa-fw\"></i> Loading invoices...\n            </div>\n        </div>\n        <div class=\"errorText\" *ngIf=\"errorLoading && preference !== undefined\">\n            {{preference.labelMap.invoiceListErrorLoadingMsg}}\n        </div>\n    </mat-card-content>\n</mat-card>\n<mat-card id=\"viewInvoices\" *ngIf=\"!pageLoaded && errorLoading\">\n    <mat-card-content>\n        <div class=\"errorText\" *ngIf=\"errorLoading && preference === undefined\">\n            {{errorMessage}}\n        </div>\n    </mat-card-content>\n</mat-card>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/client-account/view-invoices/view-invoices.component.html":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/client-account/view-invoices/view-invoices.component.html ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<router-outlet></router-outlet>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/disclaimer-form/disclaimer-form-detail/disclaimer-form-detail.component.html":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/disclaimer-form/disclaimer-form-detail/disclaimer-form-detail.component.html ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card id=\"disclaimerForm\" class=\"disclaimerFormCard\"\n          [ngClass]=\"{'noBorderBottom': disclaimerFormDataLoading || errorLoadingDisclaimerFormData ||\n            (disclaimerFormDataLoaded && disclaimerFormData.status === 'SUBMITTED'), 'embeddedView': responsiveService.isEmbedded}\">\n    <client-account-header headerId=\"disclaimerFormHeader\" *ngIf=\"disclaimerFormDataLoaded && !errorLoadingDisclaimerFormData\"\n                           [preference]=\"preference\"\n                           [showBackButton]=\"showBackButton\" (onGoBack)=\"goBack()\" [showClientSelector]=\"false\" [showPrintButton]=\"disclaimerFormData.status === 'SUBMITTED' && !disclaimerFormData.disclaimerForm.hideSubmittedForms\"\n                           titleId=\"disclaimerFormTitle\" [hideConnectButton]=\"true\"\n                           title=\"{{disclaimerFormTitle}}\" printId=\"disclaimerForm\"></client-account-header>\n    <mat-card-content id=\"disclaimerFormDetail\" class=\"detailViewText\">\n        <div class=\"alert\" appAlert baseStyle=\"info\" role=\"alert\" *ngIf=\"disclaimerFormDataLoading\">\n            <i class=\"fa fa-spinner fa-spin fa-fw\"></i> {{preference.labelMap.loadingMsgGeneric}}\n        </div>\n        <div class=\"alert\" appAlert baseStyle=\"error\" role=\"alert\" *ngIf=\"errorLoadingDisclaimerFormData && !disclaimerFormDataLoading\">\n            {{preference.labelMap.disclaimerFormErrorLoading}}\n        </div>\n        <div class=\"alert\" appAlert baseStyle=\"error\" role=\"alert\" *ngIf=\"errorSubmittingDisclaimerForm && !disclaimerFormDataLoading && !submittingDisclaimerForm\">\n            {{preference.labelMap.disclaimerFormErrorSubmitting}}\n        </div>\n        <div *ngIf=\"!disclaimerFormDataLoading && !errorLoadingDisclaimerFormData && disclaimerFormData.status === 'SUBMITTED'\"\n             [innerHTML]=\"formSuccessMessage\" class=\"alert no-print\" appAlert baseStyle=\"success\" role=\"alert\" >\n        </div>\n        <form *ngIf=\"disclaimerFormDataLoaded && !errorLoadingDisclaimerFormData && !disclaimerFormDataLoading\" [formGroup]=\"disclaimerFormGroup\" [ngClass]=\"{'formDisabled': disclaimerFormData.status === 'SUBMITTED'}\">\n            <div *ngFor=\"let field of disclaimerFormData.formFields; let i = index;\">\n                <div *ngIf=\"field.fieldType === 'description' || field.fieldType === 'variableDescription'\"\n                     class=\"formDescriptionField {{field.cssClasses}}\" [innerHTML]=\"field.value | safeHtml\">\n                </div>\n                <ng-container *ngIf=\"field.fieldType === 'formField'\">\n                    <!--TXT-->\n                    <!--URL-->\n                    <mat-form-field appearance=\"standard\" *ngIf=\"field.dataType === 'TXT' && field.inputType !== 'signature' && disclaimerFormData.status !== 'SUBMITTED'\" id=\"{{field.htmlId}}\">\n                        <mat-label>{{field.label}}</mat-label>\n                        <input matInput type=\"{{field.inputType}}\"\n                               [required]=\"field.required\"\n                               placeholder=\"{{field.label}}\"\n                               formControlName=\"{{field.htmlId}}\"\n                               (blur)=\"saveFieldTrigger(field)\"\n                               value=\"{{field.value}}\">\n                        <mat-hint *ngIf=\"field.hint !== null\" [innerHTML]=\"field.hint\">\n                        </mat-hint>\n<!--                        <mat-error *ngIf=\"field.\">{{field.validationError}}</mat-error>-->\n                    </mat-form-field>\n                    <!--AREA-->\n                    <mat-form-field appearance=\"standard\" *ngIf=\"field.dataType === 'AREA' || (field.dataType === 'TXT' && field.inputType !== 'signature' && disclaimerFormData.status === 'SUBMITTED')\">\n                        <mat-label>{{field.label}}</mat-label>\n                        <textarea matInput [required]=\"field.required\"\n                                  placeholder=\"{{field.label}}\"\n                                  formControlName=\"{{field.htmlId}}\"\n                                  (blur)=\"saveFieldTrigger(field)\"\n                                  value=\"{{field.value}}\"></textarea>\n                        <mat-hint *ngIf=\"field.hint !== null\"  [innerHTML]=\"field.hint\">\n                        </mat-hint>\n<!--                        <mat-error *ngIf=\"field.regexInvalid\">{{field.validationError}}</mat-error>-->\n                    </mat-form-field>\n                    <!--DATE-->\n                    <mat-form-field *ngIf=\"field.dataType === 'DATE'\">\n                        <mat-label>{{field.label}}</mat-label>\n                        <input matInput [matDatepicker]=\"picker\" [required]=\"field.required\"\n                               placeholder=\"{{field.label}}\"\n                               (focus)=\"picker.open()\"\n                               (dateChange)=\"saveFieldTrigger(field)\"\n                               formControlName=\"{{field.htmlId}}\">\n                        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                        <mat-datepicker #picker ></mat-datepicker>\n                        <mat-hint *ngIf=\"field.hint !== null\" [innerHTML]=\"field.hint\"></mat-hint>\n                    </mat-form-field>\n                    <!--SIGNATURE-->\n                    <div class=\"signature-field form-field \" *ngIf=\"field.dataType === 'TXT' && field.inputType === 'signature' && !field.sigImgOld\"\n                         [ngClass]=\"{'fieldError': field.error, 'mat-form-field-disabled': disclaimerFormData.status==='SUBMITTED'}\">\n                        <mat-label class=\"customFieldLabel\" [ngClass]=\"{'requiredField': field.required}\" [innerHTML]=\"field.label\"></mat-label>\n                        <canvas class=\"signature signature-pad no-print\" id=\"{{field.htmlId}}\"></canvas>\n                    </div>\n                    <div *ngIf=\"field.dataType === 'TXT' && field.inputType === 'signature' && !field.sigImgOld\" class=\"help-text onlyDisplayOnPrint\" id=\"{{field.htmlId}}img\"></div>\n                    <label *ngIf=\"field.dataType === 'TXT' && field.inputType === 'signature' && field.sigImgOld\" class=\"customFieldLabel\"><span *ngIf=\"field.required\" class=\"required-asterisk\">*</span> {{field.label}}</label>\n                    <div *ngIf=\"field.dataType === 'TXT' && field.inputType === 'signature' && field.sigImgOld\" class=\"help-text\" [innerHTML]=\"field.value\"></div>\n                    <!--LIST_CHKBOX-->\n                    <div class=\"checkbox-list form-field\" *ngIf=\"field.dataType === 'CHECKBOXES'\" id=\"{{field.htmlId}}\"\n                         [ngClass]=\"{'fieldError': field.error, 'mat-form-field-disabled': disclaimerFormData.status==='SUBMITTED'}\">\n                        <mat-label class=\"customFieldLabel\" [ngClass]=\"{'requiredField': field.required}\" [innerHTML]=\"field.label\"></mat-label>\n                        <div *ngFor=\"let dropdownValue of field.fieldValueObjs\" class=\"no-print\">\n                            <mat-checkbox (change)=\"setMultiCheckboxValue(field, dropdownValue, $event)\"\n                                          [checked]=\"dropdownValue.selected\"\n                                          [disabled]=\"disclaimerFormData.status==='SUBMITTED'\"\n                                          class=\"mat-checkbox-tt\">\n                                {{dropdownValue.label}}\n                            </mat-checkbox>\n\n                        </div>\n                        <div class=\"printCheckboxes\" [ngClass]=\"{'onlyDisplayOnPrint': toggleOnlyDisplayOnPrint}\">\n                            <div *ngFor=\"let dropdownValue of field.fieldValueObjs\">\n                                <i [ngClass]=\"{'fas fa-check-square': dropdownValue.selected, 'far fa-square': !dropdownValue.selected}\"></i>\n                                <label>{{dropdownValue.label}}</label>\n                            </div>\n                        </div>\n                        <mat-hint *ngIf=\"field.hint !== null\" [innerHTML]=\"field.hint\">\n                        </mat-hint>\n                    </div>\n                    <!--RADIO-->\n                    <div class=\"radio-list form-field\" *ngIf=\"field.dataType === 'RADIO'\" id=\"{{field.htmlId}}\"\n                         [ngClass]=\"{'fieldError': field.error, 'mat-form-field-disabled': disclaimerFormData.status==='SUBMITTED'}\">\n                        <mat-label class=\"customFieldLabel\" [ngClass]=\"{'requiredField': field.required}\" [innerHTML]=\"field.label\"></mat-label>\n                        <mat-radio-group formControlName=\"{{field.htmlId}}\">\n                            <mat-radio-button class=\"mat-radio-button-tt\" (change)=\"setRadioValue(field, dropdownValue, $event)\" *ngFor=\"let dropdownValue of field.fieldValueObjs\" [value]=\"dropdownValue.label\">\n                                {{dropdownValue.label}}\n                            </mat-radio-button>\n                        </mat-radio-group>\n                        <mat-hint *ngIf=\"field.hint !== null\" [innerHTML]=\"field.hint\">\n                        </mat-hint>\n                    </div>\n                </ng-container>\n            </div>\n        </form>\n    </mat-card-content>\n    <mat-card-actions id=\"disclaimerFormFooter\" class=\"actionBtnsCenterFooter myAccountFooter\"\n                      *ngIf=\"disclaimerFormDataLoaded && disclaimerFormData.status !== 'SUBMITTED'\">\n        <button type=\"button\"\n                id=\"submitDisclaimerFormBtn\"\n                [disabled]=\"submittingDisclaimerForm\"\n                mat-stroked-button buttonStyling baseStyle=\"success\"\n                class=\"btn px-4 mx-4\"\n                (click)=\"submitDisclaimerForm()\">\n            <i *ngIf=\"submittingDisclaimerForm\" class=\"fa fa-spinner fa-spin fa-fw\"></i> {{preference.labelMap.disclaimerFormSubmitBtn}}\n        </button>\n    </mat-card-actions>\n</mat-card>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/disclaimer-form/disclaimer-form.component.html":
/*!******************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/disclaimer-form/disclaimer-form.component.html ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<router-outlet></router-outlet>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/email-settings/email-settings.component.html":
/*!****************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/email-settings/email-settings.component.html ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card-content id=\"clientProfileFields\">\n    <mat-table [dataSource]=\"emailCategoriesList\" matSort backgroundStyling defaultColor=\"transparent\">\n        <ng-container  *ngFor=\"let col of columnDefs\" [matColumnDef]=\"col.name\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header>{{ col.title }}</mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                <span *ngIf=\"col.filter===undefined || col.filter === null\">\n                    {{ dataTablesService.getProperty(element, col.name) }}\n                </span>\n                <span *ngIf=\"col.filter!== undefined && col.filter !== null\" [innerHTML]=\"dataTablesService.getFilterDisplay(element, col, selectedClient)\"></span>\n            </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\">\n            <mat-header-cell *matHeaderCellDef>\n                Actions\n            </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                <button type=\"button\" mat-stroked-button class=\"viewDetailBtn viewApptDetailBtn\" buttonStyling baseStyle=\"basic\" btnClass=\"viewDetailBtn\"\n                        (click)=\"changeSubscribeStatus(element)\" >\n                    <span *ngIf=\"element.selected && !element.changingSubscribeStatus && !element.subscribeStatusChanged && !element.errorChangingSubscribeStatus\">Unsubscribe</span>\n                    <span *ngIf=\"!element.selected && !element.changingSubscribeStatus && !element.subscribeStatusChanged && !element.errorChangingSubscribeStatus\">Subscribe</span>\n                    <span *ngIf=\"element.changingSubscribeStatus\">Changing Subscription...</span>\n                    <span *ngIf=\"element.subscribeStatusChanged\">Saved!</span>\n                    <span *ngIf=\"element.errorChangingSubscribeStatus\">Error Saving!</span>\n                </button>\n            </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"noCategories\" >\n            <mat-footer-cell *matFooterCellDef [attr.aria-rowspan]=\"displayedColumns.length\" class=\"emptyDataList\">\n                <div class=\"alert alert-info\">\n                    {{preference.labelMap.emailSettingsNoCategoriesMsg}}\n                </div>\n            </mat-footer-cell>\n        </ng-container>\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row *matRowDef=\"let element; columns: displayedColumns\"\n                 class=\"element-row\">\n        </mat-row>\n        <mat-footer-row *matFooterRowDef=\"['noCategories']\" [hidden]=\"emailCategoriesList.data.length > 0\"></mat-footer-row>\n    </mat-table>\n</mat-card-content>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/modals/error-modal/error-modal.component.html":
/*!*****************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/modals/error-modal/error-modal.component.html ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 mat-dialog-title id=\"errorModalTitle\">{{errorTitle}}</h1>\n<mat-dialog-content>\n    <div class=\"alert\" appAlert baseStyle=\"error\" [innerHTML]=\"errorMessage\"></div>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <button type=\"button\" *ngIf=\"showCloseBtn\"\n            id=\"modalCloseBtn\"\n            mat-stroked-button\n            class=\"btn\" buttonStyling baseStyle=\"basic\" catchOverflow=\"true\"\n            (click)=\"dialogRef.close()\">\n        {{this.preference.labelMap.modalCloseBtnLabel}}\n    </button>\n</mat-dialog-actions>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/modals/manage-credit-card/manage-credit-card.component.html":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/modals/manage-credit-card/manage-credit-card.component.html ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 mat-dialog-title id=\"errorModalTitle\">{{preference.labelMap.clientPaymentsAddCardTitle}}</h1>\n<mat-dialog-content>\n    <div [innerHTML]=\"addCardDescription | safeHtml\"></div>\n    <square-payment-form *ngIf=\"path === 'addCard' && client.storedCardInfo.defaultGateway==='SQUARE'\" (onGoBack)=\"hidePaymentForm($event)\"\n                         [preference]=\"preference\" [client]=\"client\" path=\"addCard\">\n    </square-payment-form>\n    <stripe-payment-form *ngIf=\"path === 'addCard' && (client.storedCardInfo.defaultGateway==='STRIPE' || client.storedCardInfo.defaultGateway==='LUMAPAY')\" (onGoBack)=\"hidePaymentForm($event)\"\n                         [preference]=\"preference\" [client]=\"client\" path=\"addCard\">\n    </stripe-payment-form>\n    <div class=\"alert\" appAlert baseStyle=\"error\" *ngIf=\"errorDeletingCard\" [innerHTML]=\"errorMessage\"></div>\n    <div [innerHTML]=\"deleteConfirmationDescription\" *ngIf=\"path === 'deleteCard' && !deletingCard\"></div>\n    <div class=\"alert\" appAlert baseStyle=\"success\" *ngIf=\"deletingCard\">\n        <i class=\"fa fa-spinner fa-spin fa-fw\"></i> Removing card...\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"path === 'deleteCard' && !deletingCard\">\n    <button type=\"button\"\n            id=\"confirmDeleteCreditCardBtn\"\n            mat-stroked-button\n            class=\"btn col\" buttonStyling baseStyle=\"error\" catchOverflow=\"true\"\n            (click)=\"confirmDelete()\">\n        {{this.preference.labelMap.selectPackageConfirmBtn}}\n    </button>\n</mat-dialog-actions>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/modals/repeating-appt-filter/repeating-appt-filter.component.html":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/modals/repeating-appt-filter/repeating-appt-filter.component.html ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 mat-dialog-title id=\"repeatingApptFilterModalTitle\" [innerHTML]=\"preference.labelMap.repeatingApptFilterModalTitle\"></h1>\n<form [formGroup]=\"repeatingApptForm\" (ngSubmit)=\"applyFilters()\">\n    <mat-dialog-content>\n        <div id=\"repeatingApptFilterModalDescription\" [innerHTML]=\"repeatingApptFilterModalDescription | safeHtml\"></div>\n        <div class=\"checkbox-list\">\n            <mat-label class=\"customFieldLabel requiredField\" [innerHTML]=\"preference.labelMap.repeatingApptFilterModalWeekdaysLabel\"></mat-label>\n            <div class=\"row\">\n                <div *ngFor=\"let weekday of weekdays\" class=\"col-6 col-md-4\">\n                    <mat-checkbox (change)=\"setWeekdayValue(weekday, $event)\" [checked]=\"weekday.selected\" class=\"mat-checkbox-tt\" [value]=\"weekday.selected\">\n                        {{weekday.dayOfWeekName}}\n                    </mat-checkbox>\n                </div>\n            </div>\n            <mat-error *ngIf=\"needToSelectWeekdays\">\n                <i class=\"far fa-times-circle\"></i> {{preference.labelMap.repeatingApptFilterModalWeekdaysNeedToSelect}}\n            </mat-error>\n        </div>\n        <mat-form-field>\n            <mat-label>{{preference.labelMap.repeatingApptFilterModalStartDateLabel}}</mat-label>\n            <input matInput [matDatepicker]=\"picker\" required=\"true\" [min]=\"minDate\" [max]=\"maxDate\"\n                   placeholder=\"{{preference.labelMap.repeatingApptFilterModalStartDateLabel}}\"\n                   (focus)=\"picker.open()\"\n                   formControlName=\"startDate\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker ></mat-datepicker>\n        </mat-form-field>\n    </mat-dialog-content>\n    <mat-dialog-actions>\n<!--        <button type=\"button\"-->\n<!--                id=\"modalCloseBtn\"-->\n<!--                mat-stroked-button-->\n<!--                class=\"btn\" buttonStyling baseStyle=\"basic\" catchOverflow=\"true\"-->\n<!--                (click)=\"dialogRef.close()\">-->\n<!--            {{this.preference.labelMap.modalCloseBtnLabel}}-->\n<!--        </button>-->\n        <button type=\"button\"\n                id=\"applyFiltersBtn\"\n                mat-stroked-button\n                class=\"btn btn-block\" buttonStyling baseStyle=\"success\" catchOverflow=\"true\"\n                (click)=\"applyFilters()\">\n            {{this.preference.labelMap.repeatingApptFilterModalApplyFiltersBtn}}\n        </button>\n    </mat-dialog-actions>\n</form>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/modals/select-add-ons/select-add-ons.component.html":
/*!***********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/modals/select-add-ons/select-add-ons.component.html ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 mat-dialog-title id=\"selectPayAmountTitle\">{{title}}</h1>\n<mat-dialog-content>\n    <div [innerHTML]=\"description\"></div>\n    <mat-list *ngIf=\"availableAddOnReasons.length>0 && !responsiveService.onMobileViewPort\">\n        <mat-list-item id=\"rowFor{{listItem[idProp]}}\" *ngFor=\"let listItem of availableAddOnReasons\" tabindex=\"0\"\n                       (click)=\"selectAddOns($event, listItem)\" (keyup.enter)=\"selectAddOns($event, listItem)\"\n                       [ngClass]=\"{'selected': listItem.selected, 'mat-list-item-no-avatar': listItem[imageProp] === null}\">\n            <reason-chip-list [preference]=\"preference\" (selectObject)=\"selectAddOns($event, listItem)\" [reason]=\"listItem\" [currency]=\"currency\" [pullRight]=\"true\"></reason-chip-list>\n            <i class=\"fas fa-check float-right\" *ngIf=\"listItem.selected\"></i>\n            <img matListAvatar src=\"{{listItem[imageProp]}}\" *ngIf=\"listItem[imageProp]\">\n            <h3 mat-line id=\"h3For{{listItem[idProp]}}\">{{listItem[titleProp]}}</h3>\n            <p mat-line id=\"pFor{{listItem[idProp]}}\" [innerHTML]=\"listItem[descriptionProp] | safeHtml\" *ngIf=\"listItem[descriptionProp]\"></p>\n        </mat-list-item>\n    </mat-list>\n    <mat-list class=\"mobile-list\" *ngIf=\"availableAddOnReasons.length>0 && responsiveService.onMobileViewPort\">\n        <mat-list-item id=\"rowFor{{listItem[idProp]}}\" *ngFor=\"let listItem of availableAddOnReasons\" tabindex=\"0\"\n                       (click)=\"selectAddOns($event, listItem)\" (keyup.enter)=\"selectAddOns($event, listItem)\"\n                       [ngClass]=\"{'selected': listItem.selected, 'mat-list-item-no-avatar': listItem[imageProp] === null}\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <i class=\"fas fa-check float-right\" *ngIf=\"listItem.selected\"></i>\n                    <img matListAvatar src=\"{{listItem[imageProp]}}\" *ngIf=\"listItem[imageProp]\">\n                    <h3 mat-line id=\"h3For{{listItem[idProp]}}\">{{listItem[titleProp]}}</h3>\n                </div>\n                <div class=\"col-12 reasonChipList\">\n                    <reason-chip-list [preference]=\"preference\" (selectObject)=\"selectAddOns($event, listItem)\" [reason]=\"listItem\" [currency]=\"currency\" [pullRight]=\"true\"></reason-chip-list>\n                </div>\n                <div class=\"col-12\" *ngIf=\"listItem[descriptionProp]\">\n                    <p mat-line id=\"pFor{{listItem[idProp]}}\" [innerHTML]=\"listItem[descriptionProp] | safeHtml\" *ngIf=\"listItem[descriptionProp]\"></p>\n                </div>\n            </div>\n        </mat-list-item>\n    </mat-list>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <div class=\"col-6\">\n        <button type=\"button\"\n                id=\"addAddOnsBtn\"\n                mat-stroked-button\n                class=\"btn\" buttonStyling baseStyle=\"basic\" fullHeight=\"true\" catchOverflow=\"true\"\n                (click)=\"dismissModal(true)\">\n            <span [innerHTML]=\"addAddOnsBtn\"></span>\n        </button>\n    </div>\n    <div class=\"col-6\">\n        <button type=\"button\"\n                id=\"declineAddOnsBtn\"\n                mat-stroked-button\n                class=\"btn\" buttonStyling baseStyle=\"primary\" fullHeight=\"true\" catchOverflow=\"true\"\n                (click)=\"dismissModal(false)\">\n            <span [innerHTML]=\"declineAddOnsBtn\"></span>\n        </button>\n    </div>\n</mat-dialog-actions>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/modals/select-package/select-package.component.html":
/*!***********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/modals/select-package/select-package.component.html ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 mat-dialog-title id=\"selectPayAmountTitle\">{{title}}</h1>\n<mat-dialog-content>\n    <div class=\"alert\" appAlert baseStyle=\"success\" *ngIf=\"updatingInvoice\">\n        <i class=\"fa fa-spinner fa-spin fa-fw\"></i> Updating invoice...\n    </div>\n    <div class=\"alert\" appAlert baseStyle=\"error\" *ngIf=\"errorUpdating\">There was an error applying the package. Please try again.</div>\n    <div [innerHTML]=\"description\" *ngIf=\"!updatingInvoice\"></div>\n    <mat-form-field *ngIf=\"!packageSelected\">\n        <mat-select placeholder=\"{{this.preference.labelMap.selectPackageTitle}}\" panelClass=\"selectPackageDropdown\"\n                    [(value)]=\"selectedPackage\" [(ngModel)]=\"selectedPackage\" required name=\"selectedPackage\">\n            <mat-option *ngFor=\"let packageSold of packagesSold\" [value]=\"packageSold\" selected=\"\">\n                {{packageSold.dropdownDescription}}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"!updatingInvoice\">\n        <button type=\"button\"\n                id=\"modalCloseBtn\"\n                mat-stroked-button\n                class=\"btn\" buttonStyling baseStyle=\"basic\" catchOverflow=\"true\"\n                (click)=\"dialogRef.close()\">\n            {{this.preference.labelMap.cancelBtnLabel}}\n        </button>\n        <button type=\"button\" *ngIf=\"!packageSelected\"\n                id=\"selectPackageBtn\"\n                mat-stroked-button\n                [disabled]=\"!selectedPackage\"\n                class=\"btn\" buttonStyling baseStyle=\"primary\" catchOverflow=\"true\"\n                (click)=\"selectPackage()\">\n            {{this.preference.labelMap.selectPackageBtn}}\n        </button>\n        <button type=\"button\" *ngIf=\"packageSelected\"\n                id=\"confirmPackageBtn\"\n                mat-stroked-button\n                class=\"btn\" buttonStyling baseStyle=\"success\" catchOverflow=\"true\"\n                (click)=\"confirmPackage()\">\n            {{this.preference.labelMap.selectPackageConfirmBtn}}\n        </button>\n</mat-dialog-actions>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/modals/select-pay-amount/select-pay-amount.component.html":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/modals/select-pay-amount/select-pay-amount.component.html ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 mat-dialog-title id=\"selectPayAmountTitle\">{{preference.labelMap.selectPayAmountTitle}}</h1>\n<mat-dialog-content>\n    <div [innerHTML]=\"selectPayAmountDesc\"></div>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <div class=\"col-6\">\n        <button type=\"button\"\n                id=\"selectPayAmountDueBtn\"\n                mat-stroked-button\n                class=\"btn\" buttonStyling baseStyle=\"basic\" fullHeight=\"true\" catchOverflow=\"true\"\n                (click)=\"selectAmount('paymentAmount')\">\n            <span [innerHTML]=\"selectPayAmountDueBtn\"></span>\n        </button>\n    </div>\n    <div class=\"col-6\">\n        <button type=\"button\"\n                id=\"selectPayBalanceAmountBtn\"\n                mat-stroked-button\n                class=\"btn\" buttonStyling baseStyle=\"primary\" fullHeight=\"true\" catchOverflow=\"true\"\n                (click)=\"selectAmount('balanceAmount')\">\n            <span [innerHTML]=\"selectPayAmountBalanceBtn\"></span>\n        </button>\n    </div>\n</mat-dialog-actions>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/navigation/header/header.component.html":
/*!***********************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/navigation/header/header.component.html ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<header class=\"py-3\" id=\"pageHeader\" backgroundStyling containerId=\"pageHeader\">\n    <div class=\"container\">\n        <div id=\"topNav\" class=\"topNavRow\" [ngClass]=\"{'col-10 p-0': responsiveService.onMobileViewPort && miniWebsite.logoAlign === 'center' && showLoginBtn}\">\n            <login-register-btns *ngIf=\"miniWebsite.logoAlign === 'right' && schedulerLink && schedulerLink.publish\"\n                                 [parentComponent]=\"'app-header'\" [preference]=\"preference\" [miniWebsite]=\"miniWebsite\"></login-register-btns>\n            <img *ngIf=\"schedulerLink\" [ngClass]=\"{'col-10 p-0': responsiveService.onMobileViewPort && miniWebsite.logoAlign !== 'center'}\" appImageSizer imageId=\"businessLogo\"\n                 src=\"{{schedulerLink.logoUrl}}\" alt=\"\" id=\"businessLogo\">\n            <login-register-btns *ngIf=\"miniWebsite.logoAlign === 'left' && schedulerLink && schedulerLink.publish\"\n                                 [parentComponent]=\"'app-header'\" [preference]=\"preference\" [miniWebsite]=\"miniWebsite\"></login-register-btns>\n        </div>\n        <login-register-btns *ngIf=\"miniWebsite.logoAlign === 'center' && schedulerLink && schedulerLink.publish\" [hidden]=\"!logoSizeDetected\"\n                             [parentComponent]=\"'app-header'\" [preference]=\"preference\" [miniWebsite]=\"miniWebsite\"></login-register-btns>\n        <nav *ngIf=\"(isAuthenticated || displayConfig.store.enable || displayConfig.waitList.enable) && preference !== undefined && !responsiveService.onMobileViewPort\" class=\"nav d-flex justify-navigation\" id=\"miniWebsiteNavigation\">\n            <a class=\"pt-3 px-4 navigationLink\" id=\"schedulerNav\" routerLink=\"/scheduler\" [state]=\"{'navigationLink': isAuthenticated}\" routerLinkActive=\"active\"\n               appLink linkClass=\"navigationLink\">\n                {{preference.labelMap.headerNavScheduler}}\n            </a>\n            <a class=\"pt-3 px-4 navigationLink\" id=\"storeNav\" routerLink=\"/store\" routerLinkActive=\"active\"\n               *ngIf=\"displayConfig.store.enable\"\n               appLink linkClass=\"navigationLink\">\n                {{preference.labelMap.headerNavStore}}\n            </a>\n            <a class=\"pt-3 px-4 navigationLink\" id=\"waitListNav\" (click)=\"goToLink('waitList')\"\n               *ngIf=\"displayConfig.waitList.enable && ((preference.loginReq !== 1 && preference.loginReq !== 2) || ((preference.loginReq === 1 || preference.loginReq === 2) && isAuthenticated))\"\n               appLink linkClass=\"navigationLink\">\n                {{preference.labelMap.headerNavWaitList}}\n            </a>\n            <a class=\"pt-3 px-4 navigationLink\" id=\"accountNav\" routerLink=\"/my-account\" routerLinkActive=\"active\"\n               *ngIf=\"isAuthenticated\"\n               appLink linkClass=\"navigationLink\">\n                {{preference.labelMap.headerNavMyAccount}}\n            </a>\n        </nav>\n    </div>\n</header>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/navigation/login-register-btns/login-register-btns.component.html":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/navigation/login-register-btns/login-register-btns.component.html ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<span *ngIf=\"parentComponent !== 'sidebar'\">\n    <button type=\"button\" id=\"toggleSideNavBtn\" mat-stroked-button\n            *ngIf=\"showLoginBtn && responsiveService.onMobileViewPort\"\n            (click)=\"businessService.toggleSidenav()\"\n            buttonStyling baseStyle=\"basic\" [classesOnMobile]=\"['px-3','py-2']\">\n        <i class=\"fas fa-bars\"></i>\n    </button>\n    <button type=\"button\" (click)=\"login()\" id=\"loginBtn\" mat-stroked-button\n            *ngIf=\"showLoginBtn && !isAuthenticated && !responsiveService.onMobileViewPort\"\n            [ngClass]=\"{'btn-sm': responsiveService.onTabletViewPort}\"\n            buttonStyling baseStyle=\"basic\">\n            {{preference.labelMap.headerNavLogin}}\n    </button>\n    <button type=\"button\" (click)=\"register(false)\" id=\"registerBtn\" mat-stroked-button\n            *ngIf=\"showRegisterBtn && !isAuthenticated && !responsiveService.onMobileViewPort\"\n            [ngClass]=\"{'btn-sm': responsiveService.onTabletViewPort}\"\n            buttonStyling baseStyle=\"basic\">\n        {{preference.labelMap.headerNavRegister}}\n    </button>\n    <button type=\"button\" (click)=\"logout()\" id=\"logoutBtn\" mat-stroked-button\n            *ngIf=\"isAuthenticated && preference !== undefined && !responsiveService.onMobileViewPort\"\n            [ngClass]=\"{'btn-sm': responsiveService.onTabletViewPort}\"\n            buttonStyling baseStyle=\"basic\">\n        {{preference.labelMap.logoutLabel}}\n    </button>\n    <button type=\"button\" (click)=\"showCart()\" id=\"cartBtn\" mat-stroked-button\n            *ngIf=\"!responsiveService.onMobileViewPort && displayConfig.packages.enable\"\n            [ngClass]=\"{'btn-sm': responsiveService.onTabletViewPort}\"\n            buttonStyling baseStyle=\"basic\">\n        <i class=\"fas fa-shopping-cart\"></i>\n        <span textFormatting class=\"ml-2\" *ngIf=\"cartQuantity > 0\">-</span>\n        <span textFormatting class=\"ml-2\" *ngIf=\"cartQuantity > 0\">{{cartQuantity}}</span>\n    </button>\n</span>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/navigation/sidebar/header-sidebar.component.html":
/*!********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/navigation/sidebar/header-sidebar.component.html ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"headerSidebar\" backgroundStyling containerId=\"headerSidebar\" parentElement=\"mat-sidenav\" class=\"sidenav\" *ngIf=\"preference !== undefined\">\n    <mat-nav-list>\n        <a mat-list-item class=\"sideNavLink\" (click)=\"login()\" id=\"loginLink\" *ngIf=\"showLoginBtn && !isAuthenticated\">\n            {{preference.labelMap.headerNavLogin}}\n        </a>\n        <a mat-list-item class=\"sideNavLink\" (click)=\"register(false)\" id=\"registerLink\" *ngIf=\"showRegisterBtn && !isAuthenticated\">\n            {{preference.labelMap.headerNavRegister}}\n        </a>\n        <a mat-list-item class=\"sideNavLink\" routerLink=\"/scheduler\" [state]=\"{'navigationLink': isAuthenticated}\" routerLinkActive=\"active\" id=\"bookApptLink\"\n           appLink linkClass=\"navigationLink\"\n           *ngIf=\"isAuthenticated || displayConfig.store.enable\"\n           (click)=\"businessService.toggleSidenav()\">\n            {{preference.labelMap.headerNavScheduler}}\n        </a>\n        <a mat-list-item class=\"sideNavLink\" routerLink=\"/store\" routerLinkActive=\"active\" id=\"storeNav\"\n           appLink linkClass=\"navigationLink\" *ngIf=\"displayConfig.store.enable\"\n           (click)=\"businessService.toggleSidenav()\">\n            {{preference.labelMap.headerNavStore}}\n        </a>\n        <a mat-list-item class=\"sideNavLink\" id=\"waitListNav\"\n           appLink linkClass=\"navigationLink\" *ngIf=\"displayConfig.waitList.enable && ((preference.loginReq !== 1 && preference.loginReq !== 2) || ((preference.loginReq === 1 || preference.loginReq === 2) && isAuthenticated))\"\n           (click)=\"goToLink('waitList'); businessService.toggleSidenav()\">\n            {{preference.labelMap.headerNavWaitList}}\n        </a>\n        <a mat-list-item class=\"sideNavLink\" routerLink=\"/cart\" routerLinkActive=\"active\" id=\"cartLink\"\n           appLink linkClass=\"navigationLink\" *ngIf=\"displayConfig.packages.enable\"\n           (click)=\"businessService.toggleSidenav()\">\n            <i class=\"fas fa-shopping-cart\"></i>\n            <span textFormatting class=\"ml-2\" *ngIf=\"cartQuantity > 0\">-</span>\n            <span textFormatting class=\"ml-2\" *ngIf=\"cartQuantity > 0\">{{cartQuantity}}</span>\n        </a>\n        <a mat-list-item class=\"sideNavLink\" routerLink=\"/my-account\" routerLinkActive=\"active\" id=\"myAccountLink\"\n           appLink linkClass=\"navigationLink\"\n           *ngIf=\"isAuthenticated\" (click)=\"businessService.toggleSidenav()\">\n            {{preference.labelMap.headerNavMyAccount}}\n        </a>\n        <a mat-list-item class=\"sideNavLink\" (click)=\"logout()\" id=\"logoutLink\" *ngIf=\"isAuthenticated\">\n            {{preference.labelMap.logoutLabel}}\n        </a>\n    </mat-nav-list>\n</div>\n<!--Used to toggle login when on embedded view; elements on component are hidden based on parentComponent property-->\n<login-register-btns *ngIf=\"responsiveService.isEmbedded && miniWebsite !== undefined\"\n                     [parentComponent]=\"'sidebar'\" [preference]=\"preference\" [miniWebsite]=\"miniWebsite\">\n</login-register-btns>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler-pref-field-form/scheduler-pref-field-form.component.html":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler-pref-field-form/scheduler-pref-field-form.component.html ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<form [formGroup]=\"clientInfoForm\" *ngIf=\"formLoaded\">\n    <div *ngIf=\"clientAccount !== undefined && clientAccount !== null && clientAccount.clientList.length > 0 && selectClientOnForm\">\n        <mat-form-field>\n            <mat-select placeholder=\"{{preference.labelMap.infoPnlNameLabel}}\" [(value)]=\"selectedClient\">\n                <mat-option *ngFor=\"let client of clientAccount.clientList\" [value]=\"client\" (onSelectionChange)=\"selectClient($event, client)\" selected=\"\">\n                    {{client.fullName}}\n                </mat-option>\n            </mat-select>\n        </mat-form-field>\n    </div>\n    <div *ngFor=\"let field of fieldDefnList; let i = index;\" class=\"customField {{field.tagName}}\" id=\"{{field.tagName}}\" [ngClass]=\"{'fieldsInline': field.code === 'sendTextReminder' || field.code === 'sendTextReminderHrs', 'clientField': field.mode === 'CLIENT', 'apptField': field.mode === 'APPT'}\">\n        <ng-container *ngIf=\"field.showOnScheduler\">\n            <!--TXT-->\n            <!--URL-->\n            <mat-form-field appearance=\"standard\" *ngIf=\"field.dataType === 'TXT' || field.dataType === 'URL'\">\n                <mat-label>{{field.label}}</mat-label>\n                <input matInput type=\"{{field.inputType}}\"\n                       [required]=\"field.required\"\n                       placeholder=\"{{field.label}}\"\n                       (keyup)=\"checkDependencyFields(field, $event)\"\n                       formControlName=\"{{field.schedulerPreferenceFieldDefnId}}\"\n                       value=\"{{field.value}}\">\n                <mat-hint *ngIf=\"field.hint !== null\" [innerHTML]=\"field.hint\">\n                </mat-hint>\n                <mat-error *ngIf=\"field.regexInvalid\">{{field.validationError}}</mat-error>\n                <mat-error *ngIf=\"field.confirmEmailMismatch\">{{preference.labelMap.confirmEmailMismatchError}}</mat-error>\n            </mat-form-field>\n            <!--AREA-->\n            <mat-form-field appearance=\"standard\" *ngIf=\"field.dataType === 'AREA'\">\n                <mat-label>{{field.label}}</mat-label>\n                <textarea matInput [required]=\"field.required\"\n                          placeholder=\"{{field.label}}\"\n                          (keyup)=\"checkRegexError(field)\"\n                          formControlName=\"{{field.schedulerPreferenceFieldDefnId}}\"\n                          value=\"{{field.value}}\"></textarea>\n                <mat-hint *ngIf=\"field.hint !== null\"  [innerHTML]=\"field.hint\">\n                </mat-hint>\n                <mat-error *ngIf=\"field.regexInvalid\">{{field.validationError}}</mat-error>\n            </mat-form-field>\n            <!--DROPDOWN-->\n            <mat-form-field appearance=\"standard\" *ngIf=\"field.dataType === 'LIST' && field.code !== 'sendTextReminderHrs'\">\n                <mat-label>{{field.label}}</mat-label>\n                <mat-select *ngIf=\"field.dataType === 'LIST'\"\n                            panelClass=\"schedulerFieldDrpdwn\"\n                            [required]=\"field.required\"\n                            placeholder=\"{{field.label}}\"\n                            (selectionChange)=\"checkDependencyFields(field, $event)\"\n                            formControlName=\"{{field.schedulerPreferenceFieldDefnId}}\"\n                            value=\"{{field.value}}\">\n                    <mat-option *ngFor=\"let dropdownValue of field.dropdownValues\" [value]=\"dropdownValue\">\n                        {{dropdownValue}}\n                    </mat-option>\n                </mat-select>\n                <mat-hint *ngIf=\"field.hint !== null\" [innerHTML]=\"field.hint\">\n                </mat-hint>\n                <mat-error *ngIf=\"field.regexInvalid\">{{field.validationError}}</mat-error>\n            </mat-form-field>\n            <div *ngIf=\"field.code === 'sendTextReminderHrs'\" [ngClass]=\"{'inlineSelect': field.code === 'sendTextReminderHrs'}\">\n                <mat-select *ngIf=\"field.dataType === 'LIST'\"\n                            [required]=\"field.required\"\n                            placeholder=\"{{field.label}}\"\n                            (selectionChange)=\"checkDependencyFields(field, $event)\"\n                            formControlName=\"{{field.schedulerPreferenceFieldDefnId}}\"\n                            value=\"{{field.value}}\">\n                    <mat-option *ngFor=\"let dropdownValue of field.dropdownValues\" [value]=\"dropdownValue\">\n                        {{dropdownValue}}\n                    </mat-option>\n                </mat-select>\n            </div>\n            <!--DATE-->\n            <mat-form-field *ngIf=\"field.dataType === 'DATE'\">\n                <mat-label>{{field.label}}</mat-label>\n                <input matInput [matDatepicker]=\"picker\" [required]=\"field.required\"\n                       placeholder=\"{{field.label}}\"\n                       (focus)=\"picker.open()\"\n                       formControlName=\"{{field.schedulerPreferenceFieldDefnId}}\"\n                       (dateChange)=\"checkDependencyFields(field, $event)\">\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker ></mat-datepicker>\n                <mat-hint *ngIf=\"field.hint !== null\" [innerHTML]=\"field.hint\">\n                </mat-hint>\n                <mat-error *ngIf=\"field.requiredObjInvalid\">{{field.requiredObj.depError}}</mat-error>\n            </mat-form-field>\n            <!--CHKBOX-->\n             <div *ngIf=\"field.dataType === 'CHKBOX'\" class=\"form-field\"\n                  [ngClass]=\"{'inlineChkBox': field.code === 'sendTextReminder', 'checkbox-field': field.code !== 'sendTextReminder', 'mat-form-field-invalid': field.requiredObjInvalid}\">\n                <mat-label class=\"customFieldLabel\" [ngClass]=\"{'requiredField': field.required}\">{{field.label}}</mat-label>\n                <mat-checkbox formControlName=\"{{field.schedulerPreferenceFieldDefnId}}\"\n                              [value]=\"field.value\" class=\"mat-checkbox-tt\" aria-label=\"{{field.label}}\"\n                              (change)=\"checkDependencyFields(field)\">\n                </mat-checkbox>\n                <div>\n                    <mat-hint *ngIf=\"field.hint !== null\" [innerHTML]=\"field.hint\">\n                    </mat-hint>\n                </div>\n             </div>\n            <!--LIST_CHKBOX-->\n            <div class=\"checkbox-list form-field\" *ngIf=\"field.dataType === 'LIST_CHKBOX'\">\n                <mat-label class=\"customFieldLabel\" [ngClass]=\"{'requiredField': field.required}\" [innerHTML]=\"field.label\"></mat-label>\n                <div *ngFor=\"let dropdownValue of field.dropdownValues\">\n                    <mat-checkbox (change)=\"setMultiCheckboxValue(field, dropdownValue, $event)\" [checked]=\"dropdownValue.value\" [disabled]=\"!editing\" class=\"mat-checkbox-tt\">\n                        {{dropdownValue.label}}\n                    </mat-checkbox>\n                </div>\n                <mat-hint *ngIf=\"field.hint !== null\" [innerHTML]=\"field.hint\">\n                </mat-hint>\n            </div>\n            <!--FILE UPLOAD-->\n            <div class=\"file-upload form-field\" *ngIf=\"field.dataType==='FILEUPLOAD'\">\n                <mat-label class=\"customFieldLabel\" [ngClass]=\"{'requiredField': field.required}\"  [innerHTML]=\"field.label\"></mat-label>\n                <input id=\"field{{field.schedulerPreferenceFieldDefnId}}\" hidden=\"true\" type=\"file\" onclick=\"this.value=null\" (change)=\"fileUploadChange($event, field)\"/>\n                <button mat-stroked-button class=\"fileUploadBtn btn\" buttonStyling baseStyle=\"basic\" btnClass=\"fileUploadBtn\"\n                        (click)=\"chooseFilesForUpload(field)\" [disabled]=\"field.fileUploading || !editing\">\n                    <span *ngIf=\"!field.fileUploading && !field.fileUploadSuccess\">{{preference.labelMap.fileUploadBtnChooseFile}}</span>\n                    <span *ngIf=\"field.fileUploading\"> <i class=\"fa fa-spinner fa-spin fa-fw\"></i> {{preference.labelMap.fileUploadBtnUploadingFile}}</span>\n                    <span *ngIf=\"field.fileUploadSuccess\"> <i class=\"fas fa-check\"></i> {{preference.labelMap.fileUploadBtnUploadedFile}}</span>\n                </button>\n                <mat-error *ngIf=\"field.fileUploadError\" class=\"errorText\">\n                    <i class=\"far fa-times-circle\"></i> {{field.fileUploadErrorMsg}}\n                </mat-error>\n                <mat-hint *ngIf=\"!field.fileUploading && field.fileForDisplay !== undefined && field.fileForDisplay !== null\">\n                    {{field.fileForDisplay}} <a (click)=\"removeFile(field)\"><i class=\"far fa-times-circle\"></i></a>\n                </mat-hint>\n                <div *ngIf=\"field.hint !== null\">\n                    <mat-hint class=\"field-hint\" [innerHTML]=\"field.hint\">\n                    </mat-hint>\n                </div>\n            </div>\n            <!--LABEL AND DIVIDER-->\n            <mat-list class=\"form-field\" *ngIf=\"field.dataType === 'LABEL' || field.dataType==='DIVIDER'\">\n                <mat-list-item [innerHTML]=\"field.label\"></mat-list-item>\n                <mat-divider [inset]=\"true\"></mat-divider>\n            </mat-list>\n        </ng-container>\n    </div>\n</form>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/client-info/client-info.component.html":
/*!********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/client-info/client-info.component.html ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<scheduler-title-bar *ngIf=\"!preference.schedButtonsTopNav\"\n                 [preference]=\"preference\"\n                 titleProperty=\"{{panel.panelTitleProperty}}\"\n                 titleId=\"{{panel.panelTitleProperty}}\">\n</scheduler-title-bar>\n<scheduler-footer  *ngIf=\"preference.schedButtonsTopNav\" [preference]=\"preference\"\n                   [showBackButton]=\"showBackButton\"\n                   (onMovePanels)=\"movePanels($event)\"\n                   [formGroup]=\"panel.formGroup\"\n                   [disableSave]=\"disableSave\"\n                   nextBtnId=\"saveBtn\" [pageLoaded]=\"formLoaded\"\n                   nextBtnLabelProp=\"labelSave\" titleProperty=\"{{panel.panelTitleProperty}}\"\n                   titleId=\"{{panel.panelTitleProperty}}\">\n</scheduler-footer>\n<mat-card-content id=\"clientInfoPanel\" class=\"schedulerPanelBody\">\n    <div class=\"row schedulerPanelLoading\" *ngIf=\"savingAppointment\">\n        <mat-progress-spinner mode=\"indeterminate\" value=\"50\" class=\"loadingSpinner\"></mat-progress-spinner><span class=\"spinnerText\">Saving...</span>\n    </div>\n    <div id=\"errorSavingAppointment\" class=\"errorText panelTopDescriptionText\" [innerHTML]=\"errorSavingAppointmentMsg | safeHtml\" *ngIf=\"errorSavingAppointment && !savingAppointment\"></div>\n    <div id=\"requiredFieldsEmpty\" class=\"errorText panelTopDescriptionText\" [innerHTML]=\"requiredFieldsEmptyMsg | safeHtml\" *ngIf=\"requiredFieldsEmpty && !savingAppointment\"></div>\n    <div id=\"bookingSummary\" class=\"panelTopDescriptionText\"  [innerHTML]=\"infoPnlBookingSummary | safeHtml\"  *ngIf=\"!savingAppointment\"></div>\n    <div id=\"{{panel.panelTextProperty}}\" class=\"panelTopDescriptionText\" [innerHTML]=\"preference.labelMap[panel.panelTextProperty] | safeHtml\"  *ngIf=\"!savingAppointment && preference.labelMap[panel.panelTextProperty] !== null\"></div>\n    <div id=\"invalidAddress\" class=\"errorText panelTopDescriptionText\" [innerHTML]=\"invalidAddressMsgExtra | safeHtml\" *ngIf=\"invalidAddress && !savingAppointment\"></div>\n    <app-scheduler-pref-field-form [fieldDefnList]=\"preference.schedulerPreferenceFieldDefnList\" [earliestApptDate]=\"earliestApptDate\"\n                                   [clientInfoForm]=\"clientInfoForm\" [preference]=\"preference\" [editing]=\"true\" [selectedReason]=\"selectedReason\"\n                                   *ngIf=\"!savingAppointment\" (onFormLoaded)=\"onFormLoaded(event)\" (onFileUploading)=\"uploadingFile(event)\" [selectClientOnForm]=\"true\"></app-scheduler-pref-field-form>\n</mat-card-content>\n<scheduler-footer *ngIf=\"!preference.schedButtonsTopNav\" [preference]=\"preference\"\n                  [showBackButton]=\"showBackButton\"\n                  (onMovePanels)=\"movePanels($event)\"\n                  [formGroup]=\"panel.formGroup\"\n                  [disableSave]=\"disableSave\"\n                  nextBtnId=\"saveBtn\" [pageLoaded]=\"formLoaded\"\n                  nextBtnLabelProp=\"labelSave\">\n</scheduler-footer>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/common-components/add-to-calendar/add-to-calendar.component.html":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/common-components/add-to-calendar/add-to-calendar.component.html ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-nav-list>\n    <a mat-list-item (click)=\"selectCalendarType('google')\">\n        <span mat-line>{{preference.labelMap.addToCalendarGoogleLabel}}</span>\n    </a>\n    <a mat-list-item (click)=\"selectCalendarType('ical')\">\n        <span mat-line>{{preference.labelMap.addToCalendarAppleLabel}}</span>\n    </a>\n    <a mat-list-item (click)=\"selectCalendarType('outlook')\">\n        <span mat-line>{{preference.labelMap.addToCalendarOutlookLabel}}</span>\n    </a>\n    <a mat-list-item (click)=\"selectCalendarType('yahoo')\">\n        <span mat-line>{{preference.labelMap.addToCalendarYahooLabel}}</span>\n    </a>\n    <a mat-list-item (click)=\"selectCalendarType('ics')\">\n        <span mat-line>{{preference.labelMap.addToCalendarICSLabel}}</span>\n    </a>\n</mat-nav-list>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/common-components/coupon/coupon.component.html":
/*!****************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/common-components/coupon/coupon.component.html ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\" id=\"couponSearch\">\n    <div class=\"col-12\">\n        <button id=\"couponSearchBtn\" (click)=\"searchCoupons(couponCode)\" [disabled]=\"applyingCoupon\" mat-stroked-button\n                buttonStyling baseStyle=\"basic\" class=\"float-right\">\n            <span *ngIf=\"applyingCoupon\"><i class=\"fa fa-spinner fa-spin fa-fw\"></i></span>\n            {{preference.labelMap.servicePnlCouponButton}}\n        </button>\n        <mat-form-field [ngClass]=\"{'searching': applyingCoupon}\" id=\"couponSearchField\">\n            <input matInput placeholder=\"{{preference.labelMap.servicePnlCouponLabel}}\" [(ngModel)]=\"couponCode\" (keyup)=\"checkEnter($event, couponCode)\"/>\n            <mat-hint *ngIf=\"preference.labelMap.servicePnlCouponHint !== null && preference.labelMap.servicePnlCouponHint !== ''\">{{preference.labelMap.servicePnlCouponHint}}</mat-hint>\n        </mat-form-field>\n        <div class=\"errorText\" *ngIf=\"couponStatus==='ERROR' && cartCoupon\" [innerHTML]=\"couponStatusDetail\"></div>\n        <div class=\"alert\" appAlert [baseStyle]=\"couponStatus==='SUCCESS' ? 'success' : 'error'\" *ngIf=\"!cartCoupon && (couponStatus==='SUCCESS' || couponStatus==='ERROR')\"\n             [innerHTML]=\"couponStatusDetail\">\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/common-components/footer/footer.component.html":
/*!****************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/common-components/footer/footer.component.html ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card-actions *ngIf=\"!preference.schedButtonsTopNav || finalConfirmationFooter\" id=\"schedulerFooter\" [ngClass]=\"{'finalConfirmationFooter': finalConfirmationFooter}\">\n    <label *ngIf=\"showPoweredByTimeTap && !showBackButton\" id=\"poweredByLabel\" [innerHTML]=\"preference.labelMap.poweredByTimeTap\"></label>\n    <button [hidden]=\"!showBackButton\"\n            type=\"button\"\n            id=\"backBtn\"\n            mat-stroked-button\n            buttonStyling baseStyle=\"basic\"\n            (click)=\"movePanels('back')\">\n        {{preference.labelMap.labelBack}}\n    </button>\n    <button type=\"button\" *ngIf=\"showAddToCalendarBtn\"\n            id=\"addToCalendar\" style=\"margin-right: 15px;\"\n            mat-stroked-button\n            class=\"no-print\"\n            (click)=\"addToCalendar()\"\n            buttonStyling btnId=\"addToCalendar\" baseStyle=\"basic\" [fullHeight]=\"responsiveService.onMobileViewPort\" [catchOverflow]=\"responsiveService.onMobileViewPort?true:false\">\n        {{preference.labelMap.addToCalendarBtn}}\n    </button>\n    <button type=\"button\" *ngIf=\"showNextBtn && showBookAnotherButton\"\n            id=\"{{nextBtnId}}\"\n            mat-stroked-button\n            class=\"no-print\"\n            [ngClass]=\"{'float-right': !finalConfirmationFooter, 'notAllowedCursor': checkFormGroupValid() === false && nextBtnId === 'saveBtn'}\"\n            (click)=\"movePanels('next')\" [fullHeight]=\"responsiveService.onMobileViewPort&&nextBtnId === 'bookAnother' ? true:false\" [catchOverflow]=\"responsiveService.onMobileViewPort&&nextBtnId === 'bookAnother'?true:false\"\n            buttonStyling btnId=\"{{nextBtnId}}\" baseStyle=\"{{nextBtnId === 'saveBtn' ? 'success':'primary'}}\"\n            [disabled]=\"(checkFormGroupValid() === false && nextBtnId !== 'saveBtn') || !pageLoaded\">\n        {{preference.labelMap[nextBtnLabelProp]}}\n    </button>\n</mat-card-actions>\n<mat-card-header id=\"schedulerHeaderFooter\" class=\"toolbarCardHeader\"\n                 [ngClass]=\"{'embeddedView': showLoginRegisterBtns}\"\n                 *ngIf=\"preference.schedButtonsTopNav && !finalConfirmationFooter\">\n    <mat-card-title id=\"{{titleId}}\">\n        <button *ngIf=\"!showLoginRegisterBtns\"\n                type=\"button\" id=\"backBtn\" mat-stroked-button class=\"float-left\"\n                buttonStyling baseStyle=\"basic\" [actAsSpacer]=\"!showBackButton\"\n                (click)=\"movePanels('back')\">\n            {{preference.labelMap.labelBack}}\n        </button>\n        <button *ngIf=\"showNextBtn && showBookAnotherButton && !showLoginRegisterBtns\"\n                type=\"button\" id=\"{{nextBtnId}}\" mat-stroked-button\n                [ngClass]=\"{'float-right': !finalConfirmationFooter, 'notAllowedCursor': !formGroup.valid && nextBtnId === 'saveBtn'}\"\n                (click)=\"movePanels('next')\"\n                buttonStyling [btnId]=\"nextBtnId\" baseStyle=\"{{nextBtnId === 'saveBtn' ? 'success':'primary'}}\"\n                [disabled]=\"(checkFormGroupValid() === false && nextBtnId !== 'saveBtn') || !pageLoaded\">\n            {{preference.labelMap[nextBtnLabelProp]}}\n        </button>\n        <div *ngIf=\"showLoginRegisterBtns\" class=\"next-back-wrapper\">\n            <button [hidden]=\"!showBackButton\"\n                    type=\"button\"\n                    id=\"backBtn\"\n                    [ngClass]=\"{'btn-sm': responsiveService.innerWidth <= responsiveService.smScreenBreakPoint}\"\n                    mat-stroked-button\n                    buttonStyling baseStyle=\"basic\" [removeBorderRightRadius]=\"true\"\n                    (click)=\"movePanels('back')\">\n                {{preference.labelMap.labelBack}}\n            </button>\n            <button type=\"button\" *ngIf=\"showNextBtn\"\n                    id=\"{{nextBtnId}}\"\n                    mat-stroked-button\n                    [ngClass]=\"{'removeBorderRadius': showBackButton, 'notAllowedCursor': !formGroup.valid && nextBtnId === 'saveBtn', 'btn-sm': responsiveService.innerWidth <= responsiveService.smScreenBreakPoint}\"\n                    (click)=\"movePanels('next')\"\n                    buttonStyling [btnId]=\"nextBtnId\" [baseStyle]=\"nextBtnId === 'saveBtn' ? 'success':'primary'\" [removeBorderLeftRadius]=\"showBackButton\"\n                    [disabled]=\"(checkFormGroupValid() === false && nextBtnId !== 'saveBtn') || !pageLoaded\">\n                {{preference.labelMap[nextBtnLabelProp]}}\n            </button>\n        </div>\n        <button *ngIf=\"showLoginRegisterBtns\" mat-stroked-button\n                id=\"toggleSideNavBtn\" class=\"toggleBtn\"\n                buttonStyling baseStyle=\"basic\"\n                (click)=\"businessService.toggleSidenav()\">\n            <i class=\"fas fa-bars\"></i>\n        </button>\n        <h2 *ngIf=\"preference.labelMap[titleProperty] !== null\" textFormatting textClass=\"schedulerPanelTitle\">\n            {{preference.labelMap[titleProperty]}}\n        </h2>\n    </mat-card-title>\n</mat-card-header>\n\n\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/common-components/scheduler-banner-list-items/scheduler-banner-list-items.component.html":
/*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/common-components/scheduler-banner-list-items/scheduler-banner-list-items.component.html ***!
  \**********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"listItems && listItems.length > 0\">\n    <div id=\"rowFor{{listItem[idProp]}}\" *ngFor=\"let listItem of listItems\" (click)=\"selectObject($event, true, listItem)\"\n         class=\"row reasonSelectRow py-4\"  [ngClass]=\"{'mobile': responsiveService.onMobileViewPort}\"\n         (keyup.enter)=\"selectObject($event, true, listItem)\">\n        <div class=\"col-6 col-sm-3\">\n            <img src=\"{{listItem[imageProp]}}\" id=\"imageFor{{listItem[idProp]}}\">\n        </div>\n        <div class=\"col-6 col-sm-6\">\n            <div class=\"row\">\n                <div class=\"col-12 header\">\n                    <h3 id=\"h3For{{listItem[idProp]}}\">{{listItem[titleProp]}}</h3>\n                </div>\n                <div class=\"col-12 description\">\n                    <p [innerHTML]=\"listItem[descriptionProp] | safeHtml\" *ngIf=\"listItem[descriptionProp] !== null\"></p>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-12 col-sm-3 signupButton\">\n            <button class=\"btn pillButton\">\n                Sign Up\n            </button>\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/common-components/scheduler-list-items/scheduler-list-items.component.html":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/common-components/scheduler-list-items/scheduler-list-items.component.html ***!
  \********************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-list *ngIf=\"listItems.length>0\">\n    <mat-list-item id=\"rowFor{{listItem[idProp]}}\" *ngFor=\"let listItem of listItems\" tabindex=\"0\"\n                   (click)=\"selectObject($event, true, listItem)\" (keyup.enter)=\"selectObject($event, true, listItem)\"\n                   [ngClass]=\"{'selected': listItem.selected,\n                           'adjustChipListHeight': listItem.showExtendedHeight, 'mat-list-item-no-avatar': listItem[imageProp] === null}\">\n        <reason-chip-list [preference]=\"preference\" (selectObject)=\"selectObject($event, true)\" [reason]=\"listItem\" [currency]=\"currency\" [pullRight]=\"true\"\n                          *ngIf=\"listItemType==='reason' && !listItem.showExtendedHeight\"></reason-chip-list>\n        <i class=\"fas fa-check float-right\" *ngIf=\"listItem.selected && !listItem.showExtendedHeight\"></i>\n        <i class=\"fas fa-chevron-right float-right\" *ngIf=\"!listItem.showExtendedHeight\"></i>\n        <img matListAvatar src=\"{{listItem[imageProp]}}\" *ngIf=\"listItem[imageProp] !== null && !listItem.showExtendedHeight\">\n        <h3 mat-line id=\"h3For{{listItem[idProp]}}\" *ngIf=\"!listItem.showExtendedHeight\">{{listItem[titleProp]}}</h3>\n        <p mat-line id=\"pFor{{listItem[idProp]}}\" [innerHTML]=\"listItem[descriptionProp] | safeHtml\" *ngIf=\"!listItem.showExtendedHeight && listItem[descriptionProp] !== null\"></p>\n        <div class=\"row extendedHeightRow\" *ngIf=\"listItem.showExtendedHeight\">\n            <div class=\"col-12\">\n                <i class=\"fas fa-check float-right\" *ngIf=\"listItem.selected\"></i>\n                <i class=\"fas fa-chevron-right float-right\"></i>\n                <div class=\"avatar-wrapper\" *ngIf=\"listItem[imageProp] !== null\">\n                    <img matListAvatar src=\"{{listItem[imageProp]}}\" id=\"imageFor{{listItem[idProp]}}\">\n                </div>\n                <div class=\"title-wrapper\" [ngClass]=\"{'avatar-float': listItem[imageProp] !== null}\">\n                    <h3 id=\"h3For{{listItem[idProp]}}\" mat-line >{{listItem[titleProp]}}</h3>\n                    <reason-chip-list *ngIf=\"listItemType==='reason' && !listItem.multiDuration && listItem.allowRepeating === -1\" [preference]=\"preference\"\n                                      (selectObject)=\"selectObject($event, true)\" [reason]=\"listItem\" [currency]=\"currency\" [pullRight]=\"false\"></reason-chip-list>\n                </div>\n                <reason-chip-list *ngIf=\"listItemType==='reason' && (listItem.multiDuration || listItem.allowRepeating > -1)\" [preference]=\"preference\"\n                                  (selectObject)=\"selectObject($event, true)\" [reason]=\"listItem\" [currency]=\"currency\" [pullRight]=\"false\"></reason-chip-list>\n                <div class=\"mat-list-text\" id=\"pFor{{listItem[idProp]}}\"\n                     [ngClass]=\"{'mat-list-text-with-avatar': listItem[imageProp] !== null}\">\n                    <p mat-line [innerHTML]=\"listItem[descriptionProp] | safeHtml\" *ngIf=\"listItem[descriptionProp] !== null\"></p>\n                </div>\n            </div>\n        </div>\n\n    </mat-list-item>\n</mat-list>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/common-components/timezone/timezone.component.html":
/*!********************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/common-components/timezone/timezone.component.html ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<br *ngIf=\"showBreak\"/>\n<span class=\"timezoneLabel\" *ngIf=\"!changingTimezones && preference.allowTZChange !== -1\">\n    <span *ngIf=\"preference.allowTZChange === 1; else showBusinessTimezone\">\n        {{preference.labelMap.timePnlTimezoneLabel}}\n    </span>\n    <ng-template #showBusinessTimezone>{{preference.labelMap.timePnlTimezoneLabelForBusiness}}</ng-template>\n    {{timeZoneNameForDisplay}}\n    <a (click)=\"toggleChangeTimezone()\" id=\"changeTimezoneLink\" appLink linkId=\"changeTimezoneLink\" *ngIf=\"preference.allowTZChange === 1\" tabindex=\"0\" (keyup.enter)=\"toggleChangeTimezone()\">\n        {{preference.labelMap.timePnlChangeTimezoneLabel}}\n    </a>\n</span>\n<mat-form-field *ngIf=\"changingTimezones && !loadingTimezones\" class=\"timezoneSelect\">\n    <mat-select placeholder=\"Select...\" [(value)]=\"clientTimeZone\">\n        <mat-option *ngFor=\"let timezone of timezones\" [value]=\"timezone.timeZoneCode\" (onSelectionChange)=\"setTimezone($event, timezone)\" selected=\"\">\n            {{timezone.timeZoneDisplayName}}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/common-components/title-bar/title-bar.component.html":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/common-components/title-bar/title-bar.component.html ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card-header id=\"schedulerHeader\" class=\"toolbarCardHeader\" [ngClass]=\"{'embeddedView': showLoginRegisterBtns}\"><!-- -->\n    <mat-card-title id=\"{{titleId}}\" style=\"\">\n        <button *ngIf=\"showLoginRegisterBtns\" mat-stroked-button id=\"toggleSideNavBtn\" class=\"toggleBtn\" (click)=\"businessService.toggleSidenav()\"\n                buttonStyling baseStyle=\"basic\" [classesOnMobile]=\"['px-3','py-2']\">\n            <i class=\"fas fa-bars\"></i>\n        </button>\n        <button *ngIf=\"!showLoginRegisterBtns && showPrintButton\"\n                type=\"button\" mat-stroked-button class=\"float-left no-print\"\n                buttonStyling baseStyle=\"basic\" [actAsSpacer]=\"true\">\n            {{preference.labelMap.buttonSpacerString}}\n        </button>\n        <h2 *ngIf=\"preference.labelMap[titleProperty] !== null\" textFormatting textClass=\"schedulerPanelTitle\">{{preference.labelMap[titleProperty]}}</h2>\n        <button type=\"button\"\n                id=\"printBtn\"\n                class=\"no-print\"\n                mat-stroked-button\n                *ngIf=\"showPrintButton\"\n                buttonStyling float=\"right\"\n                (click)=\"printPage()\">\n            {{preference.labelMap.printBtnLabel}}\n        </button>\n    </mat-card-title>\n</mat-card-header>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/common-components/zip-code-filter/zip-code-filter.component.html":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/common-components/zip-code-filter/zip-code-filter.component.html ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\" id=\"filterSearch\">\n    <div class=\"col-12\">\n        <button id=\"filterSearchBtn\" (click)=\"searchFilters(filterValue)\" mat-stroked-button [disabled]=\"searching\"\n                buttonStyling baseStyle=\"basic\" class=\"float-right\">\n            {{preference.labelMap.filterButton}}\n        </button>\n<!--        <stroked-button btnId=\"filterSearchBtn\" (click)=\"searchFilters(filterValue)\" [floatRight]=\"true\"-->\n<!--                        btnLabel=\"{{preference.labelMap.filterButton}}\" baseStyle=\"basic\">-->\n<!--        </stroked-button>-->\n        <mat-form-field id=\"filterSearchField\">\n            <input matInput placeholder=\"{{preference.labelMap.filterLabel}}\" [(ngModel)]=\"filterValue\" (keyup)=\"checkEnter($event, filterValue)\"/>\n            <mat-hint *ngIf=\"preference.labelMap.filterHint !== null && preference.labelMap.filterHint !== ''\">{{preference.labelMap.filterHint}}</mat-hint>\n        </mat-form-field>\n\n    </div>\n</div>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/confirmation/confirmation.component.html":
/*!**********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/confirmation/confirmation.component.html ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<scheduler-title-bar [preference]=\"preference\" [showPrintButton]=\"showPrintButton\" printId=\"schedulerBox\"\n                     titleProperty=\"{{panelTitleProperty}}\"\n                     titleId=\"{{panel.panelTitleProperty}}\">\n</scheduler-title-bar>\n<mat-card-content class=\"schedulerPanelBody\" id=\"{{panel.panelTextProperty}}\">\n    <div [innerHTML]=\"confirmationText | safeHtml\" *ngIf=\"!redirectUrlLoaded\"></div>\n    <button *ngIf=\"showPaymentButton && !redirectUrlLoaded\" mat-stroked-button id=\"paymentBtnWrapper\" (click)=\"payInvoice()\"\n        buttonStyling baseStyle=\"primary\" btnStyleId=\"payNowBtn\">\n        {{paymentButtonLabel}}\n    </button>\n    <div [innerHTML]=\"confirmationAfterPaymentButton | safeHtml\"\n         *ngIf=\"confirmationAfterPaymentButton !== undefined && confirmationAfterPaymentButton !== null && confirmationAfterPaymentButton !== '' &&!redirectUrlLoaded\"></div>\n</mat-card-content>\n<scheduler-footer [preference]=\"preference\"\n                  [showBackButton]=\"showBackButton\"\n                  (onMovePanels)=\"movePanels($event, this.preference.continueShoppingUrl)\"\n                  [formGroup]=\"panel.formGroup\"\n                  [showBookAnotherButton]=\"showBookAnotherButton\"\n                  [showAddToCalendarBtn]=\"showAddToCalendarBtn\"\n                  (onAddToCalendar)=\"addToCalendar()\"\n                  nextBtnId=\"bookAnother\" [pageLoaded]=\"true\"\n                  [nextBtnLabelProp]=\"bookAnotherProp\">\n</scheduler-footer>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/groups/groups.component.html":
/*!**********************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/groups/groups.component.html ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<scheduler-title-bar *ngIf=\"!preference.schedButtonsTopNav\"\n                     [preference]=\"preference\"\n                     titleProperty=\"{{panel.panelTitleProperty}}\"\n                     titleId=\"{{panel.panelTitleProperty}}\">\n</scheduler-title-bar>\n<scheduler-footer  *ngIf=\"preference.schedButtonsTopNav\" [preference]=\"preference\"\n                   [showBackButton]=\"showBackButton\"\n                   (onMovePanels)=\"movePanels($event)\"\n                   [formGroup]=\"panel.formGroup\"\n                   nextBtnId=\"nextBtn\" [pageLoaded]=\"true\"\n                   nextBtnLabelProp=\"labelNext\" titleProperty=\"{{panel.panelTitleProperty}}\"\n                   titleId=\"{{panel.panelTitleProperty}}\">\n</scheduler-footer>\n<mat-card-content class=\"schedulerPanelBody\">\n    <div class=\"row schedulerPanelLoading\" *ngIf=\"!groupsLoaded && !errorLoading\">\n        <mat-progress-spinner mode=\"indeterminate\" value=\"50\" class=\"loadingSpinner\"></mat-progress-spinner><span class=\"spinnerText\">Loading...</span>\n    </div>\n    <div class=\"alert\" appAlert baseStyle=\"error\" *ngIf=\"errorLoading\">\n        {{preference.labelMap[panel.panelErrorLoadingProperty]}}\n    </div>\n    <div id=\"{{panel.panelTextProperty}}\" class=\"panelTopDescriptionText\" *ngIf=\"groupsLoaded && !errorLoading && preference.labelMap[panel.panelTextProperty] !== null\"\n         [innerHTML]=\"preference.labelMap[panel.panelTextProperty] | safeHtml\"></div>\n    <div class=\"alert\" appAlert baseStyle=\"error\" *ngIf=\"groupsLoaded && !errorLoading && groups.length === 0\">\n        {{preference.labelMap[panel.panelNoObjectsProperty]}}\n    </div>\n    <form [formGroup]=\"panel.formGroup\" *ngIf=\"groupsLoaded && !errorLoading && groups.length > 0\">\n        <mat-list>\n            <mat-list-item *ngFor=\"let group of groups\" (click)=\"selectObject(group, true, $event)\" [ngClass]=\"{'selected': group.selected}\">\n                <i class=\"fas fa-check float-right\" *ngIf=\"group.selected\" style=\"padding-right: 15px\"></i>\n                <i class=\"fas fa-chevron-right float-right\"></i>\n                <img matListAvatar *ngIf=\"group.logoUrl !== null\" src=\"{{group.logoUrl}}\">\n                <h4 mat-line>{{group.groupName}}</h4>\n                <p mat-line [innerHTML]=\"group.groupDescription | safeHtml\" *ngIf=\"group.groupDescription !== null\"></p>\n            </mat-list-item>\n        </mat-list>\n    </form>\n</mat-card-content>\n<scheduler-footer  *ngIf=\"!preference.schedButtonsTopNav\" [preference]=\"preference\"\n                  [showBackButton]=\"showBackButton\"\n                  (onMovePanels)=\"movePanels($event)\"\n                  [formGroup]=\"panel.formGroup\"\n                  nextBtnId=\"nextBtn\" [pageLoaded]=\"true\"\n                  nextBtnLabelProp=\"labelNext\">\n</scheduler-footer>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/locations/locations.component.html":
/*!****************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/locations/locations.component.html ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<scheduler-title-bar *ngIf=\"!preference.schedButtonsTopNav\"\n                     [preference]=\"preference\"\n                     titleProperty=\"{{panel.panelTitleProperty}}\"\n                     titleId=\"{{panel.panelTitleProperty}}\">\n</scheduler-title-bar>\n<scheduler-footer  *ngIf=\"preference.schedButtonsTopNav\" [preference]=\"preference\"\n                   [showBackButton]=\"showBackButton\"\n                   (onMovePanels)=\"movePanels($event)\"\n                   [formGroup]=\"panel.formGroup\"\n                   nextBtnId=\"nextBtn\" [pageLoaded]=\"true\"\n                   nextBtnLabelProp=\"labelNext\" titleProperty=\"{{panel.panelTitleProperty}}\"\n                   titleId=\"{{panel.panelTitleProperty}}\">\n</scheduler-footer>\n<mat-card-content class=\"schedulerPanelBody\">\n    <div class=\"row schedulerPanelLoading\" *ngIf=\"!locationsLoaded && !errorLoading\">\n        <mat-progress-spinner mode=\"indeterminate\" value=\"50\" class=\"loadingSpinner\"></mat-progress-spinner><span class=\"spinnerText\">Loading...</span>\n    </div>\n    <div class=\"alert\" *ngIf=\"errorLoading\" appAlert baseStyle=\"error\">\n        {{preference.labelMap[panel.panelErrorLoadingProperty]}}\n    </div>\n    <div *ngIf=\"locationsHaveMapAddress && mapLocations\">\n        <app-location-map #locationMapComponent (selectObject)=\"selectObject($event, true)\" [mapLocations]=\"mapLocations\" ></app-location-map>\n    </div>\n    <zip-code-filter *ngIf=\"locationsLoaded && !errorLoading && (preference.filterMode===1 || preference.filterMode === 3) && totalLocationsLength > 0\"\n                     [preference]=\"preference\"\n                     [CSFilterObj]=\"CSFilterObj\"\n                     [filterMode]=\"1\" [searching]=\"searchingLocations\"\n                     (onSearchObjects)=\"getLocations(CSFilterObj, true)\">\n    </zip-code-filter>\n    <div id=\"{{panel.panelTextProperty}}\" class=\"panelTopDescriptionText\"\n         *ngIf=\"locationsLoaded && !errorLoading && preference.labelMap[panel.panelTextProperty] !== null\"\n         [innerHTML]=\"preference.labelMap[panel.panelTextProperty] | safeHtml\"></div>\n    <div class=\"row schedulerPanelLoading\" *ngIf=\"searchingLocations\">\n        <mat-progress-spinner mode=\"indeterminate\" value=\"50\" class=\"loadingSpinner\"></mat-progress-spinner><span class=\"spinnerText\">Loading...</span>\n    </div>\n    <form [formGroup]=\"panel.formGroup\" *ngIf=\"locationsLoaded && !errorLoading && !searchingLocations\">\n        <div class=\"alert\" appAlert baseStyle=\"info\" role=\"alert\" *ngIf=\"locations.length===0\">\n            <span *ngIf=\"CSFilterObj.filterLocation !== undefined && CSFilterObj.filterLocation !== null && CSFilterObj.filterLocation !== ''; else showNoLocationAvail\">\n                {{locationPnlNoLocationsFilterSearchMsg}}\n            </span>\n            <ng-template #showNoLocationAvail>{{preference.labelMap.locationNoAvailError}}</ng-template>\n        </div>\n        <mat-list *ngIf=\"locations.length > 0\">\n            <mat-list-item *ngFor=\"let location of locations\" (click)=\"selectObject(location, true, $event)\" (keyup.enter)=\"selectObject(location, true, $event)\"\n                           [ngClass]=\"{'selected': location.selected}\" tabindex=\"0\">\n                <i class=\"fas fa-check float-right\" *ngIf=\"location.selected\" style=\"padding-right: 15px\"></i>\n                <i class=\"fas fa-chevron-right float-right\"></i>\n                <img matListAvatar *ngIf=\"location.logoUrl !== null\" src=\"{{location.logoUrl}}\">\n                <h3 textFormatting mat-line>{{location.locationName}}</h3>\n                <p mat-line [innerHTML]=\"location.description | safeHtml\" *ngIf=\"location.description !== null\"></p>\n            </mat-list-item>\n        </mat-list>\n    </form>\n</mat-card-content>\n<scheduler-footer  *ngIf=\"!preference.schedButtonsTopNav\" [preference]=\"preference\"\n                  [showBackButton]=\"showBackButton\"\n                  (onMovePanels)=\"movePanels($event)\"\n                  [formGroup]=\"panel.formGroup\"\n                  nextBtnId=\"nextBtn\" [pageLoaded]=\"true\"\n                  nextBtnLabelProp=\"labelNext\">\n</scheduler-footer>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/locations/variable-address/variable-address.component.html":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/locations/variable-address/variable-address.component.html ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 mat-dialog-title id=\"variableAddressTitle\">{{preference.labelMap.locationPnlVariableAddressTitle}}</h1>\n<mat-dialog-content>\n    <div id=\"variableAddressDescription\" class=\"mat-dialog-desc\">{{preference.labelMap.locationPnlVariableAddressInitialDescription}}</div>\n    <div class=\"row\" id=\"variableAddressSearch\">\n        <div class=\"col-12\">\n            <button id=\"locationPnlVariableAddressValidateBtn\" mat-stroked-button class=\"btn float-right\"\n                    (click)=\"validateAddress(address)\" [disabled]=\"validatingAddress\" *ngIf=\"!responsiveService.onMobileViewPort\"\n                    buttonStyling baseStyle=\"primary\">\n                <span *ngIf=\"validatingAddress\"><i class=\"fa fa-spinner fa-spin fa-fw\"></i></span> {{preference.labelMap.locationPnlVariableAddressValidateBtn}}\n            </button>\n<!--            <stroked-button *ngIf=\"!responsiveService.onMobileViewPort\" btnId=\"locationPnlVariableAddressValidateBtn\" (click)=\"validateAddress(address)\"-->\n<!--                            [submitting]=\"validatingAddress\" [btnSm]=\"true\" [floatRight]=\"true\"-->\n<!--                            btnLabel=\"{{preference.labelMap.locationPnlVariableAddressValidateBtn}}\" baseStyle=\"primary\"-->\n<!--                            [isDisabled]=\"validatingAddress\">-->\n<!--            </stroked-button>-->\n            <mat-form-field [ngClass]=\"{'searching': validatingAddress}\" id=\"locationPnlVariableAddressValidateField\">\n                <input matInput placeholder=\"{{preference.labelMap.locationPnlVariableAddressInputLabel}}\" [(ngModel)]=\"address\" (keyup)=\"checkEnter($event, address)\"/>\n            </mat-form-field>\n            <button id=\"locationPnlVariableAddressValidateBtn\" mat-stroked-button class=\"btn\"\n                    (click)=\"validateAddress(address)\" [disabled]=\"validatingAddress\"  *ngIf=\"responsiveService.onMobileViewPort\"\n                    buttonStyling baseStyle=\"primary\">\n                <span *ngIf=\"validatingAddress\"><i class=\"fa fa-spinner fa-spin fa-fw\"></i></span> {{preference.labelMap.locationPnlVariableAddressValidateBtn}}\n            </button>\n<!--            <stroked-button *ngIf=\"responsiveService.onMobileViewPort\" btnId=\"locationPnlVariableAddressValidateBtn\" (click)=\"validateAddress(address)\"-->\n<!--                            [submitting]=\"validatingAddress\" [btnSm]=\"true\"-->\n<!--                            btnLabel=\"{{preference.labelMap.locationPnlVariableAddressValidateBtn}}\" baseStyle=\"primary\"-->\n<!--                            [isDisabled]=\"validatingAddress\">-->\n<!--            </stroked-button>-->\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"matchingAddresses.length > 0\">\n        <div class=\"col-12\">\n            <h3 id=\"matchingAddressesTitle\">{{preference.labelMap.locationPnlVariableAddressMatchingAddressesTitle}}</h3>\n            <div id=\"matchingAddressesDescription\" class=\"mat-dialog-desc\">{{preference.labelMap.locationPnlVariableAddressMatchingAddressesDescription}}</div>\n        </div>\n        <div class=\"col-12 matchingAddressList mat-dialog-desc\" *ngFor=\"let matchingAddress of matchingAddresses\">\n            {{matchingAddress}}\n<!--            <stroked-button btnId=\"locationPnlVariableAddressConfirmBtn\" (click)=\"confirmAddress(matchingAddress)\"-->\n<!--                            [btnSm]=\"true\"btnLabel=\"{{preference.labelMap.locationPnlVariableAddressConfirmBtn}}\" baseStyle=\"success\">-->\n<!--            </stroked-button>-->\n            <button type=\"button\" mat-stroked-button class=\"btn locationPnlVariableAddressConfirmBtn\"\n                    buttonStyling baseStyle=\"success\" btnClass=\"locationPnlVariableAddressConfirmBtn\"\n                    (click)=\"confirmAddress(matchingAddress)\">{{preference.labelMap.locationPnlVariableAddressConfirmBtn}}</button>\n        </div>\n    </div>\n</mat-dialog-content>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/reasons/reason-chip-list/reason-chip-list.component.html":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/reasons/reason-chip-list/reason-chip-list.component.html ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"reasonDetailsInfo\" [ngClass]=\"{'pull-right': pullRight}\" *ngIf=\"!reason.multiDuration && reason.allowRepeating === -1\">\n    <mat-chip-list aria-labelledby=\"single duration option\"\n                   *ngIf=\"preference.showDuration && reason.reasonType !== 'COURSE' && !reason.multiDuration && reason.allowRepeating === -1 && reason.visitMinutes != 0\">\n        <mat-chip [attr.aria-label]=\"reason.friendlyDuration\" aria-selected=\"true\" tabindex=\"0\" aria-checked=\"true\"\n                  class=\"reasonDurationChip\" ttChip baseStyle=\"basic\" chipClass=\"reasonDurationChip\">\n            {{reason.friendlyDuration}}\n        </mat-chip>\n    </mat-chip-list>\n    <mat-chip-list aria-labelledby=\"sessions\" *ngIf=\"preference.showDuration && reason.numberSessions !== null && reason.reasonType === 'COURSE' && !reason.multiDuration\">\n        <mat-chip [attr.aria-label]=\"reason.numberSessions + ' - ' + preference.labelMap.courseSessionsLabel\" aria-selected=\"true\" tabindex=\"1\" aria-checked=\"true\"\n                  class=\"courseSessionsChip\" ttChip baseStyle=\"basic\" chipClass=\"courseSessionsChip\">\n            {{reason.numberSessions}} {{preference.labelMap.courseSessionsLabel}}\n        </mat-chip>\n    </mat-chip-list>\n    <mat-chip-list aria-labelledby=\"price\"\n                   *ngIf=\"!preference.hidePrice && reason.price !== null && !reason.multiDuration && reason.allowRepeating === -1\">\n        <mat-chip [attr.aria-label]=\"reason.price | currency:currency.currencyCode\" aria-selected=\"true\" tabindex=\"1\" aria-checked=\"true\" id=\"reasonPriceChip\"\n                  class=\"reasonPriceChip\"  ttChip baseStyle=\"basic\" chipClass=\"reasonPriceChip\">\n            <span *ngIf=\"reason.originalPrice !== undefined && reason.originalPrice !== null && reason.originalPrice !== reason.price\" class=\"strikeThroughText\">\n                {{reason.originalPrice | currency:currency.currencyCode}}\n            </span>\n            {{reason.price | currency:currency.currencyCode}}\n        </mat-chip>\n    </mat-chip-list>\n</div>\n<mat-chip-list [ngClass]=\"{'pull-right': pullRight}\" aria-labelledby=\"multi duration option\" *ngIf=\"reason.multiDuration && reason.allowRepeating === -1 && reason.reasonType !== 'COURSE'\">\n    <mat-form-field class=\"multiDurationSelection\">\n        <mat-select placeholder=\"Select...\" [(value)]=\"reason.selectedDuration.duration\" panelClass=\"durationDropdown\">\n            <mat-option [attr.aria-label]=\"duration.friendlyDuration\" *ngFor=\"let duration of reason.durationList\" [value]=\"duration.duration\" (onSelectionChange)=\"setReasonDuration($event, duration, reason)\" selected=\"\">\n                <span *ngIf=\"duration.durationName !== null && duration.durationName !== ''\">\n                    {{duration.durationName}}:\n                </span>\n                {{duration.friendlyDuration}}\n                <span *ngIf=\"!preference.hidePrice && duration.price !== null\">\n                    -\n                    <span *ngIf=\"duration.originalPrice !== undefined && duration.originalPrice !== null && duration.originalPrice !== duration.price\" class=\"strikeThroughText\">\n                        {{duration.originalPrice | currency:currency.currencyCode}}\n                    </span>\n                    {{duration.price | currency:currency.currencyCode}}\n                </span>\n            </mat-option>\n        </mat-select>\n        <mat-hint *ngIf=\"reason.needToSelectDuration\">Select appointment duration</mat-hint>\n    </mat-form-field>\n</mat-chip-list>\n<mat-chip-list [ngClass]=\"{'pull-right': pullRight}\" aria-labelledby=\"repeating appointment options\" *ngIf=\"reason.allowRepeating > -1 && reason.reasonType !== 'COURSE' && reason.repeatingApptOptionList.length > 1\">\n    <mat-form-field  class=\"multiDurationSelection\">\n        <mat-select placeholder=\"Select...\" [(value)]=\"reason.selectedRepeatingApptOption.numberOfAppointments\" panelClass=\"durationDropdown\">\n            <mat-option [attr.aria-label]=\"repeatingApptOption.numberOfAppointments + ' Appointments, ' + reason.friendlyDuration + ' each'\" *ngFor=\"let repeatingApptOption of reason.repeatingApptOptionList\" [value]=\"repeatingApptOption.numberOfAppointments\" (onSelectionChange)=\"setRepeatingApptOption($event, repeatingApptOption, reason)\" selected=\"\">\n                <span *ngIf=\"repeatingApptOption.displayName !== null && repeatingApptOption.displayName !== ''\">{{repeatingApptOption.displayName}}: </span>{{repeatingApptOption.numberOfAppointments}} Appointments, {{reason.friendlyDuration}} each, <span *ngIf=\"!preference.hidePrice && repeatingApptOption.price !== null\">- {{repeatingApptOption.price | currency:currency.currencyCode}}</span>\n            </mat-option>\n        </mat-select>\n        <mat-hint *ngIf=\"reason.needToSelectDuration\">Select appointment duration</mat-hint>\n    </mat-form-field>\n</mat-chip-list>\n<mat-chip-list aria-labelledby=\"repeating appointment options\"\n               [ngClass]=\"{'wrapRow': reason.repeatingApptOptionList[0].displayName && responsiveService.onMobileViewPort}\"\n               *ngIf=\"reason.allowRepeating > -1 && reason.reasonType !== 'COURSE' && reason.repeatingApptOptionList.length === 1\">\n    <mat-chip [attr.aria-label]=\"reason.repeatingApptOptionList[0].displayName\" aria-selected=\"true\" tabindex=\"1\" aria-checked=\"true\"\n              class=\"reasonDurationChip\" ttChip baseStyle=\"basic\" chipClass=\"reasonDurationChip\" *ngIf=\"reason.repeatingApptOptionList[0].displayName !== null && reason.repeatingApptOptionList[0].displayName !== ''\">\n        {{reason.repeatingApptOptionList[0].displayName}}\n    </mat-chip>\n    <mat-chip [attr.aria-label]=\"reason.repeatingApptOptionList[0].numberOfAppointments + '  Appointments, ' + reason.friendlyDuration + ' each'\" aria-selected=\"true\" tabindex=\"1\" aria-checked=\"true\"\n              class=\"reasonDurationChip\" ttChip baseStyle=\"basic\" chipClass=\"reasonDurationChip\">\n        {{reason.repeatingApptOptionList[0].numberOfAppointments}} Appointments, {{reason.friendlyDuration}} each\n    </mat-chip>\n    <mat-chip [attr.aria-label]=\"reason.repeatingApptOptionList[0].price | currency:currency.currencyCode\" aria-selected=\"true\" tabindex=\"1\" aria-checked=\"true\"\n              class=\"reasonPriceChip\" ttChip baseStyle=\"basic\" chipClass=\"reasonPriceChip\" *ngIf=\"!preference.hidePrice && reason.repeatingApptOptionList[0].price !== null\">\n        {{reason.repeatingApptOptionList[0].price | currency:currency.currencyCode}}\n    </mat-chip>\n</mat-chip-list>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/reasons/reasons.component.html":
/*!************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/reasons/reasons.component.html ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<scheduler-title-bar *ngIf=\"!preference.schedButtonsTopNav\"\n                     [preference]=\"preference\"\n                     titleProperty=\"{{panel.panelTitleProperty}}\"\n                     titleId=\"{{panel.panelTitleProperty}}\">\n</scheduler-title-bar>\n<scheduler-footer  *ngIf=\"preference.schedButtonsTopNav\" [preference]=\"preference\"\n                   [showBackButton]=\"showBackButton\"\n                   (onMovePanels)=\"movePanels($event)\"\n                   [formGroup]=\"panel.formGroup\"\n                   nextBtnId=\"nextBtn\" [pageLoaded]=\"true\"\n                   nextBtnLabelProp=\"labelNext\" titleProperty=\"{{panel.panelTitleProperty}}\"\n                   titleId=\"{{panel.panelTitleProperty}}\">\n</scheduler-footer>\n<mat-card-content class=\"schedulerPanelBody\" id=\"reasonsPanel\" [ngClass]=\"{'loading': !reasonsLoaded, 'errorLoading': errorLoading}\">\n    <div class=\"row schedulerPanelLoading\" *ngIf=\"!reasonsLoaded && !errorLoading\">\n        <mat-progress-spinner mode=\"indeterminate\" value=\"50\" class=\"loadingSpinner\"></mat-progress-spinner><span class=\"spinnerText\">Loading...</span>\n    </div>\n    <div class=\"alert\" appAlert baseStyle=\"error\" *ngIf=\"errorLoading\">\n        {{preference.labelMap[panel.panelErrorLoadingProperty]}}\n    </div>\n    <coupon-search *ngIf=\"reasonsLoaded && !errorLoading && preference.couponReq===0\"\n                   [preference]=\"preference\"\n                   [CSFilterObj]=\"CSFilterObj\" [cartCoupon]=\"false\"\n                   [filterMode]=\"1\" [subjectServiceProvider]=\"reasonsService\"\n                   (onSearchCoupons)=\"applyCouponToReasons($event)\">\n    </coupon-search>\n    <div id=\"{{panel.panelTextProperty}}\" class=\"panelTopDescriptionText\"\n         *ngIf=\"reasonsLoaded && !errorLoading && preference.labelMap[panel.panelTextProperty] !== null\"\n         [innerHTML]=\"preference.labelMap[panel.panelTextProperty] | safeHtml\"></div>\n    <form [formGroup]=\"panel.formGroup\" *ngIf=\"reasonsLoaded && !errorLoading\">\n        <div class=\"alert\" appAlert baseStyle=\"error\" role=\"alert\" *ngIf=\"reasons.length===0\">\n            {{preference.labelMap.reasonPnlNoReasonsMsg}}\n        </div>\n        <scheduler-list-items *ngIf=\"reasons.length>0 && !preference.booleanMap.reasonDisplayBanner\" [listItems]=\"reasons\" [currency]=\"currency\"\n                              [preference]=\"preference\" (onSelectItem)=\"selectSchedulingObj($event)\"\n                              listItemType=\"reason\" idProp=\"reasonId\" titleProp=\"reasonDesc\" descriptionProp=\"reasonDetail\" imageProp=\"imageUrl\">\n        </scheduler-list-items>\n        <scheduler-banner-list-items *ngIf=\"reasons.length>0 && preference.booleanMap.reasonDisplayBanner\" [listItems]=\"reasons\" [litItemType]=\"listItemType\"\n                                     (onSelectItem)=\"selectSchedulingObj($event)\"></scheduler-banner-list-items>\n    </form>\n</mat-card-content>\n<scheduler-footer  *ngIf=\"!preference.schedButtonsTopNav\" [preference]=\"preference\"\n                  [showBackButton]=\"showBackButton\"\n                  (onMovePanels)=\"movePanels($event)\"\n                  [formGroup]=\"panel.formGroup\"\n                  nextBtnId=\"nextBtn\" [pageLoaded]=\"true\"\n                  nextBtnLabelProp=\"labelNext\">\n</scheduler-footer>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/scheduler.component.html":
/*!******************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/scheduler.component.html ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"schedulerHeaderText\" [hidden]=\"isEmbedded\" d *ngIf=\"dataLoaded && miniWebsite.headerText !== null && miniWebsite.headerText !== ''\">\n    <h1 id=\"schedulerHeaderText\" textFormatting textId=\"schedulerHeaderText\">{{preference.labelMap.headerText}}</h1>\n</div>\n<div [ngClass]=\"{'row': preference.booleanMap.businessInfoVisible && !isEmbedded}\" id=\"schedulerContainerRow\" *ngIf=\"!errorLoading\">\n    <mat-card *ngIf=\"dataLoaded && preference.booleanMap.businessInfoVisible && !responsiveService.onMobileViewPort && !isEmbedded\" id=\"businessInfo\" backgroundStyling containerId=\"businessInfo\">\n        <mat-card-content>\n            <div textFormatting [innerHTML]=\"preference.labelMap.businessInfoText | safeHtml\"></div>\n        </mat-card-content>\n    </mat-card>\n    <mat-card *ngIf=\"dataLoaded\" id=\"schedulerBox\" backgroundStyling containerId=\"schedulerBox\"\n              [ngClass]=\"{'businessInfoVisible': preference.booleanMap.businessInfoVisible && !isEmbedded,\n              'noBorderBottom': preference.schedButtonsTopNav, 'embeddedView': isEmbedded}\" >\n        <div class=\"alert panelTopDescriptionText\" appAlert baseStyle=\"error\" *ngIf=\"noAppointmentsAvailable\">\n            {{preference.labelMap.noAppointmentText}}\n        </div>\n        <welcome-panel [preference]=\"preference\"\n                       *ngIf=\"currentPanel.panel === panelValues.welcome\"\n                       [panel]=\"welcomePanel\"\n                       (onMovePanels)=\"movePanels($event)\">\n        </welcome-panel>\n        <groups-panel [preference]=\"preference\"\n                      *ngIf=\"currentPanel.panel === panelValues.locationSuperGroups || currentPanel.panel === panelValues.locationGroups || currentPanel.panel === panelValues.reasonSuperGroups || currentPanel.panel === panelValues.reasonGroups\"\n                      [panel]=\"currentPanel\"\n                      (onMovePanels)=\"movePanels($event)\"\n                      [CSFilterObj]=\"CSFilterObj\"\n                      [directionComingFrom]=\"directionComingFrom\">\n        </groups-panel>\n        <locations-panel [preference]=\"preference\"\n                         *ngIf=\"currentPanel.panel === panelValues.locations\"\n                         [panel]=\"locationPanel\"\n                         (onMovePanels)=\"movePanels($event)\"\n                         [CSFilterObj]=\"CSFilterObj\"\n                         [directionComingFrom]=\"directionComingFrom\">\n        </locations-panel>\n        <staff-panel [preference]=\"preference\"\n                     *ngIf=\"currentPanel.panel === panelValues.staff\"\n                     [panel]=\"staffPanel\"\n                     (onMovePanels)=\"movePanels($event)\"\n                     [CSFilterObj]=\"CSFilterObj\"\n                     [directionComingFrom]=\"directionComingFrom\">\n        </staff-panel>\n        <reasons-panel [preference]=\"preference\"\n                       *ngIf=\"currentPanel.panel === panelValues.reasons\"\n                       [panel]=\"reasonPanel\"\n                       (onMovePanels)=\"movePanels($event)\"\n                       [CSFilterObj]=\"CSFilterObj\"\n                       [directionComingFrom]=\"directionComingFrom\">\n        </reasons-panel>\n        <time-panel [preference]=\"preference\"\n                    *ngIf=\"currentPanel.panel === panelValues.time\"\n                    [panel]=\"timePanel\"\n                    (onMovePanels)=\"movePanels($event)\"\n                    [CSFilterObj]=\"CSFilterObj\"\n                    [inputValues]=\"inputValues\"\n                    [directionComingFrom]=\"directionComingFrom\">\n        </time-panel>\n        <client-info-panel [preference]=\"preference\"\n                           *ngIf=\"currentPanel.panel === panelValues.clientInfo\"\n                           [panel]=\"clientInfoPanel\"\n                           (onMovePanels)=\"movePanels($event)\"\n                           [CSFilterObj]=\"CSFilterObj\"\n                           [inputValues]=\"inputValues\"\n                           [panels]=\"panels\"\n                           (clearTimePanelForm)=\"clearTimePanelForm($event)\"\n                           [directionComingFrom]=\"directionComingFrom\">\n        </client-info-panel>\n        <confirmation-panel [preference]=\"preference\"\n                            *ngIf=\"currentPanel.panel === panelValues.finalConfirmation\"\n                            [panel]=\"finalConfirmationPanel\"\n                            (onMovePanels)=\"movePanels($event)\"\n                            [CSFilterObj]=\"CSFilterObj\"\n                            [appt]=\"appt\" [multipleAppts]=\"multipleAppts\" [waitLists]=\"waitLists\">\n        </confirmation-panel>\n    </mat-card>\n    <mat-card *ngIf=\"dataLoaded && preference.booleanMap.businessInfoVisible && responsiveService.onMobileViewPort && !isEmbedded\"\n              backgroundStyling containerId=\"businessInfo\"\n              id=\"businessInfo\" class=\"mt-5\">\n        <mat-card-content>\n            <div [innerHTML]=\"preference.labelMap.businessInfoText | safeHtml\"></div>\n        </mat-card-content>\n    </mat-card>\n</div>\n<div class=\"row policy-row\" *ngIf=\"dataLoaded && preference.booleanMap.policyVisible && !isEmbedded\">\n    <mat-card  id=\"policy\" class=\"col-12 mt-5\" backgroundStyling containerId=\"policy\">\n        <mat-card-content>\n            <div [innerHTML]=\"preference.labelMap.policyText | safeHtml\"></div>\n        </mat-card-content>\n    </mat-card>\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/screening-question/screening-question.component.html":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/screening-question/screening-question.component.html ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 mat-dialog-title id=\"screeningQuestionTitle\">{{screeningQuestion.name}}</h1>\n<mat-dialog-content>\n    <div *ngIf=\"screeningQuestionStatus !== 'fail'\" id=\"screeningQuestionPrompt\" [innerHTML]=\"screeningQuestion.question | safeHtml\"></div>\n    <div *ngIf=\"screeningQuestionStatus === 'fail'\" id=\"screeningQuestionFailResponse\"\n         class=\"alert\" appAlert baseStyle=\"error\" [innerHTML]=\"screeningQuestion.failResponse\">\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions *ngIf=\"screeningQuestionStatus !== 'fail'\">\n    <div class=\"col-6\">\n        <button type=\"button\"\n                id=\"screeningQuestionFailBtn\"\n                mat-stroked-button\n                class=\"btn\" buttonStyling baseStyle=\"basic\" fullHeight=\"true\" catchOverflow=\"true\"\n                (click)=\"answerScreeningQuestion('fail')\">\n            {{screeningQuestion.failButton}}\n        </button>\n    </div>\n    <div class=\"col-6\">\n        <button type=\"button\"\n                id=\"screeningQuestionPassBtn\"\n                mat-stroked-button\n                class=\"btn\" buttonStyling baseStyle=\"primary\" fullHeight=\"true\" catchOverflow=\"true\"\n                (click)=\"answerScreeningQuestion('pass')\">\n            {{screeningQuestion.passButton}}\n        </button>\n    </div>\n</mat-dialog-actions>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/staff/staff.component.html":
/*!********************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/staff/staff.component.html ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<scheduler-title-bar *ngIf=\"!preference.schedButtonsTopNav\"\n                     [preference]=\"preference\"\n                     titleProperty=\"{{panel.panelTitleProperty}}\"\n                     titleId=\"{{panel.panelTitleProperty}}\">\n</scheduler-title-bar>\n<scheduler-footer  *ngIf=\"preference.schedButtonsTopNav\" [preference]=\"preference\"\n                   [showBackButton]=\"showBackButton\"\n                   (onMovePanels)=\"movePanels($event)\"\n                   [formGroup]=\"panel.formGroup\"\n                   nextBtnId=\"nextBtn\" [pageLoaded]=\"true\"\n                   nextBtnLabelProp=\"labelNext\" titleProperty=\"{{panel.panelTitleProperty}}\"\n                   titleId=\"{{panel.panelTitleProperty}}\">\n</scheduler-footer>\n<mat-card-content class=\"schedulerPanelBody\">\n    <div class=\"row schedulerPanelLoading\" *ngIf=\"!staffLoaded && !errorLoading\">\n        <mat-progress-spinner mode=\"indeterminate\" value=\"50\" class=\"loadingSpinner\"></mat-progress-spinner><span class=\"spinnerText\">Loading...</span>\n    </div>\n    <div class=\"alert\" appAlert baseStyle=\"error\" *ngIf=\"errorLoading\">\n        {{preference.labelMap[panel.panelErrorLoadingProperty]}}\n    </div>\n    <zip-code-filter *ngIf=\"staffLoaded && !errorLoading && preference.filterMode===2 && totalStaffLength > 0\"\n                     [preference]=\"preference\"\n                     [CSFilterObj]=\"CSFilterObj\"\n                     [filterMode]=\"2\" [searching]=\"searchingStaff\"\n                     (onSearchObjects)=\"getStaff(CSFilterObj, true)\">\n    </zip-code-filter>\n    <div id=\"{{panel.panelTextProperty}}\" class=\"panelTopDescriptionText\"\n         *ngIf=\"staffLoaded && !errorLoading && preference.labelMap[panel.panelTextProperty] !== null\"\n         [innerHTML]=\"preference.labelMap[panel.panelTextProperty] | safeHtml\"></div>\n    <div class=\"row schedulerPanelLoading\" *ngIf=\"searchingStaff\">\n        <mat-progress-spinner mode=\"indeterminate\" value=\"50\" class=\"loadingSpinner\"></mat-progress-spinner><span class=\"spinnerText\">Loading...</span>\n    </div>\n    <form [formGroup]=\"panel.formGroup\" *ngIf=\"staffLoaded && !errorLoading && !searchingStaff\">\n        <div class=\"alert\" role=\"alert\" appAlert baseStyle=\"info\" *ngIf=\"staffs.length===0\">\n            <span *ngIf=\"CSFilterObj.filterStaff !== undefined && CSFilterObj.filterStaff !== null && CSFilterObj.filterStaff !== ''; else showNoStaffAvail\">\n                {{staffPnlNoStaffFilterSearchMsg}}\n            </span>\n            <ng-template #showNoStaffAvail>{{preference.labelMap.noStaffError}}</ng-template>\n        </div>\n        <scheduler-list-items *ngIf=\"staffs.length > 0\" [listItems]=\"staffs\" [preference]=\"preference\" (onSelectItem)=\"selectSchedulingObject($event)\"\n            listItemType=\"staff\" idProp=\"professionalId\" titleProp=\"fullName\" descriptionProp=\"staffProfile\" imageProp=\"imageUrl\">\n        </scheduler-list-items>\n    </form>\n</mat-card-content>\n<scheduler-footer *ngIf=\"!preference.schedButtonsTopNav\" [preference]=\"preference\"\n                  [showBackButton]=\"showBackButton\"\n                  (onMovePanels)=\"movePanels($event)\"\n                  [formGroup]=\"panel.formGroup\"\n                  nextBtnId=\"nextBtn\" [pageLoaded]=\"true\"\n                  nextBtnLabelProp=\"labelNext\">\n</scheduler-footer>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/time/calendar/calendar.component.html":
/*!*******************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/time/calendar/calendar.component.html ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\n    <div class=\"col-2 text-center\">\n        <button class=\"btn btn-default\" (click)=\"previousMonth(currentMonthData)\" [disabled]=\"!allowGetPrevMonth\" aria-label=\"Previous Month\">\n            <i class=\"fa fa-chevron-left\"></i>\n        </button>\n    </div>\n    <div class=\"text-center col-8\">\n        <h3 id=\"calendarMonthLabel\">\n            {{currentMonthData.startDateOfMonth | date:'MMMM yyyy':'':timeService.locale}}\n        </h3>\n    </div>\n    <div class=\"col-2 text-center\" id=\"nextMonthButton\">\n        <button class=\"btn btn-default\" (click)=\"nextMonth(currentMonthData, 'nextMonth')\" [disabled]=\"!allowGetNextMonth\" aria-label=\"Next Month\">\n            <i class=\"fa fa-chevron-right\"></i>\n        </button>\n    </div>\n</div>\n<div class=\"row schedulerPanelLoading\" *ngIf=\"!monthAvailabilityLoaded && !errorLoading\">\n    <mat-progress-spinner mode=\"indeterminate\" value=\"50\" class=\"loadingSpinner\"></mat-progress-spinner><span class=\"spinnerText\">Loading...</span>\n</div>\n<div class=\"row calendarHeader\" *ngIf=\"monthAvailabilityLoaded\">\n    <div class=\"daySpan2 col-xs-2\" *ngFor=\"let weekday of weekdays\">\n        {{weekday}}\n    </div>\n</div>\n<div id=\"calendarBox\" *ngIf=\"monthAvailabilityLoaded\">\n    <div class=\"day dayBox\" *ngFor=\"let day of monthDays\" [tabIndex]=\"day.available ? 0 : -1\" (keyup.enter)=\"setDay(day)\"\n         backgroundStyling [containerClass]=\"day.dayNumInMonth===activeDay && !disableDateClicking ? 'selectedDayOnCalendar' : day.available ? 'dayHasAvailability' : 'noAvailabilityOnDay'\"\n         [defaultColor]=\"day.dayNumInMonth===activeDay && !disableDateClicking ? '#1C827C' : day.available ? '#6BC7C1' : 'transparent'\"\n         [ngClass]=\"{'dayHasAvailability': day.available, 'noAvailabilityOnDay': !day.available, 'selectedDayOnCalendar': day.dayNumInMonth===activeDay && !disableDateClicking, 'disableDateClicking': disableDateClicking}\" (click)=\"setDay(day)\">\n        <div textFormatting  [textClass]=\"day.dayNumInMonth===activeDay && !disableDateClicking ? 'selectedDayOnCalendar' : day.available ? 'dayHasAvailability' : 'noAvailabilityOnDay'\"\n             [inheritedColorOverride]=\"day.dayNumInMonth===activeDay && !disableDateClicking ? '#ffffff' : '#000000'\"\n             [ngClass]=\"{'blankTxt': !day.isDayInMonth}\" style=\"padding:10px\">\n            {{day.dayNumInMonth}}\n        </div>\n    </div>\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/time/time-cart/time-cart.component.html":
/*!*********************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/time/time-cart/time-cart.component.html ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 mat-dialog-title id=\"timeCartTitle\">{{preference.labelMap.timePnlCartTitle}}</h1>\n<mat-dialog-content>\n    <div id=\"timeCartDescription\" class=\"mat-dialog-desc\">{{preference.labelMap.timePnlCartDescription}}</div>\n    <div class=\"alert\" appAlert baseStyle=\"error\" *ngIf=\"selectedTimesCount === 0\">{{preference.labelMap.timePnlCartNoTimesSelected}}</div>\n    <span *ngIf=\"selectedTimesCount > 0\">\n        <span *ngIf=\"bookingTimeList.length > 0\">\n            <h3 id=\"bookingTimesTitle\">{{preference.labelMap.timePnlCartBookingTimesListTitle}}</h3>\n            <div *ngFor=\"let time of bookingTimeList; index as i\" class=\"timeList mat-dialog-desc\">\n                {{time.cartDisplayStartDateTime | date: 'shortDate':'UTC':locale}} at\n                <time-slot-display [time]=\"time\" [startTimeProperty]=\"'cartDisplayStartDateTime'\" [endTimeProperty]=\"'cartDisplayEndDateTime'\" [reason]=\"reason\">\n                </time-slot-display>\n<!--                <stroked-button btnClass=\"timeCartRemoveBtn\" (click)=\"removeTime(time)\" [btnSm]=\"true\"-->\n<!--                                btnLabel=\"{{preference.labelMap.timePnlCartRemoveBtnLabel}}\" baseStyle=\"error\">-->\n<!--                </stroked-button>-->\n                <button type=\"button\" mat-stroked-button buttonStyling baseStyle=\"error\" btnClass=\"timeCartRemoveBtn\"\n                        class=\"btn timeCartRemoveBtn\"\n                        (click)=\"removeTime(time)\">\n                    {{preference.labelMap.timePnlCartRemoveBtnLabel}}\n                </button>\n            </div>\n        </span>\n        <span *ngIf=\"waitlistTimeList.length > 0\">\n            <h3 id=\"waitlistTimeListTitle\">{{preference.labelMap.timePnlCartWaitlistTimesListTitle}}</h3>\n            <div *ngFor=\"let time of waitlistTimeList; index as i\" class=\"timeList mat-dialog-desc\">\n                <span *ngIf=\"!time.isWaitListFirstAvail\">\n                    {{time.cartDisplayStartDateTime | date: 'shortDate':'UTC':locale}} at\n                    <time-slot-display [time]=\"time\" [startTimeProperty]=\"'cartDisplayStartDateTime'\" [endTimeProperty]=\"'cartDisplayEndDateTime'\" [reason]=\"reason\">\n                    </time-slot-display>\n                </span>\n                <span *ngIf=\"time.isWaitListFirstAvail\">\n                    {{preference.labelMap.waitListFirstAvailableInTimeCart}}\n                </span>\n<!--                <stroked-button btnClass=\"timeCartRemoveBtn\" (click)=\"removeTime(time)\" [btnSm]=\"true\" classesToApply=\"timeCartRemoveBtn\"-->\n<!--                                btnLabel=\"{{preference.labelMap.timePnlCartRemoveBtnLabel}}\" baseStyle=\"error\">-->\n<!--                </stroked-button>-->\n                <button type=\"button\" mat-stroked-button buttonStyling baseStyle=\"error\" btnClass=\"timeCartRemoveBtn\"\n                        class=\"btn timeCartRemoveBtn\"\n                        (click)=\"removeTime(time)\">\n                    {{preference.labelMap.timePnlCartRemoveBtnLabel}}\n                </button>\n            </div>\n        </span>\n    </span>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <button type=\"button\"\n            id=\"timePnlCartCloseBtn\"\n            class=\"btn\"\n            mat-stroked-button buttonStyling baseStyle=\"basic\"\n            (click)=\"closeTimePanelCart()\">\n        {{preference.labelMap.timePnlCartCloseBtnLabel}}\n    </button>\n<!--    <stroked-button btnId=\"timePnlCartCloseBtn\" (click)=\"closeTimePanelCart()\" [btnSm]=\"true\"-->\n<!--                    btnLabel=\"{{preference.labelMap.timePnlCartCloseBtnLabel}}\" baseStyle=\"basic\">-->\n<!--    </stroked-button>-->\n</mat-dialog-actions>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/time/time-slot-display/time-slot-display.component.html":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/time/time-slot-display/time-slot-display.component.html ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!--    {{time[startTimeProperty] | date:'shortTime':timeZoneForMoment:locale}}--><!--        - {{time[endTimeProperty] | date:'shortTime':timeZoneForMoment:locale}}-->\n<span class=\"timeDisplayLabel\">{{startTimeDisplay}}<span *ngIf=\"!preference.showOnlyStartTime\"> - {{endTimeDisplay}}</span></span>\n<span class=\"timeDisplayRoomNumber\" *ngIf=\"preference.showClassRoomOnTimePanel && time.roomNumber !== undefined && time.roomNumber !== null && time.roomNumber !== ''\">, {{time.roomNumber}}</span>\n<mat-chip class=\"seatsChipInfo\" *ngIf=\"preference.showOpenSlots && reason.reasonType === 'CLASS' && time.maxCapacity\" (click)=\"seatsLabelSelected.emit()\"\n          ttChip [baseStyle]=\"time.maxCapacity - time.currentCapacity > 0 ? 'basic': 'warning'\"\n          [chipClass]=\"time.maxCapacity - time.currentCapacity > 0 ? 'openSeatsChip': 'waitListSeatsChip'\"\n          [ngClass]=\"{'openSeatsChip': time.maxCapacity - time.currentCapacity > 0, 'waitListSeatsChip': time.maxCapacity - time.currentCapacity <= 0}\">\n    <span *ngIf=\"time.maxCapacity - time.currentCapacity > 0\">{{time.maxCapacity - time.currentCapacity}} {{preference.labelMap.timePnlSeatsLabel}}</span>\n    <span *ngIf=\"time.maxCapacity - time.currentCapacity <= 0\">{{preference.labelMap.timePnlSeatsFullJoinWaitlist}}</span>\n</mat-chip>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/time/time.component.html":
/*!******************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/time/time.component.html ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<scheduler-title-bar *ngIf=\"!preference.schedButtonsTopNav\"\n                     [preference]=\"preference\"\n                     titleProperty=\"{{panel.panelTitleProperty}}\"\n                     titleId=\"{{panel.panelTitleProperty}}\">\n</scheduler-title-bar>\n<scheduler-footer  *ngIf=\"preference.schedButtonsTopNav\" [preference]=\"preference\"\n                   [showBackButton]=\"showBackButton\"\n                   (onMovePanels)=\"movePanels($event)\"\n                   [formGroup]=\"panel.formGroup\"\n                   nextBtnId=\"nextBtn\" [pageLoaded]=\"monthAvailabilityLoaded && dayAvailabilityLoaded\"\n                   nextBtnLabelProp=\"labelNext\" titleProperty=\"{{panel.panelTitleProperty}}\"\n                   titleId=\"{{panel.panelTitleProperty}}\">\n</scheduler-footer>\n\n<mat-card-content class=\"schedulerPanelBody\">\n    <div id=\"bookingSummary\" class=\"panelTopDescriptionText\" *ngIf=\"preference.labelMap.timePnlBookingSummary !== '' && !noAppointmentsAvailable\" [innerHTML]=\"timePnlBookingSummary | safeHtml\"></div>\n    <div id=\"{{panel.panelTextProperty}}\" class=\"panelTopDescriptionText\" *ngIf=\"!noAppointmentsAvailable && timePnlHeaderText !== null\" [innerHTML]=\"timePnlHeaderText | safeHtml\"></div>\n    <div id=\"waitListFirstAvailableSection\"\n         *ngIf=\"availabilityService.waitListMode && preference.waitListFirstAvailable\">\n        <button type=\"button\"\n                id=\"waitListFirstAvailableBtn\"\n                class=\"btn btn-sm\"\n                mat-stroked-button buttonStyling baseStyle=\"accent\"\n                (click)=\"setWaitListFirstAvailable()\">\n            <i class=\"far\" [ngClass]=\"{'fa-square': !waitListNotifyFirstAvail, 'fa-check-square': waitListNotifyFirstAvail}\"></i> {{preference.labelMap.waitListFirstAvailableText}}\n        </button>\n    </div>\n    <div class=\"schedulerPanelLoading\" *ngIf=\"!availabilityLoaded && !errorLoading\" >\n        <mat-progress-spinner mode=\"indeterminate\" value=\"50\" class=\"loadingSpinner\"></mat-progress-spinner><span class=\"spinnerText\">Loading...</span>\n    </div>\n    <div class=\"alert panelTopDescriptionText\" appAlert baseStyle=\"error\" *ngIf=\"errorLoading\">\n        {{preference.labelMap[panel.panelErrorLoadingProperty]}}\n    </div>\n\n\n    <div class=\"row\" id=\"calendarTimes\" *ngIf=\"availabilityLoaded && selectedReason.reasonType !== 'COURSE' && !noAppointmentsAvailable && !showRepeatingServiceBooking\">\n        <div class=\"col-md-6 col-xs-12\" *ngIf=\"showClassCalendar\">\n            <div class=\"row calendar-label\">\n                <div class=\"col-12\">\n                    <label>{{preference.labelMap.timePnlCalendarLabel}}</label>\n                </div>\n            </div>\n            <time-calendar (onChangeMonths)=\"onGetMonthlyAvailability($event)\" (onSetDay)=\"onSetDay($event)\"\n                           [monthAvailabilityLoaded]=\"monthAvailabilityLoaded\" [errorLoading]=\"errorLoading\"\n                           [monthAvailability]=\"monthAvailability\" [selectedDate]=\"selectedDate\" [disableDateClicking]=\"false\"\n                           [maxBookingDate]=\"availabilityService.maxBookingDate\" [minBookingDate]=\"availabilityService.minBookingDate\">\n            </time-calendar>\n            <div *ngIf=\"waitListText !== null && directionComingFrom !== 'reschedule'\" class=\"waitListToggle\">\n                <a (click)=\"toggleWaitListMode()\" [innerHTML]=\"waitListText | safeHtml\" id=\"waitListText\" appLink linkId=\"waitListText\"></a>\n            </div>\n        </div>\n        <div class=\"col-xs-12\" [ngClass]=\"{'mt-3': responsiveService.innerWidth <= responsiveService.smScreenBreakPoint, 'col-md-6': showClassCalendar, 'col-md-12': !showClassCalendar}\">\n            <div class=\"row calendar-label\">\n                <div class=\"col-12\">\n                    <button type=\"button\"  *ngIf=\"((this.selectedReason.bookMultipleAppts || selectedReason.allowWaitList) && directionComingFrom !== 'reschedule') && timePnlSelectedTimesBtnLabel && timePnlSelectedTimesBtnLabel !== ''\"\n                            id=\"selectedTimesBtn\"\n                            class=\"btn btn-sm\"\n                            mat-stroked-button buttonStyling baseStyle=\"accent\"\n                            (click)=\"showSelectedTimes()\">\n                        {{timePnlSelectedTimesBtnLabel}}\n                    </button>\n                    <label *ngIf=\"showClassCalendar\" class=\"selectTimeLabel\">\n                        {{preference.labelMap.timePnlSelectTimeLabel}}\n                        <span *ngIf=\"monthHasAvailability\" [ngClass]=\"{'selectTimesMobileAdjustTimesBtn': this.responsiveService.onMobileViewPort && (this.selectedReason.bookMultipleAppts || selectedReason.allowWaitList) && directionComingFrom !== 'reschedule'}\">\n                            {{selectedDate.date | date:'mediumDate':'UTC':timeService.locale}}\n                        </span>\n                    </label>\n                    <label *ngIf=\"!showClassCalendar\" class=\"selectTimeLabel\">\n                        {{preference.labelMap.timePnlSelectTimeNoClassCalendarLabel}}\n                    </label>\n                    <timezone-selector [clientTimeZone]=\"CSFilterObj.clientTimeZone\" (getMonthDates)=\"timeZoneChanged($event)\"></timezone-selector>\n                </div>\n            </div>\n            <span *ngIf=\"!dayAvailabilityLoaded && monthAvailabilityLoaded\">\n                <i class=\"fa fa-spinner fa-spin fa-fw\"></i> {{preference.labelMap.timePnlLoadingTimesLabel}}\n            </span>\n            <span *ngIf=\"dayAvailabilityLoaded && !monthHasAvailability\">\n                <div class=\"errorText\">\n                    {{preference.labelMap.timePnlNoTimesAvailOnSelectMonth}}\n                </div>\n            </span>\n            <span *ngIf=\"dayAvailabilityLoaded && selectedReason.reasonType === 'SERVICE' && dateAvailability.timeSlots.length > 0\">\n                <div class=\"row time-list\" *ngFor=\"let time of dateAvailability.timeSlots\">\n                    <mat-radio-group class=\"col-12\" [(ngModel)]=\"selectedTime\" (click)=\"setDayTime(time, 'onSelection')\" (keyup.enter)=\"setDayTime(time, 'onSelection')\"\n                                     *ngIf=\"(!selectedReason.bookMultipleAppts || directionComingFrom === 'reschedule') && !availabilityService.waitListMode && !time.duplicate\">\n                        <mat-radio-button id=\"{{time.htmlId}}\" class=\"mat-radio-button-tt\" [value]=\"time\">\n                            <time-slot-display [time]=\"time\" [selectedDate]=\"dateAvailability.date\"\n                                               [startTimeProperty]=\"'startTimeDateForTimeslotDisplay'\" [endTimeProperty]=\"'endTimeDateForTimeslotDisplay'\"\n                                               [reason]=\"selectedReason\" [timeZoneCode]=\"CSFilterObj.clientTimeZone\">\n                            </time-slot-display>\n                        </mat-radio-button>\n                    </mat-radio-group>\n                    <mat-checkbox id=\"{{time.htmlId}}\" class=\"col-12\" [(ngModel)]=\"time.selected\"\n                                  (change)=\"setDayTime(time, 'onSelection', $event)\" (keyup.space)=\"setDayTime(time, 'onSelection', $event)\"\n                                  *ngIf=\"((selectedReason.bookMultipleAppts && directionComingFrom !== 'reschedule') || availabilityService.waitListMode) && !time.duplicate\"\n                                  [disabled]=\"waitListNotifyFirstAvail && availabilityService.waitListMode\" class=\"mat-checkbox-tt\">\n                        <time-slot-display [time]=\"time\" [selectedDate]=\"dateAvailability.date\"\n                                           [startTimeProperty]=\"'startTimeDateForTimeslotDisplay'\" [endTimeProperty]=\"'endTimeDateForTimeslotDisplay'\"\n                                           [reason]=\"selectedReason\" [timeZoneCode]=\"CSFilterObj.clientTimeZone\">\n                        </time-slot-display>\n                    </mat-checkbox>\n                </div>\n            </span>\n            <span *ngIf=\"dayAvailabilityLoaded && selectedReason.reasonType === 'CLASS' && classSessions.length > 0\">\n                <div class=\"row time-list\" *ngFor=\"let session of classSessions\">\n                    <mat-radio-group id=\"{{session.classScheduleId}}\" class=\"col-12\" [(ngModel)]=\"selectedSession\"\n                                     (click)=\"setClassSession(session,'onSelection')\" (keyup.enter)=\"setClassSession(session, 'onSelection')\"\n                                     *ngIf=\"(!selectedReason.bookMultipleAppts || directionComingFrom === 'reschedule') && !availabilityService.waitListMode\">\n                        <mat-radio-button class=\"mat-radio-button-tt\" [value]=\"session\">\n                            <time-slot-display  [time]=\"session\" [selectedDate]=\"session.stringDate\" (seatsLabelSelected)=\"setClassSession(session, 'onSelection')\"\n                                               [startTimeProperty]=\"'startDateTimeUTC'\"  [endTimeProperty]=\"'endDateTimeUTC'\"\n                                               [reason]=\"selectedReason\" [timeZoneCode]=\"CSFilterObj.clientTimeZone\">\n                            </time-slot-display>\n                        </mat-radio-button>\n                    </mat-radio-group>\n                    <mat-checkbox id=\"{{session.classScheduleId}}\" class=\"col-12 mat-checkbox-tt\" [(ngModel)]=\"session.selected\"\n                                  (change)=\"setClassSession(session, 'onSelection', $event)\" (keyup.space)=\"setClassSession(session, 'onSelection', $event)\"\n                                  *ngIf=\"((selectedReason.bookMultipleAppts && directionComingFrom !== 'reschedule') || availabilityService.waitListMode)\">\n                        <time-slot-display [time]=\"session\" [selectedDate]=\"session.stringDate\" (seatsLabelSelected)=\"setClassSession(session, 'onSelection')\"\n                                           [startTimeProperty]=\"'startDateTimeUTC'\" [endTimeProperty]=\"'endDateTimeUTC'\"\n                                           [reason]=\"selectedReason\" [timeZoneCode]=\"CSFilterObj.clientTimeZone\">\n                        </time-slot-display>\n                    </mat-checkbox>\n                </div>\n            </span>\n            <span *ngIf=\"dayAvailabilityLoaded && monthHasAvailability &&\n                ((selectedReason.reasonType === 'CLASS' && classSessions.length === 0) ||\n                (selectedReason.reasonType === 'SERVICE' && dateAvailability.timeSlots.length === 0))\">\n                {{preference.labelMap.timePnlNoTimesAvailOnSelectDay}}\n            </span>\n        </div>\n    </div>\n    <div class=\"row\" [ngClass]=\"{'mt-15': availabilityService.waitListMode && preference.waitListFirstAvailable}\" *ngIf=\"availabilityLoaded && selectedReason.reasonType === 'COURSE' && (courseHasAvailability || selectedReason.allowWaitList)\">\n        <div class=\"col-12\">\n            <div class=\"row calendar-label\">\n                <div class=\"col-12\">\n                    <button type=\"button\"  *ngIf=\"((this.selectedReason.bookMultipleAppts || selectedReason.allowWaitList) && directionComingFrom !== 'reschedule') && timePnlSelectedTimesBtnLabel && timePnlSelectedTimesBtnLabel !== ''\"\n                            id=\"selectedTimesBtn\"\n                            class=\"btn btn-sm\"\n                            mat-stroked-button buttonStyling baseStyle=\"accent\"\n                            (click)=\"showSelectedTimes()\">\n                        {{timePnlSelectedTimesBtnLabel}}\n                    </button>\n                    <label>{{preference.labelMap.timePnlSelectCourseSetLabel}}</label>\n                    <timezone-selector [clientTimeZone]=\"CSFilterObj.clientTimeZone\" (getMonthDates)=\"timeZoneChanged($event)\"></timezone-selector>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-6 col-12\">\n            <div class=\"row\">\n                <div class=\"col-12\" *ngIf=\"courseSets.length === 0 && selectedReason.allowWaitList\">\n                    <div class=\"errorText\">\n                        {{timePnlNoCourseSetsAvailable}}\n                    </div>\n                </div>\n                <div class=\"col-12\" *ngFor=\"let set of courseSets\" id=\"{{set.recurringClassSchedule.recurringScheduleId}}\">\n                    <mat-radio-group class=\"example-radio-group\" [(ngModel)]=\"selectedSet\" (click)=\"setSelectedSet(set, 'onSelection')\" (keyup.enter)=\"setSelectedSet(set, 'onSelection')\">\n                        <mat-radio-button class=\"mat-radio-button-tt\" [value]=\"set\">\n                            <span class=\"dateDisplayLabel\">{{set.recurringClassSchedule.courseSetName}}: {{set.recurringClassSchedule.startDateZonedDisplay}} - {{set.recurringClassSchedule.endDateZonedDisplay}}</span>\n                            <mat-chip class=\"seatsChipInfo\" *ngIf=\"preference.showOpenSlots\" ttChip baseStyle=\"basic\"\n                                      [chipClass]=\"set.recurringClassSchedule - set.recurringClassSchedule.currentCapacity > 0 ? 'openSeatsChip': 'waitListSeatsChip'\"\n                                      [ngClass]=\"{'openSeatsChip': set.recurringClassSchedule - set.recurringClassSchedule.currentCapacity > 0, 'waitListSeatsChip': set.recurringClassSchedule.maxCapacity - set.recurringClassSchedule.currentCapacity === 0}\">\n                                <span *ngIf=\"set.recurringClassSchedule.maxCapacity - set.recurringClassSchedule.currentCapacity > 0\">{{set.recurringClassSchedule.maxCapacity - set.recurringClassSchedule.currentCapacity}} {{preference.labelMap.timePnlSeatsLabel}}</span>\n                                <span *ngIf=\"set.recurringClassSchedule.maxCapacity - set.recurringClassSchedule.currentCapacity === 0\">{{preference.labelMap.timePnlSeatsFullJoinWaitlist}}</span>\n                            </mat-chip>\n                        </mat-radio-button>\n                        <div *ngIf=\"set === selectedSet\" class=\"selectedSetDescription\">\n                            <ul>\n                                <li *ngFor=\"let session of set.classSessions\">\n                                    {{session.courseSession.name}}:\n                                    {{session.startTimeZonedDisplay}} at\n                                    <time-slot-display [time]=\"session\" [selectedDate]=\"session.stringDate\"\n                                                       [startTimeProperty]=\"'startDateTimeUTC'\"  [endTimeProperty]=\"'endDateTimeUTC'\"\n                                                       [reason]=\"selectedReason\" [timeZoneCode]=\"CSFilterObj.clientTimeZone\">\n                                    </time-slot-display>\n                                </li>\n                                <li *ngIf=\"responsiveService.onMobileViewPort\" class=\"showSetCalendarToggle\">\n                                    <a (click)=\"showMobileSetCalendar = !showMobileSetCalendar\" id=\"showSetCalendar\" appLink linkId=\"showSetCalendar\"\n                                       [innerHTML]=\"showMobileSetCalendar ? preference.labelMap.timePnlHideSetCalendar : preference.labelMap.timePnlShowSetCalendar\"></a>\n                                </li>\n                            </ul>\n                            <time-calendar *ngIf=\"responsiveService.onMobileViewPort && showMobileSetCalendar\"\n                                           (onChangeMonths)=\"moveMonthsSelectedRepeatingSet($event)\"\n                                           [monthAvailabilityLoaded]=\"monthAvailabilityLoaded\" [errorLoading]=\"errorLoading\" [disableDateClicking]=\"true\"\n                                           [monthAvailability]=\"selectedSet.selectedMonthAvailability\" [selectedDate]=\"selectedDate\"\n                                           [maxBookingDate]=\"selectedSet.maxBookingDate\" [minBookingDate]=\"selectedSet.minBookingDate\">\n                            </time-calendar>\n                        </div>\n                    </mat-radio-group>\n                </div>\n                <div class=\"col-12\" *ngIf=\"selectedReason.allowWaitList\">\n                    <div *ngIf=\"waitListText !== null && directionComingFrom !== 'reschedule'\" class=\"waitListToggle\">\n                        <a (click)=\"toggleWaitListMode()\" [innerHTML]=\"waitListText | safeHtml\" id=\"waitListText\" appLink linkId=\"waitListText\"></a>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-6 col-12\" *ngIf=\"!responsiveService.onMobileViewPort && selectedSet\">\n            <time-calendar (onChangeMonths)=\"moveMonthsSelectedRepeatingSet($event)\"\n                           [monthAvailabilityLoaded]=\"monthAvailabilityLoaded\" [errorLoading]=\"errorLoading\" [disableDateClicking]=\"true\"\n                           [monthAvailability]=\"selectedSet.selectedMonthAvailability\" [selectedDate]=\"selectedDate\"\n                           [maxBookingDate]=\"selectedSet.maxBookingDate\" [minBookingDate]=\"selectedSet.minBookingDate\">\n            </time-calendar>\n        </div>\n    </div>\n    <div class=\"row\" *ngIf=\"availabilityLoaded && (selectedReason.reasonType === 'SERVICE' || selectedReason.reasonType === 'CLASS') && showRepeatingServiceBooking\">\n        <div class=\"col-12\">\n            <div class=\"row calendar-label\">\n                <div class=\"col-12\">\n                    <label>\n                        {{preference.labelMap.timePnlSelectRepeatingApptSetLabel}}\n                    </label>\n                    <timezone-selector [clientTimeZone]=\"CSFilterObj.clientTimeZone\" (getMonthDates)=\"getRepeatingApptTimes(this.repeatingApptSelectedDays, this.repeatingApptSelectedStartDate, $event)\"></timezone-selector>\n                    <label id=\"repeatingApptFilterLabel\">\n                        {{repeatingAppointmentFilterSummary}}\n                        <button type=\"button\"\n                                id=\"changeRepeatingApptFilters\"\n                                class=\"btn btn-sm\"\n                                mat-stroked-button buttonStyling baseStyle=\"accent\"\n                                (click)=\"showRepeatingApptFiltersModal('onSelection')\">\n                            {{preference.labelMap.timePnlChangeFiltersBtn}}\n                        </button>\n                    </label>\n\n                </div>\n            </div>\n            <div class=\"row\" *ngIf=\"dayAvailabilityLoaded && monthAvailabilityLoaded && !dayHasAvailability\">\n                <div class=\"col-12 errorText\">\n                    {{preference.labelMap.timePnlRepeatingApptNoTimesAvail}}\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-6 col-12\">\n            <div class=\"row\" *ngIf=\"dayAvailabilityLoaded && monthAvailabilityLoaded && dayHasAvailability\">\n                <div class=\"col-12\" *ngFor=\"let repeatingApptSet of repeatingApptSets\" id=\"{{repeatingApptSet.setId}}\">\n                    <mat-radio-group class=\"example-radio-group\" [(ngModel)]=\"selectedRepeatingApptSet\"\n                                     (click)=\"setSelectedRepeatingSet(repeatingApptSet, 'onSelection')\" (keyup.enter)=\"setSelectedRepeatingSet(repeatingApptSet, 'onSelection')\">\n                        <mat-radio-button class=\"mat-radio-button-tt\" [value]=\"repeatingApptSet\">\n                            <span class=\"dateDisplayLabel\">{{repeatingApptSet.displayLabel}}</span>\n                        </mat-radio-button>\n                        <div *ngIf=\"repeatingApptSet === selectedRepeatingApptSet\" class=\"selectedSetDescription\">\n                            <ul [ngClass]=\"{'showCalendarLinkAtBottom': responsiveService.onMobileViewPort && !showMobileSetCalendar}\">\n                                <li *ngFor=\"let appt of repeatingApptSet.dateTimeList\">\n                                    {{appt.startTimeDateForTimeslotDisplay | date: 'EEE'}}, {{appt.startTimeDateForTimeslotDisplay | date: 'shortDate'}} at\n                                    <time-slot-display [time]=\"appt\" [selectedDate]=\"appt.clientStartDate\"\n                                                       [startTimeProperty]=\"'startTimeDateForTimeslotDisplay'\" [endTimeProperty]=\"'endTimeDateForTimeslotDisplay'\"\n                                                       [reason]=\"selectedReason\" [timeZoneCode]=\"CSFilterObj.clientTimeZone\">\n                                    </time-slot-display>\n                                </li>\n                                <li *ngIf=\"responsiveService.onMobileViewPort\" class=\"showSetCalendarToggle\">\n                                    <a (click)=\"showMobileSetCalendar = !showMobileSetCalendar\" id=\"showSetCalendar\" appLink linkId=\"showSetCalendar\"\n                                       [innerHTML]=\"showMobileSetCalendar ? preference.labelMap.timePnlHideSetCalendar : preference.labelMap.timePnlShowSetCalendar\"></a>\n                                </li>\n                            </ul>\n                            <div *ngIf=\"responsiveService.onMobileViewPort && showMobileSetCalendar\">\n                                <time-calendar *ngIf=\"dayAvailabilityLoaded && monthAvailabilityLoaded && dayHasAvailability && selectedRepeatingApptSet.maxBookingDate !== undefined && selectedRepeatingApptSet.maxBookingDate !== null\"\n                                               (onChangeMonths)=\"moveMonthsSelectedRepeatingSet($event)\"\n                                               [monthAvailabilityLoaded]=\"monthAvailabilityLoaded\" [errorLoading]=\"errorLoading\" [disableDateClicking]=\"true\"\n                                               [monthAvailability]=\"selectedRepeatingApptSet.selectedMonthAvailability\" [selectedDate]=\"selectedDate\"\n                                               [maxBookingDate]=\"selectedRepeatingApptSet.maxBookingDate\" [minBookingDate]=\"selectedRepeatingApptSet.minBookingDate\">\n                                </time-calendar>\n                            </div>\n                        </div>\n                    </mat-radio-group>\n                </div>\n            </div>\n            <div class=\"row\" *ngIf=\"availabilityLoaded && !dayAvailabilityLoaded && !monthAvailabilityLoaded\">\n                <div class=\"schedulerPanelLoading\">\n                    <mat-progress-spinner mode=\"indeterminate\" value=\"50\" class=\"loadingSpinner\"></mat-progress-spinner><span class=\"spinnerText\">Loading...</span>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-6 col-12\" *ngIf=\"!responsiveService.onMobileViewPort\">\n            <time-calendar *ngIf=\"dayAvailabilityLoaded && monthAvailabilityLoaded && dayHasAvailability &&\n                            selectedRepeatingApptSet.maxBookingDate !== undefined && selectedRepeatingApptSet.maxBookingDate !== null\"\n                           (onChangeMonths)=\"moveMonthsSelectedRepeatingSet($event)\"\n                           [monthAvailabilityLoaded]=\"monthAvailabilityLoaded\" [errorLoading]=\"errorLoading\" [disableDateClicking]=\"true\"\n                           [monthAvailability]=\"selectedRepeatingApptSet.selectedMonthAvailability\" [selectedDate]=\"selectedDate\"\n                           [maxBookingDate]=\"selectedRepeatingApptSet.maxBookingDate\" [minBookingDate]=\"selectedRepeatingApptSet.minBookingDate\">\n            </time-calendar>\n        </div>\n    </div>\n</mat-card-content>\n<scheduler-footer *ngIf=\"!preference.schedButtonsTopNav\" [preference]=\"preference\"\n                  [showBackButton]=\"showBackButton\"\n                  (onMovePanels)=\"movePanels($event)\"\n                  [formGroup]=\"panel.formGroup\"\n                  nextBtnId=\"nextBtn\" [pageLoaded]=\"monthAvailabilityLoaded && dayAvailabilityLoaded\"\n                  nextBtnLabelProp=\"labelNext\">\n</scheduler-footer>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/scheduler/welcome/welcome.component.html":
/*!************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/scheduler/welcome/welcome.component.html ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<scheduler-title-bar *ngIf=\"!errorLoading && !preference.schedButtonsTopNav\"\n                     [preference]=\"preference\"\n                     titleProperty=\"{{panel.panelTitleProperty}}\"\n                     titleId=\"{{panel.panelTitleProperty}}\">\n</scheduler-title-bar>\n<scheduler-footer  *ngIf=\"!errorLoading && preference.schedButtonsTopNav\" [preference]=\"preference\"\n                   [showBackButton]=\"showBackButton\"\n                   (onMovePanels)=\"movePanels($event)\"\n                   [formGroup]=\"panel.formGroup\"\n                   nextBtnId=\"nextBtn\" [pageLoaded]=\"true\"\n                   nextBtnLabelProp=\"labelNext\" titleProperty=\"{{panel.panelTitleProperty}}\"\n                   titleId=\"{{panel.panelTitleProperty}}\" [showPoweredByTimeTap]=\"showPoweredByTimeTap\">\n</scheduler-footer>\n<mat-card-content class=\"schedulerPanelBody\">\n    <div *ngIf=\"!errorLoading\" id=\"{{panel.panelTextProperty}}\" [innerHTML]=\"preference.labelMap.welcomeText | safeHtml\"></div>\n    <div class=\"errorText\" *ngIf=\"errorLoading && preference !== undefined\">\n        {{preference.labelMap[panel.panelErrorLoadingProperty]}}\n    </div>\n\n</mat-card-content>\n<scheduler-footer  *ngIf=\"!errorLoading && !preference.schedButtonsTopNav\" [preference]=\"preference\"\n                  [showBackButton]=\"showBackButton\"\n                  (onMovePanels)=\"movePanels($event)\"\n                  [formGroup]=\"panel.formGroup\"\n                   titleId=\"{{panel.panelTitleProperty}}\"\n                  nextBtnId=\"nextBtn\" [pageLoaded]=\"true\"\n                  nextBtnLabelProp=\"labelNext\" [showPoweredByTimeTap]=\"showPoweredByTimeTap\">\n</scheduler-footer>\n<mat-card-actions *ngIf=\"!errorLoading && preference.schedButtonsTopNav && showPoweredByTimeTap\" id=\"schedulerFooter\">\n    <label *ngIf=\"showPoweredByTimeTap && !showBackButton\" id=\"poweredByLabel\" [innerHTML]=\"preference.labelMap.poweredByTimeTap\"></label>\n</mat-card-actions>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/store/cart/cart.component.html":
/*!**************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/store/cart/cart.component.html ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\" *ngIf=\"loadCart\">\n    <div [ngClass]=\"{'col-8': !responsiveService.onMobileViewPort, 'col-12 mb-5': responsiveService.onMobileViewPort}\">\n        <mat-card id=\"cartItemsCard\" class=\"noBorderBottom\">\n            <mat-card-content>\n                <div *ngIf=\"cart.items.length === 0\" class=\"alert\" appAlert baseStyle=\"primary\">\n                    {{preference.labelMap.cartEmptyMsg}}\n                    <a routerLink='../store' routerLinkActive='active'>{{preference.labelMap.cartEmptyShopLinkLabel}}</a>\n                </div>\n                <mat-list *ngIf=\"cart.items.length > 0\">\n                    <mat-list-item *ngFor=\"let item of cart.items; index as i\" [ngClass]=\"{'mat-list-item-mobile': responsiveService.onMobileViewPort}\">\n                        <mat-form-field appearance=\"standard\">\n                            <mat-label>{{preference.labelMap.cartQuantityLabel}}</mat-label>\n                            <mat-select placeholder=\"{{preference.labelMap.cartQuantityLabel}}\"\n                                        (selectionChange)=\"changeCartItemQuantity(item, $event)\"\n                                        [(value)]=\"item.quantityInCart\">\n                                <mat-option *ngFor=\"let quantity of quantities\" [value]=\"quantity\">\n                                    {{quantity}}\n                                </mat-option>\n                            </mat-select>\n                            <mat-hint>\n                                <a (click)=\"removeFromCart(item)\" class=\"removeFromCart\" appLink linkClass=\"removeFromCart\">{{preference.labelMap.cartRemoveLabel}}</a>\n                            </mat-hint>\n                        </mat-form-field>\n                        <img matListAvatar *ngIf=\"item.imageURL !== null\" src=\"{{item.imageURL}}\">\n                        <h4 mat-line>{{item.name}}</h4>\n                        <p mat-line *ngIf=\"item.type==='PACKAGE'\">\n                            {{item.quantityOfAppts}} {{preference.labelMap.packagesAppointmentsLabel}} | {{item.totalPrice | currency:currency.currencyCode}}\n                        </p>\n\n                    </mat-list-item>\n                </mat-list>\n            </mat-card-content>\n        </mat-card>\n    </div>\n    <div [ngClass]=\"{'col-4': !responsiveService.onMobileViewPort, 'col-12': responsiveService.onMobileViewPort}\">\n        <mat-card id=\"cartSummaryCard\">\n            <mat-card-header textFormatting textAlign=\"center\">\n                <mat-card-title>\n                    {{preference.labelMap.cartSummaryTitle}}\n                </mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <div class=\"alert\" appAlert baseStyle=\"info\" *ngIf=\"calculatingCartTotal\">\n                    <i class=\"fa fa-spinner fa-spin fa-fw\"></i> Getting order summary...\n                </div>\n                <mat-list *ngIf=\"!calculatingCartTotal\">\n                    <mat-list-item>\n                        <h6 class=\"summaryLabel\">{{preference.labelMap.cartSubtotalLabel}}</h6>\n                        <h6 class=\"summaryDetail\">{{cart.subTotalAmount | currency:currency.currencyCode}}</h6>\n                    </mat-list-item>\n                    <mat-list-item id=\"couponListItem\" [ngClass]=\"{'applyingCoupon': showDiscountInput, 'couponError': showCouponError}\">\n                        <h6 class=\"summaryLabel\">{{preference.labelMap.cartDiscountsLabel}}</h6>\n                        <h6 class=\"summaryDetail\">\n                            <a (click)=\"showApplyDiscount()\" id=\"applyDiscount\" appLink linkId=\"applyDiscount\" *ngIf=\"!showDiscountInput\">\n                                {{preference.labelMap.cartApplyDiscountLabel}}\n                            </a>\n                            <span *ngIf=\"showDiscountInput\">\n                                {{cart.discountAmount | currency:currency.currencyCode}}\n                            </span>\n                        </h6>\n                        <coupon-search *ngIf=\"showDiscountInput\" [preference]=\"preference\"\n                                       [cartCoupon]=\"true\"\n                                       [subjectServiceProvider]=\"storeService\"\n                                       (onSearchCoupons)=\"applyCouponToLineItems($event)\" outerBoxIdString=\"couponListItem\">\n                        </coupon-search>\n\n                    </mat-list-item>\n                    <mat-list-item>\n                        <h6 class=\"summaryLabel\">{{preference.labelMap.cartTaxLabel}}</h6>\n                        <h6 class=\"summaryDetail\">{{cart.taxAmount | currency:currency.currencyCode}}</h6>\n                    </mat-list-item>\n                    <mat-list-item *ngIf=\"cart.transactionFeeAmount !== null && cart.transactionFeeAmount > 0\">\n                        <h6 class=\"summaryLabel\">{{preference.labelMap.invoiceTransactionFeeLabel}}</h6>\n                        <h6 class=\"summaryDetail\">{{cart.transactionFeeAmount | currency:currency.currencyCode}}</h6>\n                    </mat-list-item>\n                    <mat-list-item>\n                        <h6 class=\"summaryLabel\">{{preference.labelMap.cartTotalLabel}}</h6>\n                        <h6 class=\"summaryDetail\">{{cart.invoiceTotalAmount | currency:currency.currencyCode}}</h6>\n                    </mat-list-item>\n                </mat-list>\n            </mat-card-content>\n            <mat-card-actions *ngIf=\"!calculatingCartTotal\">\n                <button mat-stroked-button id=\"cartCheckoutBtn\" class=\"btn btn-block\" buttonStyling baseStyle=\"primary\" (click)=\"continueToCheckout()\" [disabled]=\"cart.items.length===0\">\n                    {{preference.labelMap.cartCheckoutBtn}}\n                </button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/store/packages/packages.component.html":
/*!**********************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/store/packages/packages.component.html ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card id=\"errorBox\" class=\"col-12 mt-5\" *ngIf=\"errorLoading || packagesLoading\">\n    <mat-card-content>\n        <div *ngIf=\"errorLoading\" class=\"alert\" appAlert baseStyle=\"error\">\n            {{preference.labelMap.packagesErrorLoading}}\n        </div>\n        <div *ngIf=\"packagesLoading\" class=\"alert\" appAlert baseStyle=\"info\">\n            <i class=\"fa fa-spinner fa-spin fa-fw\"></i> {{preference.labelMap.packagesLoadingMsg}}\n        </div>\n    </mat-card-content>\n</mat-card>\n<div class=\"row\" *ngIf=\"packagesLoaded && !errorLoading\">\n    <div *ngFor=\"let pkg of packages\" class=\"mb-4\"\n         [ngClass]=\"{'col-12': styleMap.packages.columns === 1 || responsiveService.onMobileViewPort,\n            'col-6': styleMap.packages.columns === 2 && !responsiveService.onMobileViewPort,\n            'col-4': styleMap.packages.columns === 3 && !responsiveService.onMobileViewPort,\n            'col-3': styleMap.packages.columns === 4 && !responsiveService.onMobileViewPort}\">\n        <mat-card id=\"package{{pkg.packageId}}\" class=\"packageCard\">\n            <mat-card-header>\n                <mat-card-title>{{pkg.packageName}}</mat-card-title>\n                <mat-card-subtitle>{{pkg.quantity}} {{preference.labelMap.packagesAppointmentsLabel}} | {{pkg.price | currency:currency.currencyCode}}</mat-card-subtitle>\n            </mat-card-header>\n            <img *ngIf=\"pkg.imageURL !== undefined && pkg.imageURL !== null\" mat-card-image src=\"{{pkg.imageURL}}\" alt=\"{{pkg.packageName}}\">\n            <mat-card-content>\n                <div *ngIf=\"pkg.description !== undefined && pkg.description !== null\" [innerHTML]=\"pkg.description\"></div>\n                <h6>{{preference.labelMap.packagesIncludedReasonsTitle}}</h6>\n                <ul>\n                    <li *ngFor=\"let reason of pkg.reasonList\">{{reason.reasonDesc}}</li>\n                </ul>\n                <h6 textFormatting displayInline=\"true\">{{preference.labelMap.packagesExpiresAfterLabel}} </h6>\n                <p textFormatting displayInline=\"true\" *ngIf=\"pkg.expireInDays !== null\">{{pkg.expireInDays}} {{preference.labelMap.packagesExpiresAfterDaysLabel}}</p>\n                <p textFormatting displayInline=\"true\" *ngIf=\"pkg.expireInDays === null\" [innerHTML]=\"preference.labelMap.packagesNoExpirationLabel\"></p>\n            </mat-card-content>\n            <mat-card-actions textFormatting>\n                <button (click)=\"storeService.addPackageToCart(pkg)\" [disabled]=\"pkg.showAddedToCartSuccess\"\n                        class=\"btn btn-block addToCartBtn\" mat-stroked-button buttonStyling baseStyle=\"primary\" btnClass=\"addToCartBtn\">\n                    <span *ngIf=\"!pkg.showAddedToCartSuccess\"><i class=\"fas fa-cart-plus\"></i> {{preference.labelMap.addToCartBtn}}</span>\n                    <span *ngIf=\"pkg.showAddedToCartSuccess\"><i class=\"fas fa-check\"></i> {{preference.labelMap.addToCartBtnSuccess}}</span>\n                </button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/store/store.component.html":
/*!**********************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/store/store.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<span *ngIf=\"loadStore\">\n    <packages-list *ngIf=\"displayConfig.packages.enable\"></packages-list>\n</span>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/waitlist/client-waitlist-times/client-waitlist-times-table.component.html":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/waitlist/client-waitlist-times/client-waitlist-times-table.component.html ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"loaded && !loading && appts.data.length > 0\">\n    <mat-table [dataSource]=\"appts\" matSort backgroundStyling defaultColor=\"transparent\">\n        <ng-container  *ngFor=\"let col of columnDefs\" [matColumnDef]=\"col.name\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header>{{ col.title }}</mat-header-cell>\n            <mat-cell *matCellDef=\"let element\" (click)=\"viewWaitlistClaimDetails(element)\">\n                        <span *ngIf=\"col.filter=== undefined\">\n                            {{ dataTablesService.getProperty(element, col.name) }}\n                        </span>\n                <span *ngIf=\"col.filter !== undefined \">\n                            {{ dataTablesService.getFilterDisplay(element, col, selectedClient) }}\n                </span>\n            </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\" *ngIf=\"!responsiveService.onMobileViewPort\">\n            <mat-header-cell *matHeaderCellDef>View Details</mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                <button type=\"button\" mat-stroked-button class=\"viewDetailBtn viewApptDetailBtn\" buttonStyling baseStyle=\"basic\" btnClass=\"viewDetailBtn\"\n                        (click)=\"viewWaitlistClaimDetails(element)\" [innerHTML]=\"preference.labelMap['viewApptDetailBtnLabel'] | safeHtml\">\n                </button>\n            </mat-cell>\n        </ng-container>\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n    </mat-table>\n</div>\n<div *ngIf=\"loaded && !loading && appts.data.length === 0\">\n    <div class=\"alert\" role=\"alert\" appAlert baseStyle=\"info\">\n        {{preference.labelMap['waitlistClaimListNoClaims']}}\n    </div>\n</div>\n<div *ngIf=\"loading\">\n    <div class=\"alert\" role=\"alert\" appAlert baseStyle=\"info\">\n        <i class=\"fa fa-spinner fa-spin fa-fw\"></i> Loading waitlist...\n    </div>\n</div>\n<div class=\"errorText\" *ngIf=\"!loaded && errorLoading && preference === undefined\">\n    {{preference.labelMap.genericErrorMsg}}\n</div>\n<div class=\"errorText\" *ngIf=\"!loaded && errorLoading && preference !== undefined\">\n    {{preference.labelMap.waitlistClaimListErrorLoadingMsg}}\n</div>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/waitlist/client-waitlist-times/client-waitlist-times.component.html":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/waitlist/client-waitlist-times/client-waitlist-times.component.html ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card id=\"waitlistDetail\" class=\"myAccountCard\" *ngIf=\"!showWaitlistSuccess\">\n    <client-account-header headerId=\"waitlistDetailHeader\" *ngIf=\"loaded\"\n                           [preference]=\"preference\"\n                           [showBackButton]=\"false\" [showClientSelector]=\"false\"\n                           titleId=\"waitlistDetailTitle\"\n                           title=\"{{preference.labelMap.waitListAcceptScreenHeader}}\"></client-account-header>\n    <mat-card-content id=\"waitlistDetailText\" class=\"detailViewText\">\n        <client-waitlist-times-table [waitlistClaims]=\"waitlistClaims\" [selectedClient]=\"selectedClient\" [clientHash]=\"clientHash\"></client-waitlist-times-table>\n\n    </mat-card-content>\n\n</mat-card>\n\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/waitlist/confirm-waitlist/claim-waitlist.component.html":
/*!***************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/waitlist/confirm-waitlist/claim-waitlist.component.html ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card id=\"waitlistDetail\" class=\"myAccountCard\" *ngIf=\"!showWaitlistSuccess\"\n          [ngClass]=\"{'noBorderBottom': !waitlistClaimLoaded || (waitlistClaim && waitlistClaim.status !== 'UNCLAIMED')}\">\n    <client-account-header headerId=\"waitlistDetailHeader\" *ngIf=\"waitlistClaimLoaded\"\n                           [preference]=\"preference\"\n                           [showBackButton]=\"showBackButton\" (onGoBack)=\"goBack()\" [showClientSelector]=\"false\"\n                           titleId=\"waitlistDetailTitle\"\n                           title=\"{{waitlistClaimTitle}}\"></client-account-header>\n    <mat-card-content id=\"waitlistDetailText\" class=\"detailViewText\">\n        <div *ngIf=\"waitlistClaimLoaded\" [innerHTML]=\"waitlistClaimText | safeHtml\">\n        </div>\n        <div class=\"alert\" appAlert baseStyle=\"info\" role=\"alert\" *ngIf=\"waitlistClaimLoading\">\n            <i class=\"fa fa-spinner fa-spin fa-fw\"></i> Loading details...\n        </div>\n    </mat-card-content>\n    <mat-card-actions id=\"waitlistDetailFooter\" class=\"actionBtnsCenterFooter myAccountFooter\"\n            *ngIf=\"waitlistClaimLoaded && waitlistClaim && waitlistClaim.status === 'UNCLAIMED'\">\n        <button type=\"button\"\n                id=\"claimWaitlistApptBtn\"\n                [disabled]=\"claimingAppt\"\n                mat-stroked-button buttonStyling baseStyle=\"success\"\n                class=\"btn px-4 mx-4\"\n                (click)=\"claimAppt()\">\n            <i *ngIf=\"claimingAppt\" class=\"fa fa-spinner fa-spin fa-fw\"></i> {{preference.labelMap.waitlistClaimApptBtn}}\n        </button>\n    </mat-card-actions>\n</mat-card>\n<mat-card id=\"waitlistSuccess\" *ngIf=\"showWaitlistSuccess\">\n    <confirmation-panel [preference]=\"preference\"\n                        [panel]=\"finalConfirmationPanel\"\n                        (onMovePanels)=\"goToScheduler()\"\n                        [appt]=\"appt\" [multipleAppts]=\"multipleAppts\">\n    </confirmation-panel>\n</mat-card>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/waitlist/join-wait-list/join-wait-list.component.html":
/*!*************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/waitlist/join-wait-list/join-wait-list.component.html ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card id=\"waitlistDetail\" class=\"myAccountCard\" *ngIf=\"choosingWaitListTimes\">\n    <scheduler-title-bar [preference]=\"preference\" [showPrintButton]=\"false\" printId=\"schedulerBox\"\n                         titleProperty=\"timePnlWaitlistTitle\"\n                         titleId=\"joinWaitListTitle\">\n    </scheduler-title-bar>\n    <mat-card-content id=\"waitlistDetailText\" class=\"detailViewText\">\n        <div id=\"bookingSummary\" class=\"panelTopDescriptionText\" *ngIf=\"joinWaitListDescription && !showNoWaitListReasonsMsg\" [innerHTML]=\"joinWaitListDescription | safeHtml\"></div>\n        <div class=\"schedulerPanelLoading\" *ngIf=\"waitListOptionsLoading\" >\n            <mat-progress-spinner mode=\"indeterminate\" value=\"50\" class=\"loadingSpinner\"></mat-progress-spinner><span class=\"spinnerText\">Loading...</span>\n        </div>\n        <div class=\"alert panelTopDescriptionText\" appAlert baseStyle=\"error\" *ngIf=\"showNoWaitListReasonsMsg\">\n            {{preference.labelMap.joinWaitListNoReasonMsg}}\n        </div>\n        <div class=\"row\" id=\"calendarTimes\" *ngIf=\"!waitListOptionsLoading && !showNoWaitListReasonsMsg\">\n            <div class=\"col-md-6 col-xs-12\">\n                <div class=\"row\">\n                    <div class=\"col-12\" *ngFor=\"let bookingSelection of bookingSelectionFlow\">\n                        <app-booking-object-selector [objectType]=\"objectType\" (changeSelection)=\"configureOnloadAndChanges($event)\" [CSFilterObj]=\"CSFilterObj\"\n                                                     [bookingSelection]=\"bookingSelection\" [bookingSelectionFlow]=\"bookingSelectionFlow\"></app-booking-object-selector>\n                    </div>\n                    <div class=\"col-12\" *ngIf=\"waitListRegistrationDateOptions && waitListRegistrationDateOptions.length > 1\">\n                        <mat-form-field appearance=\"standard\">\n                            <mat-label>Registration Type</mat-label>\n                            <mat-select panelClass=\"schedulerFieldDrpdwn\"\n                                        [required]=\"false\"\n                                        [(value)]=\"waitListRegistrationDateOption\"\n                                        placeholder=\"Registration Type\"\n                                        (selectionChange)=\"setWaitListRegistrationDateOption(waitListRegistrationDateOption)\">\n                                <mat-option *ngFor=\"let optionModel of waitListRegistrationDateOptions; let i = index\" [value]=\"optionModel\">\n                                    {{optionModel.label}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-6 col-xs-12\">\n                <div class=\"row\">\n                    <div class=\"col-12\" *ngIf=\"checkShowDateAndTimeSlotSelector()\">\n                        <app-availability-calendar id=\"availabilityCalendar\" [objectType]=\"objectType\" [editing]=\"true\" [timezone]=\"selectedTimezone\" (onSetDay)=\"configureOnloadAndChanges($event)\"></app-availability-calendar>\n                    </div>\n                    <!--Time slot dropdown-->\n                    <div class=\"col-12\" *ngIf=\"preference.booleanMap && preference.booleanMap.allowWaitListRegistrationOutsideOfAvailability && checkShowDateAndTimeSlotSelector()\">\n                        <mat-form-field appearance=\"standard\">\n                            <mat-label [innerHTML]=\"waitList.reason.reasonType === 'CLASS' ? 'Session Time':'Choose Time Slots'\"></mat-label>\n                            <mat-select panelClass=\"schedulerFieldDrpdwn\"\n                                        [required]=\"false\"\n                                        [(value)]=\"waitListRegistrationTimeOption\"\n                                        [placeholder]=\"waitList.reason.reasonType === 'CLASS' ? 'Session Time':'Choose Time Slots'\"\n                                        (selectionChange)=\"setWaitListRegistrationTimeOption(waitListRegistrationTimeOption)\">\n                                <mat-option *ngFor=\"let optionModel of waitListRegistrationTimeOptions; let i = index\" [value]=\"optionModel\">\n                                    {{optionModel.label}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-12\" *ngIf=\"checkShowChooseTimes(waitListRegistrationTimeOptionValues.BOOKED_TIMES)\">\n                        <div class=\"row\">\n                            <div class=\"col-12\">\n                                <app-field-label [required]=\"true\" class=\"pl-0\" labelAlign=\"left\" label=\"Time Slots\" style=\"display: inline-block; margin-right: 5px;\"></app-field-label>\n                                <label class=\"col-form-label\">\n                                    <timezone-selector [clientTimeZone]=\"CSFilterObj.clientTimeZone\" [showBreak]=\"false\"\n                                                   (getMonthDates)=\"timeZoneChanged($event)\"></timezone-selector>\n                                </label>\n                            </div>\n                        </div>\n                        <div class=\"col-9\">\n                            <app-timeslot-multi-select #timeslotMultiSelectComponent (storeTimeSlots)=\"storeTimeSlots($event)\" [editing]=\"true\" [objectType]=\"objectType\"></app-timeslot-multi-select>\n                        </div>\n                    </div>\n                    <div class=\"col-12\" *ngIf=\"checkShowAddTimeButton()\" style=\"margin-bottom: 15px;\">\n                        <timezone-selector [clientTimeZone]=\"CSFilterObj.clientTimeZone\" [showBreak]=\"false\"\n                                           (getMonthDates)=\"timeZoneChanged($event)\"></timezone-selector>\n                    </div>\n                    <div class=\"col-12\" *ngIf=\"checkShowChooseTimes(waitListRegistrationTimeOptionValues.CUSTOM_TIME)\">\n                        <div class=\"row\">\n                            <div class=\"col-6\">\n                                <app-field-label [required]=\"true\" class=\"col-3 pl-0\" labelAlign=\"left\" label=\"Start Time\"></app-field-label>\n                                <div class=\"col-9 col-sm-3 timeSelector\">\n                                    <app-time-picker [time]=\"customTimeSlot.startTime\" [editing]=\"true\" ariaLabel=\"Start Time\" (timeChanged)=\"timeChanged($event, 'startTime')\"></app-time-picker>\n                                </div>\n                            </div>\n                            <div class=\"col-6\">\n                                <app-field-label [required]=\"true\" class=\"col-3 pl-0\" labelAlign=\"left\" label=\"End Time\"></app-field-label>\n                                <div class=\"col-9 col-sm-3 timeSelector\">\n                                    <app-time-picker [time]=\"customTimeSlot.endTime\" [editing]=\"true\" ariaLabel=\"End Time\" (timeChanged)=\"timeChanged($event, 'endTime')\"></app-time-picker>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-12\" *ngIf=\"checkShowAddTimeButton()\">\n                            <button type=\"button\" class=\"btn btn-block btn-secondary\" (click)=\"addCustomTimeSlot()\">\n                                <tt-button-save [saveText]=\"waitListRegistrationTimeOption.value === waitListRegistrationTimeOptionValues.CUSTOM_TIME ? 'Add Custom Time':'Add All Day'\" errorSavingText=\"Error! Time is already in list.\" savingText=\"Adding...\" savedText=\"Added!\"\n                                                [saved]=\"addedTime\" [showSpinner]=\"true\" [saving]=\"addingTime\" [errorSaving]=\"errorAddingTime\" (onSavedDismissed)=\"addingTimeDismissed()\" (onErrorSavingDismissed)=\"addingTimeDismissed()\">\n                                </tt-button-save>\n                            </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\" id=\"selectedTimes\" *ngIf=\"!waitListOptionsLoading && waitList.waitListDateList && checkShowDateAndTimeTable()\">\n            <div class=\"col-12\">\n                <tt-wait-list-registration-detail-table #waitListDateListTable [waitList]=\"waitList\" [onAddNew]=\"true\"></tt-wait-list-registration-detail-table>\n            </div>\n        </div>\n    </mat-card-content>\n    <mat-card-actions id=\"waitlistDetailFooter\" class=\"actionBtnsCenterFooter myAccountFooter\"\n                      *ngIf=\"waitList\">\n        <button type=\"button\"\n                id=\"claimWaitlistApptBtn\"\n                [disabled]=\"disableSave\"\n                mat-stroked-button buttonStyling baseStyle=\"success\"\n                class=\"btn px-4 mx-4\"\n                (click)=\"joinWaitList()\">\n            <i *ngIf=\"joiningWaitList\" class=\"fa fa-spinner fa-spin fa-fw\"></i> {{joinWaitListBtn}}\n        </button>\n    </mat-card-actions>\n</mat-card>\n<mat-card *ngIf=\"enteringClientInfo || showConfirmation\" id=\"schedulerBox\" backgroundStyling containerId=\"schedulerBox\"\n          [ngClass]=\"{'noBorderBottom': preference.schedButtonsTopNav, 'embeddedView': responsiveService.isEmbedded}\" >\n    <client-info-panel [preference]=\"preference\"\n                       *ngIf=\"enteringClientInfo\"\n                       [panel]=\"clientInfoPanel\"\n                       (onMovePanels)=\"movePanels($event)\"\n                       [CSFilterObj]=\"CSFilterObj\"\n                       [inputValues]=\"inputValues\"\n                       [panels]=\"panels\"\n                       directionComingFrom=\"joinWaitList\">\n    </client-info-panel>\n    <confirmation-panel [preference]=\"preference\"\n                        *ngIf=\"showConfirmation\"\n                        [panel]=\"finalConfirmationPanel\"\n                        (onMovePanels)=\"movePanels($event)\"\n                        [CSFilterObj]=\"CSFilterObj\"\n                        [waitLists]=\"waitLists\" directionComingFrom=\"joinWaitList\">\n    </confirmation-panel>\n</mat-card>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/waitlist/remove-waitlist/remove-waitlist.component.html":
/*!***************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/waitlist/remove-waitlist/remove-waitlist.component.html ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card id=\"waitlistRemove\" class=\"myAccountCard\">\n    <client-account-header headerId=\"waitlistRemoveHeader\" *ngIf=\"waitlistRemoveLoaded\"\n                           [preference]=\"preference\"\n                           [showBackButton]=\"false\" [showClientSelector]=\"false\"\n                           titleId=\"waitlistRemoveTitle\"\n                           title=\"{{waitlistRemoveTitle}}\"></client-account-header>\n    <mat-card-content id=\"waitlistDetailText\" class=\"detailViewText\">\n        <div *ngIf=\"errorRemoving\" class=\"alert alert-error\" role=\"alert\">\n            {{preference.labelMap.waitlistRemoveError}}\n        </div>\n        <div *ngIf=\"errorLoading\" class=\"alert alert-error\" role=\"alert\">\n            {{preference.labelMap.waitlistRemoveLoadError}}\n        </div>\n        <div *ngIf=\"waitlistRemoveLoaded\"  [innerHTML]=\"waitlistRemoveText | safeHtml\">\n        </div>\n        <div class=\"alert\" appAlert baseStyle=\"info\" role=\"alert\" *ngIf=\"waitlistRemoveLoading\">\n            <i class=\"fa fa-spinner fa-spin fa-fw\"></i> Loading details...\n        </div>\n    </mat-card-content>\n    <mat-card-actions *ngIf=\"waitlistRemoveLoaded && waitlist.status !== 'REMOVED'\" id=\"waitlistRemoveFooter\" class=\"actionBtnsCenterFooter myAccountFooter\">\n        <button type=\"button\"\n                id=\"waitlistRemoveBtn\"\n                mat-stroked-button buttonStyling baseStyle=\"error\"\n                [disabled]=\"waitlistRemoving\"\n                class=\"btn btn-sm px-4 mx-4\"\n                (click)=\"removeFromWaitlist()\">\n            <i *ngIf=\"waitlistRemoving\" class=\"fa fa-spinner fa-spin fa-fw\"></i> {{preference.labelMap.waitlistRemoveBtn}}\n        </button>\n<!--        <stroked-button (click)=\"removeFromWaitlist()\" btnId=\"waitlistRemoveBtn\" [btnSm]=\"true\" classesToApply=\"px-4 mx-4\"-->\n<!--                        btnLabel=\"{{preference.labelMap.waitlistRemoveBtn}}\" baseStyle=\"error\"-->\n<!--                        [isDisabled]=\"waitlistRemoving\" [submitting]=\"waitlistRemoving\">-->\n<!--        </stroked-button>-->\n    </mat-card-actions>\n</mat-card>"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/waitlist/wait-list-registration-detail-table/wait-list-registration-detail-table.component.html":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/waitlist/wait-list-registration-detail-table/wait-list-registration-detail-table.component.html ***!
  \*******************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-table [dataSource]=\"elementList\">\n    <ng-container  *ngFor=\"let col of columnDefs\" [matColumnDef]=\"col.name\">\n        <mat-header-cell *matHeaderCellDef>{{ col.title }}</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n                        <span *ngIf=\"col.filter===undefined || col.filter === null\">\n                            {{ dataTablesService.getProperty(element, col.name) }}\n                        </span>\n            <span *ngIf=\"col.filter!== undefined && col.filter !== null\">\n                {{ dataTablesService.getFilterDisplay(element, col) }}\n            </span>\n        </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"actions\">\n        <mat-header-cell *matHeaderCellDef>Actions</mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n            <button class=\"btn btn-secondary btn-hover-secondary btn-sm mr-2\" (click)=\"$event.stopPropagation(); removeTime(element)\">\n                Remove\n            </button>\n        </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"loadingMsg\">\n        <mat-footer-cell *matFooterCellDef [attr.aria-rowspan]=\"displayedColumns.length\">\n            <div class=\"alert\" role=\"alert\" appAlert baseStyle=\"info\">\n                <i class=\"fa fa-spinner fa-spin fa-fw\"></i> Loading waitlist registration dates and times...\n            </div>\n            <div class=\"alert\" role=\"alert\" appAlert baseStyle=\"error\">\n                <i class=\"fa fa-spinner fa-spin fa-fw\"></i> Error loading!\n            </div>\n        </mat-footer-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"noElementsMsg\">\n        <mat-footer-cell *matFooterCellDef [attr.aria-rowspan]=\"displayedColumns.length\">\n            <div class=\"alert\" role=\"alert\" appAlert baseStyle=\"primary\">\n                No dates and times have been added to this wait list registration\n            </div>\n        </mat-footer-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let element; columns: displayedColumns\"\n             class=\"element-row\" [hidden]=\"loading || errorLoading || elementList.data.length === 0\">\n    </mat-row>\n    <mat-footer-row *matFooterRowDef=\"['loadingMsg']\" [hidden]=\"!loading && !errorLoading\"></mat-footer-row>\n    <mat-footer-row *matFooterRowDef=\"['noElementsMsg']\" [hidden]=\"elementList.data.length > 0 || loading || errorLoading\"></mat-footer-row>\n</mat-table>\n"

/***/ }),

/***/ "./node_modules/raw-loader/index.js!./src/app/waitlist/waitlist.component.html":
/*!****************************************************************************!*\
  !*** ./node_modules/raw-loader!./src/app/waitlist/waitlist.component.html ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<router-outlet></router-outlet>"

/***/ }),

/***/ "./package.json":
/*!**********************!*\
  !*** ./package.json ***!
  \**********************/
/*! exports provided: name, version, scripts, private, dependencies, devDependencies, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"name\":\"clientscheduler\",\"version\":\"7.24.0\",\"scripts\":{\"ng\":\"ng\",\"start\":\"ng serve\",\"build\":\"ng build\",\"test\":\"ng test\",\"lint\":\"ng lint\",\"e2e\":\"ng e2e\",\"build_prod\":\"npm run build --prod && npm run minify1  && npm run minify2  && npm run minify3 && npm run minify4\",\"minify1\":\"uglifyjs dist/clientscheduler/vendor.js --screw-ie8 --compress --mangle --output dist/clientscheduler/vendor.min.js\",\"minify2\":\"uglifyjs dist/clientscheduler/main.js --screw-ie8 --compress --mangle --output dist/clientscheduler/main.min.js\",\"minify3\":\"uglifyjs dist/clientscheduler/styles.js --screw-ie8 --compress --mangle --output dist/clientscheduler/styles.min.js\",\"minify4\":\"uglifyjs dist/clientscheduler/polyfills.js --screw-ie8 --compress --mangle --output dist/clientscheduler/polyfills.min.js\"},\"private\":true,\"dependencies\":{\"@agm/core\":\"^1.0.0\",\"@angular/animations\":\"^8.2.2\",\"@angular/cdk\":\"^8.1.3\",\"@angular/common\":\"^8.2.2\",\"@angular/compiler\":\"^8.2.2\",\"@angular/core\":\"^8.2.2\",\"@angular/forms\":\"^8.2.2\",\"@angular/material\":\"^8.1.3\",\"@angular/material-moment-adapter\":\"^8.1.3\",\"@angular/platform-browser\":\"^8.2.2\",\"@angular/platform-browser-dynamic\":\"^8.2.2\",\"@angular/router\":\"^8.2.2\",\"@fullstory/browser\":\"^1.4.9\",\"@ng-bootstrap/ng-bootstrap\":\"^5.1.0\",\"@ngx-translate/core\":\"^11.0.1\",\"@types/file-saver\":\"^2.0.1\",\"@types/stripe\":\"^7.13.4\",\"@types/stripe-checkout\":\"^1.0.3\",\"angular-material-fileupload\":\"^2.0.0\",\"core-js\":\"^2.5.4\",\"es6-promise\":\"^4.2.8\",\"file-saver\":\"^2.0.2\",\"hammerjs\":\"^2.0.8\",\"isomorphic-fetch\":\"^2.2.1\",\"jquery\":\"^3.5.1\",\"jsignature\":\"^2.1.3\",\"lodash\":\"^4.17.15\",\"moment\":\"^2.26.0\",\"moment-timezone\":\"^0.5.26\",\"ngx-bootstrap\":\"^5.5.0\",\"rxjs\":\"~6.5.2\",\"signature_pad\":\"^3.0.0-beta.3\",\"tslib\":\"^1.9.0\",\"zone.js\":\"~0.9.1\"},\"devDependencies\":{\"@angular-devkit/build-angular\":\"~0.802.2\",\"@angular/cli\":\"~8.2.2\",\"@angular/compiler-cli\":\"^8.2.2\",\"@angular/language-service\":\"~9.0.0-next.2\",\"@types/jasmine\":\"~2.8.8\",\"@types/jasminewd2\":\"~2.0.3\",\"@types/jquery\":\"^3.5.0\",\"@types/lodash\":\"^4.14.149\",\"@types/node\":\"~8.9.4\",\"codelyzer\":\"~5.1.0\",\"jasmine-core\":\"~2.99.1\",\"jasmine-spec-reporter\":\"~4.2.1\",\"karma\":\"~4.0.0\",\"karma-chrome-launcher\":\"~2.2.0\",\"karma-coverage-istanbul-reporter\":\"~2.0.1\",\"karma-jasmine\":\"~1.1.2\",\"karma-jasmine-html-reporter\":\"^0.2.2\",\"protractor\":\"~5.4.0\",\"ts-node\":\"~7.0.0\",\"tslint\":\"~5.18.0\",\"typescript\":\"~3.5.3\"}}");

/***/ }),

/***/ "./src/$$_lazy_route_resource lazy recursive":
/*!**********************************************************!*\
  !*** ./src/$$_lazy_route_resource lazy namespace object ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./src/$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "./src/app/api.service.ts":
/*!********************************!*\
  !*** ./src/app/api.service.ts ***!
  \********************************/
/*! exports provided: ApiService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ApiService", function() { return ApiService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var ApiService = /** @class */ (function () {
    function ApiService() {
        try {
            this.apiUrl = sessionStorage.getItem('csAPIBase') + 'cs/';
        }
        catch (e) {
        }
    }
    ApiService.prototype.handleError = function (error) {
        return Promise.reject(error);
    };
    ApiService.prototype.handleErrorOpenModal = function (error, routeToGoTo) {
        console.log(error);
        // this.dataLoadErrorService.openModal(error.error.message, routeToGoTo);
        return Promise.reject(error);
    };
    ApiService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], ApiService);
    return ApiService;
}());



/***/ }),

/***/ "./src/app/app-routing.module.ts":
/*!***************************************!*\
  !*** ./src/app/app-routing.module.ts ***!
  \***************************************/
/*! exports provided: AppRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppRoutingModule", function() { return AppRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _scheduler_scheduler_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scheduler/scheduler.component */ "./src/app/scheduler/scheduler.component.ts");
/* harmony import */ var _client_account_client_account_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./client-account/client-account.component */ "./src/app/client-account/client-account.component.ts");
/* harmony import */ var _auth_auth_guard__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./auth/auth.guard */ "./src/app/auth/auth.guard.ts");
/* harmony import */ var _client_account_view_appointments_view_appointments_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./client-account/view-appointments/view-appointments.component */ "./src/app/client-account/view-appointments/view-appointments.component.ts");
/* harmony import */ var _client_account_client_account_home_client_account_home_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./client-account/client-account-home/client-account-home.component */ "./src/app/client-account/client-account-home/client-account-home.component.ts");
/* harmony import */ var _client_account_view_appointments_booking_object_details_appointment_detail_appointment_detail_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./client-account/view-appointments/booking-object-details/appointment-detail/appointment-detail.component */ "./src/app/client-account/view-appointments/booking-object-details/appointment-detail/appointment-detail.component.ts");
/* harmony import */ var _client_account_view_appointments_view_appointments_list_view_appointments_list_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./client-account/view-appointments/view-appointments-list/view-appointments-list.component */ "./src/app/client-account/view-appointments/view-appointments-list/view-appointments-list.component.ts");
/* harmony import */ var _client_account_view_invoices_view_invoices_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./client-account/view-invoices/view-invoices.component */ "./src/app/client-account/view-invoices/view-invoices.component.ts");
/* harmony import */ var _client_account_view_invoices_view_invoices_list_view_invoices_list_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./client-account/view-invoices/view-invoices-list/view-invoices-list.component */ "./src/app/client-account/view-invoices/view-invoices-list/view-invoices-list.component.ts");
/* harmony import */ var _client_account_view_invoices_invoice_detail_invoice_detail_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./client-account/view-invoices/invoice-detail/invoice-detail.component */ "./src/app/client-account/view-invoices/invoice-detail/invoice-detail.component.ts");
/* harmony import */ var _client_account_client_profile_client_profile_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./client-account/client-profile/client-profile.component */ "./src/app/client-account/client-profile/client-profile.component.ts");
/* harmony import */ var _client_account_client_profile_client_profile_container_client_profile_container_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./client-account/client-profile/client-profile-container/client-profile-container.component */ "./src/app/client-account/client-profile/client-profile-container/client-profile-container.component.ts");
/* harmony import */ var _disclaimer_form_disclaimer_form_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./disclaimer-form/disclaimer-form.component */ "./src/app/disclaimer-form/disclaimer-form.component.ts");
/* harmony import */ var _disclaimer_form_disclaimer_form_detail_disclaimer_form_detail_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./disclaimer-form/disclaimer-form-detail/disclaimer-form-detail.component */ "./src/app/disclaimer-form/disclaimer-form-detail/disclaimer-form-detail.component.ts");
/* harmony import */ var _client_account_view_appointments_booking_object_details_repeating_appointment_detail_repeating_appointment_detail_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./client-account/view-appointments/booking-object-details/repeating-appointment-detail/repeating-appointment-detail.component */ "./src/app/client-account/view-appointments/booking-object-details/repeating-appointment-detail/repeating-appointment-detail.component.ts");
/* harmony import */ var _client_account_view_appointments_booking_object_details_waitlist_registration_detail_waitlist_registration_detail_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./client-account/view-appointments/booking-object-details/waitlist-registration-detail/waitlist-registration-detail.component */ "./src/app/client-account/view-appointments/booking-object-details/waitlist-registration-detail/waitlist-registration-detail.component.ts");
/* harmony import */ var _email_settings_email_settings_container_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./email-settings/email-settings-container.component */ "./src/app/email-settings/email-settings-container.component.ts");
/* harmony import */ var _email_settings_email_settings_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./email-settings/email-settings.component */ "./src/app/email-settings/email-settings.component.ts");





















var routes = [
    { path: '', component: _scheduler_scheduler_component__WEBPACK_IMPORTED_MODULE_3__["SchedulerComponent"] },
    { path: 'scheduler', component: _scheduler_scheduler_component__WEBPACK_IMPORTED_MODULE_3__["SchedulerComponent"] },
    { path: 'invoices', component: _client_account_view_invoices_view_invoices_component__WEBPACK_IMPORTED_MODULE_10__["ViewInvoicesComponent"],
        children: [
            { path: "", component: _client_account_view_invoices_view_invoices_list_view_invoices_list_component__WEBPACK_IMPORTED_MODULE_11__["ViewInvoicesListComponent"] },
            { path: ":invoiceHash", component: _client_account_view_invoices_invoice_detail_invoice_detail_component__WEBPACK_IMPORTED_MODULE_12__["InvoiceDetailComponent"], pathMatch: 'full' }
        ]
    },
    { path: 'emailSettings', component: _email_settings_email_settings_container_component__WEBPACK_IMPORTED_MODULE_19__["EmailSettingsContainerComponent"],
        children: [
            { path: "", component: _email_settings_email_settings_container_component__WEBPACK_IMPORTED_MODULE_19__["EmailSettingsContainerComponent"] },
            { path: ":clientHash", component: _email_settings_email_settings_component__WEBPACK_IMPORTED_MODULE_20__["EmailSettingsComponent"], pathMatch: 'full' }
        ]
    },
    { path: 'forms', component: _disclaimer_form_disclaimer_form_component__WEBPACK_IMPORTED_MODULE_15__["DisclaimerFormComponent"],
        children: [
            { path: "", component: _disclaimer_form_disclaimer_form_component__WEBPACK_IMPORTED_MODULE_15__["DisclaimerFormComponent"] },
            { path: ":disclaimerFormUUID", component: _disclaimer_form_disclaimer_form_detail_disclaimer_form_detail_component__WEBPACK_IMPORTED_MODULE_16__["DisclaimerFormDetailComponent"], pathMatch: 'full' }
        ]
    },
    { path: 'appts', component: _client_account_view_appointments_view_appointments_component__WEBPACK_IMPORTED_MODULE_6__["ViewAppointmentsComponent"],
        children: [
            { path: "", component: _client_account_view_appointments_view_appointments_list_view_appointments_list_component__WEBPACK_IMPORTED_MODULE_9__["ViewAppointmentsListComponent"] },
            { path: ":apptHash", component: _client_account_view_appointments_booking_object_details_appointment_detail_appointment_detail_component__WEBPACK_IMPORTED_MODULE_8__["AppointmentDetailComponent"], pathMatch: 'full' }
        ]
    },
    { path: 'my-account', component: _client_account_client_account_component__WEBPACK_IMPORTED_MODULE_4__["ClientAccountComponent"], canActivate: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_5__["AuthGuard"]],
        children: [
            { path: "", component: _client_account_client_account_home_client_account_home_component__WEBPACK_IMPORTED_MODULE_7__["ClientAccountHomeComponent"] },
            { path: "appts", component: _client_account_view_appointments_view_appointments_component__WEBPACK_IMPORTED_MODULE_6__["ViewAppointmentsComponent"],
                children: [
                    { path: "", component: _client_account_view_appointments_view_appointments_list_view_appointments_list_component__WEBPACK_IMPORTED_MODULE_9__["ViewAppointmentsListComponent"] },
                    { path: ":apptHash", component: _client_account_view_appointments_booking_object_details_appointment_detail_appointment_detail_component__WEBPACK_IMPORTED_MODULE_8__["AppointmentDetailComponent"], pathMatch: 'full' }
                ]
            },
            { path: "repeating", component: _client_account_view_appointments_view_appointments_component__WEBPACK_IMPORTED_MODULE_6__["ViewAppointmentsComponent"],
                children: [
                    { path: "", component: _client_account_view_appointments_view_appointments_list_view_appointments_list_component__WEBPACK_IMPORTED_MODULE_9__["ViewAppointmentsListComponent"] },
                    { path: ":id", component: _client_account_view_appointments_booking_object_details_repeating_appointment_detail_repeating_appointment_detail_component__WEBPACK_IMPORTED_MODULE_17__["RepeatingAppointmentDetailComponent"], pathMatch: 'full' }
                ]
            },
            { path: "waitlistRegistration", component: _client_account_view_appointments_view_appointments_component__WEBPACK_IMPORTED_MODULE_6__["ViewAppointmentsComponent"],
                children: [
                    { path: "", component: _client_account_view_appointments_view_appointments_list_view_appointments_list_component__WEBPACK_IMPORTED_MODULE_9__["ViewAppointmentsListComponent"] },
                    { path: ":waitlistId", component: _client_account_view_appointments_booking_object_details_waitlist_registration_detail_waitlist_registration_detail_component__WEBPACK_IMPORTED_MODULE_18__["WaitlistRegistrationDetailComponent"], pathMatch: 'full' }
                ]
            },
            { path: "invoices", component: _client_account_view_invoices_view_invoices_component__WEBPACK_IMPORTED_MODULE_10__["ViewInvoicesComponent"],
                children: [
                    { path: "", component: _client_account_view_invoices_view_invoices_list_view_invoices_list_component__WEBPACK_IMPORTED_MODULE_11__["ViewInvoicesListComponent"] },
                    { path: ":invoiceHash", component: _client_account_view_invoices_invoice_detail_invoice_detail_component__WEBPACK_IMPORTED_MODULE_12__["InvoiceDetailComponent"], pathMatch: 'full' }
                ]
            },
            { path: 'forms', component: _disclaimer_form_disclaimer_form_component__WEBPACK_IMPORTED_MODULE_15__["DisclaimerFormComponent"],
                children: [
                    { path: "", component: _disclaimer_form_disclaimer_form_component__WEBPACK_IMPORTED_MODULE_15__["DisclaimerFormComponent"] },
                    { path: ":disclaimerFormUUID", component: _disclaimer_form_disclaimer_form_component__WEBPACK_IMPORTED_MODULE_15__["DisclaimerFormComponent"], pathMatch: 'full' }
                ]
            },
            { path: "profile", component: _client_account_client_profile_client_profile_component__WEBPACK_IMPORTED_MODULE_13__["ClientProfileComponent"],
                children: [
                    { path: "", component: _client_account_client_profile_client_profile_container_client_profile_container_component__WEBPACK_IMPORTED_MODULE_14__["ClientProfileContainerComponent"] }
                ]
            }
        ]
    },
];
var AppRoutingModule = /** @class */ (function () {
    function AppRoutingModule() {
    }
    AppRoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forRoot(routes, { useHash: true })],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]],
            providers: [_auth_auth_guard__WEBPACK_IMPORTED_MODULE_5__["AuthGuard"]]
        })
    ], AppRoutingModule);
    return AppRoutingModule;
}());



/***/ }),

/***/ "./src/app/app.component.ts":
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/*! exports provided: AppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function() { return AppComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./business.service */ "./src/app/business.service.ts");
/* harmony import */ var _scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scheduler/client-info/client-info.service */ "./src/app/scheduler/client-info/client-info.service.ts");
/* harmony import */ var rxjs_index__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/index */ "./node_modules/rxjs/index.js");
/* harmony import */ var rxjs_index__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(rxjs_index__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./auth/auth.service */ "./src/app/auth/auth.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _locale_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./locale.service */ "./src/app/locale.service.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _common_classes_label_map_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./common-classes/label-map.service */ "./src/app/common-classes/label-map.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./client-account/client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/material/sidenav */ "./node_modules/@angular/material/esm5/sidenav.es5.js");
/* harmony import */ var _package_json__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../package.json */ "./package.json");
var _package_json__WEBPACK_IMPORTED_MODULE_15___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../../package.json */ "./package.json", 1);
/* harmony import */ var _modernizr_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../modernizr.js */ "./src/modernizr.js");
/* harmony import */ var _modernizr_js__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_modernizr_js__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _styleSheetService__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./styleSheetService */ "./src/app/styleSheetService.ts");
/* harmony import */ var _modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./modals/error-modal/error-modal.component */ "./src/app/modals/error-modal/error-modal.component.ts");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _session_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./session.service */ "./src/app/session.service.ts");
/* harmony import */ var _onload_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./onload.service */ "./src/app/onload.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _mini_website_service__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./mini-website.service */ "./src/app/mini-website.service.ts");
/* harmony import */ var _scheduler_link_service__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./scheduler-link.service */ "./src/app/scheduler-link.service.ts");
/* harmony import */ var _auth_reset_password_reset_password_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./auth/reset-password/reset-password.component */ "./src/app/auth/reset-password/reset-password.component.ts");
















// @ts-ignore













var AppComponent = /** @class */ (function () {
    function AppComponent(businessService, labelMapService, titleService, clientInfoService, clientAccountService, authService, onloadService, sessionService, meta, router, route, localeService, responsiveService, cdRef, tagsService, styleSheetService, dialog, schedulerPreferenceService, miniWebsiteService, schedulerLinkService, _document) {
        this.businessService = businessService;
        this.labelMapService = labelMapService;
        this.titleService = titleService;
        this.clientInfoService = clientInfoService;
        this.clientAccountService = clientAccountService;
        this.authService = authService;
        this.onloadService = onloadService;
        this.sessionService = sessionService;
        this.meta = meta;
        this.router = router;
        this.route = route;
        this.localeService = localeService;
        this.responsiveService = responsiveService;
        this.cdRef = cdRef;
        this.tagsService = tagsService;
        this.styleSheetService = styleSheetService;
        this.dialog = dialog;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.miniWebsiteService = miniWebsiteService;
        this.schedulerLinkService = schedulerLinkService;
        this._document = _document;
        this.currentDate = new Date();
        this.activeYear = this.currentDate.getFullYear();
        this.isLoading = true;
        this.errorLoading = false;
        this.errorMessage = null;
        this.version = _package_json__WEBPACK_IMPORTED_MODULE_15__["version"];
        this.isEmbedded = this.responsiveService.isEmbedded;
        this.sidenavPosition = 'start';
        this.openRegistrationModal = false; // LHB 07/13/2020 TT-6785
        this.bookingNotAllowedSubscription = new rxjs_index__WEBPACK_IMPORTED_MODULE_6__["Subscription"](); // LHB 2/25/2021 TT-7431
        this.state = router.routerState.snapshot;
        var locale = 'en-US';
        var googleAnalyticsCode = null;
        try {
            locale = sessionStorage.getItem('locale');
            googleAnalyticsCode = sessionStorage.getItem("googleAnalyticsCode");
            if (sessionStorage.getItem("browserTimezone") === undefined ||
                sessionStorage.getItem("browserTimezone") === null ||
                sessionStorage.getItem("browserTimezone") === "") { // LHB 08/20/2020 fix for TT-6921
                var timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
                sessionStorage.setItem("timezone", timezone);
                sessionStorage.setItem("browserTimezone", timezone); //TT-6286
            }
        }
        catch (e) {
        }
        localeService.registerCulture(locale);
        if (googleAnalyticsCode !== null && googleAnalyticsCode !== "") {
            this.router.events.subscribe(function (event) {
                if (event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_8__["NavigationEnd"]) {
                    var pagePath = event.urlAfterRedirects;
                    if (pagePath = "/")
                        pagePath = 'scheduler';
                    var code = sessionStorage.getItem("googleAnalyticsCode");
                    gtag('config', code, {
                        'page_path': pagePath,
                        'page_location': window.location.href
                    });
                    pushToParentPage('visit', pagePath, window.location.href);
                }
            });
        }
    }
    AppComponent.prototype.onResize = function (event) {
        this.responsiveService.setInnerWidth();
    };
    AppComponent.prototype.determineSideNavPosition = function () {
        if (!this.isEmbedded && (this.miniWebsite.logoAlign === 'left' || this.miniWebsite.logoAlign === 'center')) {
            this.sidenavPosition = 'end';
            this.cdRef.detectChanges();
        }
    };
    AppComponent.prototype.changeLang = function (language) {
        moment__WEBPACK_IMPORTED_MODULE_10__["locale"](sessionStorage.getItem('locale'));
        this.localeService.registerCulture(sessionStorage.getItem('locale'));
    };
    AppComponent.prototype.createErrorPageLayout = function (errorType, errorMessage) {
        this.businessService.landingPageObjectErrorLoading.next(false);
        this.errorLoading = true;
        this.miniWebsite = this.miniWebsiteService.createErrorMiniWebsite(errorType);
        this.titleService.setTitle(this.miniWebsite.pageTitle);
        if (errorMessage) {
            if (errorType === 'HANDLE_NOT_FOUND')
                this.errorMessage = 'We could not find a booking site with the webhandle: ' + errorMessage + '. Please check your url for typos.';
            else
                this.errorMessage = errorMessage;
        }
        else if (this.businessService.business && this.businessService.business.status !== 'ACTIVE')
            this.errorMessage = 'This scheduling account is no longer active.';
        else {
            switch (errorType) {
                case 'UNPUBLISHED_BOOKING_SITE':
                    this.errorMessage = 'Bookings on this website have been disabled. Please check with the business to see when bookings will be re-enabled.';
                    break;
                case 'HANDLE_NOT_FOUND':
                    this.errorMessage = 'We could not find a booking site at this URL. Please check your url for typos.';
                    break;
                default:
                    this.errorMessage = 'We could not load the requested scheduler at this time. Please refresh the page and try again. If you continue to experience issues, please reach out to support@timetap.com';
            }
        }
        this.isLoading = false;
    };
    AppComponent.prototype.paramsForLoadingUnpublished = function () {
        var waitlistInviteId = this.params["waitlistInviteId"];
        var waitlistHash = this.params["waitlistHash"];
        var removeWaitlist = this.params["removeWaitlist"];
        var apptHash = sessionStorage.getItem('apptHash');
        var disclaimerFormUUID = null;
        if (this.sessionService.sessionObject)
            disclaimerFormUUID = this.sessionService.sessionObject.parmDisclaimerFormUUID;
        var invoiceHash = this.params["invoiceHash"];
        if (this.sessionService.sessionObject && this.sessionService.sessionObject.parmInvoiceHash)
            invoiceHash = this.sessionService.sessionObject.parmInvoiceHash;
        var url = this.router.url;
        var publishOptional = false;
        if (disclaimerFormUUID !== undefined && disclaimerFormUUID !== null && disclaimerFormUUID !== '')
            publishOptional = true;
        if (invoiceHash !== undefined && invoiceHash !== null && invoiceHash !== '')
            publishOptional = true;
        if (waitlistInviteId !== undefined && waitlistInviteId !== null && waitlistInviteId !== "null" && waitlistInviteId !== '')
            publishOptional = true;
        if (waitlistHash !== undefined && waitlistHash !== null && waitlistHash !== "null" && waitlistHash !== '' && removeWaitlist == "true")
            publishOptional = true;
        if (url.indexOf('waitlist/claim') !== -1 || url.indexOf('waitlist/remove') !== -1)
            publishOptional = true;
        if (apptHash !== undefined && apptHash !== null && apptHash !== '' && window.location.href.indexOf('businessWeb/web/') !== -1)
            publishOptional = true;
        return publishOptional;
    };
    AppComponent.prototype.getLandingPageObjects = function () {
        var _this = this;
        this.isLoading = true;
        var handle = sessionStorage.getItem('handle'); // LHB 1/5/2021 TT-7263
        if (!handle || handle === "") {
            this.createErrorPageLayout('HANDLE_NOT_FOUND');
        }
        else {
            this.onloadService.getLandingPageObjects(this.paramsForLoadingUnpublished())
                .subscribe(function (landingPageObjects) {
                if (_this.businessService.business.status !== 'ACTIVE') {
                    _this.createErrorPageLayout('inactive');
                }
                else {
                    _this.preference = _this.schedulerPreferenceService.schedulerPreference;
                    _this.schedulerLink = _this.schedulerLinkService.schedulerLink;
                    _this.miniWebsite = _this.miniWebsiteService.miniWebsite;
                    _this.determineSideNavPosition();
                    _this.redirectToWaitlist();
                    _this.showResetPwd();
                    _this.isLoading = false;
                    _this.businessService.landingPageObjectLoaded.next(true);
                }
            }, function (error) {
                console.log('error', error);
                var errorMessage = error.error.message;
                var errorType = 'errorLoading';
                if (error.error.result)
                    errorType = error.error.result;
                _this.createErrorPageLayout(errorType, errorMessage);
            });
        }
    };
    AppComponent.prototype.redirectToDisclaimerForm = function (disclaimerFormUUID) {
        if (disclaimerFormUUID !== undefined && disclaimerFormUUID !== null && disclaimerFormUUID !== '') {
            this.router.navigate(['forms/' + disclaimerFormUUID]);
        }
    };
    AppComponent.prototype.redirectToInvoiceDetail = function (invoiceHash, privateUrlHash) {
        if (invoiceHash !== undefined && invoiceHash !== null && invoiceHash !== '' && privateUrlHash !== undefined) {
            if (window.location.href.indexOf(privateUrlHash) !== -1) {
                this.router.navigate(['invoices/' + invoiceHash]);
            }
        }
    };
    AppComponent.prototype.removePasswordRequestIdFromURL = function () {
        if (window.location.href.indexOf('?passwordRequestId=') !== -1) {
            var index = window.location.href.indexOf('?passwordRequestId=');
            var newUrl = window.location.href.substring(0, index);
            window.history.pushState(null, 'Reset Password', newUrl);
        }
    };
    AppComponent.prototype.showResetPwd = function () {
        var _this = this;
        var passwordRequestId = this.params["passwordRequestId"];
        if (passwordRequestId) {
            var dataToPass = new _auth_reset_password_reset_password_component__WEBPACK_IMPORTED_MODULE_27__["ResetPasswordModalData"]();
            dataToPass.passwordRequestId = passwordRequestId;
            var dialogRef = this.dialog.open(_auth_reset_password_reset_password_component__WEBPACK_IMPORTED_MODULE_27__["ResetPasswordComponent"], {
                maxWidth: this.responsiveService.getMaxWidthForModals(),
                width: this.responsiveService.getMaxWidthForModals(),
                data: dataToPass
            });
            dialogRef.afterClosed().subscribe(function (modalData) {
                if (modalData.success) {
                    _this.removePasswordRequestIdFromURL();
                    if (modalData.openLogin) {
                        var loginTriggeredData = new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_3__["loginRegisterPopUpObject"]();
                        loginTriggeredData.loadMyAccount = true;
                        loginTriggeredData.calledFrom = 'RESET_PASSWORD';
                        loginTriggeredData.callSubscriptionNext = false;
                        loginTriggeredData.email = modalData.email;
                        loginTriggeredData.description = _this.preference.labelMap.resetPwdSuccessMsg;
                        _this.authService.loginCalled.next(loginTriggeredData);
                    }
                }
            });
        }
    };
    AppComponent.prototype.redirectToWaitlist = function () {
        var waitlistInviteId = this.params["waitlistInviteId"];
        var waitlistHash = this.params["waitlistHash"];
        var clientHash = this.params["clientHash"];
        var removeWaitlist = this.params["removeWaitlist"];
        if (waitlistInviteId !== undefined && waitlistInviteId !== null && waitlistInviteId !== "null" && waitlistInviteId !== '') {
            this.router.navigate(['waitlist/claim/' + waitlistInviteId]);
        }
        if (waitlistHash !== undefined && waitlistHash !== null && waitlistHash !== "null" && waitlistHash !== '' && removeWaitlist == "true") {
            this.router.navigate(['waitlist/remove/' + waitlistHash]);
        }
        if (clientHash !== undefined && clientHash !== null && clientHash !== "null" && clientHash !== '') {
            this.router.navigate(['waitlist/claimTimes/' + clientHash]);
        }
    };
    AppComponent.prototype.redirectToApptDetail = function () {
        var apptHash = sessionStorage.getItem('apptHash');
        if (apptHash !== undefined && apptHash !== null && apptHash !== '' && window.location.href.indexOf('businessWeb/web/') !== -1) {
            this.router.navigate(['appts/' + apptHash]);
        }
    };
    AppComponent.prototype.loadApp = function () {
        var _this = this;
        this.responsiveService.init();
        this.embeddedSubscription = this.responsiveService.embeddedScheduler.subscribe(function (embedded) {
            _this.isEmbedded = embedded;
        });
        this.paramsSubscription = this.route.queryParams.subscribe(function (params) {
            _this.params = params;
            _this.schedulerPreferenceService.setParameterPassedFields(params);
            var locale = params["locale"];
            //showHeader=0 is for embed
            // showHeader=1 is to show full site
            var showHeader = "1";
            var showHeaderSessionStorage = sessionStorage.getItem("showHeader");
            var showHeaderParams = params["showHeader"];
            // console.log("showHeader A " + showHeader);
            // console.log("showHeaderSessionStorage A " + showHeaderSessionStorage);
            // console.log("showHeaderParams A " + showHeaderParams);
            if (params["showHeader"] !== undefined) {
                sessionStorage.setItem("showHeader", params["showHeader"]);
                showHeader = params["showHeader"];
                sessionStorage.setItem("showHeader", showHeader);
                // console.log("showHeader C " + showHeader);
            }
            else if (showHeaderSessionStorage !== null && showHeaderSessionStorage !== "null") {
                showHeader = sessionStorage.getItem("showHeader");
                // console.log("showHeader B " + showHeader);
            }
            _this.responsiveService.setEmbeddedValue(showHeader);
            if (locale !== undefined && locale !== null) {
                sessionStorage.setItem('locale', locale);
                _this.changeLang(locale);
            }
        });
        this.redirectToApptDetail();
        this.authSubscription = this.authService.authChange.subscribe(function (authStatus) {
            _this.isAuthenticated = authStatus;
            if (!_this.isAuthenticated && _this.router.url.indexOf('my-account') !== -1) {
                _this.preference.schedulerPreferenceFieldDefnList = _this.clientInfoService.initialConfigurationOfSchedulerFields(_this.preference.schedulerPreferenceFieldDefnListOriginal, _this.preference);
                _this.router.navigate(['scheduler']);
            }
        });
        this.openSideNavSubscription = this.businessService.sidenavChange.subscribe(function (openStatus) {
            if (_this.sidenav !== undefined) {
                _this.sidenav.toggle();
            }
        });
        // if(localStorage.getItem('existingSessionToken')!== null){
        this.sessionService.checkValidSession(localStorage.getItem('existingSessionToken'))
            .subscribe(function (sessionObject) {
            if (sessionObject !== null && sessionObject.clientAccount !== null && sessionObject.clientAccount.clientList.length > 0) {
                if (sessionObject.passwordLogin) {
                    _this.isAuthenticated = true;
                    _this.authService.updateToken(sessionObject.sessionToken);
                    _this.authService.authenticatedSuccessfully(sessionObject.clientAccount, false);
                }
                else {
                    localStorage.setItem('existingSessionToken', sessionStorage.getItem('token'));
                    _this.clientAccountService.setLoggedInClient(sessionObject.clientAccount);
                }
            }
            else {
                localStorage.setItem('existingSessionToken', sessionStorage.getItem('token'));
            }
            _this.schedulerPreferenceService.setParametersFromExistingSessionObject(sessionObject);
            _this.authService.removeBackofficeSessionTokenFromURL();
            _this.redirectToInvoiceDetail(sessionObject.parmInvoiceHash, sessionObject.privateUrlHash);
            _this.redirectToDisclaimerForm(sessionObject.parmDisclaimerFormUUID);
            _this.getLandingPageObjects();
        }, function (error) {
            _this.getLandingPageObjects();
        });
    };
    AppComponent.prototype.showTurnOnAllowCookiesMessage = function () {
        var errors = { 'cookiesNotAllowed': true };
        var dialogRef = this.dialog.open(_modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_20__["ErrorModalComponent"], {
            maxWidth: this.responsiveService.getMaxWidthForModals(),
            data: { preference: this.preference, errorType: 'cookiesNotAllowed', errorData: errors }
        });
    };
    AppComponent.prototype.ngOnInit = function () {
        var _this = this;
        try {
            var locale = sessionStorage.getItem('locale');
            this.loadApp();
        }
        catch (e) {
            this.showTurnOnAllowCookiesMessage();
        }
        // } else {
        //     localStorage.setItem('existingSessionToken', sessionStorage.getItem('token'));
        //     this.getLandingPageObjects();
        // }
        this.bookingNotAllowedSubscription = this.clientAccountService.movedFromDetailWhenBookingNotAllowed.subscribe(function () {
            _this.createErrorPageLayout('UNPUBLISHED_BOOKING_SITE');
        });
    };
    AppComponent.prototype.ngOnDestroy = function () {
        this.authSubscription.unsubscribe();
        this.paramsSubscription.unsubscribe();
        this.embeddedSubscription.unsubscribe();
        this.openSideNavSubscription.unsubscribe();
        this.bookingNotAllowedSubscription.unsubscribe();
        sessionStorage.removeItem('backofficeSessionToken');
    };
    AppComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"] },
        { type: _common_classes_label_map_service__WEBPACK_IMPORTED_MODULE_11__["LabelMapService"] },
        { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__["Title"] },
        { type: _scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_5__["ClientInfoService"] },
        { type: _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_13__["ClientAccountService"] },
        { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_7__["AuthService"] },
        { type: _onload_service__WEBPACK_IMPORTED_MODULE_23__["OnloadService"] },
        { type: _session_service__WEBPACK_IMPORTED_MODULE_22__["SessionService"] },
        { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__["Meta"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["ActivatedRoute"] },
        { type: _locale_service__WEBPACK_IMPORTED_MODULE_9__["LocaleService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_12__["ResponsiveService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_18__["TagsService"] },
        { type: _styleSheetService__WEBPACK_IMPORTED_MODULE_19__["StyleSheetService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_21__["MatDialog"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_24__["SchedulerPreferenceService"] },
        { type: _mini_website_service__WEBPACK_IMPORTED_MODULE_25__["MiniWebsiteService"] },
        { type: _scheduler_link_service__WEBPACK_IMPORTED_MODULE_26__["SchedulerLinkService"] },
        { type: HTMLDocument, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_common__WEBPACK_IMPORTED_MODULE_17__["DOCUMENT"],] }] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('sidenav', { static: false }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_14__["MatSidenav"])
    ], AppComponent.prototype, "sidenav", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('window:resize', ['$event']),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Function),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object]),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:returntype", void 0)
    ], AppComponent.prototype, "onResize", null);
    AppComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-root',
            template: __webpack_require__(/*! raw-loader!./app.component.html */ "./node_modules/raw-loader/index.js!./src/app/app.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](20, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_common__WEBPACK_IMPORTED_MODULE_17__["DOCUMENT"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"],
            _common_classes_label_map_service__WEBPACK_IMPORTED_MODULE_11__["LabelMapService"],
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__["Title"],
            _scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_5__["ClientInfoService"],
            _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_13__["ClientAccountService"],
            _auth_auth_service__WEBPACK_IMPORTED_MODULE_7__["AuthService"],
            _onload_service__WEBPACK_IMPORTED_MODULE_23__["OnloadService"],
            _session_service__WEBPACK_IMPORTED_MODULE_22__["SessionService"],
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__["Meta"],
            _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"],
            _angular_router__WEBPACK_IMPORTED_MODULE_8__["ActivatedRoute"],
            _locale_service__WEBPACK_IMPORTED_MODULE_9__["LocaleService"],
            _responsive_service__WEBPACK_IMPORTED_MODULE_12__["ResponsiveService"],
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"],
            _tags_service__WEBPACK_IMPORTED_MODULE_18__["TagsService"],
            _styleSheetService__WEBPACK_IMPORTED_MODULE_19__["StyleSheetService"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_21__["MatDialog"],
            _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_24__["SchedulerPreferenceService"],
            _mini_website_service__WEBPACK_IMPORTED_MODULE_25__["MiniWebsiteService"],
            _scheduler_link_service__WEBPACK_IMPORTED_MODULE_26__["SchedulerLinkService"],
            HTMLDocument])
    ], AppComponent);
    return AppComponent;
}());



/***/ }),

/***/ "./src/app/app.module.ts":
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/*! exports provided: AppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _agm_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @agm/core */ "./node_modules/@agm/core/fesm5/agm-core.js");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/platform-browser/animations */ "./node_modules/@angular/platform-browser/fesm5/animations.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm5/ng-bootstrap.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./app-routing.module */ "./src/app/app-routing.module.ts");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./app.component */ "./src/app/app.component.ts");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./material.module */ "./src/app/material.module.ts");
/* harmony import */ var _auth_register_register_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./auth/register/register.component */ "./src/app/auth/register/register.component.ts");
/* harmony import */ var _auth_login_login_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./auth/login/login.component */ "./src/app/auth/login/login.component.ts");
/* harmony import */ var _scheduler_scheduler_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./scheduler/scheduler.component */ "./src/app/scheduler/scheduler.component.ts");
/* harmony import */ var _scheduler_welcome_welcome_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./scheduler/welcome/welcome.component */ "./src/app/scheduler/welcome/welcome.component.ts");
/* harmony import */ var _navigation_header_header_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./navigation/header/header.component */ "./src/app/navigation/header/header.component.ts");
/* harmony import */ var _scheduler_locations_locations_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./scheduler/locations/locations.component */ "./src/app/scheduler/locations/locations.component.ts");
/* harmony import */ var _scheduler_staff_staff_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./scheduler/staff/staff.component */ "./src/app/scheduler/staff/staff.component.ts");
/* harmony import */ var _scheduler_reasons_reasons_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./scheduler/reasons/reasons.component */ "./src/app/scheduler/reasons/reasons.component.ts");
/* harmony import */ var _scheduler_time_time_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./scheduler/time/time.component */ "./src/app/scheduler/time/time.component.ts");
/* harmony import */ var _scheduler_screening_question_screening_question_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./scheduler/screening-question/screening-question.component */ "./src/app/scheduler/screening-question/screening-question.component.ts");
/* harmony import */ var _scheduler_groups_groups_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./scheduler/groups/groups.component */ "./src/app/scheduler/groups/groups.component.ts");
/* harmony import */ var _client_account_client_account_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./client-account/client-account.component */ "./src/app/client-account/client-account.component.ts");
/* harmony import */ var _client_account_view_appointments_view_appointments_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./client-account/view-appointments/view-appointments.component */ "./src/app/client-account/view-appointments/view-appointments.component.ts");
/* harmony import */ var _client_account_client_account_home_client_account_home_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./client-account/client-account-home/client-account-home.component */ "./src/app/client-account/client-account-home/client-account-home.component.ts");
/* harmony import */ var _client_account_view_appointments_booking_object_details_appointment_detail_appointment_detail_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./client-account/view-appointments/booking-object-details/appointment-detail/appointment-detail.component */ "./src/app/client-account/view-appointments/booking-object-details/appointment-detail/appointment-detail.component.ts");
/* harmony import */ var _client_account_view_invoices_view_invoices_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./client-account/view-invoices/view-invoices.component */ "./src/app/client-account/view-invoices/view-invoices.component.ts");
/* harmony import */ var _client_account_view_invoices_view_invoices_list_view_invoices_list_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./client-account/view-invoices/view-invoices-list/view-invoices-list.component */ "./src/app/client-account/view-invoices/view-invoices-list/view-invoices-list.component.ts");
/* harmony import */ var _client_account_view_invoices_invoice_detail_invoice_detail_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./client-account/view-invoices/invoice-detail/invoice-detail.component */ "./src/app/client-account/view-invoices/invoice-detail/invoice-detail.component.ts");
/* harmony import */ var _client_account_client_profile_client_profile_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./client-account/client-profile/client-profile.component */ "./src/app/client-account/client-profile/client-profile.component.ts");
/* harmony import */ var _client_account_client_profile_client_profile_details_client_profile_details_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./client-account/client-profile/client-profile-details/client-profile-details.component */ "./src/app/client-account/client-profile/client-profile-details/client-profile-details.component.ts");
/* harmony import */ var _scheduler_reasons_reason_chip_list_reason_chip_list_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./scheduler/reasons/reason-chip-list/reason-chip-list.component */ "./src/app/scheduler/reasons/reason-chip-list/reason-chip-list.component.ts");
/* harmony import */ var _scheduler_common_components_zip_code_filter_zip_code_filter_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./scheduler/common-components/zip-code-filter/zip-code-filter.component */ "./src/app/scheduler/common-components/zip-code-filter/zip-code-filter.component.ts");
/* harmony import */ var _client_account_view_invoices_payment_portals_square_square_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./client-account/view-invoices/payment-portals/square/square.component */ "./src/app/client-account/view-invoices/payment-portals/square/square.component.ts");
/* harmony import */ var _client_account_view_invoices_payment_portals_stripe_stripe_component__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./client-account/view-invoices/payment-portals/stripe/stripe.component */ "./src/app/client-account/view-invoices/payment-portals/stripe/stripe.component.ts");
/* harmony import */ var _scheduler_time_time_cart_time_cart_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./scheduler/time/time-cart/time-cart.component */ "./src/app/scheduler/time/time-cart/time-cart.component.ts");
/* harmony import */ var _scheduler_locations_variable_address_variable_address_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./scheduler/locations/variable-address/variable-address.component */ "./src/app/scheduler/locations/variable-address/variable-address.component.ts");
/* harmony import */ var _client_account_view_appointments_cancel_appointment_cancel_appointment_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./client-account/view-appointments/cancel-appointment/cancel-appointment.component */ "./src/app/client-account/view-appointments/cancel-appointment/cancel-appointment.component.ts");
/* harmony import */ var _modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./modals/error-modal/error-modal.component */ "./src/app/modals/error-modal/error-modal.component.ts");
/* harmony import */ var _navigation_login_register_btns_login_register_btns_component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./navigation/login-register-btns/login-register-btns.component */ "./src/app/navigation/login-register-btns/login-register-btns.component.ts");
/* harmony import */ var _navigation_sidebar_header_sidebar_component__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./navigation/sidebar/header-sidebar.component */ "./src/app/navigation/sidebar/header-sidebar.component.ts");
/* harmony import */ var _scheduler_common_components_scheduler_list_items_scheduler_list_items_component__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./scheduler/common-components/scheduler-list-items/scheduler-list-items.component */ "./src/app/scheduler/common-components/scheduler-list-items/scheduler-list-items.component.ts");
/* harmony import */ var _modals_select_pay_amount_select_pay_amount_component__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./modals/select-pay-amount/select-pay-amount.component */ "./src/app/modals/select-pay-amount/select-pay-amount.component.ts");
/* harmony import */ var _client_account_client_profile_client_packages_client_packages_component__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./client-account/client-profile/client-packages/client-packages.component */ "./src/app/client-account/client-profile/client-packages/client-packages.component.ts");
/* harmony import */ var _client_account_client_profile_client_profile_container_client_profile_container_component__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./client-account/client-profile/client-profile-container/client-profile-container.component */ "./src/app/client-account/client-profile/client-profile-container/client-profile-container.component.ts");
/* harmony import */ var _modals_select_package_select_package_component__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./modals/select-package/select-package.component */ "./src/app/modals/select-package/select-package.component.ts");
/* harmony import */ var _client_account_client_profile_client_payment_info_client_payment_info_component__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./client-account/client-profile/client-payment-info/client-payment-info.component */ "./src/app/client-account/client-profile/client-payment-info/client-payment-info.component.ts");
/* harmony import */ var _modals_manage_credit_card_manage_credit_card_component__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./modals/manage-credit-card/manage-credit-card.component */ "./src/app/modals/manage-credit-card/manage-credit-card.component.ts");
/* harmony import */ var _modals_repeating_appt_filter_repeating_appt_filter_component__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./modals/repeating-appt-filter/repeating-appt-filter.component */ "./src/app/modals/repeating-appt-filter/repeating-appt-filter.component.ts");
/* harmony import */ var _scheduler_time_calendar_calendar_component__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./scheduler/time/calendar/calendar.component */ "./src/app/scheduler/time/calendar/calendar.component.ts");
/* harmony import */ var _disclaimer_form_disclaimer_form_component__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./disclaimer-form/disclaimer-form.component */ "./src/app/disclaimer-form/disclaimer-form.component.ts");
/* harmony import */ var _disclaimer_form_disclaimer_form_detail_disclaimer_form_detail_component__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./disclaimer-form/disclaimer-form-detail/disclaimer-form-detail.component */ "./src/app/disclaimer-form/disclaimer-form-detail/disclaimer-form-detail.component.ts");
/* harmony import */ var _client_account_client_profile_client_forms_client_forms_component__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./client-account/client-profile/client-forms/client-forms.component */ "./src/app/client-account/client-profile/client-forms/client-forms.component.ts");
/* harmony import */ var _scheduler_common_components_add_to_calendar_add_to_calendar_component__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./scheduler/common-components/add-to-calendar/add-to-calendar.component */ "./src/app/scheduler/common-components/add-to-calendar/add-to-calendar.component.ts");
/* harmony import */ var _store_cart_cart_module__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./store/cart/cart.module */ "./src/app/store/cart/cart.module.ts");
/* harmony import */ var _scheduler_common_components_coupon_coupon_module__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./scheduler/common-components/coupon/coupon.module */ "./src/app/scheduler/common-components/coupon/coupon.module.ts");
/* harmony import */ var _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./ui-elements/ui-elements.module */ "./src/app/ui-elements/ui-elements.module.ts");
/* harmony import */ var _store_store_module__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./store/store.module */ "./src/app/store/store.module.ts");
/* harmony import */ var _core_module__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./core.module */ "./src/app/core.module.ts");
/* harmony import */ var _pipes_pipes_module__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ../pipes/pipes.module */ "./src/pipes/pipes.module.ts");
/* harmony import */ var _client_account_client_account_header_client_account_header_module__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./client-account/client-account-header/client-account-header.module */ "./src/app/client-account/client-account-header/client-account-header.module.ts");
/* harmony import */ var _client_account_view_appointments_view_appointments_list_view_appointments_list_module__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./client-account/view-appointments/view-appointments-list/view-appointments-list.module */ "./src/app/client-account/view-appointments/view-appointments-list/view-appointments-list.module.ts");
/* harmony import */ var _client_account_view_appointments_booking_object_details_repeating_appointment_detail_repeating_appointment_detail_component__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./client-account/view-appointments/booking-object-details/repeating-appointment-detail/repeating-appointment-detail.component */ "./src/app/client-account/view-appointments/booking-object-details/repeating-appointment-detail/repeating-appointment-detail.component.ts");
/* harmony import */ var _client_account_view_appointments_booking_object_details_waitlist_registration_detail_waitlist_registration_detail_component__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./client-account/view-appointments/booking-object-details/waitlist-registration-detail/waitlist-registration-detail.component */ "./src/app/client-account/view-appointments/booking-object-details/waitlist-registration-detail/waitlist-registration-detail.component.ts");
/* harmony import */ var _email_settings_email_settings_component__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./email-settings/email-settings.component */ "./src/app/email-settings/email-settings.component.ts");
/* harmony import */ var _email_settings_email_settings_container_component__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./email-settings/email-settings-container.component */ "./src/app/email-settings/email-settings-container.component.ts");
/* harmony import */ var _waitlist_wait_list_module__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./waitlist/wait-list.module */ "./src/app/waitlist/wait-list.module.ts");
/* harmony import */ var _scheduler_confirmation_confirmation_module__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./scheduler/confirmation/confirmation.module */ "./src/app/scheduler/confirmation/confirmation.module.ts");
/* harmony import */ var _scheduler_common_components_footer_footer_module__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./scheduler/common-components/footer/footer.module */ "./src/app/scheduler/common-components/footer/footer.module.ts");
/* harmony import */ var _scheduler_common_components_title_bar_title_bar_module__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./scheduler/common-components/title-bar/title-bar.module */ "./src/app/scheduler/common-components/title-bar/title-bar.module.ts");
/* harmony import */ var _scheduler_pref_field_form_scheduler_pref_field_form_module__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./scheduler-pref-field-form/scheduler-pref-field-form.module */ "./src/app/scheduler-pref-field-form/scheduler-pref-field-form.module.ts");
/* harmony import */ var _scheduler_client_info_client_info_module__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./scheduler/client-info/client-info.module */ "./src/app/scheduler/client-info/client-info.module.ts");
/* harmony import */ var _scheduler_common_components_timezone_timezone_module__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./scheduler/common-components/timezone/timezone.module */ "./src/app/scheduler/common-components/timezone/timezone.module.ts");
/* harmony import */ var _scheduler_time_time_slot_display_time_slot_display_module__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./scheduler/time/time-slot-display/time-slot-display.module */ "./src/app/scheduler/time/time-slot-display/time-slot-display.module.ts");
/* harmony import */ var _scheduler_locations_location_map_location_map_module__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./scheduler/locations/location-map/location-map.module */ "./src/app/scheduler/locations/location-map/location-map.module.ts");
/* harmony import */ var _scheduler_common_components_scheduler_banner_list_items_scheduler_banner_list_items_module__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./scheduler/common-components/scheduler-banner-list-items/scheduler-banner-list-items.module */ "./src/app/scheduler/common-components/scheduler-banner-list-items/scheduler-banner-list-items.module.ts");
/* harmony import */ var _client_account_view_invoices_invoice_detail_prompt_package_pay_prompt_package_pay_module__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./client-account/view-invoices/invoice-detail/prompt-package-pay/prompt-package-pay.module */ "./src/app/client-account/view-invoices/invoice-detail/prompt-package-pay/prompt-package-pay.module.ts");
/* harmony import */ var _auth_reset_password_reset_password_module__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./auth/reset-password/reset-password.module */ "./src/app/auth/reset-password/reset-password.module.ts");
/* harmony import */ var _modals_select_add_ons_select_add_ons_component__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./modals/select-add-ons/select-add-ons.component */ "./src/app/modals/select-add-ons/select-add-ons.component.ts");
/* harmony import */ var _auth_cookie_banner_cookie_banner_component__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./auth/cookie-banner/cookie-banner.component */ "./src/app/auth/cookie-banner/cookie-banner.component.ts");

















































































var AppModule = /** @class */ (function () {
    function AppModule() {
    }
    AppModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
            declarations: [
                _app_component__WEBPACK_IMPORTED_MODULE_10__["AppComponent"],
                _auth_register_register_component__WEBPACK_IMPORTED_MODULE_12__["RegisterComponent"],
                _auth_login_login_component__WEBPACK_IMPORTED_MODULE_13__["LoginComponent"],
                _scheduler_scheduler_component__WEBPACK_IMPORTED_MODULE_14__["SchedulerComponent"],
                _scheduler_welcome_welcome_component__WEBPACK_IMPORTED_MODULE_15__["WelcomeComponent"],
                _navigation_header_header_component__WEBPACK_IMPORTED_MODULE_16__["HeaderComponent"],
                _scheduler_locations_locations_component__WEBPACK_IMPORTED_MODULE_17__["LocationsComponent"],
                _scheduler_staff_staff_component__WEBPACK_IMPORTED_MODULE_18__["StaffComponent"],
                _scheduler_reasons_reasons_component__WEBPACK_IMPORTED_MODULE_19__["ReasonsComponent"],
                _scheduler_time_time_component__WEBPACK_IMPORTED_MODULE_20__["TimeComponent"],
                _scheduler_screening_question_screening_question_component__WEBPACK_IMPORTED_MODULE_21__["ScreeningQuestionComponent"],
                _scheduler_groups_groups_component__WEBPACK_IMPORTED_MODULE_22__["GroupsComponent"],
                _client_account_client_account_component__WEBPACK_IMPORTED_MODULE_23__["ClientAccountComponent"],
                _client_account_view_appointments_view_appointments_component__WEBPACK_IMPORTED_MODULE_24__["ViewAppointmentsComponent"],
                _client_account_client_account_home_client_account_home_component__WEBPACK_IMPORTED_MODULE_25__["ClientAccountHomeComponent"],
                _client_account_view_appointments_booking_object_details_appointment_detail_appointment_detail_component__WEBPACK_IMPORTED_MODULE_26__["AppointmentDetailComponent"],
                _client_account_view_invoices_view_invoices_component__WEBPACK_IMPORTED_MODULE_27__["ViewInvoicesComponent"],
                _client_account_view_invoices_view_invoices_list_view_invoices_list_component__WEBPACK_IMPORTED_MODULE_28__["ViewInvoicesListComponent"],
                _client_account_view_invoices_invoice_detail_invoice_detail_component__WEBPACK_IMPORTED_MODULE_29__["InvoiceDetailComponent"],
                _client_account_client_profile_client_profile_component__WEBPACK_IMPORTED_MODULE_30__["ClientProfileComponent"],
                _client_account_client_profile_client_profile_details_client_profile_details_component__WEBPACK_IMPORTED_MODULE_31__["ClientProfileDetailsComponent"],
                _scheduler_reasons_reason_chip_list_reason_chip_list_component__WEBPACK_IMPORTED_MODULE_32__["ReasonChipListComponent"],
                _scheduler_common_components_zip_code_filter_zip_code_filter_component__WEBPACK_IMPORTED_MODULE_33__["ZipCodeFilterComponent"],
                _client_account_view_invoices_payment_portals_square_square_component__WEBPACK_IMPORTED_MODULE_34__["SquareComponent"],
                _client_account_view_invoices_payment_portals_stripe_stripe_component__WEBPACK_IMPORTED_MODULE_35__["StripeComponent"],
                _scheduler_time_time_cart_time_cart_component__WEBPACK_IMPORTED_MODULE_36__["TimeCartComponent"],
                _scheduler_locations_variable_address_variable_address_component__WEBPACK_IMPORTED_MODULE_37__["VariableAddressComponent"],
                _client_account_view_appointments_cancel_appointment_cancel_appointment_component__WEBPACK_IMPORTED_MODULE_38__["CancelAppointmentComponent"],
                _modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_39__["ErrorModalComponent"],
                _navigation_login_register_btns_login_register_btns_component__WEBPACK_IMPORTED_MODULE_40__["LoginRegisterBtnsComponent"],
                _navigation_sidebar_header_sidebar_component__WEBPACK_IMPORTED_MODULE_41__["HeaderSidebarComponent"],
                _scheduler_common_components_scheduler_list_items_scheduler_list_items_component__WEBPACK_IMPORTED_MODULE_42__["SchedulerListItemsComponent"],
                _modals_select_pay_amount_select_pay_amount_component__WEBPACK_IMPORTED_MODULE_43__["SelectPayAmountComponent"],
                _client_account_client_profile_client_packages_client_packages_component__WEBPACK_IMPORTED_MODULE_44__["ClientPackagesComponent"],
                _client_account_client_profile_client_profile_container_client_profile_container_component__WEBPACK_IMPORTED_MODULE_45__["ClientProfileContainerComponent"],
                _modals_select_package_select_package_component__WEBPACK_IMPORTED_MODULE_46__["SelectPackageComponent"],
                _client_account_client_profile_client_payment_info_client_payment_info_component__WEBPACK_IMPORTED_MODULE_47__["ClientPaymentInfoComponent"],
                _modals_manage_credit_card_manage_credit_card_component__WEBPACK_IMPORTED_MODULE_48__["ManageCreditCardComponent"],
                _modals_repeating_appt_filter_repeating_appt_filter_component__WEBPACK_IMPORTED_MODULE_49__["RepeatingApptFilterComponent"],
                _scheduler_time_calendar_calendar_component__WEBPACK_IMPORTED_MODULE_50__["CalendarComponent"],
                _disclaimer_form_disclaimer_form_component__WEBPACK_IMPORTED_MODULE_51__["DisclaimerFormComponent"],
                _disclaimer_form_disclaimer_form_detail_disclaimer_form_detail_component__WEBPACK_IMPORTED_MODULE_52__["DisclaimerFormDetailComponent"],
                _client_account_client_profile_client_forms_client_forms_component__WEBPACK_IMPORTED_MODULE_53__["ClientFormsComponent"],
                _scheduler_common_components_add_to_calendar_add_to_calendar_component__WEBPACK_IMPORTED_MODULE_54__["AddToCalendarComponent"],
                _client_account_view_appointments_booking_object_details_repeating_appointment_detail_repeating_appointment_detail_component__WEBPACK_IMPORTED_MODULE_63__["RepeatingAppointmentDetailComponent"],
                _client_account_view_appointments_booking_object_details_waitlist_registration_detail_waitlist_registration_detail_component__WEBPACK_IMPORTED_MODULE_64__["WaitlistRegistrationDetailComponent"],
                _email_settings_email_settings_component__WEBPACK_IMPORTED_MODULE_65__["EmailSettingsComponent"],
                _email_settings_email_settings_container_component__WEBPACK_IMPORTED_MODULE_66__["EmailSettingsContainerComponent"],
                _modals_select_add_ons_select_add_ons_component__WEBPACK_IMPORTED_MODULE_79__["SelectAddOnsComponent"],
                _auth_cookie_banner_cookie_banner_component__WEBPACK_IMPORTED_MODULE_80__["CookieBannerComponent"]
            ],
            imports: [
                _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"],
                _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateModule"].forRoot(),
                _client_account_client_account_header_client_account_header_module__WEBPACK_IMPORTED_MODULE_61__["ClientAccountHeaderModule"],
                _app_routing_module__WEBPACK_IMPORTED_MODULE_9__["AppRoutingModule"],
                _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_5__["BrowserAnimationsModule"],
                _material_module__WEBPACK_IMPORTED_MODULE_11__["MaterialModule"],
                _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_6__["NgbModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormsModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_7__["ReactiveFormsModule"],
                _angular_common_http__WEBPACK_IMPORTED_MODULE_8__["HttpClientModule"],
                _agm_core__WEBPACK_IMPORTED_MODULE_4__["AgmCoreModule"].forRoot({
                    apiKey: 'AIzaSyCXv-JTNzsrItjEf72xKaGXaknKhgI91zI'
                }),
                _client_account_view_appointments_view_appointments_list_view_appointments_list_module__WEBPACK_IMPORTED_MODULE_62__["ViewAppointmentsListModule"],
                _scheduler_common_components_coupon_coupon_module__WEBPACK_IMPORTED_MODULE_56__["CouponModule"],
                _store_cart_cart_module__WEBPACK_IMPORTED_MODULE_55__["CartModule"],
                _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_57__["UIElementsModule"],
                _store_store_module__WEBPACK_IMPORTED_MODULE_58__["StoreModule"],
                _core_module__WEBPACK_IMPORTED_MODULE_59__["CoreModule"],
                _pipes_pipes_module__WEBPACK_IMPORTED_MODULE_60__["PipesModule"],
                _waitlist_wait_list_module__WEBPACK_IMPORTED_MODULE_67__["WaitListModule"],
                _scheduler_confirmation_confirmation_module__WEBPACK_IMPORTED_MODULE_68__["ConfirmationModule"],
                _scheduler_common_components_footer_footer_module__WEBPACK_IMPORTED_MODULE_69__["FooterModule"],
                _scheduler_common_components_title_bar_title_bar_module__WEBPACK_IMPORTED_MODULE_70__["TitleBarModule"],
                _scheduler_client_info_client_info_module__WEBPACK_IMPORTED_MODULE_72__["ClientInfoModule"],
                _scheduler_pref_field_form_scheduler_pref_field_form_module__WEBPACK_IMPORTED_MODULE_71__["SchedulerPrefFieldFormModule"],
                _scheduler_common_components_timezone_timezone_module__WEBPACK_IMPORTED_MODULE_73__["TimezoneModule"],
                _scheduler_time_time_slot_display_time_slot_display_module__WEBPACK_IMPORTED_MODULE_74__["TimeSlotDisplayModule"],
                _scheduler_locations_location_map_location_map_module__WEBPACK_IMPORTED_MODULE_75__["LocationMapModule"],
                _scheduler_common_components_scheduler_banner_list_items_scheduler_banner_list_items_module__WEBPACK_IMPORTED_MODULE_76__["SchedulerBannerListItemsModule"],
                _client_account_view_invoices_invoice_detail_prompt_package_pay_prompt_package_pay_module__WEBPACK_IMPORTED_MODULE_77__["PromptPackagePayModule"],
                _auth_reset_password_reset_password_module__WEBPACK_IMPORTED_MODULE_78__["ResetPasswordModule"]
            ],
            providers: [
                {
                    provide: 'window',
                    useValue: window,
                },
                {
                    provide: 'document',
                    useValue: document,
                }
            ],
            bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_10__["AppComponent"]],
            entryComponents: [_auth_login_login_component__WEBPACK_IMPORTED_MODULE_13__["LoginComponent"], _auth_register_register_component__WEBPACK_IMPORTED_MODULE_12__["RegisterComponent"], _scheduler_screening_question_screening_question_component__WEBPACK_IMPORTED_MODULE_21__["ScreeningQuestionComponent"], _scheduler_time_time_cart_time_cart_component__WEBPACK_IMPORTED_MODULE_36__["TimeCartComponent"], _scheduler_locations_variable_address_variable_address_component__WEBPACK_IMPORTED_MODULE_37__["VariableAddressComponent"],
                _client_account_view_appointments_cancel_appointment_cancel_appointment_component__WEBPACK_IMPORTED_MODULE_38__["CancelAppointmentComponent"], _modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_39__["ErrorModalComponent"], _modals_select_pay_amount_select_pay_amount_component__WEBPACK_IMPORTED_MODULE_43__["SelectPayAmountComponent"], _modals_select_package_select_package_component__WEBPACK_IMPORTED_MODULE_46__["SelectPackageComponent"], _modals_manage_credit_card_manage_credit_card_component__WEBPACK_IMPORTED_MODULE_48__["ManageCreditCardComponent"], _modals_repeating_appt_filter_repeating_appt_filter_component__WEBPACK_IMPORTED_MODULE_49__["RepeatingApptFilterComponent"], _scheduler_common_components_add_to_calendar_add_to_calendar_component__WEBPACK_IMPORTED_MODULE_54__["AddToCalendarComponent"],
                _modals_select_add_ons_select_add_ons_component__WEBPACK_IMPORTED_MODULE_79__["SelectAddOnsComponent"]]
        })
    ], AppModule);
    return AppModule;
}());



/***/ }),

/***/ "./src/app/auth/auth-interceptor.service.ts":
/*!**************************************************!*\
  !*** ./src/app/auth/auth-interceptor.service.ts ***!
  \**************************************************/
/*! exports provided: AuthInterceptorService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthInterceptorService", function() { return AuthInterceptorService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _auth_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./auth.service */ "./src/app/auth/auth.service.ts");


var AuthInterceptorService = /** @class */ (function () {
    function AuthInterceptorService(authService) {
        this.authService = authService;
    }
    AuthInterceptorService.prototype.intercept = function (req, next) {
        if (req.url.indexOf('fileUploadS3.do') !== -1) {
            var headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpHeaders"]({ 'Authorization': 'Bearer ' + this.authService.token,
                'Accept-Language': sessionStorage.getItem('locale')
            });
            var modifiedRequest = req.clone({ headers: headers });
            return next.handle(modifiedRequest);
        }
        else {
            var headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpHeaders"]({ 'Accept': 'application/json',
                'Content-Type': 'application/json',
                'Authorization': 'Bearer ' + this.authService.token,
                'Accept-Language': sessionStorage.getItem('locale'),
                'Cache-Control': 'no-cache',
                'Pragma': 'no-cache',
                'Expires': 'Sat, 01 Jan 2000 00:00:00 GMT'
            });
            var modifiedRequest = req.clone({ headers: headers });
            return next.handle(modifiedRequest);
        }
    };
    AuthInterceptorService.ctorParameters = function () { return [
        { type: _auth_service__WEBPACK_IMPORTED_MODULE_1__["AuthService"] }
    ]; };
    return AuthInterceptorService;
}());



/***/ }),

/***/ "./src/app/auth/auth.guard.ts":
/*!************************************!*\
  !*** ./src/app/auth/auth.guard.ts ***!
  \************************************/
/*! exports provided: AuthGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthGuard", function() { return AuthGuard; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _auth_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./auth.service */ "./src/app/auth/auth.service.ts");

//checks if user is authenticated or not and if not redirects them to the login page



var AuthGuard = /** @class */ (function () {
    function AuthGuard(authService, router) {
        this.authService = authService;
        this.router = router;
    }
    AuthGuard.prototype.canActivate = function (route, state) {
        this.authService.setRefreshUrl(state);
        if (this.authService.isAuth()) {
            return true;
        }
        else {
            this.router.navigate(['/scheduler']);
        }
    };
    AuthGuard.ctorParameters = function () { return [
        { type: _auth_service__WEBPACK_IMPORTED_MODULE_3__["AuthService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] }
    ]; };
    AuthGuard = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_auth_service__WEBPACK_IMPORTED_MODULE_3__["AuthService"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]])
    ], AuthGuard);
    return AuthGuard;
}());



/***/ }),

/***/ "./src/app/auth/auth.service.ts":
/*!**************************************!*\
  !*** ./src/app/auth/auth.service.ts ***!
  \**************************************/
/*! exports provided: AuthService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthService", function() { return AuthService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var rxjs_index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/index */ "./node_modules/rxjs/index.js");
/* harmony import */ var rxjs_index__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(rxjs_index__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/internal/operators */ "./node_modules/rxjs/internal/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../client-account/client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _session_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../session.service */ "./src/app/session.service.ts");









var AuthService = /** @class */ (function () {
    function AuthService(http, router, clientAccountService, injector) {
        this.http = http;
        this.router = router;
        this.clientAccountService = clientAccountService;
        this.injector = injector;
        this.authChange = new rxjs_index__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.loginCalled = new rxjs_index__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.registerCalled = new rxjs_index__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.addConnectedClientCalled = new rxjs_index__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.logoutCalled = new rxjs_index__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.loginClosed = new rxjs_index__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.registerClosed = new rxjs_index__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.connectedClientClosed = new rxjs_index__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.fullStoryEnabled = false;
        this.isAuthenticated = false;
        try {
            this.token = sessionStorage.getItem('token');
            this.apiUrl = sessionStorage.getItem('csAPIBase') + 'cs/';
            this.loggedInApiUrl = sessionStorage.getItem('csAPIBase') + 'csl/';
        }
        catch (e) {
        }
        this.sessionService = injector.get(_session_service__WEBPACK_IMPORTED_MODULE_8__["SessionService"]);
    }
    AuthService.prototype.handleError = function (error) {
        return Promise.reject(error);
    };
    AuthService.prototype.updateToken = function (token) {
        sessionStorage.setItem('token', token);
        this.token = token;
    };
    AuthService.prototype.clientLogin = function (clientLoginObject) {
        return this.http
            .post(this.apiUrl + 'login', clientLoginObject, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_6__["catchError"])(this.handleError));
    };
    AuthService.prototype.checkClientExistsForRegistration = function (businessId, clientEmail) {
        var requestBody = { 'emailAddress': clientEmail, 'redirectUrl': window.location.href };
        return this.http
            .post(this.apiUrl + 'checkClientAccountExists/' + businessId, requestBody, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_6__["catchError"])(this.handleError));
    };
    AuthService.prototype.checkPasswordResetValid = function (requestId) {
        return this.http
            .get(this.apiUrl + 'checkPasswordResetValid/' + requestId, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_6__["catchError"])(this.handleError));
    };
    AuthService.prototype.resendPasswordReset = function (requestId) {
        return this.http
            .post(this.apiUrl + 'resendPasswordReset/' + requestId, null, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_6__["catchError"])(this.handleError));
    };
    AuthService.prototype.resetPassword = function (requestId, password) {
        return this.http
            .post(this.apiUrl + 'resetPassword/' + requestId, password, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_6__["catchError"])(this.handleError));
    };
    AuthService.prototype.clientLogout = function () {
        return this.http
            // @ts-ignore
            .post(this.loggedInApiUrl + 'logout?sessionToken=' + localStorage.getItem('existingSessionToken'), null, { responseType: 'text' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_6__["catchError"])(this.handleError));
    };
    AuthService.prototype.isAuth = function () {
        return this.isAuthenticated;
    };
    AuthService.prototype.setRefreshUrl = function (stateSnapshot) {
        this.state = stateSnapshot;
    };
    AuthService.prototype.removeBackofficeSessionTokenFromURL = function () {
        if (window.location.href.indexOf('?backofficeSessionToken=') !== -1) {
            var sessionTokenIndex = window.location.href.indexOf('?backofficeSessionToken=');
            var baseUrl = window.location.href.substring(0, sessionTokenIndex);
            var sessionTokenParam = window.location.href.substring(sessionTokenIndex);
            var equalsIndex = sessionTokenParam.indexOf('=');
            var hashIndex = sessionTokenParam.indexOf('#');
            var backofficeSessionToken = sessionTokenParam.substring(equalsIndex + 1, hashIndex);
            // console.log('baseUrl' + baseUrl);
            // console.log('sessionTokenParam ' + sessionTokenParam);
            // console.log('equalsIndex ' + equalsIndex);
            // console.log('hashIndex ' + hashIndex);
            // console.log('backofficeSessionToken ' + backofficeSessionToken);
            sessionStorage.setItem('backofficeSessionToken', backofficeSessionToken);
            var endUrl = sessionTokenParam.substring(hashIndex);
            var newUrl = baseUrl + '/' + endUrl;
            window.history.pushState(null, 'TimeTap Backoffice', newUrl);
        }
    };
    AuthService.prototype.authenticatedSuccessfully = function (loggedInClient, loadMyAccount) {
        // localStorage.setItem('token', authReturnData.sessionToken);
        // this.checkinService.updateHeaders(authReturnData);
        this.clientAccountService.setLoggedInClient(loggedInClient);
        this.isAuthenticated = true;
        this.authChange.next(true);
        if (loadMyAccount) {
            this.router.navigate(['/my-account']);
        }
        else if (this.state !== undefined && this.state.url !== undefined) {
            if (this.state.url.indexOf('?') !== -1) { //Url that refreshed from has query parameters. Need to get those and pass to router.navigate
                var queryParams = this.state.url.substring(this.state.url.indexOf('?') + 1);
                // let params = new URL(this.state.url).searchParams;
                var queryParamsObj = JSON.parse('{"' + queryParams.replace(/&/g, '","').replace(/=/g, '":"') + '"}', function (key, value) { return key === "" ? value : decodeURIComponent(value); });
                this.state.url = this.state.url.substring(0, this.state.url.indexOf('?'));
                this.router.navigate([this.state.url], { queryParams: queryParamsObj });
            }
            else {
                this.router.navigate([this.state.url]);
            }
        }
    };
    AuthService.prototype.logoutSuccessfully = function () {
        this.clientAccountService.setLoggedInClient(null);
        this.isAuthenticated = false;
        this.authChange.next(false);
    };
    AuthService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] },
        { type: _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_7__["ClientAccountService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] }
    ]; };
    AuthService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_7__["ClientAccountService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]])
    ], AuthService);
    return AuthService;
}());



/***/ }),

/***/ "./src/app/auth/cookie-banner/cookie-banner.component.css":
/*!****************************************************************!*\
  !*** ./src/app/auth/cookie-banner/cookie-banner.component.css ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvY29va2llLWJhbm5lci9jb29raWUtYmFubmVyLmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/auth/cookie-banner/cookie-banner.component.ts":
/*!***************************************************************!*\
  !*** ./src/app/auth/cookie-banner/cookie-banner.component.ts ***!
  \***************************************************************/
/*! exports provided: CookieBannerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CookieBannerComponent", function() { return CookieBannerComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");




var CookieBannerComponent = /** @class */ (function () {
    function CookieBannerComponent(schedulerPreferenceService, businessService, document, window) {
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.businessService = businessService;
        this.document = document;
        this.window = window;
        this.cookieName = 'timetapCookieConsent';
        this.preference = schedulerPreferenceService.schedulerPreference;
    }
    CookieBannerComponent.prototype.agreeToShare = function () {
        this.setCookie(this.cookieName, 'allow', 365);
        this.window.location.reload();
    };
    CookieBannerComponent.prototype.getCookie = function (cname) {
        var name = cname + '=';
        var ca = document.cookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) === ' ') {
                c = c.substring(1);
            }
            if (c.indexOf(name) === 0) {
                return c.substring(name.length, c.length);
            }
        }
        return '';
    };
    CookieBannerComponent.prototype.setCookie = function (cname, cvalue, exdays) {
        var d = new Date();
        d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
        var expires = 'expires=' + d.toUTCString();
        this.document.cookie = cname + '=' + cvalue + ';' + expires;
    };
    CookieBannerComponent.prototype.ngOnInit = function () {
        var googleTagManagerCode = sessionStorage.getItem("googleTagManagerCode");
        if (googleTagManagerCode && googleTagManagerCode !== '') {
            this.cookieName = 'timetapCookieConsentBusinessId' + this.businessService.business.businessId;
            var consent = this.getCookie(this.cookieName);
            if (consent === 'allow') {
                this.showBanner = false;
            }
            else {
                this.showBanner = true;
            }
        }
    };
    CookieBannerComponent.ctorParameters = function () { return [
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_2__["SchedulerPreferenceService"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"] },
        { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: ['document',] }] },
        { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: ['window',] }] }
    ]; };
    CookieBannerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-cookie-banner',
            template: __webpack_require__(/*! raw-loader!./cookie-banner.component.html */ "./node_modules/raw-loader/index.js!./src/app/auth/cookie-banner/cookie-banner.component.html"),
            styles: [__webpack_require__(/*! ./cookie-banner.component.css */ "./src/app/auth/cookie-banner/cookie-banner.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](2, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])('document')),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])('window')),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_scheduler_preference_service__WEBPACK_IMPORTED_MODULE_2__["SchedulerPreferenceService"], _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"], Object, Object])
    ], CookieBannerComponent);
    return CookieBannerComponent;
}());



/***/ }),

/***/ "./src/app/auth/login/login.component.ts":
/*!***********************************************!*\
  !*** ./src/app/auth/login/login.component.ts ***!
  \***********************************************/
/*! exports provided: LoginComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginComponent", function() { return LoginComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../auth.service */ "./src/app/auth/auth.service.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _google_analytics_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../google-analytics.service */ "./src/app/google-analytics.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _config_list_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../config-list.service */ "./src/app/config-list.service.ts");









var LoginComponent = /** @class */ (function () {
    function LoginComponent(authService, businessService, responsiveService, passedData, googleAnalyticsService, titleCasePipe, dialogRef, configListService) {
        this.authService = authService;
        this.businessService = businessService;
        this.responsiveService = responsiveService;
        this.passedData = passedData;
        this.googleAnalyticsService = googleAnalyticsService;
        this.titleCasePipe = titleCasePipe;
        this.dialogRef = dialogRef;
        this.configListService = configListService;
        this.loggingIn = false;
        this.loginFailed = false;
        this.noClientRecordsFound = false;
        this.description = null;
        this.loginModalObj = { isAuthenticated: false, email: '', resetPwd: false, needAccount: false };
    }
    LoginComponent.prototype.ngOnInit = function () {
        this.preference = this.passedData.preference;
        if (this.passedData.email) {
            this.email = this.passedData.email;
        }
        if (this.passedData.description) {
            this.description = this.passedData.description;
        }
        if (this.passedData.loadMyAccount !== undefined) {
            this.loadMyAccount = this.passedData.loadMyAccount;
        }
        else {
            this.loadMyAccount = true;
        }
        var showBtns = this.responsiveService.showLoginRegisterBtnLogic(this.preference);
        this.showRegisterBtn = showBtns.showRegisterBtn;
    };
    LoginComponent.prototype.onSubmit = function (form) {
        var _this = this;
        if (form.valid) {
            this.loggingIn = true;
            var clientLoginObject = { 'emailAddress': form.value.email, 'password': form.value.password };
            this.authService.clientLogin(clientLoginObject)
                .subscribe(function (loggedInClient) {
                _this.loggingIn = false;
                if (loggedInClient.clientList.length === 0) {
                    _this.noClientRecordsFound = true;
                }
                else {
                    _this.loginFailed = false;
                    var clientLabel = _this.configListService.getTitleCaseLabel('clientLabel');
                    var loginLabel = clientLabel + " login " + loggedInClient.emailAddress + " at " + new Date();
                    _this.googleAnalyticsService.eventEmitter(loginLabel, "engagement", "login", loginLabel, 1);
                    _this.authService.authenticatedSuccessfully(loggedInClient, _this.loadMyAccount);
                    _this.loginModalObj.isAuthenticated = true;
                    _this.dialogRef.close(_this.loginModalObj);
                }
            }, function (error) {
                _this.loggingIn = false;
                _this.loginFailed = true;
            });
        }
    };
    LoginComponent.prototype.forgotPassword = function (form) {
        this.loginModalObj.email = form.value.email;
        this.loginModalObj.resetPwd = true;
        this.loginModalObj.needAccount = false;
        this.dialogRef.close(this.loginModalObj);
    };
    LoginComponent.prototype.openRegister = function (form) {
        this.loginModalObj.email = form.value.email;
        this.loginModalObj.resetPwd = false;
        this.loginModalObj.needAccount = true;
        this.dialogRef.close(this.loginModalObj);
    };
    LoginComponent.ctorParameters = function () { return [
        { type: _auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_5__["ResponsiveService"] },
        { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"],] }] },
        { type: _google_analytics_service__WEBPACK_IMPORTED_MODULE_6__["GoogleAnalyticsService"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_7__["TitleCasePipe"] },
        { type: _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialogRef"] },
        { type: _config_list_service__WEBPACK_IMPORTED_MODULE_8__["ConfigListService"] }
    ]; };
    LoginComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-login',
            template: __webpack_require__(/*! raw-loader!./login.component.html */ "./node_modules/raw-loader/index.js!./src/app/auth/login/login.component.html"),
            styles: [__webpack_require__(/*! ../../form-field-styles.component.css */ "./src/app/form-field-styles.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](3, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"], _business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"], _responsive_service__WEBPACK_IMPORTED_MODULE_5__["ResponsiveService"], Object, _google_analytics_service__WEBPACK_IMPORTED_MODULE_6__["GoogleAnalyticsService"], _angular_common__WEBPACK_IMPORTED_MODULE_7__["TitleCasePipe"],
            _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatDialogRef"], _config_list_service__WEBPACK_IMPORTED_MODULE_8__["ConfigListService"]])
    ], LoginComponent);
    return LoginComponent;
}());



/***/ }),

/***/ "./src/app/auth/register/register.component.ts":
/*!*****************************************************!*\
  !*** ./src/app/auth/register/register.component.ts ***!
  \*****************************************************/
/*! exports provided: RegisterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RegisterComponent", function() { return RegisterComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _auth_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../auth.service */ "./src/app/auth/auth.service.ts");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../scheduler/client-info/client-info.service */ "./src/app/scheduler/client-info/client-info.service.ts");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../client-account/client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _google_analytics_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../google-analytics.service */ "./src/app/google-analytics.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _config_list_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../config-list.service */ "./src/app/config-list.service.ts");
/* harmony import */ var _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../models/SchedulerPanel.model */ "./src/models/SchedulerPanel.model.ts");
/* harmony import */ var _scheduler_scheduler_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../scheduler/scheduler.service */ "./src/app/scheduler/scheduler.service.ts");
/* harmony import */ var _scheduler_common_components_timezone_timezone_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../scheduler/common-components/timezone/timezone.service */ "./src/app/scheduler/common-components/timezone/timezone.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");

















var RegisterComponent = /** @class */ (function () {
    function RegisterComponent(authService, passedData, tagsService, dialogRef, clientAccountService, titleCasePipe, schedulerService, businessService, clientInfoService, googleAnalyticsService, configListService, timezoneService, responsiveService, dialog) {
        this.authService = authService;
        this.passedData = passedData;
        this.tagsService = tagsService;
        this.dialogRef = dialogRef;
        this.clientAccountService = clientAccountService;
        this.titleCasePipe = titleCasePipe;
        this.schedulerService = schedulerService;
        this.businessService = businessService;
        this.clientInfoService = clientInfoService;
        this.googleAnalyticsService = googleAnalyticsService;
        this.configListService = configListService;
        this.timezoneService = timezoneService;
        this.responsiveService = responsiveService;
        this.dialog = dialog;
        this.clientExists = false;
        this.clientNeedsToRegister = false;
        this.resetPwd = false;
        this.disableEmailAddress = true;
        this.connectClient = false;
        this.loginRegisterObj = new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["loginRegisterPopUpObject"]();
        this.title = '';
        this.description = '';
        this.buttonLabel = '';
        this.checkingEmail = false;
        this.checkingEmailFailed = false;
        this.registeringClient = false;
        this.registrationFailed = false;
        this.timezonesFailed = false;
        this.loginFailed = false;
        this.requiredFieldsEmpty = false;
        this.requiredFieldsEmptyMsg = '';
        this.clientNotFoundNoNewRegistrations = false;
        this.registerModalObj = { isAuthenticated: false, openLogin: false, descriptionToPassToLogin: null, email: '', isConnectClient: this.connectClient, newClient: null };
    }
    RegisterComponent.prototype.ngOnInit = function () {
        this.preference = this.passedData.preference;
        this.resetPwd = this.passedData.resetPwd;
        if (this.passedData.email !== undefined) {
            this.email = this.passedData.email;
        }
        if (this.passedData.loginRegisterPopUpObject !== undefined &&
            this.passedData.loginRegisterPopUpObject.calledFrom !== undefined &&
            this.passedData.loginRegisterPopUpObject.calledFrom === this.loginRegisterObj.connectClientCallFrom) {
            this.connectClient = true;
        }
        if (this.resetPwd) {
            this.title = this.preference.labelMap.resetPwdTitle;
            this.description = this.preference.labelMap.resetPwdDescription;
            this.buttonLabel = this.preference.labelMap.resetPwdButtonLabel;
        }
        else if (this.connectClient) {
            this.title = this.preference.labelMap.registerConnectClientTitle;
            this.disableEmailAddress = false;
            this.createNewClient(undefined, this.loginRegisterObj.connectClientCallFrom);
        }
        else {
            this.title = this.preference.labelMap.registerTitle;
            this.description = this.preference.labelMap.registerDescription;
            this.buttonLabel = this.preference.labelMap.registerButtonCheckEmail;
        }
    };
    RegisterComponent.prototype.registerClient = function () {
        var _this = this;
        if (this.loginFailed) {
            this.registerModalObj.email = this.newClient.emailAddress;
            this.registerModalObj.openLogin = true;
            this.registerModalObj.descriptionToPassToLogin = this.preference.labelMap.registerLoginErrorMsg;
            this.dialogRef.close(this.registerModalObj);
        }
        else if (this.registrationForm.invalid || !this.clientInfoService.isClientInfoFormValid(this.registrationForm, this.newClient.fields)) {
            this.requiredFieldsEmpty = true;
            this.requiredFieldsEmptyMsg = this.tagsService.assignObjectToTags(this.preference, this.preference.labelMap.requiredFieldsEmptyMsg, this.tagsService.preferenceTagsArray);
            for (var prop in this.registrationForm.controls) {
                this.registrationForm.controls[prop].markAsTouched();
            }
        }
        else if (this.registrationForm.valid && this.registeringClient === false) {
            this.registeringClient = true;
            this.timezonesFailed = false;
            this.registrationFailed = false;
            this.loginFailed = false;
            var timezones = this.timezoneService.timezones;
            var clientsTimeZone = sessionStorage.getItem('timezone');
            for (var i = 0, x = timezones.length; i < x; i++) {
                if (clientsTimeZone === timezones[i].timeZoneCode) {
                    this.newClient.timeZoneCode = timezones[i];
                }
            }
            for (var i = 0, x = this.newClient.fields.length; i < x; i++) {
                if (this.newClient.fields[i].code === 'password') {
                    this.newClient.password = this.newClient.fields[i].value;
                    this.newClient.fields.splice(i, 1);
                    break;
                }
            }
            // LHB 10/10/2021 TT-8196
            for (var i = 0, x = this.newClient.fields.length; i < x; i++)
                if (this.newClient.fields[i].value === null) {
                    var registrationFormFieldValue = null;
                    try {
                        registrationFormFieldValue = this.registrationForm.controls[this.newClient.fields[i].schedulerPreferenceFieldDefnId].value;
                    }
                    catch (e) {
                        console.log(e);
                    }
                    if (registrationFormFieldValue !== null)
                        this.newClient.fields[i].value = registrationFormFieldValue;
                }
            var connectClientId = null;
            if (this.connectClient && this.clientAccountService.loggedInClient !== undefined) {
                connectClientId = this.clientAccountService.loggedInClient.clientAccountId;
                var dateTime = new Date().getTime();
                this.newClient.password = dateTime.toString();
            }
            this.businessService.createUpdateClient(this.newClient, connectClientId)
                .subscribe(function (updatedClient) {
                _this.registrationFailed = false;
                var clientLoginObject = { 'emailAddress': _this.newClient.emailAddress, 'password': _this.newClient.password };
                var clientLabel = _this.configListService.getTitleCaseLabel('clientLabel');
                var registrationLabel = "New " + clientLabel + " registration: " + updatedClient.fullName + ", " + updatedClient.emailAddress + " at " + new Date();
                _this.googleAnalyticsService.eventEmitter(registrationLabel, "engagement", "sign_up", registrationLabel, 1);
                if (_this.connectClient) {
                    var needToAddConnectedClientToDropdown = _this.clientAccountService.addClientToClientList(updatedClient);
                    if (needToAddConnectedClientToDropdown)
                        _this.clientAccountService.addConnectClientToClientList(_this.preference);
                    _this.registerModalObj.isAuthenticated = true;
                    _this.registerModalObj.isConnectClient = true;
                    _this.registerModalObj.newClient = updatedClient;
                    _this.dialogRef.close(_this.registerModalObj);
                }
                else {
                    _this.authService.clientLogin(clientLoginObject)
                        .subscribe(function (loggedInClient) {
                        _this.registeringClient = false;
                        _this.loginFailed = false;
                        _this.authService.authenticatedSuccessfully(loggedInClient, true);
                        _this.registerModalObj.isAuthenticated = true;
                        _this.dialogRef.close(_this.registerModalObj);
                    }, function (error) {
                        _this.registeringClient = false;
                        _this.loginFailed = true;
                    });
                }
            }, function (error) {
                _this.registeringClient = false;
                _this.registrationFailed = true;
            });
        }
    };
    RegisterComponent.prototype.createNewClient = function (form, path) {
        var emailAddress = null;
        if (form !== undefined && form.value !== undefined && form.value !== null && // TT-7075 fix
            form.value.email === undefined && this.emailAddress !== undefined) { // TT-7053 fix
            emailAddress = this.emailAddress;
        }
        else if (form !== undefined) {
            emailAddress = form.value.email;
        }
        this.newClient = this.clientAccountService.createNewClient(emailAddress);
        var fields = lodash__WEBPACK_IMPORTED_MODULE_5__["cloneDeep"](this.preference.schedulerPreferenceFieldDefnListOriginal);
        for (var i = 0, x = fields.length; i < x; i++) {
            if (fields[i].mode === 'CLIENT') {
                if (fields[i].code === 'emailAddress' && emailAddress !== null) {
                    fields[i].value = emailAddress;
                    // [TT-8922] LHB 04/22/2022
                    fields[i].visible = true;
                    fields[i].visibleOnScheduler = true;
                }
                this.newClient.fields.push((fields[i]));
            }
        }
        if (path === "CHECK_EMAIL") {
            var pwdField = this.clientInfoService.createPasswordField(this.preference);
            this.newClient.fields.unshift(pwdField);
        }
        this.newClient.fields = this.clientInfoService.initialConfigurationOfSchedulerFields(this.newClient.fields);
        this.registrationForm = this.schedulerService.getPanelForm(_models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_13__["SchedulerPanelValues"].clientInfo, this.newClient.fields);
        if (path === this.loginRegisterObj.connectClientCallFrom) {
            this.description = this.preference.labelMap.registerDescriptionConnectClient;
            this.buttonLabel = this.preference.labelMap.registerButtonConnectClient;
        }
        else {
            this.description = this.preference.labelMap.registerDescriptionClientNotFound;
            if (this.description.indexOf('%CLIENT_EMAILADDRESS%') !== -1) {
                this.description = this.description.replace(new RegExp('%CLIENT_EMAILADDRESS%', 'g'), form.value.email);
            }
            this.buttonLabel = this.preference.labelMap.registerButtonRegister;
        }
        this.clientNeedsToRegister = true;
    };
    RegisterComponent.prototype.checkClientEmail = function (form) {
        var _this = this;
        if (form.valid) {
            this.checkingEmail = true;
            this.emailAddress = form.value.email;
            this.authService.checkClientExistsForRegistration(this.preference.businessId, this.emailAddress)
                .subscribe(function (clientExists) {
                _this.clientExists = clientExists;
                _this.checkingEmailFailed = false;
                _this.checkingEmail = false;
                if (_this.clientExists) {
                    if (_this.resetPwd) {
                        _this.registerModalObj.descriptionToPassToLogin = _this.preference.labelMap.resetPwdEmailSent;
                        if (_this.registerModalObj.descriptionToPassToLogin.indexOf('%CLIENT_EMAILADDRESS%') !== -1) {
                            _this.registerModalObj.descriptionToPassToLogin = _this.registerModalObj.descriptionToPassToLogin.replace(new RegExp('%CLIENT_EMAILADDRESS%', 'g'), form.value.email);
                        }
                    }
                    else {
                        _this.registerModalObj.descriptionToPassToLogin = _this.preference.labelMap.registerDescriptionClientFound;
                    }
                    _this.registerModalObj.email = form.value.email;
                    _this.registerModalObj.openLogin = true;
                    _this.dialogRef.close(_this.registerModalObj);
                }
                else if (_this.preference.loginReq === 2) {
                    _this.description = _this.preference.labelMap.registerDescriptionClientNotFoundPreRegisteredOnly;
                    _this.checkingEmailFailed = false;
                    _this.checkingEmail = false;
                    _this.clientNotFoundNoNewRegistrations = true;
                    if (_this.description.indexOf('%CLIENT_EMAILADDRESS%') !== -1) {
                        _this.description = _this.description.replace(new RegExp('%CLIENT_EMAILADDRESS%', 'g'), form.value.email);
                    }
                    _this.clientNeedsToRegister = false;
                }
                else {
                    _this.createNewClient(form, "CHECK_EMAIL");
                }
            }, function (error) {
                _this.checkingEmail = false;
                _this.checkingEmailFailed = true;
            });
        }
    };
    RegisterComponent.ctorParameters = function () { return [
        { type: _auth_service__WEBPACK_IMPORTED_MODULE_3__["AuthService"] },
        { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MAT_DIALOG_DATA"],] }] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_8__["TagsService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialogRef"] },
        { type: _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_9__["ClientAccountService"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_11__["TitleCasePipe"] },
        { type: _scheduler_scheduler_service__WEBPACK_IMPORTED_MODULE_14__["SchedulerService"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_6__["BusinessService"] },
        { type: _scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_7__["ClientInfoService"] },
        { type: _google_analytics_service__WEBPACK_IMPORTED_MODULE_10__["GoogleAnalyticsService"] },
        { type: _config_list_service__WEBPACK_IMPORTED_MODULE_12__["ConfigListService"] },
        { type: _scheduler_common_components_timezone_timezone_service__WEBPACK_IMPORTED_MODULE_15__["TimezoneService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_16__["ResponsiveService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialog"] }
    ]; };
    RegisterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-register',
            template: __webpack_require__(/*! raw-loader!./register.component.html */ "./node_modules/raw-loader/index.js!./src/app/auth/register/register.component.html"),
            styles: [__webpack_require__(/*! ../../form-field-styles.component.css */ "./src/app/form-field-styles.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_auth_service__WEBPACK_IMPORTED_MODULE_3__["AuthService"], Object, _tags_service__WEBPACK_IMPORTED_MODULE_8__["TagsService"],
            _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialogRef"], _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_9__["ClientAccountService"], _angular_common__WEBPACK_IMPORTED_MODULE_11__["TitleCasePipe"], _scheduler_scheduler_service__WEBPACK_IMPORTED_MODULE_14__["SchedulerService"],
            _business_service__WEBPACK_IMPORTED_MODULE_6__["BusinessService"], _scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_7__["ClientInfoService"], _google_analytics_service__WEBPACK_IMPORTED_MODULE_10__["GoogleAnalyticsService"], _config_list_service__WEBPACK_IMPORTED_MODULE_12__["ConfigListService"],
            _scheduler_common_components_timezone_timezone_service__WEBPACK_IMPORTED_MODULE_15__["TimezoneService"], _responsive_service__WEBPACK_IMPORTED_MODULE_16__["ResponsiveService"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialog"]])
    ], RegisterComponent);
    return RegisterComponent;
}());



/***/ }),

/***/ "./src/app/auth/reset-password/reset-password.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/auth/reset-password/reset-password.component.ts ***!
  \*****************************************************************/
/*! exports provided: ResetPasswordModalData, ResetPasswordComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResetPasswordModalData", function() { return ResetPasswordModalData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResetPasswordComponent", function() { return ResetPasswordComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../auth.service */ "./src/app/auth/auth.service.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");







var ResetPasswordModalData = /** @class */ (function () {
    function ResetPasswordModalData() {
    }
    return ResetPasswordModalData;
}());

var ResetPasswordComponent = /** @class */ (function () {
    function ResetPasswordComponent(authService, passedData, tagsService, dialogRef, schedulerPreferenceService) {
        var _this = this;
        this.authService = authService;
        this.passedData = passedData;
        this.tagsService = tagsService;
        this.dialogRef = dialogRef;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.loading = true;
        this.success = false;
        this.openLogin = false;
        this.preference = schedulerPreferenceService.schedulerPreference;
        dialogRef.backdropClick().subscribe(function () {
            _this.dismissModal();
        });
    }
    ResetPasswordComponent.prototype.dismissModal = function () {
        var closeModalData = { passwordRequestId: this.passedData.passwordRequestId, success: this.success, openLogin: this.openLogin, email: this.email };
        this.dialogRef.close(closeModalData);
    };
    ResetPasswordComponent.prototype.handleSuccess = function () {
        var _this = this;
        setTimeout(function () {
            _this.dismissModal();
        }, 3000);
    };
    ResetPasswordComponent.prototype.checkPasswords = function (form) {
        var _this = this;
        if (form.valid) {
            this.password = form.value.password;
            this.confirmPassword = form.value.confirmPassword;
            if (this.password !== this.confirmPassword) {
                this.resetPwdError = true;
                this.resetPwdErrorMsg = this.preference.labelMap.resetPwdErrorPasswordsMismatched;
            }
            else {
                this.resettingPasswords = true;
                this.resetPwdError = false;
                this.authService.resetPassword(this.passedData.passwordRequestId, this.password).subscribe(function (passwordUpdated) {
                    _this.success = passwordUpdated.success;
                    _this.email = passwordUpdated.email;
                    _this.openLogin = true;
                    _this.dismissModal();
                }, function (error) {
                    _this.resettingPasswords = true;
                    _this.resetPwdError = true;
                    _this.resetPwdErrorMsg = _this.preference.labelMap.resetPwdRequestError;
                });
            }
        }
    };
    ResetPasswordComponent.prototype.setLabelProps = function () {
        this.title = this.preference.labelMap.resetPwdTitle;
        this.description = this.preference.labelMap.resetPwdDescriptionEnteringNewPasswords;
        this.buttonLabel = this.preference.labelMap.resetPwdButtonLabel;
        this.resendRequestBtnLabel = this.preference.labelMap.resetPwdResendRequestButtonLabel;
    };
    ResetPasswordComponent.prototype.resendPasswordResetRequest = function () {
        var _this = this;
        this.resendingRequest = true;
        this.resendPasswordRequestSuccess = false;
        this.authService.resendPasswordReset(this.passedData.passwordRequestId).subscribe(function (passwordResetValid) {
            _this.resendingRequest = false;
            _this.resendPasswordRequestSuccess = true;
            _this.resetPwdError = false;
            _this.success = true;
            _this.resendPasswordRequestSuccessMsg = _this.preference.labelMap.resetPwdEmailSent;
            if (_this.resendPasswordRequestSuccessMsg.indexOf('%CLIENT_EMAILADDRESS%') !== -1)
                if (passwordResetValid.email)
                    _this.resendPasswordRequestSuccessMsg = _this.resendPasswordRequestSuccessMsg.replace(new RegExp('%CLIENT_EMAILADDRESS%', 'g'), passwordResetValid.email);
                else
                    _this.resendPasswordRequestSuccessMsg = _this.resendPasswordRequestSuccessMsg.replace(new RegExp('%CLIENT_EMAILADDRESS%', 'g'), 'your email');
            _this.handleSuccess();
        });
    };
    ResetPasswordComponent.prototype.checkRequestValid = function () {
        var _this = this;
        this.loading = true;
        this.authService.checkPasswordResetValid(this.passedData.passwordRequestId).subscribe(function (passwordResetValid) {
            _this.passwordResetRequestActive = passwordResetValid;
            if (!passwordResetValid) {
                _this.resetPwdError = true;
                _this.resetPwdErrorMsg = _this.preference.labelMap.resetPwdRequestExpired;
            }
            _this.loading = false;
        });
    };
    ResetPasswordComponent.prototype.ngOnInit = function () {
        this.checkRequestValid();
        this.setLabelProps();
    };
    ResetPasswordComponent.ctorParameters = function () { return [
        { type: _auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"] },
        { type: ResetPasswordModalData, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"],] }] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_4__["TagsService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialogRef"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_6__["SchedulerPreferenceService"] }
    ]; };
    ResetPasswordComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-reset-password',
            template: __webpack_require__(/*! raw-loader!./reset-password.component.html */ "./node_modules/raw-loader/index.js!./src/app/auth/reset-password/reset-password.component.html"),
            styles: [__webpack_require__(/*! ../../form-field-styles.component.css */ "./src/app/form-field-styles.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"], ResetPasswordModalData, _tags_service__WEBPACK_IMPORTED_MODULE_4__["TagsService"],
            _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialogRef"], _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_6__["SchedulerPreferenceService"]])
    ], ResetPasswordComponent);
    return ResetPasswordComponent;
}());



/***/ }),

/***/ "./src/app/auth/reset-password/reset-password.module.ts":
/*!**************************************************************!*\
  !*** ./src/app/auth/reset-password/reset-password.module.ts ***!
  \**************************************************************/
/*! exports provided: ResetPasswordModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResetPasswordModule", function() { return ResetPasswordModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _reset_password_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reset-password.component */ "./src/app/auth/reset-password/reset-password.component.ts");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../material.module */ "./src/app/material.module.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../ui-elements/ui-elements.module */ "./src/app/ui-elements/ui-elements.module.ts");







var ResetPasswordModule = /** @class */ (function () {
    function ResetPasswordModule() {
    }
    ResetPasswordModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [_reset_password_component__WEBPACK_IMPORTED_MODULE_3__["ResetPasswordComponent"]],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
                _material_module__WEBPACK_IMPORTED_MODULE_4__["MaterialModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormsModule"],
                _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_6__["UIElementsModule"]
            ],
            entryComponents: [_reset_password_component__WEBPACK_IMPORTED_MODULE_3__["ResetPasswordComponent"]],
            exports: [_reset_password_component__WEBPACK_IMPORTED_MODULE_3__["ResetPasswordComponent"]]
        })
    ], ResetPasswordModule);
    return ResetPasswordModule;
}());



/***/ }),

/***/ "./src/app/booking-components/availability-calendar/availability-calendar.component.css":
/*!**********************************************************************************************!*\
  !*** ./src/app/booking-components/availability-calendar/availability-calendar.component.css ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "mat-form-field {\n    width: 100%;\n}\n.calendar-dropdown {\n    min-width: 90%;\n    padding: 0.65rem 0;\n    background: #fff;\n    box-shadow: 0px 0px 50px 0px rgba(82, 63, 105, 0.15);\n    border-radius: 0.42rem;\n    position: absolute;\n    top: 80%;\n    left: auto /*rtl:ignore*/ !important;\n    z-index: 999;\n    display: block;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9va2luZy1jb21wb25lbnRzL2F2YWlsYWJpbGl0eS1jYWxlbmRhci9hdmFpbGFiaWxpdHktY2FsZW5kYXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZjtBQUNBO0lBQ0ksY0FBYztJQUNkLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFFaEIsb0RBQW9EO0lBQ3BELHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLG9DQUFvQztJQUNwQyxZQUFZO0lBQ1osY0FBYztBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2Jvb2tpbmctY29tcG9uZW50cy9hdmFpbGFiaWxpdHktY2FsZW5kYXIvYXZhaWxhYmlsaXR5LWNhbGVuZGFyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG4uY2FsZW5kYXItZHJvcGRvd24ge1xuICAgIG1pbi13aWR0aDogOTAlO1xuICAgIHBhZGRpbmc6IDAuNjVyZW0gMDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIC13ZWJraXQtYm94LXNoYWRvdzogMHB4IDBweCA1MHB4IDBweCByZ2JhKDgyLCA2MywgMTA1LCAwLjE1KTtcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDUwcHggMHB4IHJnYmEoODIsIDYzLCAxMDUsIDAuMTUpO1xuICAgIGJvcmRlci1yYWRpdXM6IDAuNDJyZW07XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogODAlO1xuICAgIGxlZnQ6IGF1dG8gLypydGw6aWdub3JlKi8gIWltcG9ydGFudDtcbiAgICB6LWluZGV4OiA5OTk7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG4iXX0= */"

/***/ }),

/***/ "./src/app/booking-components/availability-calendar/availability-calendar.component.ts":
/*!*********************************************************************************************!*\
  !*** ./src/app/booking-components/availability-calendar/availability-calendar.component.ts ***!
  \*********************************************************************************************/
/*! exports provided: AvailabilityCalendarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AvailabilityCalendarComponent", function() { return AvailabilityCalendarComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_MainObjectTypes_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../models/MainObjectTypes.model */ "./src/models/MainObjectTypes.model.ts");
/* harmony import */ var _scheduler_time_time_objects_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../scheduler/time/time-objects.model */ "./src/app/scheduler/time/time-objects.model.ts");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _format_functions_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../format-functions.service */ "./src/app/format-functions.service.ts");
/* harmony import */ var _waitlist_join_wait_list_join_wait_list_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../waitlist/join-wait-list/join-wait-list.service */ "./src/app/waitlist/join-wait-list/join-wait-list.service.ts");
/* harmony import */ var _availability_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../availability.service */ "./src/app/booking-components/availability.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");










var AvailabilityCalendarComponent = /** @class */ (function () {
    function AvailabilityCalendarComponent(timeService, formatFunctionsService, joinWaitListService, availabilityService, schedulerPreferenceService) {
        this.timeService = timeService;
        this.formatFunctionsService = formatFunctionsService;
        this.joinWaitListService = joinWaitListService;
        this.availabilityService = availabilityService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.calendarVisible = false;
        this.editing = false;
        this.onSetDay = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.mainObjectTypes = _models_MainObjectTypes_model__WEBPACK_IMPORTED_MODULE_2__["MainObjectTypes"];
        this.monthAvailabilityLoaded = false;
        this.monthHasAvailability = false;
        this.currentDate = new Date();
        this.activeYear = this.currentDate.getFullYear();
        this.activeMonth = this.currentDate.getMonth() + 1;
        this.activeDay = this.currentDate.getDate();
        this.monthDays = [];
        this.monthsData = this.timeService.getMonthsData(this.activeYear);
        this.weekdays = this.timeService.getWeekdayData();
        this.currentMonthData = this.monthsData[this.activeMonth - 1];
        this.loading = true;
        this.waitlistMode = false;
        this.allowGetNextMonth = false;
        this.allowGetPrevMonth = false;
        this.preference = schedulerPreferenceService.schedulerPreference;
    }
    AvailabilityCalendarComponent.prototype.checkAllowClickNonAvailableDay = function (day) {
        var daySelected = new _scheduler_time_time_objects_model__WEBPACK_IMPORTED_MODULE_3__["SingleDateAvailability"](day.dayNumInMonth, this.monthAvailability.month - 1, this.monthAvailability.year);
        if (this.objectType === this.mainObjectTypes.WAIT_LIST && this.preference.booleanMap && this.preference.booleanMap.allowWaitListRegistrationOutsideOfAvailability) {
            if (daySelected.date >= this.availabilityService.minBookingDate && daySelected.date <= this.availabilityService.maxBookingDate)
                return true;
            else
                return false;
        }
        else
            return false;
    };
    AvailabilityCalendarComponent.prototype.setCalendarMonthTitle = function () {
        this.calendarMonthTitle = this.timeService.getMonthAbbrWithDatePipe(this.currentMonthData.startDateOfMonth) + ' ' + this.timeService.getPipeYearFromDate(this.currentMonthData.startDateOfMonth);
    };
    AvailabilityCalendarComponent.prototype.setDay = function (day, event) {
        if (day.available || this.checkAllowClickNonAvailableDay(day)) {
            event.preventDefault();
            this.hideCalendar();
            this.activeDay = day.dayNumInMonth;
            var utcDate = new Date(Date.UTC(this.monthAvailability.year, this.monthAvailability.month - 1, day.dayNumInMonth));
            var daySelected = new _scheduler_time_time_objects_model__WEBPACK_IMPORTED_MODULE_3__["SingleDateAvailability"](day.dayNumInMonth, this.monthAvailability.month - 1, this.monthAvailability.year, utcDate);
            var selectedDayChanged = false;
            if (this.selectedDate === undefined ||
                this.selectedDate.day !== daySelected.day ||
                this.selectedDate.month !== daySelected.month ||
                this.selectedDate.year !== daySelected.year) {
                this.selectedDate = daySelected;
                selectedDayChanged = true;
            }
            if (selectedDayChanged) {
                for (var i = 0, x = this.monthAvailability.openDays.length; i < x; i++)
                    if (this.monthAvailability.openDays[i].day === day.dayNumInMonth &&
                        (this.selectedDate === undefined ||
                            this.selectedDate.day !== this.monthAvailability.openDays[i].day ||
                            this.selectedDate.month !== this.monthAvailability.openDays[i].month ||
                            this.selectedDate.year !== this.monthAvailability.openDays[i].year)) {
                        this.selectedDate = this.monthAvailability.openDays[i];
                    }
                switch (this.objectType) {
                    case _models_MainObjectTypes_model__WEBPACK_IMPORTED_MODULE_2__["MainObjectTypes"].APPT:
                        // this.apptDetailService.convertSelectedDateToApptStartDate(this.selectedDate);
                        // this.availabilityService.currentEventDateChanged.next();
                        // this.onSetDay.emit(this.apptDetailService.currentEvent);
                        break;
                    case _models_MainObjectTypes_model__WEBPACK_IMPORTED_MODULE_2__["MainObjectTypes"].WAIT_LIST:
                        this.joinWaitListService.currentEvent.startDate = this.selectedDate.date;
                        this.availabilityService.currentEventDateChanged.next();
                        this.onSetDay.emit(this.joinWaitListService.currentEvent);
                        break;
                }
            }
        }
    };
    AvailabilityCalendarComponent.prototype.nextMonth = function (currentMonthData, event) {
        event.preventDefault();
        this.loading = true;
        var nextMonthData = this.timeService.moveToNextMonth(currentMonthData, this.activeYear, this.monthsData, this.activeMonth);
        this.activeYear = nextMonthData.activeYear;
        this.activeMonth = nextMonthData.activeMonth;
        this.monthsData = nextMonthData.monthsData;
        this.currentMonthData = this.monthsData[this.activeMonth - 1];
        this.getCalendarDates(this.currentMonthData.currentYear, this.currentMonthData.monthNumberFull);
        this.setCalendarMonthTitle();
    };
    AvailabilityCalendarComponent.prototype.previousMonth = function (currentMonthData, event) {
        event.preventDefault();
        this.loading = true;
        if (currentMonthData.monthNumberIndex === 0) {
            this.activeYear = this.activeYear - 1;
            this.monthsData = this.timeService.getMonthsData(this.activeYear);
            this.activeMonth = 12;
        }
        else
            this.activeMonth = this.activeMonth - 1;
        this.currentMonthData = this.monthsData[this.activeMonth - 1];
        this.getCalendarDates(this.currentMonthData.currentYear, this.currentMonthData.monthNumberFull);
        this.setCalendarMonthTitle();
    };
    AvailabilityCalendarComponent.prototype.setSelectedMonthOnCalendar = function () {
        if (this.monthAvailability.month !== this.activeMonth || this.monthAvailability.month !== this.currentMonthData.monthNumberFull) {
            this.activeMonth = this.monthAvailability.month;
            if (this.activeYear !== this.monthAvailability.year) {
                this.activeYear = this.monthAvailability.year;
                this.monthsData = this.timeService.getMonthsData(this.activeYear);
            }
            this.currentMonthData = this.monthsData[this.activeMonth - 1];
        }
        this.monthDays = this.timeService.getDaysOfMonth(this.activeYear, this.activeMonth, this.monthAvailability);
        this.setCalendarMonthTitle();
    };
    AvailabilityCalendarComponent.prototype.setSelectedDate = function (selectedAvailableDay) {
        this.selectedDate = selectedAvailableDay;
        this.setSelectedMonthOnCalendar();
    };
    AvailabilityCalendarComponent.prototype.organizeMonthDates = function () {
        this.monthAvailabilityLoaded = true;
        if (this.monthAvailability.openDays !== undefined && this.monthAvailability.openDays !== null && this.monthAvailability.openDays.length !== 0) {
            this.monthHasAvailability = true;
            var dateFound = false;
            var selectedDay = Number(this.availabilityService.getEventDay());
            for (var i = 0, x = this.monthAvailability.openDays.length; i < x; i++)
                if (this.monthAvailability.openDays[i].day === selectedDay) {
                    this.setSelectedDate(this.monthAvailability.openDays[i]);
                    dateFound = true;
                }
            if (!dateFound)
                this.setSelectedMonthOnCalendar();
        }
        else { // No open days in selected month
            this.monthHasAvailability = false;
            this.setSelectedMonthOnCalendar();
        }
    };
    AvailabilityCalendarComponent.prototype.getCalendarDates = function (year, month) {
        var _this = this;
        this.loading = true;
        this.availabilityService.getAvailableMonthDates(year, month).subscribe(function (monthAvailability) {
            _this.monthAvailability = monthAvailability;
            _this.loading = false;
            _this.allowGetNextMonth = _this.availabilityService.checkIfNextMonthAllowed(_this.activeYear, _this.activeMonth, _this.currentMonthData);
            _this.allowGetPrevMonth = _this.availabilityService.checkIfPrevMonthAllowed(_this.activeYear, _this.activeMonth, _this.currentMonthData);
            _this.organizeMonthDates();
        });
    };
    AvailabilityCalendarComponent.prototype.dateChanged = function (selectedDate) {
        // console.log(selectedDate);
    };
    AvailabilityCalendarComponent.prototype.navigateAvailableDates = function (event, currentDate) {
        // console.log(event);
        // console.log(currentDate);
    };
    AvailabilityCalendarComponent.prototype.showCalendar = function () {
        this.calendarVisible = true;
        var availabilityFilterData = this.availabilityService.getAvailabilityFilterDataForAppt();
        var availabilityFilterDataChanged = false;
        if (!this.availabilityService.availabilityFilterData)
            availabilityFilterDataChanged = true;
        else
            for (var prop in availabilityFilterData)
                if (Array.isArray(availabilityFilterData[prop]) && !this.formatFunctionsService.arraysEqual(availabilityFilterData[prop], this.availabilityService.availabilityFilterData[prop]))
                    availabilityFilterDataChanged = true;
                else if (!Array.isArray(availabilityFilterData[prop]) && availabilityFilterData[prop] !== this.availabilityService.availabilityFilterData[prop])
                    availabilityFilterDataChanged = true;
        if (availabilityFilterDataChanged)
            this.getCalendarDates(this.availabilityService.getEventYear(), this.availabilityService.getEventMonth());
    };
    AvailabilityCalendarComponent.prototype.keyEvent = function (event) {
        var clickPath = event.composedPath();
        var hideCalendar = true;
        clickPath.forEach(function (eventTarget, index) {
            var htmlElement = eventTarget;
            if (htmlElement.id === 'availabilityCalendar')
                hideCalendar = false;
        });
        if (hideCalendar)
            this.hideCalendar();
    };
    AvailabilityCalendarComponent.prototype.hideCalendar = function () {
        var _this = this;
        setTimeout(function () {
            if (!_this.loading)
                _this.calendarVisible = false;
        }, 250);
    };
    AvailabilityCalendarComponent.prototype.setDateDisplay = function (dateToShow) {
        if (dateToShow instanceof Date) {
            this.dateForDisplay = this.timeService.getShortDateFromDateNoConversion(dateToShow);
            this.activeDay = Number(dateToShow.getDate());
        }
        else {
            this.dateForDisplay = this.timeService.getShortDateFromDate(dateToShow);
            this.activeDay = Number(this.timeService.getPipeDayFromDate(this.originalDate));
        }
        this.originalDate = dateToShow;
    };
    AvailabilityCalendarComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.setDateDisplay(this.availabilityService.currentEvent.startDate);
        this.dateChangedSubscription = this.availabilityService.currentEventDateChanged.subscribe(function () {
            _this.setDateDisplay(_this.availabilityService.currentEvent.startDate);
        });
    };
    AvailabilityCalendarComponent.prototype.ngOnDestroy = function () {
        this.dateChangedSubscription.unsubscribe();
        this.availabilityService.availabilityFilterData = null;
    };
    AvailabilityCalendarComponent.ctorParameters = function () { return [
        { type: _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_5__["TimeService"] },
        { type: _format_functions_service__WEBPACK_IMPORTED_MODULE_6__["FormatFunctionsService"] },
        { type: _waitlist_join_wait_list_join_wait_list_service__WEBPACK_IMPORTED_MODULE_7__["JoinWaitListService"] },
        { type: _availability_service__WEBPACK_IMPORTED_MODULE_8__["AvailabilityService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_9__["SchedulerPreferenceService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], AvailabilityCalendarComponent.prototype, "objectType", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], AvailabilityCalendarComponent.prototype, "editing", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_4__["CSFilterParameterBean"])
    ], AvailabilityCalendarComponent.prototype, "CSFilterObj", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], AvailabilityCalendarComponent.prototype, "timezone", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], AvailabilityCalendarComponent.prototype, "onSetDay", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('window:click', ['$event']),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Function),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object]),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:returntype", void 0)
    ], AvailabilityCalendarComponent.prototype, "keyEvent", null);
    AvailabilityCalendarComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-availability-calendar',
            template: __webpack_require__(/*! raw-loader!./availability-calendar.component.html */ "./node_modules/raw-loader/index.js!./src/app/booking-components/availability-calendar/availability-calendar.component.html"),
            styles: [__webpack_require__(/*! ./availability-calendar.component.css */ "./src/app/booking-components/availability-calendar/availability-calendar.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_5__["TimeService"], _format_functions_service__WEBPACK_IMPORTED_MODULE_6__["FormatFunctionsService"], _waitlist_join_wait_list_join_wait_list_service__WEBPACK_IMPORTED_MODULE_7__["JoinWaitListService"],
            _availability_service__WEBPACK_IMPORTED_MODULE_8__["AvailabilityService"], _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_9__["SchedulerPreferenceService"]])
    ], AvailabilityCalendarComponent);
    return AvailabilityCalendarComponent;
}());



/***/ }),

/***/ "./src/app/booking-components/availability.service.ts":
/*!************************************************************!*\
  !*** ./src/app/booking-components/availability.service.ts ***!
  \************************************************************/
/*! exports provided: AvailabilityService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AvailabilityService", function() { return AvailabilityService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/index */ "./node_modules/rxjs/index.js");
/* harmony import */ var rxjs_index__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(rxjs_index__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _models_WaitList_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../models/WaitList.model */ "./src/models/WaitList.model.ts");
/* harmony import */ var _models_MainObjectTypes_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../models/MainObjectTypes.model */ "./src/models/MainObjectTypes.model.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _scheduler_time_time_objects_model__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../scheduler/time/time-objects.model */ "./src/app/scheduler/time/time-objects.model.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs/internal/operators */ "./node_modules/rxjs/internal/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _api_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../api.service */ "./src/app/api.service.ts");
/* harmony import */ var _models_AvailabilityFilterData_model__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../models/AvailabilityFilterData.model */ "./src/models/AvailabilityFilterData.model.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _pipes_militaryTimeConversion_pipe__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../pipes/militaryTimeConversion.pipe */ "./src/pipes/militaryTimeConversion.pipe.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _models_Reason_model__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../models/Reason.model */ "./src/models/Reason.model.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _format_functions_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../format-functions.service */ "./src/app/format-functions.service.ts");


















var AvailabilityService = /** @class */ (function () {
    function AvailabilityService(injector, http, militaryTimeConversion) {
        this.injector = injector;
        this.http = http;
        this.militaryTimeConversion = militaryTimeConversion;
        this.currentEventDateChanged = new rxjs_index__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.currentEventChanged = new rxjs_index__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.timeRemoved = new rxjs_index__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.maxBookingDate = new Date();
        this.minBookingDate = new Date();
        this.waitListMode = false;
        this.apiService = injector.get(_api_service__WEBPACK_IMPORTED_MODULE_10__["ApiService"]);
        this.timeService = injector.get(_scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_3__["TimeService"]);
        this.schedulerPreferenceService = injector.get(_scheduler_preference_service__WEBPACK_IMPORTED_MODULE_16__["SchedulerPreferenceService"]);
        this.formatFnsService = injector.get(_format_functions_service__WEBPACK_IMPORTED_MODULE_17__["FormatFunctionsService"]);
        this.businessService = injector.get(_business_service__WEBPACK_IMPORTED_MODULE_14__["BusinessService"]);
    }
    AvailabilityService.prototype.setMinMaxBookingDates = function (reason) {
        var hrsInMsForMinBookingDate = reason.apptHrMin * this.timeService.oneHrMs;
        var minBookingDateMs = new Date().getTime() + hrsInMsForMinBookingDate;
        var localMinBookingDate = new Date(minBookingDateMs);
        var UTCDate = Date.UTC(localMinBookingDate.getUTCFullYear(), localMinBookingDate.getUTCMonth(), localMinBookingDate.getUTCDate(), localMinBookingDate.getUTCHours(), localMinBookingDate.getUTCMinutes());
        this.minBookingDate = new Date(UTCDate);
        var daysInMsForMaxBookingDate = (reason.apptDayMax + 1) * this.timeService.oneDayMs;
        var maxBookingDateMs = new Date().getTime() + daysInMsForMaxBookingDate;
        this.maxBookingDate = new Date(maxBookingDateMs);
    };
    AvailabilityService.prototype.setCurrentEvent = function (event, eventType, onRemoveTime) {
        var oldEventData = lodash__WEBPACK_IMPORTED_MODULE_12__["cloneDeep"](this.currentEvent);
        this.currentEvent = event;
        var newEventData = lodash__WEBPACK_IMPORTED_MODULE_12__["cloneDeep"](event);
        this.currentEventType = eventType;
        this.currentEventChanged.next({ newEventData: newEventData, oldEventData: oldEventData });
        if (onRemoveTime)
            this.timeRemoved.next();
    };
    AvailabilityService.prototype.clearCurrentEvent = function () {
        this.currentEvent = null;
        this.availabilityFilterData = null;
    };
    AvailabilityService.prototype.getAvailableMonthDates = function (year, month) {
        var _this = this;
        var availabilityFilterData = this.getAvailabilityFilterDataForAppt();
        this.availabilityFilterData = availabilityFilterData;
        return this.http.post(this.apiService.apiUrl + 'availability/' + year + '/' + month, availabilityFilterData, { observe: 'body', responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_9__["catchError"])(function (err, caught) { return _this.apiService.handleError(err); }));
    };
    AvailabilityService.prototype.getMonthDatesServices = function (CSFilterObj, year, month, findBestMonth, duration) {
        if (CSFilterObj.staffIdList !== null && CSFilterObj.staffIdList.length === 1 && CSFilterObj.staffIdList[0] === null) {
            CSFilterObj.staffIdList = null;
        }
        var paramsToPass = new _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpParams"]();
        paramsToPass = paramsToPass.append('findBestMonth', JSON.stringify(findBestMonth));
        paramsToPass = paramsToPass.append('duration', JSON.stringify(duration));
        paramsToPass = paramsToPass.append('waitListMode', JSON.stringify(this.waitListMode));
        return this.http
            .post(this.apiService.apiUrl + 'availability/month/' + year + '/' + month, CSFilterObj, { observe: "body", responseType: 'json', params: paramsToPass })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_9__["catchError"])(this.apiService.handleError));
    };
    AvailabilityService.prototype.getFullDateFromTime = function (time, year, month, day) {
        var hourMinuteObj = this.timeService.getTimeString(time);
        return new Date(year, month - 1, day, hourMinuteObj.hourNum, hourMinuteObj.minuteNum);
    };
    AvailabilityService.prototype.configureDateAvailability = function (dateAvailability, csFilterObj, selectedDate) {
        var propForStartTimeFormatting = 'startTime';
        var propForEndTimeFormatting = 'endTime';
        var propForStartDateFormatting = 'staffStartDate';
        var propForEndDateFormatting = 'staffEndDate';
        var timezoneToUse = this.businessService.businessTimezone; // LHB 09/17/2020 TT-7003 instead of using those props, switched to using timezone and getting the startTimeDateForTimeslotDisplay with the UTC time on the timeslot object
        if (this.schedulerPreferenceService.schedulerPreference.allowTZChange === 1) {
            propForStartTimeFormatting = 'clientStartTime';
            propForEndTimeFormatting = 'clientEndTime';
            propForStartDateFormatting = 'clientStartDate';
            propForEndDateFormatting = 'clientEndDate';
            timezoneToUse = csFilterObj.clientTimeZone; // LHB 09/17/2020 TT-7003 instead of using those props, switched to using timezone and getting the startTimeDateForTimeslotDisplay with the UTC time on the timeslot object
        }
        if (dateAvailability.timeSlots && dateAvailability.timeSlots.length !== 0) {
            //First loop through and make sure that time slots are available based on apptHrMin and apptHrMax
            var validTimeSlots = [];
            for (var i = 0, x = dateAvailability.timeSlots.length; i < x; i++) {
                var dateToCompare = this.getFullDateFromTime(dateAvailability.timeSlots[i].clientStartTime, selectedDate.year, selectedDate.month, selectedDate.day);
                if (dateToCompare <= this.maxBookingDate)
                    validTimeSlots.push(dateAvailability.timeSlots[i]);
                dateAvailability.timeSlots[i].waitListMode = this.waitListMode;
            }
            validTimeSlots.sort(function (a, b) { return (a.staffStartDateTimeUTC > b.staffStartDateTimeUTC) ? 1 : -1; });
            dateAvailability.timeSlots = validTimeSlots;
        }
        if (dateAvailability.timeSlots !== null && dateAvailability.timeSlots.length !== 0) {
            for (var i = 0, x = dateAvailability.timeSlots.length; i < x; i++) {
                // this.dateAvailability.timeSlots[i].startTimeDateForTimeslotDisplay = this.tagsService.getTimeWithMoment(this.dateAvailability.timeSlots[i][propForStartTimeFormatting], this.dateAvailability.timeSlots[i][propForStartDateFormatting], this.preference.allowTZChange, undefined, this.dateAvailability.timeSlots[i]);
                // this.dateAvailability.timeSlots[i].endTimeDateForTimeslotDisplay = this.tagsService.getTimeWithMoment(this.dateAvailability.timeSlots[i][propForEndTimeFormatting], this.dateAvailability.timeSlots[i][propForEndDateFormatting], this.preference.allowTZChange, undefined, this.dateAvailability.timeSlots[i]);
                // LHB 09/17/2020 TT-7003 instead of using methods above props, switched to using timezone and getting the startTimeDateForTimeslotDisplay with the UTC time on the timeslot object
                dateAvailability.timeSlots[i].startTimeDateForTimeslotDisplay = this.timeService.getTimeFromUTCTimeInClientTimezone(dateAvailability.timeSlots[i].staffStartDateTimeUTC, timezoneToUse);
                dateAvailability.timeSlots[i].endTimeDateForTimeslotDisplay = this.timeService.getTimeFromUTCTimeInClientTimezone(dateAvailability.timeSlots[i].staffEndDateTimeUTC, timezoneToUse);
                //Starttime date in business's timezone
                dateAvailability.timeSlots[i].startTimeDate = this.timeService.getTimeWithMoment(dateAvailability.timeSlots[i].startTime, dateAvailability.timeSlots[i].staffStartDate, 0, csFilterObj.businessTimeZone);
                dateAvailability.timeSlots[i].endTimeDate = this.timeService.getTimeWithMoment(dateAvailability.timeSlots[i].endTime, dateAvailability.timeSlots[i].staffEndDate, 0, csFilterObj.businessTimeZone);
                dateAvailability.timeSlots[i].timeSlotId = selectedDate.year + '-' + selectedDate.month + '-' + selectedDate.day + ':' + dateAvailability.timeSlots[i].staffStartTime + '-' + dateAvailability.timeSlots[i].staffEndTime;
                dateAvailability.timeSlots[i].clientTimeSlotId = selectedDate.year + '-' + selectedDate.month + '-' + selectedDate.day + ':' + dateAvailability.timeSlots[i].clientStartTime + '-' + dateAvailability.timeSlots[i].clientEndTime;
                dateAvailability.timeSlots[i].htmlId = dateAvailability.timeSlots[i].timeSlotId + dateAvailability.timeSlots[i].clientTimeSlotId;
                dateAvailability.timeSlots[i].classScheduleId = null;
            }
            for (var i = 0, x = dateAvailability.timeSlots.length; i < x; i++) { // LHB 09/17/2020 TT-7003 check to remove times that are the same for the client but the staff is different because staff is in different timezones
                if (!dateAvailability.timeSlots[i].duplicate) {
                    var timeSlotId = dateAvailability.timeSlots[i].timeSlotId;
                    var clientTimeSlotId = dateAvailability.timeSlots[i].clientTimeSlotId;
                    for (var j = 0, y = dateAvailability.timeSlots.length; j < y; j++) {
                        if (dateAvailability.timeSlots[j].clientTimeSlotId === clientTimeSlotId &&
                            dateAvailability.timeSlots[j].timeSlotId !== timeSlotId) {
                            dateAvailability.timeSlots[j].duplicate = true;
                        }
                    }
                }
            }
        }
        return dateAvailability;
    };
    AvailabilityService.prototype.getDateAvailabilityServices = function (CSFilterObj, selectedDate, duration) {
        var _this = this;
        if (CSFilterObj.staffIdList !== null && CSFilterObj.staffIdList.length === 1 && CSFilterObj.staffIdList[0] === null) {
            CSFilterObj.staffIdList = null;
        }
        var paramsToPass = new _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpParams"]();
        paramsToPass = paramsToPass.append('duration', JSON.stringify(duration));
        paramsToPass = paramsToPass.append('waitListMode', JSON.stringify(this.waitListMode));
        return this.http
            .post(this.apiService.apiUrl + 'availability/day/' + selectedDate.year + '/' + selectedDate.month + '/' + selectedDate.day, CSFilterObj, { observe: "body", responseType: 'json', params: paramsToPass })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["map"])(function (responseData) {
            return _this.configureDateAvailability(responseData, CSFilterObj, selectedDate);
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_9__["catchError"])(this.apiService.handleError));
    };
    AvailabilityService.prototype.convertTimeSlots = function (timeSlots) {
        var timezoneToUse = this.timeService.getTimeZoneLabel(this.currentEvent);
        if (this.schedulerPreferenceService.schedulerPreference.allowTZChange && this.timeService.clientTimezone)
            timezoneToUse = this.timeService.clientTimezone;
        for (var i = 0, x = timeSlots.length; i < x; i++) {
            timeSlots[i].selected = false;
            if (!timeSlots[i].courseSet)
                timeSlots[i].timeString = this.timeService.configureTimeDisplay(timezoneToUse, timeSlots[i], 'staffStartDateTimeUTC', 'staffEndDateTimeUTC', this.schedulerPreferenceService.schedulerPreference, this.currentEvent.reason, this.currentEvent.startDate);
            if (this.schedulerPreferenceService.schedulerPreference.booleanMap && this.schedulerPreferenceService.schedulerPreference.booleanMap.timePnlShowTimezones)
                timeSlots[i].timeString += ' (' + this.formatFnsService.removeUnderscoresInLabels(timezoneToUse) + ')';
            if (this.currentEvent.reason.reasonType === _models_Reason_model__WEBPACK_IMPORTED_MODULE_15__["ReasonTypes"].CLASS)
                timeSlots[i].timeString += ' (' + timeSlots[i].currentCapacity + '/' + timeSlots[i].maxCapacity + ' seats filled)';
        }
        return timeSlots;
    };
    AvailabilityService.prototype.convertCourseSetsIntoTimeSlots = function (courseSets) {
        var timeSlots = [];
        for (var i = 0, x = courseSets.length; i < x; i++) {
            var timeSlot = new _scheduler_time_time_objects_model__WEBPACK_IMPORTED_MODULE_7__["SingleTimeSlot"]();
            timeSlot.convertClassSessionToTimeSlot(courseSets[i].classSessions[0], this.militaryTimeConversion, this.schedulerPreferenceService.schedulerPreference.timeFormat24Hrs, this.waitListMode, this.timeService);
            timeSlot.convertCourseSetToTimeSlot(courseSets[i], this.timeService, this.waitListMode);
            timeSlots.push(timeSlot);
        }
        timeSlots = this.convertTimeSlots(timeSlots);
        return timeSlots;
    };
    AvailabilityService.prototype.getTimeSlots = function () {
        var _this = this;
        var month = this.timeService.getPipeMonthFromDate(this.currentEvent.startDate);
        var year = this.timeService.getPipeYearFromDate(this.currentEvent.startDate);
        var day = this.timeService.getPipeDayFromDate(this.currentEvent.startDate);
        var availabilityFilterData = this.getAvailabilityFilterDataForAppt();
        return this.http.post(this.apiService.apiUrl + 'availability/' + year + '/' + month + '/' + day, availabilityFilterData, { observe: 'body', responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["map"])(function (responseData) {
            var selectedDate = new _scheduler_time_time_objects_model__WEBPACK_IMPORTED_MODULE_7__["SingleDateAvailability"](Number(day), Number(month), Number(year));
            responseData = _this.configureDateAvailability(responseData, availabilityFilterData, selectedDate);
            responseData.timeSlots = _this.convertTimeSlots(responseData.timeSlots);
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_9__["catchError"])(function (err, caught) { return _this.apiService.handleError(err); }));
    };
    AvailabilityService.prototype.getRecurringAvailabilityServices = function (CSFilterObj, numberOfAppointments, startDate, daysOfWeek) {
        var daysOfWeekString = '';
        if (daysOfWeek !== undefined && daysOfWeek !== null && daysOfWeek.length !== 0) {
            for (var i = 0, x = daysOfWeek.length; i < x; i++) {
                if (i === 0)
                    daysOfWeekString += daysOfWeek[i];
                else
                    daysOfWeekString = daysOfWeekString + "," + daysOfWeek[i];
            }
        }
        else {
            daysOfWeekString = null;
        }
        var paramsToPass = new _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpParams"]();
        paramsToPass = paramsToPass.append('sessions', JSON.stringify(numberOfAppointments));
        paramsToPass = paramsToPass.append('startDate', startDate);
        paramsToPass = paramsToPass.append('daysOfWeek', daysOfWeekString);
        return this.http
            .post(this.apiService.apiUrl + 'availability/recurring', CSFilterObj, { observe: "body", responseType: 'json', params: paramsToPass })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_9__["catchError"])(this.apiService.handleError));
    };
    AvailabilityService.prototype.getMonthDatesClasses = function (CSFilterObj, year, month, findBestMonth) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpParams"]();
        params = params.append('findBestMonth', JSON.stringify(findBestMonth));
        params = params.append('waitListMode', JSON.stringify(this.waitListMode));
        return this.http
            .post(this.apiService.apiUrl + 'availability/class/month/' + year + '/' + month, CSFilterObj, { observe: "body", responseType: 'json', params: params })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_9__["catchError"])(this.apiService.handleError));
    };
    AvailabilityService.prototype.getDateAvailabilityClasses = function (CSFilterObj, year, month, day) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpParams"]();
        params = params.append('waitListMode', JSON.stringify(this.waitListMode));
        return this.http
            .post(this.apiService.apiUrl + 'availability/class/day/' + year + '/' + month + '/' + day, CSFilterObj, { observe: "body", responseType: 'json', params: params })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_9__["catchError"])(this.apiService.handleError));
    };
    AvailabilityService.prototype.getAvailabilityClassesNoCalendar = function (CSFilterObj) {
        return this.http
            .post(this.apiService.apiUrl + 'availability/class/noCalendar', CSFilterObj, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_9__["catchError"])(this.apiService.handleError));
    };
    AvailabilityService.prototype.getCourseSets = function (CSFilterObj) {
        var paramsToPass = new _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpParams"]();
        paramsToPass = paramsToPass.append('waitListMode', JSON.stringify(this.waitListMode));
        return this.http
            .post(this.apiService.apiUrl + 'availability/courses', CSFilterObj, { observe: "body", responseType: 'json', params: paramsToPass })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_9__["catchError"])(this.apiService.handleError));
    };
    AvailabilityService.prototype.addTimeLock = function (timeLock) {
        return this.http
            .post(this.apiService.apiUrl + 'addTimeLock', timeLock, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_9__["catchError"])(this.apiService.handleError));
    };
    AvailabilityService.prototype.removeTimeLock = function (timeLock) {
        return this.http
            .post(this.apiService.apiUrl + 'removeTimeLock', timeLock, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_9__["catchError"])(this.apiService.handleError));
    };
    AvailabilityService.prototype.getApptDuration = function (event, eventType) {
        var duration;
        var checkUTCTimeProps = false;
        var startDateTimeUTC = 0;
        var endDateTimeUTC = 0;
        if (eventType === _models_MainObjectTypes_model__WEBPACK_IMPORTED_MODULE_5__["MainObjectTypes"].APPT) {
            event = event;
            if (event.startDateTimeUTC && event.endDateTimeUTC &&
                typeof event.startDateTimeUTC === 'number' && typeof event.endDateTimeUTC === 'number') {
                checkUTCTimeProps = true;
                startDateTimeUTC = event.startDateTimeUTC;
                endDateTimeUTC = event.endDateTimeUTC;
            }
        }
        if (event.duration && event.duration.duration)
            duration = event.duration.duration;
        else if (checkUTCTimeProps)
            duration = ((endDateTimeUTC - startDateTimeUTC) / 1000) / 60;
        else if (event.reason)
            duration = event.reason.visitMinutes;
        return duration;
    };
    AvailabilityService.prototype.getAvailabilityFilterDataForAppt = function () {
        var availabilityFilterData = new _models_AvailabilityFilterData_model__WEBPACK_IMPORTED_MODULE_11__["AvailabilityFilterData"]();
        var eventForParams = lodash__WEBPACK_IMPORTED_MODULE_12__["cloneDeep"](this.currentEvent);
        availabilityFilterData.duration = this.getApptDuration(this.currentEvent, this.currentEventType);
        availabilityFilterData.reasonIdList = [eventForParams.reason.reasonId];
        if (this.currentEvent instanceof _models_WaitList_model__WEBPACK_IMPORTED_MODULE_4__["WaitList"])
            availabilityFilterData.waitListMode = true;
        else
            availabilityFilterData.waitListMode = false;
        if (eventForParams.client && eventForParams.client.clientId)
            availabilityFilterData.clientId = eventForParams.client.clientId;
        else
            availabilityFilterData.showClientTimezone = false;
        if (eventForParams.staff && eventForParams.staff.professionalId)
            availabilityFilterData.staffIdList = [eventForParams.staff.professionalId];
        if (eventForParams.location && eventForParams.location.locationId)
            availabilityFilterData.locationIdList = [eventForParams.location.locationId];
        else if (eventForParams.locationGroup && eventForParams.locationGroup.groupId)
            availabilityFilterData.locationGroupIdList = [eventForParams.locationGroup.groupId];
        if (eventForParams.address)
            availabilityFilterData.address = eventForParams.address;
        if (this.schedulerPreferenceService.schedulerPreference.allowTZChange === 1) {
            availabilityFilterData.showClientTimezone = true;
            availabilityFilterData.clientTimeZone = this.timeService.clientTimezone;
        }
        return availabilityFilterData;
    };
    AvailabilityService.prototype.getEventYear = function () {
        if (this.currentEvent.startDateTimeUTC)
            return this.timeService.getPipeYearFromDate(this.currentEvent.startDateTimeUTC);
        else if (this.currentEvent.startDate)
            return this.timeService.getPipeYearFromDate(this.currentEvent.startDate);
        else
            return this.timeService.getPipeYearFromDate(new Date());
    };
    AvailabilityService.prototype.getEventMonth = function () {
        if (this.currentEvent.startDateTimeUTC)
            return this.timeService.getPipeMonthFromDate(this.currentEvent.startDateTimeUTC);
        else if (this.currentEvent.startDate)
            return this.timeService.getPipeMonthFromDate(this.currentEvent.startDate);
        else
            return this.timeService.getPipeMonthFromDate(new Date());
    };
    AvailabilityService.prototype.getEventDay = function () {
        if (this.currentEvent.startDateTimeUTC)
            return this.timeService.getPipeDayFromDate(this.currentEvent.startDateTimeUTC);
        else if (this.currentEvent.startDate)
            return this.timeService.getPipeDayFromDate(this.currentEvent.startDate);
        else
            return this.timeService.getPipeDayFromDate(new Date());
    };
    AvailabilityService.prototype.createTimeSlotsFromWaitlist = function () {
        var timeSlots = [];
        if (this.currentEvent instanceof _models_WaitList_model__WEBPACK_IMPORTED_MODULE_4__["WaitList"] && this.currentEvent.waitListDateList && this.currentEvent.waitListDateList.length > 0) {
            for (var i = 0, x = this.currentEvent.waitListDateList.length; i < x; i++)
                for (var j = 0, y = this.currentEvent.waitListDateList[i].waitListDateTimeList.length; j < y; j++) {
                    var timeSlot = new _scheduler_time_time_objects_model__WEBPACK_IMPORTED_MODULE_7__["SingleTimeSlot"]();
                    timeSlot.createTimeSlotFromWaitListDateTime(this.currentEvent.waitListDateList[i].waitListDateTimeList[j], this.currentEvent.waitListDateList[i], this.currentEvent, this.militaryTimeConversion, this.schedulerPreferenceService.schedulerPreference.timeFormat24Hrs, this.timeService);
                    timeSlots.push(timeSlot);
                }
        }
        return timeSlots;
    };
    AvailabilityService.prototype.createFirstAvailableTimeSlot = function (reason, staff, location) {
        var locationId = null;
        var staffId = null;
        var reasonId = reason.reasonId;
        if (location)
            locationId = location.locationId;
        if (staff)
            staffId = staff.professionalId;
        var waitListTimeSlotUnit = new _scheduler_time_time_objects_model__WEBPACK_IMPORTED_MODULE_7__["TimeSlotUnit"]().setProps(locationId, staffId, reasonId, null);
        var stringDate = this.timeService.getStringDateFromTime(new Date());
        var firstAvailTime = new _scheduler_time_time_objects_model__WEBPACK_IMPORTED_MODULE_7__["SingleTimeSlot"]().loadSingleTimeSlot(false, true, 'waitListFirstAvail', [waitListTimeSlotUnit], true, true, stringDate);
        firstAvailTime.clientTimeSlotId = 'waitListFirstAvail';
        firstAvailTime.htmlId = 'waitListFirstAvail';
        return firstAvailTime;
    };
    AvailabilityService.prototype.checkIfNextMonthAllowed = function (activeYear, activeMonth, currentMonthData, maxBookingDate, minBookingDate) {
        if (!maxBookingDate)
            maxBookingDate = this.maxBookingDate;
        if (!minBookingDate)
            minBookingDate = this.minBookingDate;
        var allowGetNextMonth = false;
        var nextYear = activeYear;
        var nextMonth = activeMonth + 1;
        if (currentMonthData.monthNumberIndex === 11) {
            nextYear = nextYear + 1;
            nextMonth = 1;
        }
        var nextMonthYearMs = new Date(nextYear, nextMonth - 1, 1).getTime();
        if (nextMonthYearMs <= maxBookingDate.getTime() && nextMonthYearMs >= minBookingDate.getTime())
            allowGetNextMonth = true;
        return allowGetNextMonth;
    };
    AvailabilityService.prototype.checkIfPrevMonthAllowed = function (activeYear, activeMonth, currentMonthData, maxBookingDate, minBookingDate) {
        if (!maxBookingDate)
            maxBookingDate = this.maxBookingDate;
        if (!minBookingDate)
            minBookingDate = this.minBookingDate;
        var allowGetPrevMonth = false;
        var prevYear = activeYear;
        var prevMonth = activeMonth - 1;
        if (currentMonthData.monthNumberIndex === 0) {
            prevYear = prevYear - 1;
            prevMonth = 12;
        }
        var prevMonthYearMs = new Date(prevYear, prevMonth, 0).getTime(); //when set date to 0 will give you last day of previous month
        if (prevMonthYearMs <= maxBookingDate.getTime() && prevMonthYearMs >= minBookingDate.getTime())
            allowGetPrevMonth = true;
        return allowGetPrevMonth;
    };
    AvailabilityService.ctorParameters = function () { return [
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] },
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClient"] },
        { type: _pipes_militaryTimeConversion_pipe__WEBPACK_IMPORTED_MODULE_13__["MilitaryTimeConversion"] }
    ]; };
    AvailabilityService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"], _angular_common_http__WEBPACK_IMPORTED_MODULE_6__["HttpClient"], _pipes_militaryTimeConversion_pipe__WEBPACK_IMPORTED_MODULE_13__["MilitaryTimeConversion"]])
    ], AvailabilityService);
    return AvailabilityService;
}());



/***/ }),

/***/ "./src/app/booking-components/booking-components.module.ts":
/*!*****************************************************************!*\
  !*** ./src/app/booking-components/booking-components.module.ts ***!
  \*****************************************************************/
/*! exports provided: BookingComponentsModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BookingComponentsModule", function() { return BookingComponentsModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _availability_calendar_availability_calendar_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./availability-calendar/availability-calendar.component */ "./src/app/booking-components/availability-calendar/availability-calendar.component.ts");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../material.module */ "./src/app/material.module.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ui-elements/ui-elements.module */ "./src/app/ui-elements/ui-elements.module.ts");
/* harmony import */ var _timeslot_multi_select_timeslot_multi_select_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./timeslot-multi-select/timeslot-multi-select.component */ "./src/app/booking-components/timeslot-multi-select/timeslot-multi-select.component.ts");
/* harmony import */ var _time_picker_time_picker_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./time-picker/time-picker.component */ "./src/app/booking-components/time-picker/time-picker.component.ts");
/* harmony import */ var ngx_bootstrap_timepicker__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ngx-bootstrap/timepicker */ "./node_modules/ngx-bootstrap/timepicker/fesm5/ngx-bootstrap-timepicker.js");
/* harmony import */ var _booking_object_selector_booking_object_selector_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./booking-object-selector/booking-object-selector.component */ "./src/app/booking-components/booking-object-selector/booking-object-selector.component.ts");











var BookingComponentsModule = /** @class */ (function () {
    function BookingComponentsModule() {
    }
    BookingComponentsModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [_availability_calendar_availability_calendar_component__WEBPACK_IMPORTED_MODULE_3__["AvailabilityCalendarComponent"], _timeslot_multi_select_timeslot_multi_select_component__WEBPACK_IMPORTED_MODULE_7__["TimeslotMultiSelectComponent"], _time_picker_time_picker_component__WEBPACK_IMPORTED_MODULE_8__["TimePickerComponent"], _booking_object_selector_booking_object_selector_component__WEBPACK_IMPORTED_MODULE_10__["BookingObjectSelectorComponent"]],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
                _material_module__WEBPACK_IMPORTED_MODULE_4__["MaterialModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormsModule"],
                _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_6__["UIElementsModule"],
                ngx_bootstrap_timepicker__WEBPACK_IMPORTED_MODULE_9__["TimepickerModule"].forRoot()
            ],
            exports: [_availability_calendar_availability_calendar_component__WEBPACK_IMPORTED_MODULE_3__["AvailabilityCalendarComponent"], _timeslot_multi_select_timeslot_multi_select_component__WEBPACK_IMPORTED_MODULE_7__["TimeslotMultiSelectComponent"], _time_picker_time_picker_component__WEBPACK_IMPORTED_MODULE_8__["TimePickerComponent"], _booking_object_selector_booking_object_selector_component__WEBPACK_IMPORTED_MODULE_10__["BookingObjectSelectorComponent"]]
        })
    ], BookingComponentsModule);
    return BookingComponentsModule;
}());



/***/ }),

/***/ "./src/app/booking-components/booking-components.service.ts":
/*!******************************************************************!*\
  !*** ./src/app/booking-components/booking-components.service.ts ***!
  \******************************************************************/
/*! exports provided: BookingComponentsService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BookingComponentsService", function() { return BookingComponentsService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var BookingComponentsService = /** @class */ (function () {
    function BookingComponentsService() {
    }
    BookingComponentsService.prototype.matchLocations = function (object, objects, addObject) {
        var objFound = false;
        if (object)
            for (var i = 0, x = objects.length; i < x; i++)
                if (objects[i].locationId === object.locationId) {
                    objFound = true;
                    return objects[i];
                }
        if (!objFound) {
            if (object && addObject)
                objects.unshift(object);
            return objects[0];
        }
    };
    BookingComponentsService.prototype.matchStaff = function (object, objects, addObject) {
        var objFound = false;
        if (object)
            for (var i = 0, x = objects.length; i < x; i++)
                if (objects[i].professionalId === object.professionalId) {
                    objFound = true;
                    return objects[i];
                }
        if (!objFound) {
            if (object && addObject)
                objects.unshift(object);
            return objects[0];
        }
    };
    BookingComponentsService.prototype.matchReason = function (object, objects, addObject) {
        var objFound = false;
        if (object)
            for (var i = 0, x = objects.length; i < x; i++)
                if (objects[i].reasonId === object.reasonId) {
                    objFound = true;
                    return objects[i];
                }
        if (!objFound) {
            if (object && addObject)
                objects.unshift(object);
            return objects[0];
        }
    };
    BookingComponentsService.prototype.matchGroup = function (object, objects, addObject) {
        var objFound = false;
        if (object)
            for (var i = 0, x = objects.length; i < x; i++)
                if (objects[i].groupId === object.groupId) {
                    objFound = true;
                    return objects[i];
                }
        if (!objFound) {
            if (object && addObject)
                objects.unshift(object);
            return objects[0];
        }
    };
    BookingComponentsService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], BookingComponentsService);
    return BookingComponentsService;
}());



/***/ }),

/***/ "./src/app/booking-components/booking-object-selector/booking-object-selector.component.ts":
/*!*************************************************************************************************!*\
  !*** ./src/app/booking-components/booking-object-selector/booking-object-selector.component.ts ***!
  \*************************************************************************************************/
/*! exports provided: BookingObjectSelectorComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BookingObjectSelectorComponent", function() { return BookingObjectSelectorComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../models/BookingSelectionOption.model */ "./src/models/BookingSelectionOption.model.ts");
/* harmony import */ var _waitlist_join_wait_list_join_wait_list_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../waitlist/join-wait-list/join-wait-list.service */ "./src/app/waitlist/join-wait-list/join-wait-list.service.ts");
/* harmony import */ var _models_MainObjectTypes_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../models/MainObjectTypes.model */ "./src/models/MainObjectTypes.model.ts");
/* harmony import */ var _models_Group_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../models/Group.model */ "./src/models/Group.model.ts");
/* harmony import */ var _models_Staff_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../models/Staff.model */ "./src/models/Staff.model.ts");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _models_Reason_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../models/Reason.model */ "./src/models/Reason.model.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _booking_components_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../booking-components.service */ "./src/app/booking-components/booking-components.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _reasons_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../reasons.service */ "./src/app/reasons.service.ts");
/* harmony import */ var _config_list_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../config-list.service */ "./src/app/config-list.service.ts");














var BookingObjectSelectorComponent = /** @class */ (function () {
    function BookingObjectSelectorComponent(joinWaitListService, businessService, bookingComponentsService, schedulerPreferenceService, reasonsService, configListService) {
        this.joinWaitListService = joinWaitListService;
        this.businessService = businessService;
        this.bookingComponentsService = bookingComponentsService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.reasonsService = reasonsService;
        this.configListService = configListService;
        this.changeSelection = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.parentObjectChanged = false;
    }
    BookingObjectSelectorComponent.prototype.setObjectOnBookingObject = function () {
        switch (this.bookingSelection.objectType) {
            case _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionObjectTypes"].REASON:
                this.bookingObject.reason = this.bookingSelection.selectedOption;
                break;
            case _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionObjectTypes"].LOCATION:
                this.bookingObject.location = this.bookingSelection.selectedOption;
                break;
            case _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionObjectTypes"].STAFF:
                this.bookingObject.staff = this.bookingSelection.selectedOption;
                break;
            case _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionObjectTypes"].GROUP:
                switch (this.bookingSelection.groupType) {
                    case _models_Group_model__WEBPACK_IMPORTED_MODULE_5__["GroupTypes"].LOCATION_GROUP:
                        this.bookingObject.locationSuperGroup = this.bookingSelection.selectedOption;
                        break;
                    case _models_Group_model__WEBPACK_IMPORTED_MODULE_5__["GroupTypes"].LOCATION:
                        this.bookingObject.locationGroup = this.bookingSelection.selectedOption;
                        break;
                    case _models_Group_model__WEBPACK_IMPORTED_MODULE_5__["GroupTypes"].SERVICE_GROUP:
                        this.bookingObject.reasonSuperGroup = this.bookingSelection.selectedOption;
                        break;
                    case _models_Group_model__WEBPACK_IMPORTED_MODULE_5__["GroupTypes"].SERVICE:
                        this.bookingObject.reasonGroup = this.bookingSelection.selectedOption;
                        break;
                }
                break;
        }
        this.changeSelection.emit(this.bookingObject);
    };
    BookingObjectSelectorComponent.prototype.getBookingObjects = function () {
        var _this = this;
        this.CSFilterObj = this.joinWaitListService.setCSFilterObject(this.bookingSelectionFlow, this.CSFilterObj);
        switch (this.bookingSelection.objectType) {
            case _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionObjectTypes"].LOCATION:
                this.businessService.getLocations(this.CSFilterObj).subscribe(function (locations) {
                    _this.bookingSelection.options = locations;
                    _this.bookingSelection.selectedOption = _this.bookingComponentsService.matchLocations(_this.bookingObject.location, _this.bookingSelection.options, false);
                    _this.setObjectOnBookingObject();
                });
                break;
            case _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionObjectTypes"].STAFF:
                this.businessService.getStaff(this.CSFilterObj).subscribe(function (staff) {
                    if (_this.schedulerPreferenceService.schedulerPreference.staffNoPreference === 0 && staff.length > 1) {
                        var noPreferenceStaff = new _models_Staff_model__WEBPACK_IMPORTED_MODULE_6__["Staff"](null, _this.schedulerPreferenceService.schedulerPreference.labelMap.labelNoPreference);
                        noPreferenceStaff.imageUrl = null;
                        noPreferenceStaff.staffProfile = null;
                        staff.unshift(noPreferenceStaff);
                    }
                    _this.bookingSelection.options = staff;
                    _this.bookingSelection.selectedOption = _this.bookingComponentsService.matchStaff(_this.bookingObject.staff, _this.bookingSelection.options, false);
                    _this.setObjectOnBookingObject();
                });
                break;
            case _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionObjectTypes"].REASON:
                this.reasonsService.getReasons(this.CSFilterObj, true).subscribe(function (reasonReturnData) {
                    if (reasonReturnData.reasonAPIBeanList && reasonReturnData.reasonAPIBeanList.length > 0)
                        _this.bookingSelection.options = reasonReturnData.reasonAPIBeanList;
                    else {
                        var noReasonForBooking = new _models_Reason_model__WEBPACK_IMPORTED_MODULE_8__["Reason"]();
                        noReasonForBooking.createNoWaitListAbleReason(_this.configListService.configList);
                        _this.bookingSelection.options = [noReasonForBooking];
                    }
                    _this.bookingSelection.selectedOption = _this.bookingComponentsService.matchReason(_this.bookingObject.reason, _this.bookingSelection.options, false);
                    _this.setObjectOnBookingObject();
                });
                break;
            case _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionObjectTypes"].GROUP:
                this.businessService.getGroups(this.bookingSelection.groupType, this.CSFilterObj).subscribe(function (groups) {
                    _this.bookingSelection.options = groups;
                    switch (_this.bookingSelection.groupType) {
                        case _models_Group_model__WEBPACK_IMPORTED_MODULE_5__["GroupTypes"].LOCATION_GROUP:
                            _this.bookingSelection.selectedOption = _this.bookingComponentsService.matchGroup(_this.bookingObject.locationSuperGroup, _this.bookingSelection.options, false);
                            break;
                        case _models_Group_model__WEBPACK_IMPORTED_MODULE_5__["GroupTypes"].LOCATION:
                            _this.bookingSelection.selectedOption = _this.bookingComponentsService.matchGroup(_this.bookingObject.locationGroup, _this.bookingSelection.options, false);
                            break;
                        case _models_Group_model__WEBPACK_IMPORTED_MODULE_5__["GroupTypes"].SERVICE_GROUP:
                            _this.bookingSelection.selectedOption = _this.bookingComponentsService.matchGroup(_this.bookingObject.reasonSuperGroup, _this.bookingSelection.options, false);
                            break;
                        case _models_Group_model__WEBPACK_IMPORTED_MODULE_5__["GroupTypes"].SERVICE:
                            _this.bookingSelection.selectedOption = _this.bookingComponentsService.matchGroup(_this.bookingObject.reasonGroup, _this.bookingSelection.options, false);
                            break;
                    }
                    _this.setObjectOnBookingObject();
                });
                break;
        }
    };
    BookingObjectSelectorComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (this.objectType === _models_MainObjectTypes_model__WEBPACK_IMPORTED_MODULE_4__["MainObjectTypes"].WAIT_LIST) {
            this.bookingObject = this.joinWaitListService.getCurrentEvent();
            this.bookingObjectChanged = this.joinWaitListService.currentEventChanged.subscribe(function (currentEventData) {
                _this.bookingObject = currentEventData.newEventData;
                if (currentEventData.oldEventData) {
                    for (var i = 0, x = _this.bookingSelectionFlow.length; i < x; i++) {
                        if (_this.bookingSelectionFlow[i].objectType === _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionObjectTypes"].GROUP &&
                            _this.bookingSelection.objectType === _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionObjectTypes"].GROUP &&
                            _this.bookingSelectionFlow[i].groupType === _this.bookingSelection.groupType)
                            break;
                        if (_this.bookingSelectionFlow[i].objectType === _this.bookingSelection.objectType)
                            break;
                        else {
                            switch (_this.bookingSelectionFlow[i].objectType) {
                                case _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionObjectTypes"].STAFF:
                                    if (currentEventData.newEventData.staff && currentEventData.oldEventData.staff && currentEventData.newEventData.staff.professionalId !== currentEventData.oldEventData.staff.professionalId)
                                        _this.parentObjectChanged = true;
                                    break;
                                case _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionObjectTypes"].LOCATION:
                                    if (currentEventData.newEventData.location && currentEventData.oldEventData.location && currentEventData.newEventData.location.locationId !== currentEventData.oldEventData.location.locationId)
                                        _this.parentObjectChanged = true;
                                    break;
                                case _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionObjectTypes"].REASON:
                                    if (currentEventData.newEventData.reason && currentEventData.oldEventData.reason && currentEventData.newEventData.reason.reasonId !== currentEventData.oldEventData.reason.reasonId)
                                        _this.parentObjectChanged = true;
                                    break;
                                case _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionObjectTypes"].GROUP:
                                    switch (_this.bookingSelectionFlow[i].groupType) {
                                        case _models_Group_model__WEBPACK_IMPORTED_MODULE_5__["GroupTypes"].SERVICE:
                                            if (currentEventData.newEventData.reasonGroup && currentEventData.oldEventData.reasonGroup && currentEventData.newEventData.reasonGroup.groupId !== currentEventData.oldEventData.reasonGroup.groupId)
                                                _this.parentObjectChanged = true;
                                            break;
                                        case _models_Group_model__WEBPACK_IMPORTED_MODULE_5__["GroupTypes"].LOCATION:
                                            if (currentEventData.newEventData.locationGroup && currentEventData.oldEventData.locationGroup && currentEventData.newEventData.locationGroup.groupId !== currentEventData.oldEventData.locationGroup.groupId)
                                                _this.parentObjectChanged = true;
                                            break;
                                        case _models_Group_model__WEBPACK_IMPORTED_MODULE_5__["GroupTypes"].SERVICE_GROUP:
                                            if (currentEventData.newEventData.locationGroup && currentEventData.oldEventData.locationGroup && currentEventData.newEventData.locationGroup.groupId !== currentEventData.oldEventData.locationGroup.groupId)
                                                _this.parentObjectChanged = true;
                                            break;
                                        case _models_Group_model__WEBPACK_IMPORTED_MODULE_5__["GroupTypes"].LOCATION_GROUP:
                                            if (currentEventData.newEventData.locationSuperGroup && currentEventData.oldEventData.locationSuperGroup && currentEventData.newEventData.locationSuperGroup.groupId !== currentEventData.oldEventData.locationSuperGroup.groupId)
                                                _this.parentObjectChanged = true;
                                            break;
                                    }
                                    break;
                            }
                        }
                    }
                    if (_this.parentObjectChanged) {
                        _this.getBookingObjects();
                        _this.parentObjectChanged = false;
                    }
                }
            });
        }
    };
    BookingObjectSelectorComponent.prototype.ngOnDestroy = function () {
        if (this.bookingObjectChanged)
            this.bookingObjectChanged.unsubscribe();
    };
    BookingObjectSelectorComponent.ctorParameters = function () { return [
        { type: _waitlist_join_wait_list_join_wait_list_service__WEBPACK_IMPORTED_MODULE_3__["JoinWaitListService"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_9__["BusinessService"] },
        { type: _booking_components_service__WEBPACK_IMPORTED_MODULE_10__["BookingComponentsService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_11__["SchedulerPreferenceService"] },
        { type: _reasons_service__WEBPACK_IMPORTED_MODULE_12__["ReasonsService"] },
        { type: _config_list_service__WEBPACK_IMPORTED_MODULE_13__["ConfigListService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionOption"])
    ], BookingObjectSelectorComponent.prototype, "bookingSelection", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Array)
    ], BookingObjectSelectorComponent.prototype, "bookingSelectionFlow", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], BookingObjectSelectorComponent.prototype, "objectType", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], BookingObjectSelectorComponent.prototype, "changeSelection", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_7__["CSFilterParameterBean"])
    ], BookingObjectSelectorComponent.prototype, "CSFilterObj", void 0);
    BookingObjectSelectorComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-booking-object-selector',
            template: "\n    <mat-form-field appearance=\"standard\" *ngIf=\"bookingSelection.options\">\n      <mat-label>{{bookingSelection.label |  titlecase}}</mat-label>\n      <mat-select panelClass=\"schedulerFieldDrpdwn\"\n                  [required]=\"false\"\n                  [(value)]=\"bookingSelection.selectedOption\"\n                  placeholder=\"{{bookingSelection.label |  titlecase}}\"\n                  (selectionChange)=\"setObjectOnBookingObject()\">\n        <mat-option *ngFor=\"let dropdownValue of bookingSelection.options\" [value]=\"dropdownValue\">\n          {{dropdownValue.displayName}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  ",
            styles: ["mat-form-field  {width: 100%;} .col-form-label {z-index: 0; width: 100%}"]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_waitlist_join_wait_list_join_wait_list_service__WEBPACK_IMPORTED_MODULE_3__["JoinWaitListService"], _business_service__WEBPACK_IMPORTED_MODULE_9__["BusinessService"], _booking_components_service__WEBPACK_IMPORTED_MODULE_10__["BookingComponentsService"],
            _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_11__["SchedulerPreferenceService"], _reasons_service__WEBPACK_IMPORTED_MODULE_12__["ReasonsService"], _config_list_service__WEBPACK_IMPORTED_MODULE_13__["ConfigListService"]])
    ], BookingObjectSelectorComponent);
    return BookingObjectSelectorComponent;
}());



/***/ }),

/***/ "./src/app/booking-components/time-picker/time-picker.component.css":
/*!**************************************************************************!*\
  !*** ./src/app/booking-components/time-picker/time-picker.component.css ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ":host::ng-deep timepicker > table {\n    z-index: 1000;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYm9va2luZy1jb21wb25lbnRzL3RpbWUtcGlja2VyL3RpbWUtcGlja2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvYm9va2luZy1jb21wb25lbnRzL3RpbWUtcGlja2VyL3RpbWUtcGlja2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdDo6bmctZGVlcCB0aW1lcGlja2VyID4gdGFibGUge1xuICAgIHotaW5kZXg6IDEwMDA7XG59XG4iXX0= */"

/***/ }),

/***/ "./src/app/booking-components/time-picker/time-picker.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/booking-components/time-picker/time-picker.component.ts ***!
  \*************************************************************************/
/*! exports provided: TimePickerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimePickerComponent", function() { return TimePickerComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");



var TimePickerComponent = /** @class */ (function () {
    function TimePickerComponent(timeService) {
        this.timeService = timeService;
        this.ariaLabel = 'Time';
        this.timeChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.meridian = true;
        this.hstep = 1;
        this.mstep = 5;
    }
    TimePickerComponent.prototype.showTimepicker = function () {
        this.showTimepickerDropdown = true;
    };
    TimePickerComponent.prototype.hideTimepicker = function () {
        var _this = this;
        setTimeout(function () {
            _this.showTimepickerDropdown = false;
        }, 250);
    };
    TimePickerComponent.prototype.setTime = function () {
        var hours = this.timeService.getMilitaryHoursWithDatePipe(this.timepickerTime);
        var minutes = this.timeService.getMinutesWithDatePipe(this.timepickerTime);
        if (Number(minutes) % 5 !== 0)
            minutes = String(Math.round(Number(minutes) / this.mstep) * this.mstep);
        var time = hours + minutes;
        if (this.configuringTimePicker) // this is to keep the change form emitting when it was passed from parent component and not from user interaction of the time picker
            this.configuringTimePicker = false;
        else
            this.timeChanged.emit(Number(time));
    };
    TimePickerComponent.prototype.configureTimePicker = function () {
        this.configuringTimePicker = true;
        var timeObject = this.timeService.getHoursAndMinutesFromTime(this.time);
        var currentDate = new Date();
        var year = Number(this.timeService.getPipeYearFromDate(currentDate));
        var month = Number(this.timeService.getPipeMonthFromDate(currentDate)) - 1;
        var day = Number(this.timeService.getPipeDayFromDate(currentDate));
        this.timepickerTime = new Date(year, month, day, timeObject.hours, timeObject.mins);
        this.displayTime = this.timeService.getShortTimeWithDatePipe(this.timepickerTime);
    };
    TimePickerComponent.prototype.ngOnChanges = function (changes) {
        if (changes.hasOwnProperty('time') && changes.time.currentValue !== changes.time.previousValue)
            this.configureTimePicker();
    };
    TimePickerComponent.prototype.ngOnInit = function () {
        this.configureTimePicker();
    };
    TimePickerComponent.ctorParameters = function () { return [
        { type: _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_2__["TimeService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Number)
    ], TimePickerComponent.prototype, "time", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], TimePickerComponent.prototype, "editing", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], TimePickerComponent.prototype, "ariaLabel", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], TimePickerComponent.prototype, "timeChanged", void 0);
    TimePickerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-time-picker',
            template: __webpack_require__(/*! raw-loader!./time-picker.component.html */ "./node_modules/raw-loader/index.js!./src/app/booking-components/time-picker/time-picker.component.html"),
            styles: [__webpack_require__(/*! ./time-picker.component.css */ "./src/app/booking-components/time-picker/time-picker.component.css"), __webpack_require__(/*! ../../input-group.component.css */ "./src/app/input-group.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_2__["TimeService"]])
    ], TimePickerComponent);
    return TimePickerComponent;
}());



/***/ }),

/***/ "./src/app/booking-components/timeslot-multi-select/timeslot-multi-select.component.ts":
/*!*********************************************************************************************!*\
  !*** ./src/app/booking-components/timeslot-multi-select/timeslot-multi-select.component.ts ***!
  \*********************************************************************************************/
/*! exports provided: TimeslotMultiSelectComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeslotMultiSelectComponent", function() { return TimeslotMultiSelectComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_MainObjectTypes_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../models/MainObjectTypes.model */ "./src/models/MainObjectTypes.model.ts");
/* harmony import */ var _scheduler_time_time_objects_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../scheduler/time/time-objects.model */ "./src/app/scheduler/time/time-objects.model.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _models_ValueOption_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../models/ValueOption.model */ "./src/models/ValueOption.model.ts");
/* harmony import */ var _availability_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../availability.service */ "./src/app/booking-components/availability.service.ts");
/* harmony import */ var _format_functions_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../format-functions.service */ "./src/app/format-functions.service.ts");
/* harmony import */ var _form_functions_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../form-functions.service */ "./src/app/form-functions.service.ts");
/* harmony import */ var _models_Reason_model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../models/Reason.model */ "./src/models/Reason.model.ts");
/* harmony import */ var _scheduler_scheduler_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../scheduler/scheduler.service */ "./src/app/scheduler/scheduler.service.ts");
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _class_session_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../class-session.service */ "./src/app/class-session.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _pipes_militaryTimeConversion_pipe__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../pipes/militaryTimeConversion.pipe */ "./src/pipes/militaryTimeConversion.pipe.ts");















var TimeslotMultiSelectComponent = /** @class */ (function () {
    function TimeslotMultiSelectComponent(availabilityService, formatFnsService, formFunctionsService, schedulerService, timeService, classSessionService, schedulerPreferenceService, militaryTimeConversion) {
        this.availabilityService = availabilityService;
        this.formatFnsService = formatFnsService;
        this.formFunctionsService = formFunctionsService;
        this.schedulerService = schedulerService;
        this.timeService = timeService;
        this.classSessionService = classSessionService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.militaryTimeConversion = militaryTimeConversion;
        this.editing = false;
        this.storeTimeSlots = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.loading = true;
        this.timeSlots = [];
        this.timeSelectControl = new _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormControl"]();
        this.timeSlotDropdownValues = [];
    }
    TimeslotMultiSelectComponent.prototype.convertTimeSlotsIntoDropdownValues = function () {
        this.timeSlotDropdownValues = [];
        for (var i = 0, x = this.timeSlots.length; i < x; i++) {
            var valueOptionValue = this.timeSlots[i].staffStartDateTimeUTC;
            if (this.timeSlots[i].recurringScheduleId)
                valueOptionValue = this.timeSlots[i].recurringScheduleId;
            var valueOptionModel = new _models_ValueOption_model__WEBPACK_IMPORTED_MODULE_5__["ValueOptionModel"](this.timeSlots[i].timeString, valueOptionValue, this.timeSlots[i].selected);
            this.timeSlotDropdownValues.push(valueOptionModel);
        }
    };
    TimeslotMultiSelectComponent.prototype.setFormControlValue = function (changeEvent) {
        var selectedTimeStrings = this.formFunctionsService.getCheckedValues(changeEvent.formControl.value);
        var selectedTimeNumbers = this.formatFnsService.turnStringArrayIntoNumberArray(selectedTimeStrings);
        for (var i = 0, x = this.timeSlots.length; i < x; i++)
            this.timeSlots[i].selected = false;
        for (var i = 0, x = this.timeSlots.length; i < x; i++)
            if ((!this.timeSlots[i].recurringScheduleId && selectedTimeNumbers.indexOf(this.timeSlots[i].staffStartDateTimeUTC) !== -1) ||
                (this.timeSlots[i].recurringScheduleId && selectedTimeNumbers.indexOf(this.timeSlots[i].recurringScheduleId) !== -1))
                this.timeSlots[i].selected = true;
        this.storeTimeSlots.emit(this.timeSlots);
    };
    TimeslotMultiSelectComponent.prototype.getSelectedTimeSlots = function () {
        this.selectedTimeSlots = this.availabilityService.createTimeSlotsFromWaitlist();
        if (this.selectedTimeSlots.length === 0)
            for (var i = 0, x = this.timeSlots.length; i < x; i++)
                this.timeSlots[i].selected = false;
        var formControlValue = null;
        if (this.timeSlots.length > 0 && this.selectedTimeSlots.length > 0) {
            for (var i = 0, x = this.timeSlots.length; i < x; i++)
                this.timeSlots[i].selected = false;
            for (var i = 0, x = this.timeSlots.length; i < x; i++)
                for (var j = 0, y = this.selectedTimeSlots.length; j < y; j++) {
                    if (this.timeSlots[i].staffStartDateTimeUTC === this.selectedTimeSlots[j].staffStartDateTimeUTC ||
                        (this.timeSlots[i].staffStartDate === this.selectedTimeSlots[j].staffStartDate && this.timeSlots[i].staffEndDate === this.selectedTimeSlots[j].staffEndDate &&
                            this.timeSlots[i].startTime === this.selectedTimeSlots[j].startTime && this.timeSlots[i].endTime === this.selectedTimeSlots[j].endTime) ||
                        (this.timeSlots[i].recurringScheduleId && this.selectedTimeSlots[j].recurringScheduleId && this.timeSlots[i].recurringScheduleId === this.selectedTimeSlots[j].recurringScheduleId)) {
                        this.timeSlots[i].selected = true;
                        var appendValue = this.timeSlots[i].staffStartDateTimeUTC;
                        if (this.timeSlots[i].recurringScheduleId)
                            appendValue = this.timeSlots[i].recurringScheduleId;
                        if (!formControlValue)
                            formControlValue = String(appendValue);
                        else
                            formControlValue = formControlValue + ',' + String(appendValue);
                    }
                }
        }
        if (formControlValue)
            this.timeSelectControl.patchValue(formControlValue);
        this.convertTimeSlotsIntoDropdownValues();
    };
    TimeslotMultiSelectComponent.prototype.getTimeSlots = function () {
        var _this = this;
        this.timeSlots = [];
        this.loading = true;
        if (this.availabilityService.currentEvent.reason)
            switch (this.availabilityService.currentEvent.reason.reasonType) {
                case _models_Reason_model__WEBPACK_IMPORTED_MODULE_9__["ReasonTypes"].SERVICE:
                    this.availabilityService.getTimeSlots().subscribe(function (calTimeSlot) {
                        _this.timeSlots = calTimeSlot.timeSlots;
                        _this.getSelectedTimeSlots();
                        _this.loading = false;
                    });
                    break;
                case _models_Reason_model__WEBPACK_IMPORTED_MODULE_9__["ReasonTypes"].CLASS:
                    var csFilterObj = this.schedulerService.newCSFilterObj();
                    if (this.availabilityService.currentEvent) {
                        if (this.availabilityService.currentEvent.location)
                            csFilterObj.locationIdList = [this.availabilityService.currentEvent.location.locationId];
                        if (this.availabilityService.currentEvent.staff)
                            csFilterObj.staffIdList = [this.availabilityService.currentEvent.staff.professionalId];
                        csFilterObj.reasonIdList = [this.availabilityService.currentEvent.reason.reasonId];
                    }
                    var month = this.timeService.getPipeMonthFromDate(this.availabilityService.currentEvent.startDate);
                    var year = this.timeService.getPipeYearFromDate(this.availabilityService.currentEvent.startDate);
                    var day = this.timeService.getPipeDayFromDate(this.availabilityService.currentEvent.startDate);
                    var waitListMode = false;
                    if (this.objectType === _models_MainObjectTypes_model__WEBPACK_IMPORTED_MODULE_2__["MainObjectTypes"].WAIT_LIST)
                        waitListMode = true;
                    this.availabilityService.getDateAvailabilityClasses(csFilterObj, year, month, day).subscribe(function (classSessions) {
                        var timeSlots = [];
                        for (var i = 0, x = classSessions.length; i < x; i++) {
                            classSessions[i] = _this.classSessionService.configureListElement(classSessions[i]);
                            var timeSlot = new _scheduler_time_time_objects_model__WEBPACK_IMPORTED_MODULE_3__["SingleTimeSlot"]();
                            timeSlot.convertClassSessionToTimeSlot(classSessions[i], _this.militaryTimeConversion, _this.schedulerPreferenceService.schedulerPreference.timeFormat24Hrs, _this.availabilityService.waitListMode, _this.timeService);
                            timeSlots.push(timeSlot);
                        }
                        timeSlots = _this.availabilityService.convertTimeSlots(timeSlots);
                        _this.timeSlots = timeSlots;
                        _this.getSelectedTimeSlots();
                        _this.loading = false;
                    });
                    break;
                case _models_Reason_model__WEBPACK_IMPORTED_MODULE_9__["ReasonTypes"].COURSE:
                    var csFilterObjBean = this.schedulerService.newCSFilterObj();
                    this.availabilityService.getCourseSets(csFilterObjBean).subscribe(function (courseSets) {
                        _this.timeSlots = _this.availabilityService.convertCourseSetsIntoTimeSlots(courseSets);
                        _this.getSelectedTimeSlots();
                        _this.loading = false;
                    });
                    break;
            }
    };
    TimeslotMultiSelectComponent.prototype.checkForTimeSlotsCall = function () {
        if (this.editing)
            this.getTimeSlots();
    };
    TimeslotMultiSelectComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.newDateSelected = this.availabilityService.currentEventDateChanged.subscribe(function () {
            _this.checkForTimeSlotsCall();
        });
        this.currentEventChanged = this.availabilityService.currentEventChanged.subscribe(function (eventData) {
            var newAppt = eventData.newEventData;
            var oldAppt = eventData.oldEventData;
            var locationChanged = oldAppt.location && newAppt.location && oldAppt.location.locationId !== newAppt.location.locationId;
            var staffChanged = oldAppt.staff && newAppt.staff && oldAppt.staff.professionalId !== newAppt.staff.professionalId;
            var reasonChanged = oldAppt.reason && newAppt.reason && oldAppt.reason.reasonId !== newAppt.reason.reasonId;
            if (locationChanged || staffChanged || reasonChanged)
                _this.checkForTimeSlotsCall();
        });
        this.timeRemovedSubscription = this.availabilityService.timeRemoved.subscribe(function () {
            _this.getSelectedTimeSlots();
        });
        if (this.availabilityService.currentEvent)
            this.checkForTimeSlotsCall();
    };
    TimeslotMultiSelectComponent.prototype.changeTimeZoneForTimeSlots = function () {
        this.timeSlots = this.availabilityService.convertTimeSlots(this.timeSlots);
        this.getSelectedTimeSlots();
    };
    TimeslotMultiSelectComponent.prototype.ngOnDestroy = function () {
        this.newDateSelected.unsubscribe();
        this.currentEventChanged.unsubscribe();
        this.timeRemovedSubscription.unsubscribe();
    };
    TimeslotMultiSelectComponent.ctorParameters = function () { return [
        { type: _availability_service__WEBPACK_IMPORTED_MODULE_6__["AvailabilityService"] },
        { type: _format_functions_service__WEBPACK_IMPORTED_MODULE_7__["FormatFunctionsService"] },
        { type: _form_functions_service__WEBPACK_IMPORTED_MODULE_8__["FormFunctionsService"] },
        { type: _scheduler_scheduler_service__WEBPACK_IMPORTED_MODULE_10__["SchedulerService"] },
        { type: _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_11__["TimeService"] },
        { type: _class_session_service__WEBPACK_IMPORTED_MODULE_12__["ClassSessionService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_13__["SchedulerPreferenceService"] },
        { type: _pipes_militaryTimeConversion_pipe__WEBPACK_IMPORTED_MODULE_14__["MilitaryTimeConversion"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], TimeslotMultiSelectComponent.prototype, "objectType", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], TimeslotMultiSelectComponent.prototype, "editing", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], TimeslotMultiSelectComponent.prototype, "storeTimeSlots", void 0);
    TimeslotMultiSelectComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-timeslot-multi-select',
            template: "\n      <app-multi-checkbox-form-field *ngIf=\"!loading && timeSlots.length > 0\" [passedControl]=\"timeSelectControl\"\n                                    (onValueChanges)=\"setFormControlValue($event)\"\n                                    [dropdownValues]=\"timeSlotDropdownValues\"></app-multi-checkbox-form-field>\n      <app-field-label *ngIf=\"!loading && timeSlots.length === 0\" [required]=\"false\" class=\"col-12\" labelAlign=\"left\"\n                      label=\"No times on selected date\"\n                      [italics]=\"true\"></app-field-label>\n  "
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_availability_service__WEBPACK_IMPORTED_MODULE_6__["AvailabilityService"], _format_functions_service__WEBPACK_IMPORTED_MODULE_7__["FormatFunctionsService"], _form_functions_service__WEBPACK_IMPORTED_MODULE_8__["FormFunctionsService"],
            _scheduler_scheduler_service__WEBPACK_IMPORTED_MODULE_10__["SchedulerService"], _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_11__["TimeService"], _class_session_service__WEBPACK_IMPORTED_MODULE_12__["ClassSessionService"],
            _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_13__["SchedulerPreferenceService"], _pipes_militaryTimeConversion_pipe__WEBPACK_IMPORTED_MODULE_14__["MilitaryTimeConversion"]])
    ], TimeslotMultiSelectComponent);
    return TimeslotMultiSelectComponent;
}());



/***/ }),

/***/ "./src/app/business.service.ts":
/*!*************************************!*\
  !*** ./src/app/business.service.ts ***!
  \*************************************/
/*! exports provided: BusinessService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BusinessService", function() { return BusinessService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/internal/operators */ "./node_modules/rxjs/internal/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./scheduler/client-info/client-info.service */ "./src/app/scheduler/client-info/client-info.service.ts");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _styleSheetService__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./styleSheetService */ "./src/app/styleSheetService.ts");
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _email_settings_email_settings_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./email-settings/email-settings.service */ "./src/app/email-settings/email-settings.service.ts");
/* harmony import */ var _models_Appointment_model__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../models/Appointment.model */ "./src/models/Appointment.model.ts");
/* harmony import */ var _config_list_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./config-list.service */ "./src/app/config-list.service.ts");















var BusinessService = /** @class */ (function () {
    function BusinessService(http, datePipe, injector, dialog) {
        this.http = http;
        this.datePipe = datePipe;
        this.injector = injector;
        this.dialog = dialog;
        this.sidenavChange = new rxjs__WEBPACK_IMPORTED_MODULE_6__["Subject"]();
        this.sidenavOpen = false;
        this.landingPageObjectLoaded = new rxjs__WEBPACK_IMPORTED_MODULE_6__["Subject"]();
        this.landingPageObjectErrorLoading = new rxjs__WEBPACK_IMPORTED_MODULE_6__["Subject"]();
        this.doubleBookedTimeErrorMsg = "ALREADY_BOOKED";
        this.createFormPost = function (paymentMap) {
            var form = document.createElement('form');
            form.action = paymentMap.postUrl;
            form.method = 'POST';
            // TT-6470: removing _blank from target for
            // form.target = '_blank';
            for (var key in paymentMap.map) {
                var input = document.createElement('input');
                input.type = 'hidden';
                input.name = key;
                input.value = paymentMap.map[key];
                form.appendChild(input);
            }
            var submit = document.createElement('input');
            submit.type = 'submit';
            submit.id = 'submitPaymentPortal';
            form.appendChild(submit);
            document.body.appendChild(form);
            jquery__WEBPACK_IMPORTED_MODULE_8__('#submitPaymentPortal').click();
            document.body.removeChild(form);
        };
        this.createSafariFormPost = function (paymentMap) {
            var form = document.createElement('form');
            form.action = paymentMap.postUrl;
            form.method = 'POST';
            // TT-6470: removing target
            // form.target = '_top';
            for (var key in paymentMap.map) {
                var input = document.createElement('input');
                input.type = 'hidden';
                input.name = key;
                input.value = paymentMap.map[key];
                form.appendChild(input);
            }
            var submit = document.createElement('input');
            submit.type = 'submit';
            submit.id = 'submitPaymentPortal';
            form.appendChild(submit);
            document.body.appendChild(form);
            jquery__WEBPACK_IMPORTED_MODULE_8__('#submitPaymentPortal').click();
            document.body.removeChild(form);
        };
        try {
            this.locale = sessionStorage.getItem('locale');
            // this.showTurnOnAllowCookiesMessage();
        }
        catch (e) {
            this.locale = 'en-US';
        }
        try {
            this.apiUrl = sessionStorage.getItem('csAPIBase') + 'cs/';
        }
        catch (e) {
        }
        this.clientInfoService = injector.get(_scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_7__["ClientInfoService"]);
        this.styleSheetService = injector.get(_styleSheetService__WEBPACK_IMPORTED_MODULE_9__["StyleSheetService"]);
        this.timeService = injector.get(_scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_10__["TimeService"]);
        this.emailSettingsService = injector.get(_email_settings_email_settings_service__WEBPACK_IMPORTED_MODULE_12__["EmailSettingsService"]);
        this.configListService = injector.get(_config_list_service__WEBPACK_IMPORTED_MODULE_14__["ConfigListService"]);
    }
    BusinessService.prototype.handleError = function (error) {
        // console.log(error);
        return Promise.reject(error);
    };
    BusinessService.prototype.toggleSidenav = function () {
        this.sidenavOpen = !this.sidenavOpen;
        this.sidenavChange.next(this.sidenavOpen);
    };
    BusinessService.prototype.checkToggleSidenav = function () {
        if (this.sidenavOpen) {
            this.toggleSidenav();
        }
    };
    BusinessService.prototype.setBusinessItems = function (landingPageObjects) {
        this.business = landingPageObjects.business;
        this.backOfficeURL = landingPageObjects.backOfficeURL;
        this.currency = landingPageObjects.currency;
        this.businessTimezone = this.business.timeZoneCode.timeZoneCode;
        this.timeService.setBusinessTimezone(this.businessTimezone);
        this.businessConfigTest = landingPageObjects.businessConfigTest;
        this.defaultGateway = landingPageObjects.defaultGateway;
        this.requirePreAuthPayment = landingPageObjects.requirePreAuthPayment;
        this.requireStaffConfirmation = landingPageObjects.requireStaffConfirmation;
        this.requirePayment = landingPageObjects.requirePayment;
    };
    BusinessService.prototype.recordAuditTrailNavigation = function (page) {
        return this.http
            .post(this.apiUrl + 'navigate/' + page, null, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.getLocations = function (CSFilterObj) {
        CSFilterObj.locationIdList = null;
        return this.http
            .post(this.apiUrl + 'locations', CSFilterObj, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            if (responseData)
                for (var i = 0, x = responseData.length; i < x; i++)
                    responseData[i].displayName = responseData[i].locationName;
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.validateVariableLocationAddress = function (address) {
        return this.http
            .post(this.apiUrl + 'validateAddress', address, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.getStaff = function (CSFilterObj) {
        CSFilterObj.staffIdList = null;
        return this.http
            .post(this.apiUrl + 'staff', CSFilterObj, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            if (responseData)
                for (var i = 0, x = responseData.length; i < x; i++)
                    responseData[i].displayName = responseData[i].fullName;
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.getGroups = function (groupType, CSFilterObj) {
        switch (groupType) {
            case 'SERVICE':
                CSFilterObj.reasonGroupIdList = null;
                break;
            case 'SERVICE_GROUP':
                CSFilterObj.reasonSuperGroupIdList = null;
                break;
            case 'LOCATION':
                CSFilterObj.locationGroupIdList = null;
                break;
            case 'LOCATION_GROUP':
                CSFilterObj.locationSuperGroupIdList = null;
                break;
        }
        return this.http
            .post(this.apiUrl + 'groups/list/' + groupType, CSFilterObj, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            if (responseData)
                for (var i = 0, x = responseData.length; i < x; i++)
                    responseData[i].displayName = responseData[i].groupName;
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.getTimezones = function () {
        return this.http
            .get(this.apiUrl + 'timezones', { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.createUpdateClient = function (client, connectClientAccountId, checkCardOnFile) {
        var paramsToPass = new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpParams"]();
        if (connectClientAccountId !== undefined && connectClientAccountId !== null)
            paramsToPass = paramsToPass.append('connectClientAccountId', JSON.stringify(connectClientAccountId));
        if (checkCardOnFile !== undefined && checkCardOnFile !== null)
            paramsToPass = paramsToPass.append('checkCardOnFile', JSON.stringify(checkCardOnFile));
        return this.http
            .post(this.apiUrl + 'clients', client, { observe: "body", responseType: 'json', params: paramsToPass })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.getActiveApptCount = function (businessId, clients) {
        var clientsNoAddConnected = []; // LHB 3/5/2021 TT-7487 -- get list of clients without the "Add Connected Client" in the list so the backend doesn't error out
        for (var i = 0, x = clients.length; i < x; i++)
            if (clients[i].clientId)
                clientsNoAddConnected.push(clients[i]);
        return this.http
            .post(this.apiUrl + 'activeApptCount/' + businessId, clientsNoAddConnected, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.addPropsToAppointment = function (appointment) {
        var appt = new _models_Appointment_model__WEBPACK_IMPORTED_MODULE_13__["Appointment"]();
        appt.copyPropsFromAPI(appointment);
        // LHB 09/16/2021 TT-8134
        var qrCodeUrl = "https://chart.apis.google.com/chart?cht=qr&chs=100x100&chl=" + appt.calendarId;
        appt.apptQRCode = "<img src='" + qrCodeUrl + "'></img>";
        var qrCodeCheckinUrl = "https://chart.apis.google.com/chart?cht=qr&chs=100x100&chl=" + this.backOfficeURL + "/backoffice/app/home#/checkin/" + appt.calendarId;
        appt.apptCheckInQRCode = "<img src='" + qrCodeCheckinUrl + "'></img>";
        return appt;
    };
    BusinessService.prototype.createAppt = function (appt) {
        var _this = this;
        return this.http
            .post(this.apiUrl + 'appointments', appt, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            responseData = _this.addPropsToAppointment(responseData);
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.updateAppt = function (appt) {
        var _this = this;
        return this.http
            .put(this.apiUrl + 'appointments', appt, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            responseData = _this.addPropsToAppointment(responseData);
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.cancelAppt = function (appt) {
        var _this = this;
        return this.http
            .put(this.apiUrl + 'appointments/cancel/' + appt.calendarId, appt, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            responseData = _this.addPropsToAppointment(responseData);
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.cancelRepeatingAppt = function (repeatingAppt) {
        return this.http
            .put(this.apiUrl + 'recurringappointment/cancel/' + repeatingAppt.recurringAppointmentId, repeatingAppt, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    // Used while testing TT-2274 to prompt appt to go through cancellation flow
    // cancelApptNoPay(appt: Appointment){
    //     return this.http
    //         .post<Appointment>(this.apiUrl + 'cancelForNonPayment', appt, {observe: "body", responseType: 'json'})
    //         .pipe(
    //             map((responseData: Appointment) => {
    //                 return responseData;
    //             }),
    //             catchError(this.handleError)
    //         )
    // }
    BusinessService.prototype.createRepeatingAppt = function (repeatingAppt) {
        return this.http
            .post(this.apiUrl + 'recurringAppointments', repeatingAppt, { observe: "body", responseType: "json" })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            return responseData;
        }));
    };
    BusinessService.prototype.createWaitList = function (waitLists) {
        return this.http
            .post(this.apiUrl + 'waitlist', waitLists, { observe: "body", responseType: "json" })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            return responseData;
        }));
    };
    BusinessService.prototype.getStripeConfigDefault = function (businessId) {
        return this.http
            .get(this.apiUrl + 'getStripeConfig/' + businessId, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.getStripeConfigByInvoice = function (businessId, invoiceId) {
        return this.http
            .get(this.apiUrl + 'getStripeConfig/' + businessId + '/' + invoiceId, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.getApptDetail = function (apptHash) {
        var _this = this;
        return this.http
            .get(this.apiUrl + 'appointment/' + apptHash, {
            observe: 'body',
            responseType: 'json',
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            responseData = _this.addPropsToAppointment(responseData);
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.getRepeatingApptDetail = function (repeatingApptHash) {
        return this.http
            .get(this.apiUrl + 'recurringappointment/' + repeatingApptHash, {
            observe: 'body',
            responseType: 'json',
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.getApptICS = function (apptHash) {
        // @ts-ignore
        return this.http.get(this.apiUrl + 'appointment/' + apptHash + '/ical', { responseType: 'blob' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (file) {
            return file;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.getInvoiceDetail = function (invoiceHash) {
        return this.http
            .get(this.apiUrl + 'invoices/invoiceHash/' + invoiceHash, {
            observe: 'body',
            responseType: 'json',
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.getInvoicePaymentMap = function (invoiceId, paymentAmount) {
        var paramsToPass = new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpParams"]();
        paramsToPass = paramsToPass.append('paymentAmount', JSON.stringify(paymentAmount));
        return this.http
            .get(this.apiUrl + 'pay/invoice/' + invoiceId, { observe: "body", responseType: 'json', params: paramsToPass })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.chargeCardOnFile = function (invoice, cardId, cardType, amt) {
        var paramsToPass = new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpParams"]();
        paramsToPass = paramsToPass.append('amt', JSON.stringify(amt));
        if (cardType === 'STRIPE')
            paramsToPass = paramsToPass.append('stripePaymentMethodId', cardId);
        if (cardType === 'SQUARE')
            paramsToPass = paramsToPass.append('squareCardId', cardId);
        return this.http
            .post(this.apiUrl + 'payInvoice/' + invoice.invoiceHash, {}, { observe: "body", responseType: "json", params: paramsToPass })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            return responseData;
        }));
    };
    BusinessService.prototype.getInvoiceById = function (invoiceId) {
        return this.http
            .get(this.apiUrl + 'invoices/invoiceId/' + invoiceId, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.printInvoice = function (invoiceHash) {
        // @ts-ignore
        return this.http.get('../../../businessWeb/web/printInvoice/' + invoiceHash, { responseType: 'blob' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (file) {
            return file;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.updateInvoiceLineItemWithPackage = function (invoiceItem, packageSold) {
        return this.http
            .put(this.apiUrl + 'invoiceItem/' + invoiceItem.invoiceItemId + '/packageSold/' + packageSold.packageSoldId, {}, { observe: "body", responseType: "json" })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            return responseData;
        }));
    };
    BusinessService.prototype.uploadFile = function (file, businessId) {
        var fd = new FormData();
        fd.append('file', file);
        fd.append('businessId', businessId.toString());
        fd.append('uploadedFileName', file.name);
        fd.append('userName', 'WebClient');
        return this.http.post('../../../businessWeb/web/fileUploadS3.do', fd, { responseType: 'text', reportProgress: true })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (res) {
            return res;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    BusinessService.prototype.checkInnerHTMLForHrefClick = function (event) {
        var clickedHref = false;
        if (event !== undefined) {
            var element = event.target;
            if (element !== undefined && element.tagName === "A") {
                clickedHref = true;
            }
        }
        return clickedHref;
    };
    BusinessService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_1__["DatePipe"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injector"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_11__["MatDialog"] }
    ]; };
    BusinessService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"], _angular_common__WEBPACK_IMPORTED_MODULE_1__["DatePipe"],
            _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injector"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_11__["MatDialog"]])
    ], BusinessService);
    return BusinessService;
}());



/***/ }),

/***/ "./src/app/class-session.service.ts":
/*!******************************************!*\
  !*** ./src/app/class-session.service.ts ***!
  \******************************************/
/*! exports provided: ClassSessionService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClassSessionService", function() { return ClassSessionService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_ClassSession_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../models/ClassSession.model */ "./src/models/ClassSession.model.ts");



var ClassSessionService = /** @class */ (function () {
    function ClassSessionService() {
    }
    ClassSessionService.prototype.configureListElement = function (cs) {
        var classSession = new _models_ClassSession_model__WEBPACK_IMPORTED_MODULE_2__["ClassSession"]();
        classSession.copyPropsFromAPI(cs);
        classSession.currentAvailable = classSession.maxCapacity - classSession.currentCapacity;
        classSession.subStatus = classSession.status;
        return classSession;
    };
    ClassSessionService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], ClassSessionService);
    return ClassSessionService;
}());



/***/ }),

/***/ "./src/app/client-account/client-account-header/client-account-header.component.css":
/*!******************************************************************************************!*\
  !*** ./src/app/client-account/client-account-header/client-account-header.component.css ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/* Medium devices (desktops, 992px and below)*/\n@media (max-width: 992px) {\n    #loggedInClientSelector, #addNewClientBtn {\n        position: absolute;\n        right: 15px;\n    }\n    #loggedInClientSelector {\n        top: 18px;\n    }\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2xpZW50LWFjY291bnQvY2xpZW50LWFjY291bnQtaGVhZGVyL2NsaWVudC1hY2NvdW50LWhlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhDQUE4QztBQUM5QztJQUNJO1FBQ0ksa0JBQWtCO1FBQ2xCLFdBQVc7SUFDZjtJQUNBO1FBQ0ksU0FBUztJQUNiO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9jbGllbnQtYWNjb3VudC9jbGllbnQtYWNjb3VudC1oZWFkZXIvY2xpZW50LWFjY291bnQtaGVhZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBNZWRpdW0gZGV2aWNlcyAoZGVza3RvcHMsIDk5MnB4IGFuZCBiZWxvdykqL1xuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gICAgI2xvZ2dlZEluQ2xpZW50U2VsZWN0b3IsICNhZGROZXdDbGllbnRCdG4ge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiAxNXB4O1xuICAgIH1cbiAgICAjbG9nZ2VkSW5DbGllbnRTZWxlY3RvciB7XG4gICAgICAgIHRvcDogMThweDtcbiAgICB9XG59XG4iXX0= */"

/***/ }),

/***/ "./src/app/client-account/client-account-header/client-account-header.component.ts":
/*!*****************************************************************************************!*\
  !*** ./src/app/client-account/client-account-header/client-account-header.component.ts ***!
  \*****************************************************************************************/
/*! exports provided: ClientAccountHeaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientAccountHeaderComponent", function() { return ClientAccountHeaderComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../auth/auth.service */ "./src/app/auth/auth.service.ts");
/* harmony import */ var _client_account_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _form_functions_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../form-functions.service */ "./src/app/form-functions.service.ts");









var ClientAccountHeaderComponent = /** @class */ (function () {
    function ClientAccountHeaderComponent(businessService, cdRef, clientAccountService, responsiveService, authService, formFunctionsService) {
        this.businessService = businessService;
        this.cdRef = cdRef;
        this.clientAccountService = clientAccountService;
        this.responsiveService = responsiveService;
        this.authService = authService;
        this.formFunctionsService = formFunctionsService;
        this.showPrintButton = false;
        this.onSelectClient = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.onGoBack = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.showConnectClientButton = false;
    }
    ClientAccountHeaderComponent.prototype.checkShowConnectClientBtn = function () {
        var showLoginBtns = this.responsiveService.showLoginRegisterBtnLogic(this.preference);
        if (this.authService.isAuth() && this.preference.allowAddConnectedClient && this.clientAccountService.loggedInClient !== undefined && this.clientAccountService.loggedInClient !== null &&
            this.clientAccountService.loggedInClient.clientList !== undefined && this.clientAccountService.loggedInClient.clientList !== null &&
            this.clientAccountService.loggedInClient.clientList.length === 1 && !this.hideConnectButton)
            this.showConnectClientButton = showLoginBtns.showRegisterBtn;
        else
            this.showConnectClientButton = false;
    };
    ClientAccountHeaderComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.connectedClientClosedSubscription = this.authService.connectedClientClosed.subscribe(function (client) {
            var event = new _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatOptionSelectionChange"](null, true);
            _this.onSelectClient.emit({ event: event, client: client });
            _this.checkShowConnectClientBtn();
        });
        this.clientAccountService.addConnectClientToClientList(this.preference);
        this.checkShowConnectClientBtn();
    };
    ClientAccountHeaderComponent.prototype.ngAfterViewChecked = function () {
        if (this.responsiveService.innerWidth > this.responsiveService.xsScreenBreakPoint || !this.showClientSelector) { //TT-6092
            var showLoginRegisterBtns = this.responsiveService.showLoginRegisterBtnLogic(this.preference);
            this.responsiveService.adjustMatCardTitleBarHeight(this.headerId, this.preference, showLoginRegisterBtns);
        }
        this.cdRef.detectChanges();
    };
    ClientAccountHeaderComponent.prototype.selectClient = function (event, client) {
        if (event.isUserInput && client.fullName === this.preference.labelMap.clientProfileAddNewClientLabel)
            this.addNewClient();
        else
            this.onSelectClient.emit({ event: event, client: client });
    };
    ClientAccountHeaderComponent.prototype.goBack = function () {
        this.onGoBack.emit();
    };
    ClientAccountHeaderComponent.prototype.addNewClient = function () {
        var loginTriggeredData = new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["loginRegisterPopUpObject"]();
        loginTriggeredData.calledFrom = loginTriggeredData.connectClientCallFrom;
        this.authService.addConnectedClientCalled.next(loginTriggeredData);
    };
    ClientAccountHeaderComponent.prototype.ngOnDestroy = function () {
        this.connectedClientClosedSubscription.unsubscribe();
    };
    ClientAccountHeaderComponent.prototype.printPage = function () {
        if (this.printId !== undefined) {
            this.formFunctionsService.printElement(document.getElementById(this.printId));
            window.print();
        }
    };
    ClientAccountHeaderComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
        { type: _client_account_service__WEBPACK_IMPORTED_MODULE_7__["ClientAccountService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_5__["ResponsiveService"] },
        { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_6__["AuthService"] },
        { type: _form_functions_service__WEBPACK_IMPORTED_MODULE_8__["FormFunctionsService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ClientAccountHeaderComponent.prototype, "headerId", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ClientAccountHeaderComponent.prototype, "titleId", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ClientAccountHeaderComponent.prototype, "viewingClientsLabel", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ClientAccountHeaderComponent.prototype, "title", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ClientAccountHeaderComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["ClientAccount"])
    ], ClientAccountHeaderComponent.prototype, "clientAccount", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["Client"])
    ], ClientAccountHeaderComponent.prototype, "selectedClient", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], ClientAccountHeaderComponent.prototype, "showBackButton", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], ClientAccountHeaderComponent.prototype, "showClientSelector", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], ClientAccountHeaderComponent.prototype, "showPrintButton", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ClientAccountHeaderComponent.prototype, "printId", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], ClientAccountHeaderComponent.prototype, "hideConnectButton", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ClientAccountHeaderComponent.prototype, "onSelectClient", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ClientAccountHeaderComponent.prototype, "onGoBack", void 0);
    ClientAccountHeaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'client-account-header',
            template: __webpack_require__(/*! raw-loader!./client-account-header.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/client-account-header/client-account-header.component.html"),
            styles: [__webpack_require__(/*! ./client-account-header.component.css */ "./src/app/client-account/client-account-header/client-account-header.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"], _client_account_service__WEBPACK_IMPORTED_MODULE_7__["ClientAccountService"],
            _responsive_service__WEBPACK_IMPORTED_MODULE_5__["ResponsiveService"], _auth_auth_service__WEBPACK_IMPORTED_MODULE_6__["AuthService"], _form_functions_service__WEBPACK_IMPORTED_MODULE_8__["FormFunctionsService"]])
    ], ClientAccountHeaderComponent);
    return ClientAccountHeaderComponent;
}());



/***/ }),

/***/ "./src/app/client-account/client-account-header/client-account-header.module.ts":
/*!**************************************************************************************!*\
  !*** ./src/app/client-account/client-account-header/client-account-header.module.ts ***!
  \**************************************************************************************/
/*! exports provided: ClientAccountHeaderModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientAccountHeaderModule", function() { return ClientAccountHeaderModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _client_account_header_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./client-account-header.component */ "./src/app/client-account/client-account-header/client-account-header.component.ts");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../material.module */ "./src/app/material.module.ts");
/* harmony import */ var _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../ui-elements/ui-elements.module */ "./src/app/ui-elements/ui-elements.module.ts");






var ClientAccountHeaderModule = /** @class */ (function () {
    function ClientAccountHeaderModule() {
    }
    ClientAccountHeaderModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [
                _client_account_header_component__WEBPACK_IMPORTED_MODULE_3__["ClientAccountHeaderComponent"]
            ],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
                _material_module__WEBPACK_IMPORTED_MODULE_4__["MaterialModule"],
                _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_5__["UIElementsModule"]
            ],
            exports: [
                _client_account_header_component__WEBPACK_IMPORTED_MODULE_3__["ClientAccountHeaderComponent"]
            ]
        })
    ], ClientAccountHeaderModule);
    return ClientAccountHeaderModule;
}());



/***/ }),

/***/ "./src/app/client-account/client-account-home/client-account-home.component.ts":
/*!*************************************************************************************!*\
  !*** ./src/app/client-account/client-account-home/client-account-home.component.ts ***!
  \*************************************************************************************/
/*! exports provided: ClientAccountHomeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientAccountHomeComponent", function() { return ClientAccountHomeComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _client_account_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../scheduler/client-info/client-info.service */ "./src/app/scheduler/client-info/client-info.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");









var ClientAccountHomeComponent = /** @class */ (function () {
    function ClientAccountHomeComponent(businessService, clientAccountService, clientInfoService, tagsService, router, route, responsiveService, schedulerPreferenceService) {
        this.businessService = businessService;
        this.clientAccountService = clientAccountService;
        this.clientInfoService = clientInfoService;
        this.tagsService = tagsService;
        this.router = router;
        this.route = route;
        this.responsiveService = responsiveService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.dataLoaded = false;
        this.errorLoading = false;
        this.unsubmittedFormsList = [];
        this.preference = schedulerPreferenceService.schedulerPreference;
    }
    ClientAccountHomeComponent.prototype.viewAppts = function () {
        this.router.navigate(['my-account/appts']);
    };
    ClientAccountHomeComponent.prototype.viewInvoices = function () {
        this.router.navigate(['my-account/invoices']);
    };
    ClientAccountHomeComponent.prototype.viewProfile = function () {
        this.router.navigate(['my-account/profile']);
    };
    ClientAccountHomeComponent.prototype.bookNewAppt = function () {
        this.router.navigate(['scheduler'], { relativeTo: this.route.root, state: { onProfileHome: true } });
    };
    ClientAccountHomeComponent.prototype.goToForm = function (clientFormListObj) {
        this.router.navigate(['forms/' + clientFormListObj.disclaimerFormUuid], { relativeTo: this.route.root, state: { onProfileHome: true } });
    };
    ClientAccountHomeComponent.prototype.selectClient = function (changeEvent) {
        var client = changeEvent.client;
        var event = changeEvent.event;
        if (client.clientId !== this.selectedClient.clientId && event.isUserInput) {
            this.selectedClient = client;
            this.clientAccountService.selectedClient = this.selectedClient;
            this.configureFieldsForDisplay();
        }
    };
    ClientAccountHomeComponent.prototype.configureFieldsForDisplay = function () {
        if (this.selectedClient === undefined && this.clientAccountService.loggedInClient !== undefined) {
            this.selectedClient = this.clientAccountService.loggedInClient.clientList[0];
        }
        this.loggedInWelcomeTitle = this.tagsService.assignClientValuesToTags(this.preference.labelMap.loggedInWelcomeTitle, this.selectedClient.fields, this.selectedClient);
        this.loggedInWelcomeText = this.tagsService.assignClientValuesToTags(this.preference.labelMap.loggedInWelcomeText, this.selectedClient.fields, this.selectedClient);
        if (this.selectedClient.formList !== undefined && this.selectedClient.formList !== null && this.selectedClient.formList.length > 0) {
            for (var i = 0, x = this.selectedClient.formList.length; i < x; i++) {
                if (this.selectedClient.formList[i].status !== 'SUBMITTED' && this.selectedClient.formList[i].status !== 'WAIVED')
                    this.unsubmittedFormsList.push(this.selectedClient.formList[i]);
            }
            if (this.unsubmittedFormsList !== undefined && this.unsubmittedFormsList !== null && this.unsubmittedFormsList.length > 0) {
                this.formsToFillOutText = this.tagsService.assignClientValuesToTags(this.preference.labelMap.clientProfileHomeFormsToFillOutText, this.selectedClient.fields, this.selectedClient);
            }
        }
    };
    ClientAccountHomeComponent.prototype.ngAfterViewChecked = function () {
        this.responsiveService.setHeightForEmbedAccount();
    };
    ClientAccountHomeComponent.prototype.ngOnInit = function () {
        if (this.businessService.business) {
            if (this.businessService.business.status !== 'ACTIVE') {
                this.dataLoaded = false;
                this.errorLoading = true;
                // this.miniWebsite = this.businessService.createErrorMiniWebsite('inactive');
            }
            else {
                this.clientAccount = this.clientAccountService.loggedInClient;
                if (this.clientAccountService.selectedClient !== undefined && this.clientAccountService.selectedClient !== null) {
                    for (var i = 0, x = this.clientAccount.clientList.length; i < x; i++) {
                        if (this.clientAccount.clientList[i].clientId === this.clientAccountService.selectedClient.clientId) {
                            this.selectedClient = this.clientAccount.clientList[i];
                        }
                    }
                    this.configureFieldsForDisplay();
                }
                else {
                    this.selectedClient = this.clientAccountService.selectClientBasedOnLoggedInEmail();
                    this.clientAccountService.setSelectedClient(this.selectedClient, this.preference.schedulerPreferenceFieldDefnList);
                    this.configureFieldsForDisplay();
                }
                this.dataLoaded = true;
                this.errorLoading = false;
            }
        }
        else {
            this.dataLoaded = false;
            this.errorLoading = true;
        }
    };
    ClientAccountHomeComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"] },
        { type: _client_account_service__WEBPACK_IMPORTED_MODULE_5__["ClientAccountService"] },
        { type: _scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_7__["ClientInfoService"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_2__["TagsService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_6__["ResponsiveService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_8__["SchedulerPreferenceService"] }
    ]; };
    ClientAccountHomeComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-client-account-home',
            template: __webpack_require__(/*! raw-loader!./client-account-home.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/client-account-home/client-account-home.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"], _client_account_service__WEBPACK_IMPORTED_MODULE_5__["ClientAccountService"], _scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_7__["ClientInfoService"],
            _tags_service__WEBPACK_IMPORTED_MODULE_2__["TagsService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"], _responsive_service__WEBPACK_IMPORTED_MODULE_6__["ResponsiveService"],
            _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_8__["SchedulerPreferenceService"]])
    ], ClientAccountHomeComponent);
    return ClientAccountHomeComponent;
}());



/***/ }),

/***/ "./src/app/client-account/client-account.component.ts":
/*!************************************************************!*\
  !*** ./src/app/client-account/client-account.component.ts ***!
  \************************************************************/
/*! exports provided: ClientAccountComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientAccountComponent", function() { return ClientAccountComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var ClientAccountComponent = /** @class */ (function () {
    function ClientAccountComponent() {
    }
    ClientAccountComponent.prototype.ngOnInit = function () {
    };
    ClientAccountComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-client-account',
            template: __webpack_require__(/*! raw-loader!./client-account.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/client-account.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], ClientAccountComponent);
    return ClientAccountComponent;
}());



/***/ }),

/***/ "./src/app/client-account/client-account.service.ts":
/*!**********************************************************!*\
  !*** ./src/app/client-account/client-account.service.ts ***!
  \**********************************************************/
/*! exports provided: ClientAccountService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientAccountService", function() { return ClientAccountService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/internal/operators */ "./node_modules/rxjs/internal/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _view_invoices_payment_portals_payments_model__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./view-invoices/payment-portals/payments.model */ "./src/app/client-account/view-invoices/payment-portals/payments.model.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _waitlist_waitlist_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../waitlist/waitlist.service */ "./src/app/waitlist/waitlist.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");












var ClientAccountService = /** @class */ (function () {
    function ClientAccountService(http, injector) {
        this.http = http;
        this.injector = injector;
        this.onHoldStatus = 'On Hold';
        this.blockedStatus = 'Blocked';
        this.movedFromDetailWhenBookingNotAllowed = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
        try {
            this.apiUrl = sessionStorage.getItem('csAPIBase') + 'csl/';
            this.nonLoggedInApiUrl = sessionStorage.getItem('csAPIBase') + 'cs/';
        }
        catch (e) {
        }
        this.responsiveService = injector.get(_responsive_service__WEBPACK_IMPORTED_MODULE_8__["ResponsiveService"]);
        this.waitListService = injector.get(_waitlist_waitlist_service__WEBPACK_IMPORTED_MODULE_9__["WaitlistService"]);
        this.schedulerPreferenceService = injector.get(_scheduler_preference_service__WEBPACK_IMPORTED_MODULE_11__["SchedulerPreferenceService"]);
    }
    ClientAccountService.prototype.handleError = function (error) {
        return Promise.reject(error);
    };
    ClientAccountService.prototype.setLoggedInClient = function (loggedInClient) {
        this.loggedInClient = loggedInClient;
        if (this.loggedInClient === null)
            this.selectedClient = null;
    };
    ClientAccountService.prototype.addConnectClientToClientList = function (preference) {
        var showLoginBtns = this.responsiveService.showLoginRegisterBtnLogic(preference);
        if (showLoginBtns.showRegisterBtn && preference.allowAddConnectedClient && this.loggedInClient !== undefined && this.loggedInClient !== null && this.loggedInClient.clientList !== null && this.loggedInClient.clientList.length > 1) {
            var connectClient = this.createNewClient();
            connectClient.fullName = preference.labelMap.clientProfileAddNewClientLabel;
            var connectClientAlreadyAdded = false;
            for (var i = 0, x = this.loggedInClient.clientList.length; i < x; i++) {
                if (this.loggedInClient.clientList[i].fullName === connectClient.fullName) {
                    connectClientAlreadyAdded = true;
                }
            }
            if (!connectClientAlreadyAdded)
                this.loggedInClient.clientList.push(connectClient);
        }
    };
    ClientAccountService.prototype.addClientToClientList = function (client) {
        if (this.loggedInClient !== undefined && this.loggedInClient !== null && this.loggedInClient.clientList !== null) {
            var addConnectClientOptionToList = false;
            var indexToInsertAt = this.loggedInClient.clientList.length - 1;
            if (this.loggedInClient.clientList.length === 1) { // have added in the first connected client so we need to update list to include add and connect client at bottom
                addConnectClientOptionToList = true;
                indexToInsertAt = this.loggedInClient.clientList.length;
            }
            if (indexToInsertAt < 0)
                indexToInsertAt = 0;
            this.loggedInClient.clientList.splice(indexToInsertAt, 0, client);
            return addConnectClientOptionToList;
        }
        else
            return false;
    };
    ClientAccountService.prototype.createNewClient = function (emailAddress) {
        var newClient = new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_5__["Client"](null, null, null, [], sessionStorage.getItem('locale'), 'Active', 'WebClient', new Date().getTime(), null, false, null, emailAddress);
        return newClient;
    };
    ClientAccountService.prototype.setSelectedClient = function (selectedClient, fields) {
        if (selectedClient && selectedClient.fields === null && selectedClient.fieldDataList !== undefined) {
            selectedClient.fields = lodash__WEBPACK_IMPORTED_MODULE_6__["cloneDeep"](fields);
            for (var i = 0, x = selectedClient.fields.length; i < x; i++) {
                for (var j = 0, y = selectedClient.fieldDataList.length; j < y; j++) {
                    if (selectedClient.fieldDataList[j].schedulerPreferenceFieldDefnId === selectedClient.fields[i].schedulerPreferenceFieldDefnId) {
                        selectedClient.fields[i].value = selectedClient.fieldDataList[j].value;
                    }
                }
            }
        }
        this.selectedClient = selectedClient;
    };
    ClientAccountService.prototype.getSelectedClient = function (preference) {
        if (this.selectedClient) {
            for (var i = 0, x = this.loggedInClient.clientList.length; i < x; i++) {
                if (this.loggedInClient.clientList[i].clientId === this.selectedClient.clientId) {
                    return this.loggedInClient.clientList[i];
                }
            }
        }
        else if (this.loggedInClient) {
            this.setSelectedClient(this.loggedInClient.clientList[0], preference.schedulerPreferenceFieldDefnList);
        }
        return this.selectedClient;
    };
    ClientAccountService.prototype.setSelectedClientOnComponent = function (preference) {
        if (this.selectedClient !== undefined && this.selectedClient !== null) {
            for (var i = 0, x = this.loggedInClient.clientList.length; i < x; i++) {
                if (this.loggedInClient.clientList[i].clientId === this.selectedClient.clientId) {
                    return this.loggedInClient.clientList[i];
                }
            }
        }
        else if (this.loggedInClient !== undefined && this.loggedInClient !== null) {
            this.setSelectedClient(this.loggedInClient.clientList[0], preference.schedulerPreferenceFieldDefnList);
            return this.loggedInClient.clientList[0];
        }
        else {
            return null;
        }
    };
    ClientAccountService.prototype.selectClientBasedOnLoggedInEmail = function (counter) {
        var _this = this;
        if (counter === undefined) {
            counter = 0;
        }
        else {
            counter++;
        }
        if (this.loggedInClient !== undefined) {
            var matchedClient = -1;
            for (var i = 0, x = this.loggedInClient.clientList.length; i < x; i++) {
                if (this.loggedInClient.clientAccountId === this.loggedInClient.clientList[i].clientAccountId) {
                    matchedClient = i;
                    break;
                }
            }
            if (matchedClient !== null) {
                return this.loggedInClient.clientList[matchedClient];
            }
            else {
                return this.loggedInClient.clientList[0];
            }
        }
        else if (counter < 10) {
            setTimeout(function () {
                counter++;
                _this.selectClientBasedOnLoggedInEmail(counter);
            }, 250);
        }
    };
    ClientAccountService.prototype.updateClientInClientList = function (updatedClient) {
        for (var i = 0, x = this.loggedInClient.clientList.length; i < x; i++) {
            if (this.loggedInClient.clientList[i].clientId === updatedClient.clientId) {
                this.loggedInClient.clientList[i] = updatedClient;
            }
        }
    };
    ClientAccountService.prototype.getApptsByStatus = function (clientId, status) {
        return this.http
            .get(this.apiUrl + 'appointments/' + clientId + '/' + status, {
            observe: 'body',
            responseType: 'json',
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    ClientAccountService.prototype.getRepeatingAppts = function (clientId) {
        return this.http
            .get(this.apiUrl + 'recurringappointments/' + clientId, {
            observe: 'body',
            responseType: 'json',
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    ClientAccountService.prototype.getWaitlistRegistrations = function (clientId) {
        var _this = this;
        return this.http
            .get(this.apiUrl + 'waitlistRegistrations/' + clientId, {
            observe: 'body',
            responseType: 'json',
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            // @ts-ignore
            if (responseData === null) {
                return [];
            }
            else {
                var waitListExpanded = [];
                for (var i = 0, x = responseData.length; i < x; i++) {
                    var waitlists = _this.waitListService.formatWaitlistForSingleTime(responseData[i]);
                    for (var j = 0, y = waitlists.length; j < y; j++)
                        waitListExpanded.push(waitlists[j]);
                }
                waitListExpanded.sort(function (a, b) { return (a.preferredDateStart < b.preferredDateStart) ? -1 : 1; });
                return waitListExpanded;
            }
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    ClientAccountService.prototype.getRepeatingApptDetail = function (repeatingApptId) {
        return this.http
            .get(this.apiUrl + 'recurringappointment/' + repeatingApptId, {
            observe: 'body',
            responseType: 'json',
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    ClientAccountService.prototype.getApptDetail = function (calendarId) {
        return this.http
            .get(this.apiUrl + 'appointment/' + calendarId, {
            observe: 'body',
            responseType: 'json',
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    ClientAccountService.prototype.getInvoicesByStatus = function (clientId, status) {
        return this.http
            .get(this.apiUrl + 'invoices/' + clientId + '/' + status, {
            observe: 'body',
            responseType: 'json',
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    ClientAccountService.prototype.formatQuantityUsedOnPackageSold = function (packageSold) {
        var usedQuantityString = packageSold.usedQuantity + '/' + packageSold.maxQuantity;
        packageSold.quantityUsedDisplay = usedQuantityString;
        return packageSold;
    };
    ClientAccountService.prototype.getPackagesSoldByClientId = function (clientId, statusList) {
        var _this = this;
        var paramsToPass = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]();
        paramsToPass = paramsToPass.append('statusList', statusList);
        return this.http
            .get(this.nonLoggedInApiUrl + 'packageSold/' + clientId, {
            observe: 'body',
            responseType: 'json',
            params: paramsToPass
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            for (var i = 0, x = responseData.length; i < x; i++) {
                _this.formatQuantityUsedOnPackageSold(responseData[i]);
            }
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    ClientAccountService.prototype.getPackageSoldByClientAccountId = function (clientAccountId, statusList) {
        var _this = this;
        var paramsToPass = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]();
        paramsToPass = paramsToPass.append('statusList', statusList);
        return this.http
            .get(this.nonLoggedInApiUrl + 'packageSold/clientAccountId/' + clientAccountId, {
            observe: 'body',
            responseType: 'json',
            params: paramsToPass
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            for (var i = 0, x = responseData.length; i < x; i++) {
                _this.formatQuantityUsedOnPackageSold(responseData[i]);
            }
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    ClientAccountService.prototype.getAppointmentsByPackageSold = function (packageSoldId) {
        return this.http
            .get(this.apiUrl + 'packageSold/' + packageSoldId + '/appointments', {
            observe: 'body',
            responseType: 'json',
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    ClientAccountService.prototype.getStoredPaymentInfoByClientId = function (clientId) {
        return this.http
            .get(this.nonLoggedInApiUrl + 'client/' + clientId + '/paymentInfo', {
            observe: 'body',
            responseType: 'json'
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    ClientAccountService.prototype.storeCardInfoOnClient = function (selectedClient, storedCardInfo) {
        selectedClient.storedCardInfo = storedCardInfo;
        if (storedCardInfo.stripeSetup || storedCardInfo.squareSetup || storedCardInfo.lumaPaySetup)
            selectedClient.showPaymentInfo = true;
        else
            selectedClient.showPaymentInfo = false;
        selectedClient.stripeCreditCards = [];
        selectedClient.squareCreditCards = [];
        if (storedCardInfo.stripe && storedCardInfo.stripe.data) {
            for (var i = 0, x = storedCardInfo.stripe.data.length; i < x; i++) {
                selectedClient.stripeCreditCards.push(storedCardInfo.stripe.data[i]);
            }
        }
        if (storedCardInfo.square && storedCardInfo.square.cards) {
            for (var i = 0, x = storedCardInfo.square.cards.length; i < x; i++) {
                selectedClient.squareCreditCards.push(storedCardInfo.square.cards[i]);
            }
        }
        return selectedClient;
    };
    ClientAccountService.prototype.deleteCard = function (clientId, cardId, cardType) {
        var paramsToPass = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]();
        if (cardType === 'STRIPE')
            paramsToPass = paramsToPass.append('stripePaymentMethodId', cardId);
        if (cardType === 'SQUARE')
            paramsToPass = paramsToPass.append('squareCardId', cardId);
        return this.http
            .delete(this.apiUrl + 'client/' + clientId + '/paymentInfo', {
            observe: 'body',
            responseType: 'json',
            params: paramsToPass
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    ClientAccountService.prototype.createCreditCardsArray = function (client) {
        var creditCards = [];
        if (client.stripeCreditCards !== undefined && client.stripeCreditCards.length > 0) {
            for (var i = 0, x = client.stripeCreditCards.length; i < x; i++) {
                var cardToAdd = new _view_invoices_payment_portals_payments_model__WEBPACK_IMPORTED_MODULE_7__["CreditCard"]();
                cardToAdd.brand = client.stripeCreditCards[i].card.brand;
                cardToAdd.expiration = client.stripeCreditCards[i].card.expMonth + "/" + client.stripeCreditCards[i].card.expYear;
                cardToAdd.last4 = client.stripeCreditCards[i].card.last4;
                cardToAdd.zip = client.stripeCreditCards[i].billingDetails.address.postalCode;
                cardToAdd.stripeInfo = client.stripeCreditCards[i];
                creditCards.push(cardToAdd);
            }
        }
        if (client.squareCreditCards !== undefined && client.squareCreditCards.length > 0) {
            for (var i = 0, x = client.squareCreditCards.length; i < x; i++) {
                var cardToAdd = new _view_invoices_payment_portals_payments_model__WEBPACK_IMPORTED_MODULE_7__["CreditCard"]();
                cardToAdd.brand = client.squareCreditCards[i].card_brand;
                cardToAdd.expiration = client.squareCreditCards[i].exp_month + "/" + client.squareCreditCards[i].exp_year;
                cardToAdd.last4 = client.squareCreditCards[i].last_4;
                cardToAdd.zip = null;
                cardToAdd.squareInfo = client.squareCreditCards[i];
                creditCards.push(cardToAdd);
            }
        }
        return creditCards;
    };
    ClientAccountService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] }
    ]; };
    ClientAccountService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]])
    ], ClientAccountService);
    return ClientAccountService;
}());



/***/ }),

/***/ "./src/app/client-account/client-profile/client-forms/client-forms.component.ts":
/*!**************************************************************************************!*\
  !*** ./src/app/client-account/client-profile/client-forms/client-forms.component.ts ***!
  \**************************************************************************************/
/*! exports provided: ClientFormsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientFormsComponent", function() { return ClientFormsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/esm5/table.es5.js");
/* harmony import */ var _data_tables_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../data-tables.service */ "./src/app/data-tables.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");






var ClientFormsComponent = /** @class */ (function () {
    function ClientFormsComponent(dataTablesService, router, route) {
        this.dataTablesService = dataTablesService;
        this.router = router;
        this.route = route;
        this.displayedColumns = this.dataTablesService.getDefaultDisclaimerFormColumns();
        this.columnDefs = this.dataTablesService.getDefaultDisclaimerFormColumnDefs();
        this.disclaimerFormList = new _angular_material_table__WEBPACK_IMPORTED_MODULE_3__["MatTableDataSource"]();
        this.disclaimerForms = [];
    }
    ClientFormsComponent.prototype.goToForm = function (clientFormListObj) {
        this.router.navigate(['forms/' + clientFormListObj.disclaimerFormUuid], { relativeTo: this.route.root, state: { onMyProfile: true } });
    };
    ClientFormsComponent.prototype.establishTable = function () {
        var _this = this;
        this.disclaimerFormList.data = this.disclaimerForms;
        this.disclaimerFormList.sortingDataAccessor = function (obj, property) { return _this.dataTablesService.getProperty(obj, property); };
        this.disclaimerFormList.sort = this.sort;
    };
    ClientFormsComponent.prototype.ngOnInit = function () {
        this.disclaimerForms = this.selectedClient.formList;
        this.establishTable();
    };
    ClientFormsComponent.ctorParameters = function () { return [
        { type: _data_tables_service__WEBPACK_IMPORTED_MODULE_4__["DataTablesService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ClientFormsComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["Client"])
    ], ClientFormsComponent.prototype, "selectedClient", void 0);
    ClientFormsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'client-forms',
            template: __webpack_require__(/*! raw-loader!./client-forms.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/client-profile/client-forms/client-forms.component.html"),
            styles: [__webpack_require__(/*! ../../../data-tables.component.css */ "./src/app/data-tables.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_data_tables_service__WEBPACK_IMPORTED_MODULE_4__["DataTablesService"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]])
    ], ClientFormsComponent);
    return ClientFormsComponent;
}());



/***/ }),

/***/ "./src/app/client-account/client-profile/client-packages/client-packages.component.css":
/*!*********************************************************************************************!*\
  !*** ./src/app/client-account/client-profile/client-packages/client-packages.component.css ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".mat-column-expand,\n.mat-column-packageSoldId {\n    flex: 0 0 5%;\n    width: 5%;\n}\n.mat-column-pkg-packageName {\n    flex: 0 0 20%;\n    width: 20%;\n    padding-right: 2%;\n}\n.mobileTable .mat-column-packageSoldId {\n    flex: 0 0 11%;\n    width: 11%;\n}\n.mobileTable .mat-column-expand,\n.mobileTable .mat-column-packageSoldId {\n    display: none;\n}\n.mobileTable mat-cell.mat-cell.mat-column-expandedDetail {\n    flex: 0 0 100% !important;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2xpZW50LWFjY291bnQvY2xpZW50LXByb2ZpbGUvY2xpZW50LXBhY2thZ2VzL2NsaWVudC1wYWNrYWdlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztJQUVJLFlBQVk7SUFDWixTQUFTO0FBQ2I7QUFDQTtJQUNJLGFBQWE7SUFDYixVQUFVO0lBQ1YsaUJBQWlCO0FBQ3JCO0FBRUE7SUFDSSxhQUFhO0lBQ2IsVUFBVTtBQUNkO0FBQ0E7O0lBRUksYUFBYTtBQUNqQjtBQUNBO0lBQ0kseUJBQXlCO0FBQzdCIiwiZmlsZSI6InNyYy9hcHAvY2xpZW50LWFjY291bnQvY2xpZW50LXByb2ZpbGUvY2xpZW50LXBhY2thZ2VzL2NsaWVudC1wYWNrYWdlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jb2x1bW4tZXhwYW5kLFxuLm1hdC1jb2x1bW4tcGFja2FnZVNvbGRJZCB7XG4gICAgZmxleDogMCAwIDUlO1xuICAgIHdpZHRoOiA1JTtcbn1cbi5tYXQtY29sdW1uLXBrZy1wYWNrYWdlTmFtZSB7XG4gICAgZmxleDogMCAwIDIwJTtcbiAgICB3aWR0aDogMjAlO1xuICAgIHBhZGRpbmctcmlnaHQ6IDIlO1xufVxuXG4ubW9iaWxlVGFibGUgLm1hdC1jb2x1bW4tcGFja2FnZVNvbGRJZCB7XG4gICAgZmxleDogMCAwIDExJTtcbiAgICB3aWR0aDogMTElO1xufVxuLm1vYmlsZVRhYmxlIC5tYXQtY29sdW1uLWV4cGFuZCxcbi5tb2JpbGVUYWJsZSAubWF0LWNvbHVtbi1wYWNrYWdlU29sZElkIHtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuLm1vYmlsZVRhYmxlIG1hdC1jZWxsLm1hdC1jZWxsLm1hdC1jb2x1bW4tZXhwYW5kZWREZXRhaWwge1xuICAgIGZsZXg6IDAgMCAxMDAlICFpbXBvcnRhbnQ7XG59XG4iXX0= */"

/***/ }),

/***/ "./src/app/client-account/client-profile/client-packages/client-packages.component.ts":
/*!********************************************************************************************!*\
  !*** ./src/app/client-account/client-profile/client-packages/client-packages.component.ts ***!
  \********************************************************************************************/
/*! exports provided: ClientPackagesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientPackagesComponent", function() { return ClientPackagesComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _data_tables_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../data-tables.service */ "./src/app/data-tables.service.ts");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/esm5/table.es5.js");
/* harmony import */ var _client_account_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../responsive.service */ "./src/app/responsive.service.ts");







var ClientPackagesComponent = /** @class */ (function () {
    function ClientPackagesComponent(dataTablesService, clientAccountService, responsiveService) {
        this.dataTablesService = dataTablesService;
        this.clientAccountService = clientAccountService;
        this.responsiveService = responsiveService;
        this.displayedColumns = this.dataTablesService.getDefaultPackageSoldColumns();
        this.columnDefs = this.dataTablesService.getDefaultPackageSoldColumnDefs();
        this.packageSoldList = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"]();
    }
    ClientPackagesComponent.prototype.expandRow = function (element) {
        var _this = this;
        element.expanded = !element.expanded;
        if (element.expanded) {
            this.expandedPackage = element;
            for (var i = 0, x = this.packageSoldList.data.length; i < x; i++) {
                if (this.packageSoldList.data[i].packageSoldId !== element.packageSoldId)
                    this.packageSoldList.data[i].expanded = false;
            }
            this.expandedPackage.loadingAppts = true;
            this.clientAccountService.getAppointmentsByPackageSold(this.expandedPackage.packageSoldId).subscribe(function (appts) {
                if (appts !== null)
                    _this.expandedPackage.appts = appts;
                _this.expandedPackage.apptsLoaded = true;
                _this.expandedPackage.loadingAppts = false;
                _this.expandedPackage.errorLoading = false;
            }, function (error) {
                _this.expandedPackage.apptsLoaded = false;
                _this.expandedPackage.loadingAppts = false;
                _this.expandedPackage.errorLoading = true;
            });
        }
        else {
            this.expandedPackage = undefined;
            for (var i = 0, x = this.packageSoldList.data.length; i < x; i++) {
                this.packageSoldList.data[i].expanded = false;
            }
        }
    };
    ClientPackagesComponent.prototype.establishTable = function () {
        var _this = this;
        this.packageSoldList.data = this.selectedClient.packageSoldList;
        this.packageSoldList.sortingDataAccessor = function (obj, property) { return _this.dataTablesService.getProperty(obj, property); };
        this.packageSoldList.sort = this.sort;
    };
    ClientPackagesComponent.prototype.getPackagesSoldForClient = function () {
        var _this = this;
        if (this.selectedClient.packageSoldList === undefined) {
            this.clientAccountService.getPackagesSoldByClientId(this.selectedClient.clientId).subscribe(function (packageSoldList) {
                _this.selectedClient.packageSoldList = packageSoldList;
                _this.establishTable();
            });
        }
        else {
            this.establishTable();
        }
    };
    ClientPackagesComponent.prototype.ngOnInit = function () {
        this.getPackagesSoldForClient();
    };
    ClientPackagesComponent.ctorParameters = function () { return [
        { type: _data_tables_service__WEBPACK_IMPORTED_MODULE_3__["DataTablesService"] },
        { type: _client_account_service__WEBPACK_IMPORTED_MODULE_5__["ClientAccountService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_6__["ResponsiveService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ClientPackagesComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["miniWebsite"])
    ], ClientPackagesComponent.prototype, "miniWebsite", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["ClientAccount"])
    ], ClientPackagesComponent.prototype, "clientAccount", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["Client"])
    ], ClientPackagesComponent.prototype, "selectedClient", void 0);
    ClientPackagesComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'client-packages',
            template: __webpack_require__(/*! raw-loader!./client-packages.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/client-profile/client-packages/client-packages.component.html"),
            styles: [__webpack_require__(/*! ./client-packages.component.css */ "./src/app/client-account/client-profile/client-packages/client-packages.component.css"), __webpack_require__(/*! ../client-profile.component.css */ "./src/app/client-account/client-profile/client-profile.component.css"), __webpack_require__(/*! ../../../data-tables.component.css */ "./src/app/data-tables.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_data_tables_service__WEBPACK_IMPORTED_MODULE_3__["DataTablesService"], _client_account_service__WEBPACK_IMPORTED_MODULE_5__["ClientAccountService"], _responsive_service__WEBPACK_IMPORTED_MODULE_6__["ResponsiveService"]])
    ], ClientPackagesComponent);
    return ClientPackagesComponent;
}());



/***/ }),

/***/ "./src/app/client-account/client-profile/client-payment-info/client-payment-info.component.ts":
/*!****************************************************************************************************!*\
  !*** ./src/app/client-account/client-profile/client-payment-info/client-payment-info.component.ts ***!
  \****************************************************************************************************/
/*! exports provided: ClientPaymentInfoComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientPaymentInfoComponent", function() { return ClientPaymentInfoComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _client_account_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/esm5/table.es5.js");
/* harmony import */ var _data_tables_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../data-tables.service */ "./src/app/data-tables.service.ts");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _modals_manage_credit_card_manage_credit_card_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../modals/manage-credit-card/manage-credit-card.component */ "./src/app/modals/manage-credit-card/manage-credit-card.component.ts");









var ClientPaymentInfoComponent = /** @class */ (function () {
    function ClientPaymentInfoComponent(clientAccountService, dataTablesService, dialog, responsiveService) {
        this.clientAccountService = clientAccountService;
        this.dataTablesService = dataTablesService;
        this.dialog = dialog;
        this.responsiveService = responsiveService;
        this.displayedColumns = this.dataTablesService.getDefaultPaymentInfoColumns();
        this.columnDefs = this.dataTablesService.getDefaultPaymentInfoColumnDefs();
        this.creditCardList = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"]();
        this.creditCards = [];
    }
    ClientPaymentInfoComponent.prototype.deleteCard = function (creditCard) {
        var _this = this;
        var dataToPass = { client: this.selectedClient, preference: this.preference, path: 'deleteCard', card: creditCard };
        var dialogRef = this.dialog.open(_modals_manage_credit_card_manage_credit_card_component__WEBPACK_IMPORTED_MODULE_8__["ManageCreditCardComponent"], {
            maxWidth: this.responsiveService.getMaxWidthForModals(),
            minWidth: this.responsiveService.getMaxWidthForModals(),
            data: dataToPass
        });
        dialogRef.afterClosed().subscribe(function (updatedData) {
            _this.sortStripeSquareIntoCreditCardList();
        });
    };
    ClientPaymentInfoComponent.prototype.addCard = function () {
        var _this = this;
        var dataToPass = { client: this.selectedClient, preference: this.preference, path: 'addCard' };
        var dialogRef = this.dialog.open(_modals_manage_credit_card_manage_credit_card_component__WEBPACK_IMPORTED_MODULE_8__["ManageCreditCardComponent"], {
            maxWidth: this.responsiveService.getMaxWidthForModals('90vw'),
            minWidth: this.responsiveService.getMaxWidthForModals('90vw'),
            data: dataToPass
        });
        dialogRef.afterClosed().subscribe(function (updatedData) {
            var updatedCardsList = sessionStorage.getItem('updatedCardsList');
            if (updatedCardsList !== undefined && updatedCardsList !== null) {
                sessionStorage.removeItem('updatedCardsList');
                var updatedCards = JSON.parse(updatedCardsList);
                _this.selectedClient = _this.clientAccountService.storeCardInfoOnClient(_this.selectedClient, updatedCards);
                _this.sortStripeSquareIntoCreditCardList();
            }
        });
    };
    ClientPaymentInfoComponent.prototype.establishTable = function () {
        var _this = this;
        this.creditCardList.data = this.creditCards;
        this.creditCardList.sortingDataAccessor = function (obj, property) { return _this.dataTablesService.getProperty(obj, property); };
        this.creditCardList.sort = this.sort;
    };
    ClientPaymentInfoComponent.prototype.sortStripeSquareIntoCreditCardList = function () {
        this.creditCards = this.clientAccountService.createCreditCardsArray(this.selectedClient);
        this.establishTable();
    };
    ClientPaymentInfoComponent.prototype.ngOnInit = function () {
        this.sortStripeSquareIntoCreditCardList();
    };
    ClientPaymentInfoComponent.ctorParameters = function () { return [
        { type: _client_account_service__WEBPACK_IMPORTED_MODULE_3__["ClientAccountService"] },
        { type: _data_tables_service__WEBPACK_IMPORTED_MODULE_5__["DataTablesService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_7__["ResponsiveService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ClientPaymentInfoComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["Client"])
    ], ClientPaymentInfoComponent.prototype, "selectedClient", void 0);
    ClientPaymentInfoComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'client-payment-info',
            template: __webpack_require__(/*! raw-loader!./client-payment-info.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/client-profile/client-payment-info/client-payment-info.component.html"),
            styles: [__webpack_require__(/*! ../../../data-tables.component.css */ "./src/app/data-tables.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_client_account_service__WEBPACK_IMPORTED_MODULE_3__["ClientAccountService"], _data_tables_service__WEBPACK_IMPORTED_MODULE_5__["DataTablesService"],
            _angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__["MatDialog"], _responsive_service__WEBPACK_IMPORTED_MODULE_7__["ResponsiveService"]])
    ], ClientPaymentInfoComponent);
    return ClientPaymentInfoComponent;
}());



/***/ }),

/***/ "./src/app/client-account/client-profile/client-profile-container/client-profile-container.component.ts":
/*!**************************************************************************************************************!*\
  !*** ./src/app/client-account/client-profile/client-profile-container/client-profile-container.component.ts ***!
  \**************************************************************************************************************/
/*! exports provided: viewObject, StoredCardInfo, ClientProfileContainerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "viewObject", function() { return viewObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StoredCardInfo", function() { return StoredCardInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientProfileContainerComponent", function() { return ClientProfileContainerComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _client_account_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _email_settings_email_settings_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../email-settings/email-settings.service */ "./src/app/email-settings/email-settings.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");









var viewObject = /** @class */ (function () {
    function viewObject() {
    }
    return viewObject;
}());

var StoredCardInfo = /** @class */ (function () {
    function StoredCardInfo() {
    }
    return StoredCardInfo;
}());

var ClientProfileContainerComponent = /** @class */ (function () {
    function ClientProfileContainerComponent(businessService, clientAccountService, tagsService, schedulerPreferenceService, router, route, responsiveService, emailSettingsService) {
        this.businessService = businessService;
        this.clientAccountService = clientAccountService;
        this.tagsService = tagsService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.router = router;
        this.route = route;
        this.responsiveService = responsiveService;
        this.emailSettingsService = emailSettingsService;
        this.availableViews = [{ label: "Details", value: "details" }];
        this.packageView = { label: "Packages", value: "packages" };
        this.creditCardView = { label: "Payment Info", value: "paymentInfo" };
        this.disclaimerFormsView = { label: "Forms", value: "disclaimerForms" };
        this.emailSettingsView = { label: "Email & SMS Settings", value: "emailSettings" };
        this.preference = schedulerPreferenceService.schedulerPreference;
    }
    ClientProfileContainerComponent.prototype.goBack = function () {
        this.router.navigate(['../..'], { relativeTo: this.route });
    };
    ClientProfileContainerComponent.prototype.selectClient = function (changeEvent) {
        var client = changeEvent.client;
        var event = changeEvent.event;
        if (client.clientId !== this.selectedClient.clientId && event.isUserInput) {
            this.selectedClient = client;
            this.clientAccountService.selectedClient = this.selectedClient;
            this.clientProfileTitle = this.tagsService.assignClientValuesToTags(this.preference.labelMap.clientProfileTitle, this.selectedClient.fields, this.selectedClient);
        }
    };
    ClientProfileContainerComponent.prototype.determineViews = function () {
        this.clientProfileTitle = this.tagsService.assignClientValuesToTags(this.preference.labelMap.clientProfileTitle, this.selectedClient.fields, this.selectedClient);
        if ((this.emailSettingsService.emailCategories && this.emailSettingsService.emailCategories.length > 0) || (this.emailSettingsService.emailTemplates && this.emailSettingsService.emailTemplates.length > 0))
            this.availableViews.push(this.emailSettingsView);
        if (this.selectedClient.formList !== undefined && this.selectedClient.formList !== null && this.selectedClient.formList.length > 0)
            this.availableViews.push(this.disclaimerFormsView);
        if (this.selectedClient.packageSoldList !== undefined && this.selectedClient.packageSoldList.length > 0) {
            this.availableViews.push(this.packageView);
        }
        if (this.selectedClient.showPaymentInfo)
            this.availableViews.push(this.creditCardView);
        if (history.state !== undefined && history.state !== null) {
            if (history.state.showPackages !== undefined && history.state.showPackages !== null && history.state.showPackages === true) {
                var foundPackageView = false;
                for (var i = 0, x = this.availableViews.length; i < x; i++) {
                    if (this.availableViews[i].value === 'packages') {
                        foundPackageView = true;
                        this.selectedView = this.availableViews[i];
                    }
                }
                if (!foundPackageView)
                    this.selectedView = this.availableViews[0];
            }
            else if (history.state.showForms !== undefined && history.state.showForms !== null && history.state.showForms === true) {
                var foundFormsView = false;
                for (var i = 0, x = this.availableViews.length; i < x; i++) {
                    if (this.availableViews[i].value === 'disclaimerForms') {
                        foundFormsView = true;
                        this.selectedView = this.availableViews[i];
                    }
                }
                if (!foundFormsView)
                    this.selectedView = this.availableViews[0];
            }
            else
                this.selectedView = this.availableViews[0];
        }
        else
            this.selectedView = this.availableViews[0];
    };
    ClientProfileContainerComponent.prototype.checkPaymentInfo = function () {
        var _this = this;
        if (this.selectedClient.showPaymentInfo !== undefined) {
            this.determineViews();
        }
        else {
            this.clientAccountService.getStoredPaymentInfoByClientId(this.selectedClient.clientId).subscribe(function (storedCardInfo) {
                _this.selectedClient = _this.clientAccountService.storeCardInfoOnClient(_this.selectedClient, storedCardInfo);
                _this.determineViews();
            }, function (error) {
                _this.determineViews();
            });
        }
    };
    ClientProfileContainerComponent.prototype.checkPackages = function () {
        var _this = this;
        if (this.selectedClient.packageSoldList !== undefined) {
            this.checkPaymentInfo();
        }
        else {
            this.clientAccountService.getPackagesSoldByClientId(this.selectedClient.clientId).subscribe(function (packageSoldList) {
                _this.selectedClient.packageSoldList = packageSoldList;
                _this.checkPaymentInfo();
            }, function (error) {
                _this.checkPaymentInfo();
            });
        }
    };
    ClientProfileContainerComponent.prototype.ngAfterViewChecked = function () {
        // this.responsiveService.setHeightForEmbedAccount();
    };
    ClientProfileContainerComponent.prototype.ngOnInit = function () {
        this.clientAccount = this.clientAccountService.loggedInClient;
        if (this.clientAccountService.selectedClient !== undefined && this.clientAccountService.selectedClient !== null) {
            for (var i = 0, x = this.clientAccount.clientList.length; i < x; i++) {
                if (this.clientAccount.clientList[i].clientId === this.clientAccountService.selectedClient.clientId) {
                    this.selectedClient = this.clientAccount.clientList[i];
                }
            }
        }
        else {
            this.selectedClient = this.clientAccountService.selectClientBasedOnLoggedInEmail();
            this.clientAccountService.setSelectedClient(this.selectedClient, this.preference.schedulerPreferenceFieldDefnList);
        }
        if (this.selectedClient === undefined && this.clientAccountService.loggedInClient !== undefined) {
            this.selectedClient = this.clientAccountService.loggedInClient.clientList[0];
        }
        this.checkPackages();
        // this.determineViews();
    };
    ClientProfileContainerComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_2__["BusinessService"] },
        { type: _client_account_service__WEBPACK_IMPORTED_MODULE_3__["ClientAccountService"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_5__["TagsService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_8__["SchedulerPreferenceService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_6__["ResponsiveService"] },
        { type: _email_settings_email_settings_service__WEBPACK_IMPORTED_MODULE_7__["EmailSettingsService"] }
    ]; };
    ClientProfileContainerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-client-profile-container',
            template: __webpack_require__(/*! raw-loader!./client-profile-container.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/client-profile/client-profile-container/client-profile-container.component.html"),
            styles: [__webpack_require__(/*! ../client-profile.component.css */ "./src/app/client-account/client-profile/client-profile.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_2__["BusinessService"], _client_account_service__WEBPACK_IMPORTED_MODULE_3__["ClientAccountService"], _tags_service__WEBPACK_IMPORTED_MODULE_5__["TagsService"],
            _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_8__["SchedulerPreferenceService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"], _responsive_service__WEBPACK_IMPORTED_MODULE_6__["ResponsiveService"], _email_settings_email_settings_service__WEBPACK_IMPORTED_MODULE_7__["EmailSettingsService"]])
    ], ClientProfileContainerComponent);
    return ClientProfileContainerComponent;
}());



/***/ }),

/***/ "./src/app/client-account/client-profile/client-profile-details/client-profile-details.component.ts":
/*!**********************************************************************************************************!*\
  !*** ./src/app/client-account/client-profile/client-profile-details/client-profile-details.component.ts ***!
  \**********************************************************************************************************/
/*! exports provided: ClientProfileDetailsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientProfileDetailsComponent", function() { return ClientProfileDetailsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _client_account_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../scheduler/client-info/client-info.service */ "./src/app/scheduler/client-info/client-info.service.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../models/SchedulerPanel.model */ "./src/models/SchedulerPanel.model.ts");
/* harmony import */ var _scheduler_scheduler_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../scheduler/scheduler.service */ "./src/app/scheduler/scheduler.service.ts");










var ClientProfileDetailsComponent = /** @class */ (function () {
    function ClientProfileDetailsComponent(businessService, clientAccountService, clientInfoService, cdRef, responsiveService, schedulerService) {
        this.businessService = businessService;
        this.clientAccountService = clientAccountService;
        this.clientInfoService = clientInfoService;
        this.cdRef = cdRef;
        this.responsiveService = responsiveService;
        this.schedulerService = schedulerService;
        this.editing = false;
        this.savingClient = false;
        this.disableSave = false;
        this.errorSavingClient = false;
    }
    ClientProfileDetailsComponent.prototype.uploadingFile = function (event) {
        this.disableSave = event;
        this.cdRef.detectChanges();
    };
    ClientProfileDetailsComponent.prototype.enableOrDisableEditing = function () {
        for (var prop in this.clientInfoForm.controls) {
            if (this.editing) {
                for (var i = 0, x = this.selectedClient.fields.length; i < x; i++) {
                    if (this.selectedClient.fields[i].schedulerPreferenceFieldDefnId === Number(prop) && this.selectedClient.fields[i].code !== 'emailAddress' && this.selectedClient.fields[i].allowClientEdit) {
                        this.clientInfoForm.controls[prop].enable();
                    }
                }
            }
            else {
                this.clientInfoForm.controls[prop].disable();
            }
        }
    };
    ClientProfileDetailsComponent.prototype.editDetails = function () {
        this.editing = true;
        this.uneditedClient = lodash__WEBPACK_IMPORTED_MODULE_6__["cloneDeep"](this.selectedClient);
        this.enableOrDisableEditing();
    };
    ClientProfileDetailsComponent.prototype.cancelEdits = function () {
        this.editing = false;
        this.configureFieldsForDisplay(this.uneditedClient);
    };
    ClientProfileDetailsComponent.prototype.configureFieldsForDisplay = function (uneditedClient) {
        if (uneditedClient !== undefined) {
            this.selectedClient = uneditedClient;
        }
        this.selectedClient.fields = this.clientInfoService.initialConfigurationOfSchedulerFields(this.selectedClient.fields);
        this.clientInfoForm = this.schedulerService.getPanelForm(_models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_8__["SchedulerPanelValues"].clientInfo, this.selectedClient.fields, -1); // TT-6661 06/22/2020 -- setting -1 as reasonId, should make it so that if field are specific to service/classses and are mode CLIENT then should show if they have a value
        this.editing = false;
        this.enableOrDisableEditing();
    };
    ClientProfileDetailsComponent.prototype.saveChanges = function () {
        var _this = this;
        if (this.savingClient === false) { //to keep client from clicking multiple times on save button
            this.savingClient = true;
            for (var i = 0, x = this.selectedClient.fields.length; i < x; i++) {
                for (var prop in this.clientInfoForm.value) {
                    if (this.selectedClient.fields[i].schedulerPreferenceFieldDefnId === Number(prop)) {
                        this.selectedClient.fields[i].value = this.clientInfoForm.value[prop];
                    }
                }
            }
            this.businessService.createUpdateClient(this.selectedClient)
                .subscribe(function (updatedClient) {
                _this.selectedClient = updatedClient;
                _this.clientAccountService.updateClientInClientList(_this.selectedClient);
                _this.configureFieldsForDisplay();
                _this.savingClient = false;
                _this.errorSavingClient = false;
            }, function (error) {
                //FAILED TO SAVE CLIENT
                _this.savingClient = false;
                _this.errorSavingClient = true;
            });
        }
    };
    ClientProfileDetailsComponent.prototype.ngAfterViewChecked = function () {
        this.responsiveService.setHeightForEmbedAccount();
    };
    ClientProfileDetailsComponent.prototype.ngOnChanges = function (changes) {
        if (changes.selectedClient !== undefined && changes.selectedClient.previousValue !== undefined) {
            this.configureFieldsForDisplay();
        }
    };
    ClientProfileDetailsComponent.prototype.ngOnInit = function () {
        this.configureFieldsForDisplay();
    };
    ClientProfileDetailsComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"] },
        { type: _client_account_service__WEBPACK_IMPORTED_MODULE_4__["ClientAccountService"] },
        { type: _scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_5__["ClientInfoService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_7__["ResponsiveService"] },
        { type: _scheduler_scheduler_service__WEBPACK_IMPORTED_MODULE_9__["SchedulerService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ClientProfileDetailsComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["ClientAccount"])
    ], ClientProfileDetailsComponent.prototype, "clientAccount", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["Client"])
    ], ClientProfileDetailsComponent.prototype, "selectedClient", void 0);
    ClientProfileDetailsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'client-profile-details',
            template: __webpack_require__(/*! raw-loader!./client-profile-details.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/client-profile/client-profile-details/client-profile-details.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"], _client_account_service__WEBPACK_IMPORTED_MODULE_4__["ClientAccountService"], _scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_5__["ClientInfoService"],
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"], _responsive_service__WEBPACK_IMPORTED_MODULE_7__["ResponsiveService"], _scheduler_scheduler_service__WEBPACK_IMPORTED_MODULE_9__["SchedulerService"]])
    ], ClientProfileDetailsComponent);
    return ClientProfileDetailsComponent;
}());



/***/ }),

/***/ "./src/app/client-account/client-profile/client-profile.component.css":
/*!****************************************************************************!*\
  !*** ./src/app/client-account/client-profile/client-profile.component.css ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#profileViewSelector {\n    display: flex;\n    justify-content: space-between;\n}\n:host /deep/ mat-row.detail-row {\n    display: none;\n}\n:host /deep/ mat-row.detail-row-expanded {\n    display: flex;\n}\n:host /deep/ mat-cell .element-detail {\n    margin-top: 15px;\n    padding-bottom: 15px;\n}\n:host /deep/ mat-cell {\n    word-break: break-all;\n}\n:host /deep/ mat-row.element-row:not(.expanded-row):hover {\n    background: #f5f5f5;\n}\n:host /deep/ mat-row.element-row:not(.expanded-row):active {\n    background: #efefef;\n}\n:host /deep/ mat-row .element-row mat-cell {\n    border-bottom-width: 0;\n}\n.element-detail {\n    overflow: hidden;\n    display: flex;\n}\nmat-card.mobileView #profileViewSelector mat-form-field {\n    width: 125px;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2xpZW50LWFjY291bnQvY2xpZW50LXByb2ZpbGUvY2xpZW50LXByb2ZpbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYiw4QkFBOEI7QUFDbEM7QUFDQTtJQUNJLGFBQWE7QUFDakI7QUFDQTtJQUNJLGFBQWE7QUFDakI7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixvQkFBb0I7QUFDeEI7QUFFQTtJQUNJLHFCQUFxQjtBQUN6QjtBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCO0FBRUE7SUFDSSxtQkFBbUI7QUFDdkI7QUFFQTtJQUNJLHNCQUFzQjtBQUMxQjtBQUNBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGFBQWE7QUFDakI7QUFDQTtJQUNJLFlBQVk7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9jbGllbnQtYWNjb3VudC9jbGllbnQtcHJvZmlsZS9jbGllbnQtcHJvZmlsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI3Byb2ZpbGVWaWV3U2VsZWN0b3Ige1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuOmhvc3QgL2RlZXAvIG1hdC1yb3cuZGV0YWlsLXJvdyB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cbjpob3N0IC9kZWVwLyBtYXQtcm93LmRldGFpbC1yb3ctZXhwYW5kZWQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG59XG5cbjpob3N0IC9kZWVwLyBtYXQtY2VsbCAuZWxlbWVudC1kZXRhaWwge1xuICAgIG1hcmdpbi10b3A6IDE1cHg7XG4gICAgcGFkZGluZy1ib3R0b206IDE1cHg7XG59XG5cbjpob3N0IC9kZWVwLyBtYXQtY2VsbCB7XG4gICAgd29yZC1icmVhazogYnJlYWstYWxsO1xufVxuXG46aG9zdCAvZGVlcC8gbWF0LXJvdy5lbGVtZW50LXJvdzpub3QoLmV4cGFuZGVkLXJvdyk6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6ICNmNWY1ZjU7XG59XG5cbjpob3N0IC9kZWVwLyBtYXQtcm93LmVsZW1lbnQtcm93Om5vdCguZXhwYW5kZWQtcm93KTphY3RpdmUge1xuICAgIGJhY2tncm91bmQ6ICNlZmVmZWY7XG59XG5cbjpob3N0IC9kZWVwLyBtYXQtcm93IC5lbGVtZW50LXJvdyBtYXQtY2VsbCB7XG4gICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMDtcbn1cbi5lbGVtZW50LWRldGFpbCB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBkaXNwbGF5OiBmbGV4O1xufVxubWF0LWNhcmQubW9iaWxlVmlldyAjcHJvZmlsZVZpZXdTZWxlY3RvciBtYXQtZm9ybS1maWVsZCB7XG4gICAgd2lkdGg6IDEyNXB4O1xufVxuIl19 */"

/***/ }),

/***/ "./src/app/client-account/client-profile/client-profile.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/client-account/client-profile/client-profile.component.ts ***!
  \***************************************************************************/
/*! exports provided: ClientProfileComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientProfileComponent", function() { return ClientProfileComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var ClientProfileComponent = /** @class */ (function () {
    function ClientProfileComponent() {
    }
    ClientProfileComponent.prototype.ngOnInit = function () {
    };
    ClientProfileComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-client-profile',
            template: __webpack_require__(/*! raw-loader!./client-profile.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/client-profile/client-profile.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], ClientProfileComponent);
    return ClientProfileComponent;
}());



/***/ }),

/***/ "./src/app/client-account/view-appointments/booking-object-details/appointment-detail/appointment-detail.component.ts":
/*!****************************************************************************************************************************!*\
  !*** ./src/app/client-account/view-appointments/booking-object-details/appointment-detail/appointment-detail.component.ts ***!
  \****************************************************************************************************************************/
/*! exports provided: AppointmentDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppointmentDetailComponent", function() { return AppointmentDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _client_account_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../auth/auth.service */ "./src/app/auth/auth.service.ts");
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _cancel_appointment_cancel_appointment_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../cancel-appointment/cancel-appointment.component */ "./src/app/client-account/view-appointments/cancel-appointment/cancel-appointment.component.ts");
/* harmony import */ var _modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../modals/error-modal/error-modal.component */ "./src/app/modals/error-modal/error-modal.component.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _scheduler_common_components_add_to_calendar_add_to_calendar_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../scheduler/common-components/add-to-calendar/add-to-calendar.component */ "./src/app/scheduler/common-components/add-to-calendar/add-to-calendar.component.ts");
/* harmony import */ var _angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/material/bottom-sheet */ "./node_modules/@angular/material/esm5/bottom-sheet.es5.js");
/* harmony import */ var _scheduler_scheduler_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../scheduler/scheduler.service */ "./src/app/scheduler/scheduler.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _models_Staff_model__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../../models/Staff.model */ "./src/models/Staff.model.ts");
/* harmony import */ var _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../../../models/SchedulerPanel.model */ "./src/models/SchedulerPanel.model.ts");



















var AppointmentDetailComponent = /** @class */ (function () {
    function AppointmentDetailComponent(businessService, clientAccountService, timeService, schedulerService, schedulerPreferenceService, datePipe, titleCasePipe, dialog, responsiveService, route, router, tagsService, authService, addToCalendarSheet) {
        this.businessService = businessService;
        this.clientAccountService = clientAccountService;
        this.timeService = timeService;
        this.schedulerService = schedulerService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.datePipe = datePipe;
        this.titleCasePipe = titleCasePipe;
        this.dialog = dialog;
        this.responsiveService = responsiveService;
        this.route = route;
        this.router = router;
        this.tagsService = tagsService;
        this.authService = authService;
        this.addToCalendarSheet = addToCalendarSheet;
        this.apptLoaded = false;
        this.apptLoading = true;
        this.errorLoading = false;
        this.reschedulingAppt = false;
        this.rescheduleAllowed = false;
        this.rescheduleNotAllowedReason = null;
        this.rescheduleSaving = false;
        this.errorReschedulingAppointment = false;
        this.cancelNotAllowed = true;
        this.cancelNotAllowedReason = 'apptCancelPastTimeframe';
        this.clientConfirmFlow = false;
        this.apptCanBeConfirmed = false;
        this.clientApptCannotBeConfirmedMsg = null;
        this.rescheduleConfirmationMsg = '';
        this.showRescheduleConfirm = false;
        this.directionComingFrom = 'reschedule';
        this.showAddToCalendarBtn = true;
        this.showBackButton = true;
        this.inputValues = [];
        this.preference = schedulerPreferenceService.schedulerPreference;
    }
    AppointmentDetailComponent.prototype.addToCalendar = function () {
        this.addToCalendarSheet.open(_scheduler_common_components_add_to_calendar_add_to_calendar_component__WEBPACK_IMPORTED_MODULE_13__["AddToCalendarComponent"], { data: { appointments: [this.appt] } });
    };
    AppointmentDetailComponent.prototype.rescheduleAppt = function () {
        if (!this.rescheduleAllowed) {
            var dialogRef = this.dialog.open(_modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_11__["ErrorModalComponent"], { maxWidth: this.responsiveService.getMaxWidthForModals(), data: { preference: this.preference, appt: this.appt, errorType: this.rescheduleNotAllowedReason } });
        }
        else if (this.preference.maxClientRescheduleCount !== null && this.appt.clientRescheduleCount >= this.preference.maxClientRescheduleCount) { //TT-6115
            var dialogRef = this.dialog.open(_modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_11__["ErrorModalComponent"], { maxWidth: this.responsiveService.getMaxWidthForModals(), data: { preference: this.preference, errorType: 'apptMaxRescheduleCountError' } });
        }
        else {
            this.CSFilterObj = this.schedulerService.newCSFilterObj();
            this.appt.location.variableAddress = this.appt.address; // LHB 10/2/2020 TT-7047
            this.appt.location.description = this.appt.address; // LHB 10/2/2020 TT-7047
            this.CSFilterObj.reasonIdList = [this.appt.reason.reasonId];
            var reasonInputValue = { panel: 'reasons', 'values': [{ 'field': 'reason', 'value': this.appt.reason }] };
            var staffInputValue = { panel: 'staff', 'values': [{ 'field': 'staff', 'value': new _models_Staff_model__WEBPACK_IMPORTED_MODULE_17__["Staff"](null, this.preference.labelMap.labelNoPreference) }] };
            var locationInputValue = { panel: 'locations', 'values': [{ 'field': 'location', 'value': this.appt.location }] };
            this.CSFilterObj.locationIdList = [this.appt.location.locationId];
            this.CSFilterObj.staffIdList = null;
            if (this.preference.restrictReschedToSameStaff) {
                staffInputValue = { panel: 'staff', 'values': [{ 'field': 'staff', 'value': this.appt.staff }] };
                this.CSFilterObj.staffIdList = [this.appt.staff.professionalId];
            }
            this.inputValues = [reasonInputValue, staffInputValue, locationInputValue];
            if (this.appt.locationSuperGroup !== null || this.appt.locationGroup !== null ||
                (this.appt.reasonSuperGroup !== undefined && this.appt.reasonSuperGroup !== null) || this.appt.reasonGroup !== null) {
                this.CSFilterObj.groupIdList = [];
                if (this.appt.locationSuperGroup !== undefined && this.appt.locationSuperGroup !== null) {
                    this.CSFilterObj.groupIdList.push((this.appt.locationSuperGroup.groupId));
                    this.CSFilterObj.locationSuperGroupIdList = [this.appt.locationSuperGroup.groupId];
                    var locationSuperGroupInputValue = { panel: 'locationSuperGroups', 'values': [{ 'field': 'locationSuperGroup', 'value': this.appt.locationSuperGroup }] };
                    this.inputValues.push(locationSuperGroupInputValue);
                }
                if (this.appt.locationGroup !== undefined && this.appt.locationGroup !== null) {
                    this.CSFilterObj.groupIdList.push((this.appt.locationGroup.groupId));
                    this.CSFilterObj.locationGroupIdList = [this.appt.locationGroup.groupId];
                    var locationGroupInputValue = { panel: 'locationGroups', 'values': [{ 'field': 'locationGroup', 'value': this.appt.locationGroup }] };
                    this.inputValues.push(locationGroupInputValue);
                }
                if (this.appt.reasonSuperGroup !== undefined && this.appt.reasonSuperGroup !== null) {
                    this.CSFilterObj.groupIdList.push((this.appt.reasonSuperGroup.groupId));
                    this.CSFilterObj.reasonSuperGroupIdList = [this.appt.reasonSuperGroup.groupId];
                    var reasonSuperGroupInputValue = { panel: 'reasonSuperGroups', 'values': [{ 'field': 'reasonSuperGroup', 'value': this.appt.reasonSuperGroup }] };
                    this.inputValues.push(reasonSuperGroupInputValue);
                }
                if (this.appt.reasonGroup !== undefined && this.appt.reasonGroup !== null) {
                    this.CSFilterObj.groupIdList.push((this.appt.reasonGroup.groupId));
                    this.CSFilterObj.reasonGroupIdList = [this.appt.reasonGroup.groupId];
                    var reasonGroupInputValue = { panel: 'reasonGroups', 'values': [{ 'field': 'reasonGroup', 'value': this.appt.reasonGroup }] };
                    this.inputValues.push(reasonGroupInputValue);
                }
            }
            if (this.appt.client.locale !== undefined && this.appt.client.locale !== null) {
                this.CSFilterObj.locale = this.appt.client.locale;
            }
            if (this.appt.client.timeZoneCode !== undefined && this.appt.client.timeZoneCode !== null) {
                this.CSFilterObj.clientTimeZone = this.appt.client.timeZoneCode.timeZoneCode;
            }
            this.timePanel = new _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_18__["schedulerPanel"](_models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_18__["SchedulerPanelValues"].time, null, true, 8, false, 'timeTitle', 'timeText', 'timePnlErrorLoading', true);
            this.timePanel.formGroup = this.schedulerService.getPanelForm(this.timePanel.panel, this.preference.schedulerPreferenceFieldDefnList);
            this.reschedulingAppt = true;
        }
    };
    AppointmentDetailComponent.prototype.saveRescheduled = function (moveData) {
        var _this = this;
        this.reschedulingAppt = false;
        if (moveData.direction === 'next') {
            this.rescheduleSaving = true;
            var selectedDateTime = moveData.panel.formGroup.value.selectedDateTime;
            for (var prop in selectedDateTime) {
                switch (prop) {
                    case 'clientEndDate':
                    case 'clientStartDate':
                        this.appt[prop] = this.datePipe.transform(selectedDateTime[prop], 'yyyy-MM-dd', '');
                        break;
                    case 'recurringScheduleId':
                        this.appt['recurringSchedule'] = { 'recurringScheduleId': selectedDateTime[prop] };
                        break;
                    default:
                        this.appt[prop] = selectedDateTime[prop];
                }
            }
            if (selectedDateTime.calTimeSlot !== null) { //LHB 06/23/2020 TT-6736 fix
                var initialStaffFound = false;
                for (var i = 0, x = selectedDateTime.calTimeSlot.units.length; i < x; i++) {
                    if (selectedDateTime.calTimeSlot.units[i].professionalId === this.appt.staff.professionalId)
                        initialStaffFound = true;
                }
                if (!initialStaffFound) {
                    this.appt.staff = new _models_Staff_model__WEBPACK_IMPORTED_MODULE_17__["Staff"](selectedDateTime.calTimeSlot.units[0].professionalId, null);
                }
            }
            else if (selectedDateTime.classScheduleId !== undefined && selectedDateTime.classScheduleId !== null) {
                if (selectedDateTime.professionalId !== undefined && selectedDateTime.professionalId !== null && selectedDateTime.professionalId !== this.appt.staff.professionalId) {
                    this.appt.staff = new _models_Staff_model__WEBPACK_IMPORTED_MODULE_17__["Staff"](selectedDateTime.professionalId, null);
                }
            }
            this.appt.startDate = this.appt.clientStartDate;
            this.appt.endDate = this.appt.clientEndDate;
            this.businessService.updateAppt(this.appt)
                .subscribe(function (updatedAppt) {
                // this.rescheduleConfirmationMsg
                _this.errorReschedulingAppointment = false;
                _this.showRescheduleConfirm = true;
                _this.configureApptDetail(updatedAppt);
            }, function (error) {
                _this.errorReschedulingAppointment = true;
                _this.rescheduleSaving = false;
                _this.apptLoading = false;
            });
        }
    };
    AppointmentDetailComponent.prototype.cancelAppt = function () {
        var _this = this;
        if (this.cancelNotAllowed) {
            var dialogRef = this.dialog.open(_modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_11__["ErrorModalComponent"], { maxWidth: this.responsiveService.getMaxWidthForModals(),
                data: { preference: this.preference, errorType: this.cancelNotAllowedReason, appt: this.appt } });
        }
        else {
            var dataToPass = new _cancel_appointment_cancel_appointment_component__WEBPACK_IMPORTED_MODULE_10__["CancelBookingObjModalData"]();
            dataToPass.preference = this.preference;
            dataToPass.cancelType = 'APPOINTMENT';
            dataToPass.appt = this.appt;
            var dialogRef = this.dialog.open(_cancel_appointment_cancel_appointment_component__WEBPACK_IMPORTED_MODULE_10__["CancelAppointmentComponent"], {
                maxWidth: this.responsiveService.getMaxWidthForModals(),
                data: dataToPass
            });
            dialogRef.afterClosed().subscribe(function (cancelledAppt) {
                if (cancelledAppt !== undefined) {
                    _this.configureApptDetail(cancelledAppt);
                }
            });
        }
    };
    AppointmentDetailComponent.prototype.goBack = function () {
        if (this.authService.isAuth()) {
            if (history.state !== undefined && history.state !== null && history.state.onMyProfile !== undefined && history.state.onMyProfile !== null && history.state.onMyProfile === true) {
                this.router.navigate(['/my-account/profile'], { relativeTo: this.route.root, state: { showPackages: true } });
            }
            else if (history.state !== undefined && history.state !== null && history.state.onRepeatingDetail !== undefined && history.state.onRepeatingDetail !== null && history.state.onRepeatingDetail === true) {
                this.router.navigate(['/my-account/repeating/' + this.appt.recurringAppointmentId], { relativeTo: this.route.root });
            }
            else
                this.router.navigate(['/my-account/appts'], { relativeTo: this.route.root, state: { listStatus: this.appt.status.toUpperCase() } });
        }
        else if (!this.businessService.business.acceptOnlineAppointments) {
            this.clientAccountService.movedFromDetailWhenBookingNotAllowed.next();
            this.router.navigate(['/'], { relativeTo: this.route.root });
        }
        else {
            this.router.navigate(['../../scheduler'], { relativeTo: this.route });
        }
    };
    AppointmentDetailComponent.prototype.configureApptDetail = function (appt) {
        var _this = this;
        if (appt === null) {
            var dialogRef = this.dialog.open(_modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_11__["ErrorModalComponent"], { maxWidth: this.responsiveService.getMaxWidthForModals(),
                data: { preference: this.preference, errorType: 'apptDoesNotBelongToAccount' } });
            dialogRef.afterClosed().subscribe(function (data) {
                _this.goBack();
            });
        }
        else {
            this.appt = appt;
            this.apptDetailText = this.tagsService.convertApptPropertiesToTags('appointmentDetailText', this.preference, this.appt);
            this.apptStatus = this.appt.status.replace(new RegExp('_', 'g'), ' ');
            this.apptStatus = this.titleCasePipe.transform(this.apptStatus);
            if (window.location.href.indexOf('businessWeb/web/clientConfirm') !== -1) {
                this.clientConfirmFlow = true;
                if (this.appt.status.toUpperCase() === 'OPEN')
                    this.apptCanBeConfirmed = true;
                else {
                    this.apptCanBeConfirmed = false;
                    this.clientApptCannotBeConfirmedMsg = this.tagsService.convertApptPropertiesToTags('clientApptCannotBeConfirmedMsg', this.preference, this.appt);
                }
            }
            switch (this.appt.status.toUpperCase()) {
                case 'OPEN':
                    this.chipBaseStyle = 'primary';
                    this.chipClass = 'apptStatusOpenChip';
                    break;
                case 'COMPLETED':
                    this.chipBaseStyle = 'success';
                    this.chipClass = 'apptStatusCompletedChip';
                    break;
                case 'CANCELLED':
                    this.chipBaseStyle = 'error';
                    this.chipClass = 'apptStatusCancelledChip';
                    break;
                case 'NO_SHOW':
                    this.chipBaseStyle = 'warning';
                    this.chipClass = 'apptStatusNoShowChip';
                    break;
            }
            this.rescheduleAllowed = false;
            this.cancelNotAllowed = true;
            if (this.preference.rescheduleHrs === null) {
                this.rescheduleNotAllowedReason = 'reschedulingsNotAllowedByBusiness';
            }
            else if (this.appt.status.toUpperCase() !== 'OPEN') {
                this.rescheduleNotAllowedReason = 'apptRescheduleNotInOpenStatus';
            }
            else if (this.appt.client.status.toUpperCase() === this.clientAccountService.onHoldStatus) {
                this.rescheduleNotAllowedReason = 'rescheduleNotAllowedClientOnHold';
            }
            else if (this.preference.rescheduleHrs !== null && this.appt.status.toUpperCase() === 'OPEN') {
                var rescheduleHrsInMs = this.timeService.oneHrMs * this.preference.rescheduleHrs;
                var rescheduleAllowedUntil = Number(this.appt.clientStartDateTimeUTC) - rescheduleHrsInMs;
                var currentDateTimeMs = new Date().getTime();
                if (currentDateTimeMs < rescheduleAllowedUntil) {
                    this.rescheduleAllowed = true;
                }
                else {
                    this.rescheduleNotAllowedReason = 'apptReschedulePastTimeframe';
                }
            }
            if (this.appt.status.toUpperCase() !== 'OPEN') {
                this.cancelNotAllowedReason = 'apptCancelNotInOpenStatus';
            }
            else if (this.appt.client.status === this.clientAccountService.onHoldStatus) {
                this.cancelNotAllowedReason = 'cancelNotAllowedClientOnHold';
            }
            else if (this.preference.cancelHrs !== -1 && this.appt.status.toUpperCase() === 'OPEN') {
                var cancelHrsInMs = this.timeService.oneHrMs * this.preference.cancelHrs;
                var cancelAllowedUntil = Number(this.appt.clientStartDateTimeUTC) - cancelHrsInMs;
                var currentDateTimeMs = new Date().getTime();
                if (currentDateTimeMs < cancelAllowedUntil) {
                    this.cancelNotAllowed = false;
                }
                else {
                    this.cancelNotAllowedReason = 'apptCancelPastTimeframe';
                }
            }
            this.apptLoaded = true;
            this.apptLoading = false;
            this.rescheduleSaving = false;
            if (this.showRescheduleConfirm) {
                setTimeout(function () {
                    _this.showRescheduleConfirm = false;
                }, 5000);
            }
        }
    };
    AppointmentDetailComponent.prototype.getApptDetail = function () {
        var _this = this;
        var calendarIdString = this.route.params.subscribe(function (params) {
            _this.apptHash = params['apptHash'];
        });
        if (history.state !== undefined && history.state !== null && history.state.appt !== undefined && history.state.appt !== null) {
            this.configureApptDetail(history.state.appt);
        }
        else {
            this.businessService.getApptDetail(this.apptHash)
                .subscribe(function (appt) {
                _this.configureApptDetail(appt);
            }, function (error) {
                _this.errorLoading = true;
                _this.apptLoading = false;
            });
        }
    };
    AppointmentDetailComponent.prototype.ngAfterViewChecked = function () {
        this.responsiveService.setHeightForEmbedAccount();
    };
    AppointmentDetailComponent.prototype.ngOnInit = function () {
        if (!this.authService.isAuth() && window.location.pathname.indexOf("manage") !== -1)
            this.showBackButton = false;
        this.showAddToCalendarBtn = this.preference.showAddToCalendar;
        this.selectedClient = this.clientAccountService.getSelectedClient(this.preference);
        this.getApptDetail();
    };
    AppointmentDetailComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_2__["BusinessService"] },
        { type: _client_account_service__WEBPACK_IMPORTED_MODULE_3__["ClientAccountService"] },
        { type: _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_7__["TimeService"] },
        { type: _scheduler_scheduler_service__WEBPACK_IMPORTED_MODULE_15__["SchedulerService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_16__["SchedulerPreferenceService"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_8__["DatePipe"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_8__["TitleCasePipe"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_9__["MatDialog"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_12__["ResponsiveService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_5__["TagsService"] },
        { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_6__["AuthService"] },
        { type: _angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_14__["MatBottomSheet"] }
    ]; };
    AppointmentDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-appointment-detail',
            template: __webpack_require__(/*! raw-loader!./appointment-detail.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/view-appointments/booking-object-details/appointment-detail/appointment-detail.component.html"),
            styles: [__webpack_require__(/*! ../booking-object-details.component.css */ "./src/app/client-account/view-appointments/booking-object-details/booking-object-details.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_2__["BusinessService"], _client_account_service__WEBPACK_IMPORTED_MODULE_3__["ClientAccountService"], _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_7__["TimeService"],
            _scheduler_scheduler_service__WEBPACK_IMPORTED_MODULE_15__["SchedulerService"], _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_16__["SchedulerPreferenceService"],
            _angular_common__WEBPACK_IMPORTED_MODULE_8__["DatePipe"], _angular_common__WEBPACK_IMPORTED_MODULE_8__["TitleCasePipe"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_9__["MatDialog"], _responsive_service__WEBPACK_IMPORTED_MODULE_12__["ResponsiveService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _tags_service__WEBPACK_IMPORTED_MODULE_5__["TagsService"], _auth_auth_service__WEBPACK_IMPORTED_MODULE_6__["AuthService"], _angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_14__["MatBottomSheet"]])
    ], AppointmentDetailComponent);
    return AppointmentDetailComponent;
}());



/***/ }),

/***/ "./src/app/client-account/view-appointments/booking-object-details/booking-object-details.component.css":
/*!**************************************************************************************************************!*\
  !*** ./src/app/client-account/view-appointments/booking-object-details/booking-object-details.component.css ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".mat-card > .mat-card-actions {\n    margin-bottom: 0;\n    padding-top: 0;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2xpZW50LWFjY291bnQvdmlldy1hcHBvaW50bWVudHMvYm9va2luZy1vYmplY3QtZGV0YWlscy9ib29raW5nLW9iamVjdC1kZXRhaWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsY0FBYztBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2NsaWVudC1hY2NvdW50L3ZpZXctYXBwb2ludG1lbnRzL2Jvb2tpbmctb2JqZWN0LWRldGFpbHMvYm9va2luZy1vYmplY3QtZGV0YWlscy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jYXJkID4gLm1hdC1jYXJkLWFjdGlvbnMge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgcGFkZGluZy10b3A6IDA7XG59XG4iXX0= */"

/***/ }),

/***/ "./src/app/client-account/view-appointments/booking-object-details/repeating-appointment-detail/repeating-appointment-detail.component.ts":
/*!************************************************************************************************************************************************!*\
  !*** ./src/app/client-account/view-appointments/booking-object-details/repeating-appointment-detail/repeating-appointment-detail.component.ts ***!
  \************************************************************************************************************************************************/
/*! exports provided: RepeatingAppointmentDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RepeatingAppointmentDetailComponent", function() { return RepeatingAppointmentDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/bottom-sheet */ "./node_modules/@angular/material/esm5/bottom-sheet.es5.js");
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../auth/auth.service */ "./src/app/auth/auth.service.ts");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _client_account_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../modals/error-modal/error-modal.component */ "./src/app/modals/error-modal/error-modal.component.ts");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _cancel_appointment_cancel_appointment_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../cancel-appointment/cancel-appointment.component */ "./src/app/client-account/view-appointments/cancel-appointment/cancel-appointment.component.ts");
/* harmony import */ var _scheduler_common_components_add_to_calendar_add_to_calendar_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../scheduler/common-components/add-to-calendar/add-to-calendar.component */ "./src/app/scheduler/common-components/add-to-calendar/add-to-calendar.component.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
















var RepeatingAppointmentDetailComponent = /** @class */ (function () {
    function RepeatingAppointmentDetailComponent(businessService, responsiveService, route, router, tagsService, authService, addToCalendarSheet, clientAccountService, dialog, titleCasePipe, timeService, schedulerPreferenceService) {
        this.businessService = businessService;
        this.responsiveService = responsiveService;
        this.route = route;
        this.router = router;
        this.tagsService = tagsService;
        this.authService = authService;
        this.addToCalendarSheet = addToCalendarSheet;
        this.clientAccountService = clientAccountService;
        this.dialog = dialog;
        this.titleCasePipe = titleCasePipe;
        this.timeService = timeService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.calendarAddAppts = [];
        this.loaded = false;
        this.loading = true;
        this.errorLoading = false;
        this.showAddToCalendarBtn = true;
        this.cancelNotAllowed = true;
        this.weekdays = this.timeService.getWeekdayDataObjs();
        this.preference = schedulerPreferenceService.schedulerPreference;
    }
    RepeatingAppointmentDetailComponent.prototype.goBack = function () {
        if (this.authService.isAuth()) {
            this.router.navigate(['/my-account/appts'], { relativeTo: this.route.root, state: { listStatus: 'REPEATING' } });
        }
        else {
            this.router.navigate(['../../scheduler'], { relativeTo: this.route });
        }
    };
    RepeatingAppointmentDetailComponent.prototype.cancelRepeatingAppt = function () {
        var _this = this;
        if (this.cancelNotAllowed) {
            var dialogRef = this.dialog.open(_modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_9__["ErrorModalComponent"], {
                maxWidth: this.responsiveService.getMaxWidthForModals(),
                data: { preference: this.preference, errorType: this.cancelNotAllowedReason, appt: this.repeatingAppt }
            });
        }
        else {
            var dataToPass = new _cancel_appointment_cancel_appointment_component__WEBPACK_IMPORTED_MODULE_13__["CancelBookingObjModalData"]();
            dataToPass.repeatingAppt = this.repeatingAppt;
            dataToPass.cancelType = 'REPEATING';
            dataToPass.preference = this.preference;
            var dialogRef = this.dialog.open(_cancel_appointment_cancel_appointment_component__WEBPACK_IMPORTED_MODULE_13__["CancelAppointmentComponent"], {
                maxWidth: this.responsiveService.getMaxWidthForModals(),
                data: dataToPass
            });
            dialogRef.afterClosed().subscribe(function (cancelledRepeatingAppt) {
                // console.log(cancelledRepeatingAppt);
                if (cancelledRepeatingAppt !== undefined) {
                    _this.loaded = false;
                    _this.loading = true;
                    _this.configureDetail(cancelledRepeatingAppt);
                }
            });
        }
    };
    RepeatingAppointmentDetailComponent.prototype.configureDetail = function (repeatingAppt) {
        var _this = this;
        if (repeatingAppt === null) {
            var dialogRef = this.dialog.open(_modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_9__["ErrorModalComponent"], { maxWidth: this.responsiveService.getMaxWidthForModals(),
                data: { preference: this.preference, errorType: 'apptDoesNotBelongToAccount' } });
            dialogRef.afterClosed().subscribe(function (data) {
                _this.goBack();
            });
        }
        else {
            this.repeatingApptFullObj = repeatingAppt;
            this.repeatingAppt = repeatingAppt.recurringAppointment;
            if (this.repeatingAppt.everyXMonths !== null && this.repeatingAppt.everyXMonths !== 0) {
                this.repeatingAppt.weeksOrMonths = this.repeatingAppt.everyXMonths === 1 ? this.preference.labelMap.monthLabel : this.preference.labelMap.monthsLabel;
                this.repeatingAppt.frequency = this.repeatingAppt.everyXMonths;
            }
            else {
                this.repeatingAppt.weeksOrMonths = this.repeatingAppt.everyXWeeks === 1 ? this.preference.labelMap.weekLabel : this.preference.labelMap.weeksLabel;
                this.repeatingAppt.frequency = this.repeatingAppt.everyXWeeks;
            }
            this.appts = repeatingAppt.appointments;
            this.calendarAddAppts = [];
            var statusesForAddToCalendar = ['OPEN'];
            for (var i = 0, x = this.appts.length; i < x; i++) {
                if (statusesForAddToCalendar.indexOf(this.appts[i].status.toUpperCase()) !== -1) {
                    this.calendarAddAppts.push(this.appts[i]);
                }
            }
            if (this.calendarAddAppts.length === 0)
                this.showAddToCalendarBtn = false;
            this.status = this.repeatingAppt.status.replace(new RegExp('_', 'g'), ' ');
            this.status = this.titleCasePipe.transform(this.status);
            this.weekdays = this.timeService.getSelectedWeekdays(this.repeatingAppt, this.weekdays);
            this.repeatingApptDetailDaysRepeatsLabel = this.tagsService.assignObjectToTags(this.repeatingAppt, this.preference.labelMap.repeatingApptDetailDaysRepeatsLabel, this.tagsService.repeatingApptTags);
            switch (this.repeatingAppt.status) {
                case 'Open':
                    this.chipBaseStyle = 'primary';
                    this.chipClass = 'apptStatusOpenChip';
                    break;
                case 'Closed':
                    this.chipBaseStyle = 'success';
                    this.chipClass = 'apptStatusCompletedChip';
                    break;
                case 'Cancelled':
                    this.chipBaseStyle = 'error';
                    this.chipClass = 'apptStatusCancelledChip';
                    break;
                case 'NO_SHOW':
                    this.chipBaseStyle = 'warning';
                    this.chipClass = 'apptStatusNoShowChip';
                    break;
            }
            if (this.status !== 'Open') {
                this.cancelNotAllowedReason = 'apptCancelNotInOpenStatus';
            }
            else if (this.repeatingAppt.client.status === this.clientAccountService.onHoldStatus) {
                this.cancelNotAllowedReason = 'cancelNotAllowedClientOnHold';
            }
            else {
                this.cancelNotAllowed = false;
            }
            this.loaded = true;
            this.loading = false;
        }
    };
    RepeatingAppointmentDetailComponent.prototype.getDetail = function () {
        var _this = this;
        var repeatingApptIdString = this.route.params.subscribe(function (params) {
            _this.repeatingApptId = params['id'];
        });
        this.clientAccountService.getRepeatingApptDetail(this.repeatingApptId)
            .subscribe(function (multipleAppts) {
            _this.configureDetail(multipleAppts);
        }, function (error) {
            _this.errorLoading = true;
            _this.loading = false;
        });
    };
    RepeatingAppointmentDetailComponent.prototype.addToCalendar = function () {
        if (this.calendarAddAppts.length > 0)
            this.addToCalendarSheet.open(_scheduler_common_components_add_to_calendar_add_to_calendar_component__WEBPACK_IMPORTED_MODULE_14__["AddToCalendarComponent"], { data: { appointments: [this.calendarAddAppts] } });
    };
    RepeatingAppointmentDetailComponent.prototype.ngAfterViewChecked = function () {
        this.responsiveService.setHeightForEmbedAccount();
    };
    RepeatingAppointmentDetailComponent.prototype.ngOnInit = function () {
        this.showAddToCalendarBtn = this.preference.showAddToCalendar;
        this.selectedClient = this.clientAccountService.getSelectedClient(this.preference);
        this.getDetail();
    };
    RepeatingAppointmentDetailComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_2__["BusinessService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_3__["ResponsiveService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_7__["TagsService"] },
        { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_6__["AuthService"] },
        { type: _angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_5__["MatBottomSheet"] },
        { type: _client_account_service__WEBPACK_IMPORTED_MODULE_8__["ClientAccountService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_11__["TitleCasePipe"] },
        { type: _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_12__["TimeService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_15__["SchedulerPreferenceService"] }
    ]; };
    RepeatingAppointmentDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'repeating-appointment-detail',
            template: __webpack_require__(/*! raw-loader!./repeating-appointment-detail.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/view-appointments/booking-object-details/repeating-appointment-detail/repeating-appointment-detail.component.html"),
            styles: [__webpack_require__(/*! ../booking-object-details.component.css */ "./src/app/client-account/view-appointments/booking-object-details/booking-object-details.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_2__["BusinessService"], _responsive_service__WEBPACK_IMPORTED_MODULE_3__["ResponsiveService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
            _tags_service__WEBPACK_IMPORTED_MODULE_7__["TagsService"], _auth_auth_service__WEBPACK_IMPORTED_MODULE_6__["AuthService"], _angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_5__["MatBottomSheet"], _client_account_service__WEBPACK_IMPORTED_MODULE_8__["ClientAccountService"],
            _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"], _angular_common__WEBPACK_IMPORTED_MODULE_11__["TitleCasePipe"], _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_12__["TimeService"], _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_15__["SchedulerPreferenceService"]])
    ], RepeatingAppointmentDetailComponent);
    return RepeatingAppointmentDetailComponent;
}());



/***/ }),

/***/ "./src/app/client-account/view-appointments/booking-object-details/waitlist-registration-detail/waitlist-registration-detail.component.ts":
/*!************************************************************************************************************************************************!*\
  !*** ./src/app/client-account/view-appointments/booking-object-details/waitlist-registration-detail/waitlist-registration-detail.component.ts ***!
  \************************************************************************************************************************************************/
/*! exports provided: WaitlistRegistrationDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WaitlistRegistrationDetailComponent", function() { return WaitlistRegistrationDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _client_account_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../modals/error-modal/error-modal.component */ "./src/app/modals/error-modal/error-modal.component.ts");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../auth/auth.service */ "./src/app/auth/auth.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _waitlist_waitlist_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../waitlist/waitlist.service */ "./src/app/waitlist/waitlist.service.ts");
/* harmony import */ var _cancel_appointment_cancel_appointment_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../cancel-appointment/cancel-appointment.component */ "./src/app/client-account/view-appointments/cancel-appointment/cancel-appointment.component.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");













var WaitlistRegistrationDetailComponent = /** @class */ (function () {
    function WaitlistRegistrationDetailComponent(businessService, clientAccountService, responsiveService, waitlistService, schedulerPreferenceService, route, router, dialog, authService, titleCasePipe) {
        this.businessService = businessService;
        this.clientAccountService = clientAccountService;
        this.responsiveService = responsiveService;
        this.waitlistService = waitlistService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.route = route;
        this.router = router;
        this.dialog = dialog;
        this.authService = authService;
        this.titleCasePipe = titleCasePipe;
        this.loading = true;
        this.loaded = false;
        this.preference = schedulerPreferenceService.schedulerPreference;
    }
    WaitlistRegistrationDetailComponent.prototype.goBack = function () {
        if (this.authService.isAuth()) {
            this.router.navigate(['/my-account/appts'], { relativeTo: this.route.root, state: { listStatus: 'WAITLIST' } });
        }
        else {
            this.router.navigate(['scheduler'], { relativeTo: this.route.root });
        }
    };
    WaitlistRegistrationDetailComponent.prototype.cancelWaitlist = function () {
        var _this = this;
        var dataToPass = new _cancel_appointment_cancel_appointment_component__WEBPACK_IMPORTED_MODULE_11__["CancelBookingObjModalData"]();
        dataToPass.waitlist = this.waitlist;
        dataToPass.cancelType = 'WAITLIST';
        dataToPass.preference = this.preference;
        var dialogRef = this.dialog.open(_cancel_appointment_cancel_appointment_component__WEBPACK_IMPORTED_MODULE_11__["CancelAppointmentComponent"], {
            maxWidth: this.responsiveService.getMaxWidthForModals(),
            data: dataToPass
        });
        dialogRef.afterClosed().subscribe(function (cancelledWaitlist) {
            if (cancelledWaitlist !== undefined) {
                _this.goBack();
            }
        });
    };
    WaitlistRegistrationDetailComponent.prototype.configureDetail = function (waitlistRegistrationDetail) {
        var _this = this;
        var waitlist = waitlistRegistrationDetail.waitlist;
        if (waitlist === null) {
            var dialogRef = this.dialog.open(_modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_6__["ErrorModalComponent"], { maxWidth: this.responsiveService.getMaxWidthForModals(),
                data: { preference: this.preference, errorType: 'apptDoesNotBelongToAccount' } });
            dialogRef.afterClosed().subscribe(function (data) {
                _this.goBack();
            });
        }
        else {
            this.waitlist = waitlist;
            this.waitlistClaims = waitlistRegistrationDetail.waitlistClaimList;
            this.clientHash = waitlist.client.clientHash;
            this.status = this.waitlist.status.replace(new RegExp('_', 'g'), ' ');
            this.status = this.titleCasePipe.transform(this.status);
            switch (this.waitlist.status) {
                case 'OPEN':
                    this.chipBaseStyle = 'primary';
                    this.chipClass = 'apptStatusOpenChip';
                    break;
                case 'INVITED':
                    this.chipBaseStyle = 'success';
                    this.chipClass = 'apptStatusCompletedChip';
                    break;
            }
            this.loaded = true;
            this.loading = false;
        }
    };
    WaitlistRegistrationDetailComponent.prototype.getDetail = function () {
        var _this = this;
        var waitListIdString = this.route.params.subscribe(function (params) {
            _this.waitlistId = params['waitlistId'];
            _this.waitListDateTimeId = params['waitListDateTimeId'];
            if (_this.waitListDateTimeId === undefined) {
                _this.waitlistId = sessionStorage.getItem("waitlistRegistrationDetailId");
                _this.waitListDateTimeId = sessionStorage.getItem("waitListDateTimeId");
            }
            else {
                sessionStorage.setItem("waitlistRegistrationDetailId", _this.waitlistId);
                sessionStorage.setItem("waitListDateTimeId", _this.waitListDateTimeId);
            }
        });
        this.waitlistService.getWaitlistRegistrationDetail(this.waitlistId, this.waitListDateTimeId)
            .subscribe(function (waitlistRegistrationDetail) {
            _this.configureDetail(waitlistRegistrationDetail);
        }, function (error) {
            _this.errorLoading = true;
            _this.loading = false;
        });
    };
    WaitlistRegistrationDetailComponent.prototype.ngAfterViewChecked = function () {
        this.responsiveService.setHeightForEmbedAccount();
    };
    WaitlistRegistrationDetailComponent.prototype.ngOnInit = function () {
        this.selectedClient = this.clientAccountService.getSelectedClient(this.preference);
        this.getDetail();
    };
    WaitlistRegistrationDetailComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_2__["BusinessService"] },
        { type: _client_account_service__WEBPACK_IMPORTED_MODULE_3__["ClientAccountService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_4__["ResponsiveService"] },
        { type: _waitlist_waitlist_service__WEBPACK_IMPORTED_MODULE_10__["WaitlistService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_12__["SchedulerPreferenceService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__["MatDialog"] },
        { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_8__["AuthService"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_9__["TitleCasePipe"] }
    ]; };
    WaitlistRegistrationDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-waitlist-registration-detail',
            template: __webpack_require__(/*! raw-loader!./waitlist-registration-detail.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/view-appointments/booking-object-details/waitlist-registration-detail/waitlist-registration-detail.component.html"),
            styles: [__webpack_require__(/*! ../booking-object-details.component.css */ "./src/app/client-account/view-appointments/booking-object-details/booking-object-details.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_2__["BusinessService"], _client_account_service__WEBPACK_IMPORTED_MODULE_3__["ClientAccountService"],
            _responsive_service__WEBPACK_IMPORTED_MODULE_4__["ResponsiveService"], _waitlist_waitlist_service__WEBPACK_IMPORTED_MODULE_10__["WaitlistService"],
            _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_12__["SchedulerPreferenceService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__["MatDialog"], _auth_auth_service__WEBPACK_IMPORTED_MODULE_8__["AuthService"], _angular_common__WEBPACK_IMPORTED_MODULE_9__["TitleCasePipe"]])
    ], WaitlistRegistrationDetailComponent);
    return WaitlistRegistrationDetailComponent;
}());



/***/ }),

/***/ "./src/app/client-account/view-appointments/cancel-appointment/cancel-appointment.component.ts":
/*!*****************************************************************************************************!*\
  !*** ./src/app/client-account/view-appointments/cancel-appointment/cancel-appointment.component.ts ***!
  \*****************************************************************************************************/
/*! exports provided: CancelBookingObjModalData, CancelAppointmentComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CancelBookingObjModalData", function() { return CancelBookingObjModalData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CancelAppointmentComponent", function() { return CancelAppointmentComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _waitlist_waitlist_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../waitlist/waitlist.service */ "./src/app/waitlist/waitlist.service.ts");





var CancelBookingObjModalData = /** @class */ (function () {
    function CancelBookingObjModalData() {
    }
    return CancelBookingObjModalData;
}());

var CancelAppointmentComponent = /** @class */ (function () {
    function CancelAppointmentComponent(passedData, dialogRef, businessService, waitlistService) {
        this.passedData = passedData;
        this.dialogRef = dialogRef;
        this.businessService = businessService;
        this.waitlistService = waitlistService;
        this.cancelReasonType = 'text';
        this.cancelReasonListArray = [];
        this.cancelFailed = false;
        this.noCancelReasonEntered = false;
        this.cancelling = false;
        this.cancelType = 'APPOINTMENT';
    }
    CancelAppointmentComponent.prototype.ngOnInit = function () {
        this.preference = this.passedData.preference;
        if (this.passedData.cancelType !== undefined)
            this.cancelType = this.passedData.cancelType;
        if (this.preference.booleanMap.cancelReasonList && this.preference.labelMap.cancelReasonList) {
            this.cancelReasonListArray = this.preference.labelMap.cancelReasonList.split(/\n/);
            this.cancelReasonType = 'list';
        }
        switch (this.cancelType) {
            case 'REPEATING':
                this.repeatingAppt = this.passedData.repeatingAppt;
                this.cancelModalTitle = this.preference.labelMap.cancelRepeatingAppointmentModalTitle;
                this.cancelModalDescription = this.preference.labelMap.cancelRepeatingAppointmentModalDescription;
                this.cancelErrorMsg = this.preference.labelMap.cancelRepeatingAppointmentErrorMsg;
                this.cancelNoReasonEnteredErrorMsg = this.preference.labelMap.cancelRepeatingAppointmentNoReasonEnteredErrorMsg;
                break;
            case 'WAITLIST':
                this.waitlist = this.passedData.waitlist;
                this.cancelModalTitle = this.preference.labelMap.cancelWaitlistRegistrationModalTitle;
                this.cancelModalDescription = this.preference.labelMap.cancelWaitlistRegistrationModalDescription;
                this.cancelErrorMsg = this.preference.labelMap.cancelWaitlistRegistrationErrorMsg;
                this.cancelNoReasonEnteredErrorMsg = this.preference.labelMap.cancelWaitlistRegistrationNoReasonEnteredErrorMsg;
                break;
            case 'APPOINTMENT':
                this.appt = this.passedData.appt;
                this.cancelModalTitle = this.preference.labelMap.cancelAppointmentModalTitle;
                this.cancelModalDescription = this.preference.labelMap.cancelAppointmentModalDescription;
                this.cancelErrorMsg = this.preference.labelMap.cancelApptErrorMsg;
                this.cancelNoReasonEnteredErrorMsg = this.preference.labelMap.cancelApptNoReasonEnteredErrorMsg;
                break;
        }
    };
    CancelAppointmentComponent.prototype.cancelAppt = function (cancelReason) {
        var _this = this;
        this.appt.cancelReason = cancelReason;
        this.businessService.cancelAppt(this.appt)
            .subscribe(function (cancelledAppt) {
            _this.cancelling = false;
            _this.dialogRef.close(cancelledAppt);
        }, function (error) {
            _this.cancelling = false;
            _this.cancelFailed = true;
        });
    };
    CancelAppointmentComponent.prototype.cancelRepeating = function (cancelReason) {
        var _this = this;
        this.repeatingAppt.cancelReason = cancelReason;
        this.businessService.cancelRepeatingAppt(this.repeatingAppt)
            .subscribe(function (cancelledRepeatingAppt) {
            _this.cancelling = false;
            _this.dialogRef.close(cancelledRepeatingAppt);
        }, function (error) {
            _this.cancelling = false;
            _this.cancelFailed = true;
        });
    };
    CancelAppointmentComponent.prototype.cancelWaitlist = function (cancelReason) {
        var _this = this;
        this.waitlist.cancelReason = cancelReason;
        var waitlistDateTimeIds = [this.waitlist.selectedDateTimeFromList.waitListDateTimeId];
        this.waitlistService.cancelWaitlistDateTime(this.waitlist.waitListId, this.waitlist.selectedDateTimeFromList.waitListDateId, waitlistDateTimeIds)
            .subscribe(function (cancelledWaitList) {
            _this.cancelling = false;
            _this.dialogRef.close(cancelledWaitList);
        }, function (error) {
            _this.cancelling = false;
            _this.cancelFailed = true;
        });
    };
    CancelAppointmentComponent.prototype.cancelBookingObject = function (form) {
        if (!this.preference.cancelReasonOptional && (form.form.value.cancelReason === undefined || form.form.value.cancelReason === null || form.form.value.cancelReason === '')) {
            this.noCancelReasonEntered = true;
        }
        else {
            var cancelReason = form.form.value.cancelReason;
            this.noCancelReasonEntered = false;
            this.cancelling = true;
            switch (this.cancelType) {
                case 'REPEATING':
                    this.cancelRepeating(cancelReason);
                    break;
                case 'WAITLIST':
                    this.cancelWaitlist(cancelReason);
                    break;
                case 'APPOINTMENT':
                    this.cancelAppt(cancelReason);
                    break;
            }
        }
    };
    CancelAppointmentComponent.ctorParameters = function () { return [
        { type: CancelBookingObjModalData, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"] },
        { type: _waitlist_waitlist_service__WEBPACK_IMPORTED_MODULE_4__["WaitlistService"] }
    ]; };
    CancelAppointmentComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-cancel-appointment',
            template: __webpack_require__(/*! raw-loader!./cancel-appointment.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/view-appointments/cancel-appointment/cancel-appointment.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [CancelBookingObjModalData, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"],
            _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"], _waitlist_waitlist_service__WEBPACK_IMPORTED_MODULE_4__["WaitlistService"]])
    ], CancelAppointmentComponent);
    return CancelAppointmentComponent;
}());



/***/ }),

/***/ "./src/app/client-account/view-appointments/view-appointments-list/appointments-table/appointments-table.component.ts":
/*!****************************************************************************************************************************!*\
  !*** ./src/app/client-account/view-appointments/view-appointments-list/appointments-table/appointments-table.component.ts ***!
  \****************************************************************************************************************************/
/*! exports provided: AppointmentsTableComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppointmentsTableComponent", function() { return AppointmentsTableComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/esm5/table.es5.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/esm5/sort.es5.js");
/* harmony import */ var _data_tables_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../data-tables.service */ "./src/app/data-tables.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");












var AppointmentsTableComponent = /** @class */ (function () {
    function AppointmentsTableComponent(dataTablesService, responsiveService, router, route, timeService, businessService, tagsService, titleCasePipe) {
        this.dataTablesService = dataTablesService;
        this.responsiveService = responsiveService;
        this.router = router;
        this.route = route;
        this.timeService = timeService;
        this.businessService = businessService;
        this.tagsService = tagsService;
        this.titleCasePipe = titleCasePipe;
        this.loading = false;
        this.idProp = 'calendarId';
        this.displayedColumns = this.dataTablesService.getDefaultApptDisplayedColumns();
        this.columnDefs = this.dataTablesService.getDefaultApptColumnDefs();
        this.tableData = new _angular_material_table__WEBPACK_IMPORTED_MODULE_3__["MatTableDataSource"]();
    }
    Object.defineProperty(AppointmentsTableComponent.prototype, "matSort", {
        set: function (ms) {
            this.sort = ms;
            this.tableData.sort = this.sort;
        },
        enumerable: true,
        configurable: true
    });
    AppointmentsTableComponent.prototype.viewDetails = function (appt) {
        //After implementing TT-6552 where changed setting of clientStartTimeDate, clientEndTimeDate, staffStartTimeDate, staffEndTimeDate to use tagsService.getTimeWithMomentForClientConvertedTimezone
        // within the getApptsByStatus function, call to navigate to appt detail resulted in Error: Uncaught (in promise): DataCloneError: Failed to execute 'pushState' on 'History'
        // when trying to add appt to state property of navigate below. So to fix, am removing those properties before navigating
        delete appt.clientStartTimeDate;
        delete appt.clientEndTimeDate;
        delete appt.staffStartTimeDate;
        delete appt.staffEndTimeDate;
        var onClientProfile = false;
        var onRepeatingDetail = false;
        if (this.router.url === '/my-account/profile')
            onClientProfile = true;
        if (this.router.url.indexOf('/my-account/repeating') !== -1)
            onRepeatingDetail = true;
        this.router.navigate(['/my-account/appts/' + appt.hashId], { relativeTo: this.route.root, state: { appt: appt, onMyProfile: onClientProfile, onRepeatingDetail: onRepeatingDetail } });
    };
    AppointmentsTableComponent.prototype.viewDetailsNonAction = function (appt) {
        if (this.responsiveService.onMobileViewPort) {
            this.viewDetails(appt);
        }
    };
    AppointmentsTableComponent.prototype.organizeApptData = function () {
        var _this = this;
        if (this.apptData === null) {
            this.apptData = [];
        }
        for (var i = 0, x = this.apptData.length; i < x; i++) {
            this.apptData[i] = this.timeService.getApptDateTimeDisplayPropertiesWithTimezone(this.apptData[i], 0); // passing allowTZChange as 0 here because the clientUTC times should be defined on appt table
            this.apptData[i].status = this.titleCasePipe.transform(this.apptData[i].status);
            this.apptData[i] = this.dataTablesService.addCustomFieldsToListDataObjects(this.apptData[i], this.selectedClient);
        }
        this.tableData.data = this.apptData;
        this.tableData.sortingDataAccessor = function (obj, property) { return _this.dataTablesService.getProperty(obj, property); };
        this.tableData.sort = this.sort;
        this.loaded = true;
        this.loading = false;
        this.errorLoading = false;
    };
    AppointmentsTableComponent.prototype.getDisplayedColumns = function () {
        var columnsForTable = this.dataTablesService.getDisplayedColumns(this.preferenceDefinedColumns, this.columnDefs, this.preference, this.responsiveService.onMobileViewPort, this.columnToAdd);
        this.displayedColumns = columnsForTable.appointmentFieldList;
        this.columnDefs = columnsForTable.columns;
        this.organizeApptData();
    };
    AppointmentsTableComponent.prototype.ngOnChanges = function (changes) {
        if (changes.apptData !== undefined && changes.apptData.currentValue !== undefined) {
            if (!this.preference.appointmentFieldList)
                this.preferenceDefinedColumns = this.dataTablesService.getDefaultApptDisplayedColumns();
            else
                this.preferenceDefinedColumns = this.preference.appointmentFieldList;
            this.getDisplayedColumns();
        }
    };
    AppointmentsTableComponent.prototype.ngAfterViewChecked = function () {
        this.responsiveService.addHorizontalScrollForTableOnMobile();
    };
    AppointmentsTableComponent.prototype.ngOnInit = function () {
        if (this.responsiveService.onMobileViewPort) {
            for (var i = 0, x = this.columnDefs.length; i < x; i++) {
                switch (this.columnDefs[i].name) {
                    case 'calendarId':
                        this.columnDefs[i].title = 'ID';
                        break;
                    case 'clientStartTimeDate':
                        this.columnDefs[i].filterFormats[0].format = 'EEE, MMM d, yy';
                        break;
                }
            }
        }
    };
    AppointmentsTableComponent.ctorParameters = function () { return [
        { type: _data_tables_service__WEBPACK_IMPORTED_MODULE_5__["DataTablesService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_6__["ResponsiveService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"] },
        { type: _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_8__["TimeService"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_9__["BusinessService"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_10__["TagsService"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_11__["TitleCasePipe"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Array)
    ], AppointmentsTableComponent.prototype, "apptData", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["Client"])
    ], AppointmentsTableComponent.prototype, "selectedClient", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], AppointmentsTableComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], AppointmentsTableComponent.prototype, "loaded", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], AppointmentsTableComponent.prototype, "errorLoading", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], AppointmentsTableComponent.prototype, "loading", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], AppointmentsTableComponent.prototype, "noApptsFoundProp", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], AppointmentsTableComponent.prototype, "columnToAdd", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_4__["MatSort"], { static: false }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_material_sort__WEBPACK_IMPORTED_MODULE_4__["MatSort"]),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_material_sort__WEBPACK_IMPORTED_MODULE_4__["MatSort"]])
    ], AppointmentsTableComponent.prototype, "matSort", null);
    AppointmentsTableComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'appointments-table',
            template: __webpack_require__(/*! raw-loader!./appointments-table.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/view-appointments/view-appointments-list/appointments-table/appointments-table.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_data_tables_service__WEBPACK_IMPORTED_MODULE_5__["DataTablesService"], _responsive_service__WEBPACK_IMPORTED_MODULE_6__["ResponsiveService"], _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"],
            _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_8__["TimeService"], _business_service__WEBPACK_IMPORTED_MODULE_9__["BusinessService"], _tags_service__WEBPACK_IMPORTED_MODULE_10__["TagsService"], _angular_common__WEBPACK_IMPORTED_MODULE_11__["TitleCasePipe"]])
    ], AppointmentsTableComponent);
    return AppointmentsTableComponent;
}());



/***/ }),

/***/ "./src/app/client-account/view-appointments/view-appointments-list/repeating-appointments-table/repeating-appointments-table.component.ts":
/*!************************************************************************************************************************************************!*\
  !*** ./src/app/client-account/view-appointments/view-appointments-list/repeating-appointments-table/repeating-appointments-table.component.ts ***!
  \************************************************************************************************************************************************/
/*! exports provided: RepeatingAppointmentsTableComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RepeatingAppointmentsTableComponent", function() { return RepeatingAppointmentsTableComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _data_tables_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../data-tables.service */ "./src/app/data-tables.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/esm5/table.es5.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/esm5/sort.es5.js");











var RepeatingAppointmentsTableComponent = /** @class */ (function () {
    function RepeatingAppointmentsTableComponent(dataTablesService, responsiveService, router, route, timeService, businessService, tagsService) {
        this.dataTablesService = dataTablesService;
        this.responsiveService = responsiveService;
        this.router = router;
        this.route = route;
        this.timeService = timeService;
        this.businessService = businessService;
        this.tagsService = tagsService;
        this.loading = false;
        this.idProp = 'recurringAppointmentId';
        this.displayedColumns = this.dataTablesService.getDefaultRepeatingApptDisplayedColumns();
        this.columnDefs = this.dataTablesService.getDefaultRepeatingApptColumnDefs();
        this.tableData = new _angular_material_table__WEBPACK_IMPORTED_MODULE_9__["MatTableDataSource"]();
    }
    Object.defineProperty(RepeatingAppointmentsTableComponent.prototype, "matSort", {
        set: function (ms) {
            this.sort = ms;
            this.tableData.sort = this.sort;
        },
        enumerable: true,
        configurable: true
    });
    RepeatingAppointmentsTableComponent.prototype.viewDetails = function (repeatingAppt) {
        delete repeatingAppt.clientStartTimeDate;
        delete repeatingAppt.clientEndTimeDate;
        delete repeatingAppt.staffStartTimeDate;
        delete repeatingAppt.staffEndTimeDate;
        this.router.navigate(['/my-account/repeating/' + repeatingAppt.recurringAppointmentId], { relativeTo: this.route.root, state: { repeatingAppt: repeatingAppt } });
    };
    RepeatingAppointmentsTableComponent.prototype.viewDetailsNonAction = function (recurringAppt) {
        if (this.responsiveService.onMobileViewPort) {
            this.viewDetails(recurringAppt);
        }
    };
    RepeatingAppointmentsTableComponent.prototype.organizeApptData = function () {
        var _this = this;
        if (this.repeatingApptData === null) {
            this.repeatingApptData = [];
        }
        for (var i = 0, x = this.repeatingApptData.length; i < x; i++) {
            var timezone = this.timeService.getApptTimezone(this.repeatingApptData[i].location, this.repeatingApptData[i].locationGroup, this.repeatingApptData[i].staff);
            this.repeatingApptData[i].staffStartTimeDate = this.timeService.getTimeWithMomentForClientConvertedTimezone(this.repeatingApptData[i].startTime, this.repeatingApptData[i].startDate, timezone);
            this.repeatingApptData[i].staffEndTimeDate = this.timeService.getTimeWithMomentForClientConvertedTimezone(this.repeatingApptData[i].endTime, this.repeatingApptData[i].endDate, timezone);
            this.repeatingApptData[i].clientStartTimeDate = this.timeService.getTimeWithMomentForClientConvertedTimezone(this.repeatingApptData[i].clientStartTime, this.repeatingApptData[i].startDate, timezone);
            this.repeatingApptData[i].clientEndTimeDate = this.timeService.getTimeWithMomentForClientConvertedTimezone(this.repeatingApptData[i].clientEndTime, this.repeatingApptData[i].endDate, timezone);
            this.repeatingApptData[i] = this.dataTablesService.addCustomFieldsToListDataObjects(this.repeatingApptData[i], this.selectedClient);
        }
        this.tableData.data = this.repeatingApptData;
        this.tableData.sortingDataAccessor = function (obj, property) { return _this.dataTablesService.getProperty(obj, property); };
        this.tableData.sort = this.sort;
        this.loaded = true;
        this.loading = false;
        this.errorLoading = false;
    };
    RepeatingAppointmentsTableComponent.prototype.getDisplayedColumns = function () {
        var columnsForTable;
        columnsForTable = this.tagsService.getApptListColumnValues(this.preferenceDefinedColumns, this.preference.schedulerPreferenceFieldDefnList, this.preference.labelMap, this.responsiveService.onMobileViewPort, 'repeatingApptTags');
        this.displayedColumns = columnsForTable.appointmentFieldList;
        this.columnDefs = this.dataTablesService.setupColumnDefs(this.columnDefs, columnsForTable.columns);
        this.organizeApptData();
    };
    RepeatingAppointmentsTableComponent.prototype.ngOnChanges = function (changes) {
        // console.log(changes);
        if (changes.repeatingApptData !== undefined && changes.repeatingApptData.currentValue !== undefined) {
            if (this.preference.repeatingApptFieldList === undefined || this.preference.repeatingApptFieldList === null)
                this.preferenceDefinedColumns = this.dataTablesService.getDefaultRepeatingApptDisplayedColumns();
            else
                this.preferenceDefinedColumns = this.preference.repeatingApptFieldList;
            this.getDisplayedColumns();
        }
    };
    RepeatingAppointmentsTableComponent.prototype.ngAfterViewChecked = function () {
        this.responsiveService.addHorizontalScrollForTableOnMobile();
    };
    RepeatingAppointmentsTableComponent.prototype.ngOnInit = function () {
        for (var i = 0, x = this.columnDefs.length; i < x; i++) {
            switch (this.columnDefs[i].name) {
                case this.idProp:
                    this.columnDefs[i].title = 'ID';
                    break;
                case 'clientStartTimeDate':
                    this.columnDefs[i].filterFormats[0].format = 'EEE, MMM d, yy';
                    break;
            }
        }
    };
    RepeatingAppointmentsTableComponent.ctorParameters = function () { return [
        { type: _data_tables_service__WEBPACK_IMPORTED_MODULE_7__["DataTablesService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_8__["ResponsiveService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"] },
        { type: _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_6__["TimeService"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_3__["TagsService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Array)
    ], RepeatingAppointmentsTableComponent.prototype, "repeatingApptData", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["Client"])
    ], RepeatingAppointmentsTableComponent.prototype, "selectedClient", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], RepeatingAppointmentsTableComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], RepeatingAppointmentsTableComponent.prototype, "loaded", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], RepeatingAppointmentsTableComponent.prototype, "errorLoading", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], RepeatingAppointmentsTableComponent.prototype, "loading", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], RepeatingAppointmentsTableComponent.prototype, "noApptsFoundProp", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_10__["MatSort"], { static: false }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_material_sort__WEBPACK_IMPORTED_MODULE_10__["MatSort"]),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_material_sort__WEBPACK_IMPORTED_MODULE_10__["MatSort"]])
    ], RepeatingAppointmentsTableComponent.prototype, "matSort", null);
    RepeatingAppointmentsTableComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'repeating-appointments-table',
            template: __webpack_require__(/*! raw-loader!../appointments-table/appointments-table.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/view-appointments/view-appointments-list/appointments-table/appointments-table.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_data_tables_service__WEBPACK_IMPORTED_MODULE_7__["DataTablesService"], _responsive_service__WEBPACK_IMPORTED_MODULE_8__["ResponsiveService"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"],
            _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_6__["TimeService"], _business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"], _tags_service__WEBPACK_IMPORTED_MODULE_3__["TagsService"]])
    ], RepeatingAppointmentsTableComponent);
    return RepeatingAppointmentsTableComponent;
}());



/***/ }),

/***/ "./src/app/client-account/view-appointments/view-appointments-list/view-appointments-list.component.ts":
/*!*************************************************************************************************************!*\
  !*** ./src/app/client-account/view-appointments/view-appointments-list/view-appointments-list.component.ts ***!
  \*************************************************************************************************************/
/*! exports provided: ViewAppointmentsListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewAppointmentsListComponent", function() { return ViewAppointmentsListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _client_account_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _data_tables_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../data-tables.service */ "./src/app/data-tables.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");












var ViewAppointmentsListComponent = /** @class */ (function () {
    function ViewAppointmentsListComponent(businessService, clientAccountService, route, timeService, tagsService, router, titleCasePipe, datePipe, dataTablesService, responsiveService, schedulerPreferenceService) {
        this.businessService = businessService;
        this.clientAccountService = clientAccountService;
        this.route = route;
        this.timeService = timeService;
        this.tagsService = tagsService;
        this.router = router;
        this.titleCasePipe = titleCasePipe;
        this.datePipe = datePipe;
        this.dataTablesService = dataTablesService;
        this.responsiveService = responsiveService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.pageLoaded = false;
        this.dataLoaded = false;
        this.errorLoading = false;
        this.loadingData = false;
        this.allApptStatuses = [
            { 'status': 'OPEN', 'selected': false, 'buttonLabel': 'upcomingApptBtnLabel', 'titleBarProp': 'openApptTitle', 'noApptsFoundProp': 'noOpenApptsMsg' },
            { 'status': 'COMPLETED', 'selected': false, 'buttonLabel': 'completedApptBtnLabel', 'titleBarProp': 'completedApptTitle', 'noApptsFoundProp': 'noCompletedApptsMsg' },
            { 'status': 'CANCELLED', 'selected': false, 'buttonLabel': 'cancelledApptBtnLabel', 'titleBarProp': 'cancelledApptTitle', 'noApptsFoundProp': 'noCancelledApptsMsg' },
            { 'status': 'NO_SHOW', 'selected': false, 'buttonLabel': 'noshowApptBtnLabel', 'titleBarProp': 'noshowApptTitle', 'noApptsFoundProp': 'noNoShowApptsMsg' },
            { 'status': 'REPEATING', 'selected': false, 'buttonLabel': 'repeatingApptBtnLabel', 'titleBarProp': 'repeatingApptTitle', 'noApptsFoundProp': 'noRepeatingApptsMsg' },
            { 'status': 'WAITLIST', 'selected': false, 'buttonLabel': 'waitlistRegistrationBtnLabel', 'titleBarProp': 'waitlistRegistrationTitle', 'noApptsFoundProp': 'noWaitlistRegistrationsMsg' }
        ];
        this.apptStatuses = [];
        this.selectStatus = function (status) {
            for (var i = 0, x = this.apptStatuses.length; i < x; i++) {
                if (this.apptStatuses[i].status === status.status) {
                    this.apptStatuses[i].selected = true;
                }
                else {
                    this.apptStatuses[i].selected = false;
                }
            }
            this.getApptsByStatus();
        };
        this.preference = schedulerPreferenceService.schedulerPreference;
        moment__WEBPACK_IMPORTED_MODULE_8__["locale"](sessionStorage.getItem('locale'));
    }
    ViewAppointmentsListComponent.prototype.goBack = function () {
        this.router.navigate(['/my-account'], { relativeTo: this.route.root });
    };
    ViewAppointmentsListComponent.prototype.selectClient = function (changeEvent) {
        var client = changeEvent.client;
        var event = changeEvent.event;
        if (client.clientId !== this.selectedClient.clientId && event.isUserInput) {
            this.selectedClient = client;
            this.clientAccountService.selectedClient = this.selectedClient;
            this.getApptsByStatus();
        }
    };
    ViewAppointmentsListComponent.prototype.getApptsByStatus = function () {
        var _this = this;
        this.loadingData = true;
        for (var i = 0, x = this.apptStatuses.length; i < x; i++) {
            if (this.apptStatuses[i].selected) {
                this.titleBarProp = this.apptStatuses[i].titleBarProp;
                this.noApptsFoundProp = this.apptStatuses[i].noApptsFoundProp;
                this.pageLoaded = true;
                switch (this.apptStatuses[i].status) {
                    case 'REPEATING':
                        this.selectedListView = 'REPEATING';
                        this.clientAccountService.getRepeatingAppts(this.selectedClient.clientId)
                            .subscribe(function (repeatingAppts) {
                            _this.repeatingAppts = repeatingAppts;
                            _this.dataLoaded = true;
                            _this.loadingData = false;
                            _this.errorLoading = false;
                        }, function (error) {
                            _this.dataLoaded = false;
                            _this.loadingData = false;
                            _this.errorLoading = true;
                        });
                        break;
                    case 'WAITLIST':
                        this.selectedListView = 'WAITLIST';
                        // get waitlist registrations getWaitlistRegistrations
                        this.clientAccountService.getWaitlistRegistrations(this.selectedClient.clientId)
                            .subscribe(function (waitlistRegistrations) {
                            // console.log(waitlistRegistrations);
                            _this.waitlists = waitlistRegistrations;
                            _this.dataLoaded = true;
                            _this.loadingData = false;
                            _this.errorLoading = false;
                        }, function (error) {
                            _this.dataLoaded = false;
                            _this.loadingData = false;
                            _this.errorLoading = true;
                        });
                        break;
                    default:
                        this.selectedListView = 'APPOINTMENTS';
                        this.clientAccountService.getApptsByStatus(this.selectedClient.clientId, this.apptStatuses[i].status)
                            .subscribe(function (appts) {
                            _this.appts = appts;
                            _this.dataLoaded = true;
                            _this.loadingData = false;
                            _this.errorLoading = false;
                        }, function (error) {
                            _this.dataLoaded = false;
                            _this.loadingData = false;
                            _this.errorLoading = true;
                        });
                }
            }
        }
    };
    ;
    ViewAppointmentsListComponent.prototype.ngAfterViewChecked = function () {
        this.responsiveService.setHeightForEmbedAccount();
    };
    ViewAppointmentsListComponent.prototype.ngOnInit = function () {
        if (this.businessService.business) {
            if (this.businessService.business.status !== 'ACTIVE') {
                this.dataLoaded = false;
                this.errorLoading = true;
            }
            else {
                this.clientAccount = this.clientAccountService.loggedInClient;
                if (this.clientAccountService.selectedClient !== undefined && this.clientAccountService.selectedClient !== null) {
                    for (var i = 0, x = this.clientAccount.clientList.length; i < x; i++) {
                        if (this.clientAccount.clientList[i].clientId === this.clientAccountService.selectedClient.clientId) {
                            this.selectedClient = this.clientAccount.clientList[i];
                        }
                    }
                }
                else {
                    this.selectedClient = this.clientAccountService.selectClientBasedOnLoggedInEmail();
                    this.clientAccountService.setSelectedClient(this.selectedClient, this.preference.schedulerPreferenceFieldDefnList);
                }
                if (this.selectedClient === undefined && this.clientAccountService.loggedInClient !== undefined) {
                    this.selectedClient = this.clientAccountService.loggedInClient.clientList[0];
                }
                if (this.selectedClient.timeZoneCode === null) {
                    this.selectedClient.timeZoneCode = { 'timeZoneCode': sessionStorage.getItem("timezone") };
                }
            }
            // LHB 09/03/2020 TT-6646
            if (this.preference.appointmentListStatuses === undefined || this.preference.appointmentListStatuses === null || this.preference.appointmentListStatuses.length === 0)
                this.preference.appointmentListStatuses = ['OPEN', 'COMPLETED', 'CANCELLED', 'NO_SHOW'];
            for (var i = 0, x = this.preference.appointmentListStatuses.length; i < x; i++) {
                for (var j = 0, y = this.allApptStatuses.length; j < y; j++) {
                    if (this.preference.appointmentListStatuses[i] === this.allApptStatuses[j].status)
                        this.apptStatuses.push(this.allApptStatuses[j]);
                }
            }
            var statusPassedThroughHistoryState = false;
            if (history.state !== undefined && history.state !== null && history.state.listStatus !== undefined && history.state.listStatus !== null) {
                var statusToFind = history.state.listStatus;
                for (var i = 0, x = this.allApptStatuses.length; i < x; i++) {
                    if (this.allApptStatuses[i].status === statusToFind) {
                        this.allApptStatuses[i].selected = true;
                        statusPassedThroughHistoryState = true;
                    }
                }
            }
            if (!statusPassedThroughHistoryState)
                this.allApptStatuses[0].selected = true;
            this.getApptsByStatus();
        }
        else {
            this.dataLoaded = false;
            this.errorLoading = true;
        }
    };
    ViewAppointmentsListComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_6__["BusinessService"] },
        { type: _client_account_service__WEBPACK_IMPORTED_MODULE_2__["ClientAccountService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"] },
        { type: _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_7__["TimeService"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_3__["TagsService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_4__["TitleCasePipe"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_4__["DatePipe"] },
        { type: _data_tables_service__WEBPACK_IMPORTED_MODULE_10__["DataTablesService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_9__["ResponsiveService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_11__["SchedulerPreferenceService"] }
    ]; };
    ViewAppointmentsListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-view-appointments-list',
            template: __webpack_require__(/*! raw-loader!./view-appointments-list.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/view-appointments/view-appointments-list/view-appointments-list.component.html"),
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_6__["BusinessService"],
            _client_account_service__WEBPACK_IMPORTED_MODULE_2__["ClientAccountService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"],
            _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_7__["TimeService"],
            _tags_service__WEBPACK_IMPORTED_MODULE_3__["TagsService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"],
            _angular_common__WEBPACK_IMPORTED_MODULE_4__["TitleCasePipe"],
            _angular_common__WEBPACK_IMPORTED_MODULE_4__["DatePipe"],
            _data_tables_service__WEBPACK_IMPORTED_MODULE_10__["DataTablesService"],
            _responsive_service__WEBPACK_IMPORTED_MODULE_9__["ResponsiveService"],
            _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_11__["SchedulerPreferenceService"]])
    ], ViewAppointmentsListComponent);
    return ViewAppointmentsListComponent;
}());



/***/ }),

/***/ "./src/app/client-account/view-appointments/view-appointments-list/view-appointments-list.module.ts":
/*!**********************************************************************************************************!*\
  !*** ./src/app/client-account/view-appointments/view-appointments-list/view-appointments-list.module.ts ***!
  \**********************************************************************************************************/
/*! exports provided: ViewAppointmentsListModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewAppointmentsListModule", function() { return ViewAppointmentsListModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _view_appointments_list_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./view-appointments-list.component */ "./src/app/client-account/view-appointments/view-appointments-list/view-appointments-list.component.ts");
/* harmony import */ var _appointments_table_appointments_table_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./appointments-table/appointments-table.component */ "./src/app/client-account/view-appointments/view-appointments-list/appointments-table/appointments-table.component.ts");
/* harmony import */ var _repeating_appointments_table_repeating_appointments_table_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./repeating-appointments-table/repeating-appointments-table.component */ "./src/app/client-account/view-appointments/view-appointments-list/repeating-appointments-table/repeating-appointments-table.component.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../material.module */ "./src/app/material.module.ts");
/* harmony import */ var _pipes_pipes_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../pipes/pipes.module */ "./src/pipes/pipes.module.ts");
/* harmony import */ var _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../ui-elements/ui-elements.module */ "./src/app/ui-elements/ui-elements.module.ts");
/* harmony import */ var _client_account_header_client_account_header_module__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../client-account-header/client-account-header.module */ "./src/app/client-account/client-account-header/client-account-header.module.ts");
/* harmony import */ var _waitlist_registrations_table_waitlist_registrations_table_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./waitlist-registrations-table/waitlist-registrations-table.component */ "./src/app/client-account/view-appointments/view-appointments-list/waitlist-registrations-table/waitlist-registrations-table.component.ts");











var ViewAppointmentsListModule = /** @class */ (function () {
    function ViewAppointmentsListModule() {
    }
    ViewAppointmentsListModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [
                _view_appointments_list_component__WEBPACK_IMPORTED_MODULE_2__["ViewAppointmentsListComponent"],
                _appointments_table_appointments_table_component__WEBPACK_IMPORTED_MODULE_3__["AppointmentsTableComponent"],
                _repeating_appointments_table_repeating_appointments_table_component__WEBPACK_IMPORTED_MODULE_4__["RepeatingAppointmentsTableComponent"],
                _waitlist_registrations_table_waitlist_registrations_table_component__WEBPACK_IMPORTED_MODULE_10__["WaitlistRegistrationsTableComponent"]
            ],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_5__["CommonModule"],
                _material_module__WEBPACK_IMPORTED_MODULE_6__["MaterialModule"],
                _pipes_pipes_module__WEBPACK_IMPORTED_MODULE_7__["PipesModule"],
                _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_8__["UIElementsModule"],
                _client_account_header_client_account_header_module__WEBPACK_IMPORTED_MODULE_9__["ClientAccountHeaderModule"]
            ],
            exports: [
                _view_appointments_list_component__WEBPACK_IMPORTED_MODULE_2__["ViewAppointmentsListComponent"],
                _appointments_table_appointments_table_component__WEBPACK_IMPORTED_MODULE_3__["AppointmentsTableComponent"],
                _repeating_appointments_table_repeating_appointments_table_component__WEBPACK_IMPORTED_MODULE_4__["RepeatingAppointmentsTableComponent"]
            ]
        })
    ], ViewAppointmentsListModule);
    return ViewAppointmentsListModule;
}());



/***/ }),

/***/ "./src/app/client-account/view-appointments/view-appointments-list/waitlist-registrations-table/waitlist-registrations-table.component.ts":
/*!************************************************************************************************************************************************!*\
  !*** ./src/app/client-account/view-appointments/view-appointments-list/waitlist-registrations-table/waitlist-registrations-table.component.ts ***!
  \************************************************************************************************************************************************/
/*! exports provided: WaitlistRegistrationsTableComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WaitlistRegistrationsTableComponent", function() { return WaitlistRegistrationsTableComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/esm5/table.es5.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/esm5/sort.es5.js");
/* harmony import */ var _data_tables_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../data-tables.service */ "./src/app/data-tables.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../tags.service */ "./src/app/tags.service.ts");











var WaitlistRegistrationsTableComponent = /** @class */ (function () {
    function WaitlistRegistrationsTableComponent(dataTablesService, responsiveService, router, route, timeService, businessService, tagsService) {
        this.dataTablesService = dataTablesService;
        this.responsiveService = responsiveService;
        this.router = router;
        this.route = route;
        this.timeService = timeService;
        this.businessService = businessService;
        this.tagsService = tagsService;
        this.loading = false;
        this.idProp = 'waitListId';
        this.displayedColumns = this.dataTablesService.getDefaultWaitlistRegistrationDisplayedColumns();
        this.columnDefs = this.dataTablesService.getDefaultWaitlistRegistrationColumnDefs();
        this.tableData = new _angular_material_table__WEBPACK_IMPORTED_MODULE_3__["MatTableDataSource"]();
    }
    Object.defineProperty(WaitlistRegistrationsTableComponent.prototype, "matSort", {
        set: function (ms) {
            this.sort = ms;
            this.tableData.sort = this.sort;
        },
        enumerable: true,
        configurable: true
    });
    WaitlistRegistrationsTableComponent.prototype.viewDetails = function (waitList) {
        this.router.navigate(['/my-account/waitlistRegistration/' + waitList.waitListId, { waitListDateTimeId: waitList.selectedDateTimeFromList.waitListDateTimeId }], { relativeTo: this.route.root, state: { waitList: waitList } });
    };
    WaitlistRegistrationsTableComponent.prototype.viewDetailsNonAction = function (waitList) {
        if (this.responsiveService.onMobileViewPort) {
            this.viewDetails(waitList);
        }
    };
    WaitlistRegistrationsTableComponent.prototype.organizeApptData = function () {
        var _this = this;
        if (this.waitlistRegistrationData === null) {
            this.waitlistRegistrationData = [];
        }
        for (var i = 0, x = this.waitlistRegistrationData.length; i < x; i++) {
            var timezone = this.timeService.getApptTimezone(this.waitlistRegistrationData[i].location, null, this.waitlistRegistrationData[i].staff);
            // this.waitlistRegistrationData[i].clientStartTimeDate = this.tagsService.getTimeWithMomentForClientConvertedTimezone(this.waitlistRegistrationData[i].clientStartTime, this.waitlistRegistrationData[i].startDate, timezone);
            // this.waitlistRegistrationData[i].clientEndTimeDate = this.tagsService.getTimeWithMomentForClientConvertedTimezone(this.waitlistRegistrationData[i].clientEndTime, this.waitlistRegistrationData[i].endDate, timezone);
            this.waitlistRegistrationData[i] = this.dataTablesService.addCustomFieldsToListDataObjects(this.waitlistRegistrationData[i], this.selectedClient);
        }
        this.tableData.data = this.waitlistRegistrationData;
        this.tableData.sortingDataAccessor = function (obj, property) { return _this.dataTablesService.getProperty(obj, property); };
        this.tableData.sort = this.sort;
        this.loaded = true;
        this.loading = false;
        this.errorLoading = false;
    };
    WaitlistRegistrationsTableComponent.prototype.getDisplayedColumns = function () {
        var columnsForTable;
        columnsForTable = this.tagsService.getApptListColumnValues(this.preferenceDefinedColumns, this.preference.schedulerPreferenceFieldDefnList, this.preference.labelMap, this.responsiveService.onMobileViewPort, 'waitlistRegistrationTags');
        this.displayedColumns = columnsForTable.appointmentFieldList;
        this.columnDefs = this.dataTablesService.setupColumnDefs(this.columnDefs, columnsForTable.columns);
        this.organizeApptData();
    };
    WaitlistRegistrationsTableComponent.prototype.ngOnChanges = function (changes) {
        // console.log(changes);
        if (changes.waitlistRegistrationData !== undefined && changes.waitlistRegistrationData.currentValue !== undefined) {
            if (this.preference.waitlistRegistrationsFieldList === undefined || this.preference.waitlistRegistrationsFieldList === null)
                this.preferenceDefinedColumns = this.dataTablesService.getDefaultWaitlistRegistrationDisplayedColumns();
            else
                this.preferenceDefinedColumns = this.preference.waitlistRegistrationsFieldList;
            this.getDisplayedColumns();
        }
    };
    WaitlistRegistrationsTableComponent.prototype.ngOnInit = function () {
        for (var i = 0, x = this.columnDefs.length; i < x; i++) {
            switch (this.columnDefs[i].name) {
                case this.idProp:
                    this.columnDefs[i].title = 'ID';
                    break;
                case 'clientStartTimeDate':
                    this.columnDefs[i].filterFormats[0].format = 'EEE, MMM d, yy';
                    break;
            }
        }
    };
    WaitlistRegistrationsTableComponent.ctorParameters = function () { return [
        { type: _data_tables_service__WEBPACK_IMPORTED_MODULE_5__["DataTablesService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_6__["ResponsiveService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"] },
        { type: _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_8__["TimeService"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_9__["BusinessService"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_10__["TagsService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Array)
    ], WaitlistRegistrationsTableComponent.prototype, "waitlistRegistrationData", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["Client"])
    ], WaitlistRegistrationsTableComponent.prototype, "selectedClient", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], WaitlistRegistrationsTableComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], WaitlistRegistrationsTableComponent.prototype, "loaded", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], WaitlistRegistrationsTableComponent.prototype, "errorLoading", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], WaitlistRegistrationsTableComponent.prototype, "loading", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], WaitlistRegistrationsTableComponent.prototype, "noApptsFoundProp", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_4__["MatSort"], { static: false }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_material_sort__WEBPACK_IMPORTED_MODULE_4__["MatSort"]),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_material_sort__WEBPACK_IMPORTED_MODULE_4__["MatSort"]])
    ], WaitlistRegistrationsTableComponent.prototype, "matSort", null);
    WaitlistRegistrationsTableComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'waitlist-registrations-table',
            template: __webpack_require__(/*! raw-loader!../appointments-table/appointments-table.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/view-appointments/view-appointments-list/appointments-table/appointments-table.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_data_tables_service__WEBPACK_IMPORTED_MODULE_5__["DataTablesService"], _responsive_service__WEBPACK_IMPORTED_MODULE_6__["ResponsiveService"], _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"],
            _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_8__["TimeService"], _business_service__WEBPACK_IMPORTED_MODULE_9__["BusinessService"], _tags_service__WEBPACK_IMPORTED_MODULE_10__["TagsService"]])
    ], WaitlistRegistrationsTableComponent);
    return WaitlistRegistrationsTableComponent;
}());



/***/ }),

/***/ "./src/app/client-account/view-appointments/view-appointments.component.ts":
/*!*********************************************************************************!*\
  !*** ./src/app/client-account/view-appointments/view-appointments.component.ts ***!
  \*********************************************************************************/
/*! exports provided: ViewAppointmentsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewAppointmentsComponent", function() { return ViewAppointmentsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var ViewAppointmentsComponent = /** @class */ (function () {
    function ViewAppointmentsComponent() {
    }
    ViewAppointmentsComponent.prototype.ngOnInit = function () {
    };
    ViewAppointmentsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-view-appointments',
            template: __webpack_require__(/*! raw-loader!./view-appointments.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/view-appointments/view-appointments.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], ViewAppointmentsComponent);
    return ViewAppointmentsComponent;
}());



/***/ }),

/***/ "./src/app/client-account/view-invoices/invoice-detail/invoice-detail.component.css":
/*!******************************************************************************************!*\
  !*** ./src/app/client-account/view-invoices/invoice-detail/invoice-detail.component.css ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".mat-chip-list {\n    margin-left: 0px;\n}\n\n/*For status chips to not have so much padding makign them align funny*/\n\n.mat-chip-list-wrapper .mat-standard-chip {\n    margin: 0px;\n}\n\na {\n    cursor: pointer;\n}\n\n.credit-cards-radio-group {\n    display: flex;\n    flex-direction: column;\n    margin: 15px 0;\n}\n\n.credit-cards-radio-button {\n    margin: 5px;\n}\n\n:host /deep/  mat-expansion-panel.noCreditCards {\n    box-shadow: none;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2xpZW50LWFjY291bnQvdmlldy1pbnZvaWNlcy9pbnZvaWNlLWRldGFpbC9pbnZvaWNlLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBLHVFQUF1RTs7QUFDdkU7SUFDSSxXQUFXO0FBQ2Y7O0FBQ0E7SUFDSSxlQUFlO0FBQ25COztBQUNBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUNBO0lBQ0ksZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvY2xpZW50LWFjY291bnQvdmlldy1pbnZvaWNlcy9pbnZvaWNlLWRldGFpbC9pbnZvaWNlLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jaGlwLWxpc3Qge1xuICAgIG1hcmdpbi1sZWZ0OiAwcHg7XG59XG5cbi8qRm9yIHN0YXR1cyBjaGlwcyB0byBub3QgaGF2ZSBzbyBtdWNoIHBhZGRpbmcgbWFraWduIHRoZW0gYWxpZ24gZnVubnkqL1xuLm1hdC1jaGlwLWxpc3Qtd3JhcHBlciAubWF0LXN0YW5kYXJkLWNoaXAge1xuICAgIG1hcmdpbjogMHB4O1xufVxuYSB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuLmNyZWRpdC1jYXJkcy1yYWRpby1ncm91cCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIG1hcmdpbjogMTVweCAwO1xufVxuXG4uY3JlZGl0LWNhcmRzLXJhZGlvLWJ1dHRvbiB7XG4gICAgbWFyZ2luOiA1cHg7XG59XG46aG9zdCAvZGVlcC8gIG1hdC1leHBhbnNpb24tcGFuZWwubm9DcmVkaXRDYXJkcyB7XG4gICAgYm94LXNoYWRvdzogbm9uZTtcbn1cbiJdfQ== */"

/***/ }),

/***/ "./src/app/client-account/view-invoices/invoice-detail/invoice-detail.component.ts":
/*!*****************************************************************************************!*\
  !*** ./src/app/client-account/view-invoices/invoice-detail/invoice-detail.component.ts ***!
  \*****************************************************************************************/
/*! exports provided: InvoiceDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InvoiceDetailComponent", function() { return InvoiceDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _client_account_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../auth/auth.service */ "./src/app/auth/auth.service.ts");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! file-saver */ "./node_modules/file-saver/dist/FileSaver.min.js");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _modals_select_pay_amount_select_pay_amount_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../modals/select-pay-amount/select-pay-amount.component */ "./src/app/modals/select-pay-amount/select-pay-amount.component.ts");
/* harmony import */ var _modals_select_package_select_package_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../modals/select-package/select-package.component */ "./src/app/modals/select-package/select-package.component.ts");
/* harmony import */ var _pipes_localecurrency_pipe__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../pipes/localecurrency.pipe */ "./src/pipes/localecurrency.pipe.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _prompt_package_pay_prompt_package_pay_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./prompt-package-pay/prompt-package-pay.service */ "./src/app/client-account/view-invoices/invoice-detail/prompt-package-pay/prompt-package-pay.service.ts");
















var InvoiceDetailComponent = /** @class */ (function () {
    function InvoiceDetailComponent(businessService, clientAccountService, authService, tagsService, route, router, localeCurrency, dialog, promptPackagePayService, cdRef, responsiveService, schedulerPreferenceService) {
        this.businessService = businessService;
        this.clientAccountService = clientAccountService;
        this.authService = authService;
        this.tagsService = tagsService;
        this.route = route;
        this.router = router;
        this.localeCurrency = localeCurrency;
        this.dialog = dialog;
        this.promptPackagePayService = promptPackagePayService;
        this.cdRef = cdRef;
        this.responsiveService = responsiveService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.connectingWithPaymentPortal = false;
        this.errorConnectingWithPaymentPortal = false;
        this.errorConnectingWithPaymentPortalMsg = 'Error! Cannot Connect to Payment Portal';
        this.invoiceLoaded = false;
        this.invoiceLoading = true;
        this.enteringPayment = false;
        this.paying = false;
        this.showPackagePurchaseOption = false;
        this.apptConfirmationTextWhenInvoicePaid = null;
        this.detailTitle = null;
        this.payBtnLabel = null;
        this.displayedColumns = ['description', 'rate', 'quantity', 'netAmount'];
        this.creditCards = [];
        this.columnDefs = [
            { name: 'description', title: 'Description', filter: null },
            { name: 'rate', title: 'Rate', filter: 'currency' },
            { name: 'quantity', title: 'Quantity', filter: null },
            { name: 'netAmount', title: 'Total', filter: 'currency' },
        ];
        this.invoiceItems = new _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatTableDataSource"]();
        this.enterNewCard = false;
        this.submitBtnLabel = '';
        this.submittingBtnLabel = '';
        this.submitFailBtnLabel = '';
        this.chargingCard = false;
        this.paymentAmountPassedViaParam = false;
        this.paymentFormHidden = true;
        this.getProperty = function (obj, path) { return (path.split('.').reduce(function (o, p) { return o && o[p]; }, obj)); };
        this.getFilterDisplay = function (element, col) {
            var returnStringForDisplay = '';
            switch (col.filter) {
                case 'currency':
                    returnStringForDisplay = this.getCurrencyDisplay(element[col.name]);
                    break;
            }
            return returnStringForDisplay;
        };
        this.preference = schedulerPreferenceService.schedulerPreference;
    }
    Object.defineProperty(InvoiceDetailComponent.prototype, "matSort", {
        set: function (ms) {
            this.sort = ms;
            this.setDataSourceAttributes();
        },
        enumerable: true,
        configurable: true
    });
    InvoiceDetailComponent.prototype.setDataSourceAttributes = function () {
        this.invoiceItems.sort = this.sort;
    };
    InvoiceDetailComponent.prototype.expandEnterNewCard = function () {
        if (this.creditCards.length > 0) {
            this.enterNewCard = !this.enterNewCard;
        }
    };
    InvoiceDetailComponent.prototype.chargeCardOnFile = function () {
        var _this = this;
        var cardId;
        var cardType;
        if (this.selectedCard === undefined) {
            //have not selected a radio dial button so just return;
            return;
        }
        if (this.selectedCard.stripeInfo !== undefined) {
            cardId = this.selectedCard.stripeInfo.id;
            cardType = "STRIPE";
        }
        if (this.selectedCard.squareInfo !== undefined) {
            cardId = this.selectedCard.squareInfo.id;
            cardType = "SQUARE";
        }
        this.chargingCard = true;
        this.businessService.chargeCardOnFile(this.invoice, cardId, cardType, this.invoice.paymentAmount).subscribe(function (invoice) {
            _this.chargingCard = false;
            _this.hidePaymentForm(invoice);
        }, function (error) {
            _this.chargingCard = false;
        });
    };
    InvoiceDetailComponent.prototype.getButtonLabelsForPaymentForm = function () {
        var chargeLabel = 'invoiceCreditCardChargeLabel';
        var chargeFailedLabel = 'invoiceCreditCardChargeFailedLabel';
        var chargingLabel = 'invoiceCreditCardChargingLabel';
        if (this.invoice.preAuthPayment && !this.invoice.hasBeenPreAuthed) {
            chargeLabel = 'invoiceCreditCardAuthorizeLabel';
            chargeFailedLabel = 'invoiceCreditCardAuthorizeFailedLabel';
            chargingLabel = 'invoiceCreditCardAuthorizingLabel';
        }
        this.submitBtnLabel = this.tagsService.assignObjectToTags(this.invoice, this.preference.labelMap[chargeLabel], this.tagsService.invoiceFieldTags, this.currency);
        this.submitFailBtnLabel = this.tagsService.assignObjectToTags(this.invoice, this.preference.labelMap[chargeFailedLabel], this.tagsService.invoiceFieldTags, this.currency);
        this.submittingBtnLabel = this.tagsService.assignObjectToTags(this.invoice, this.preference.labelMap[chargingLabel], this.tagsService.invoiceFieldTags, this.currency);
    };
    InvoiceDetailComponent.prototype.setErrorConnectingWithPaymentPortal = function () {
        var _this = this;
        this.connectingWithPaymentPortal = false;
        this.errorConnectingWithPaymentPortal = true;
        if (this.paymentMap.gateway === 'SQUARE' && !this.paymentMap.map.squareLocationId)
            this.errorConnectingWithPaymentPortalMsg = 'Error! No Default Location assigned in Square Payments Setup';
        else
            this.errorConnectingWithPaymentPortalMsg = 'Error! Cannot Connect to Payment Portal';
        this.paying = false;
        this.invoiceLoaded = true;
        this.invoiceLoading = false;
        setTimeout(function () {
            _this.errorConnectingWithPaymentPortal = false;
        }, 5000);
    };
    InvoiceDetailComponent.prototype.getPaymentMap = function (paymentAmount) {
        var _this = this;
        if (this.invoice.status === 'OPEN') {
            this.connectingWithPaymentPortal = true;
            this.errorConnectingWithPaymentPortal = false;
            this.businessService.getInvoicePaymentMap(this.invoice.invoiceId, paymentAmount)
                .subscribe(function (response) {
                _this.paymentMap = response.paymentMap;
                if (!_this.paymentMap)
                    _this.setErrorConnectingWithPaymentPortal();
                else if (_this.paymentMap.gateway === 'SQUARE' && !_this.paymentMap.map.squareLocationId) {
                    _this.setErrorConnectingWithPaymentPortal();
                }
                else {
                    _this.invoice.client = _this.clientAccountService.storeCardInfoOnClient(_this.invoice.client, response.storedCardInfo);
                    _this.creditCards = _this.clientAccountService.createCreditCardsArray(_this.invoice.client);
                    if (_this.creditCards.length === 0) {
                        _this.enterNewCard = true;
                    }
                    else {
                        _this.enterNewCard = false;
                    }
                    _this.getButtonLabelsForPaymentForm();
                    if (_this.paymentMap.gateway === 'SQUARE' || _this.paymentMap.gateway === 'STRIPE' || _this.paymentMap.gateway === 'LUMAPAY') {
                        if (_this.paymentMap.gateway === 'SQUARE')
                            _this.invoice.squareLocationId = _this.paymentMap.map.squareLocationId;
                        _this.paymentFormHidden = false;
                        _this.router.navigate([], {
                            relativeTo: _this.route,
                            queryParams: {
                                paying: true
                            },
                            queryParamsHandling: 'merge',
                        });
                        _this.enteringPayment = true;
                        _this.connectingWithPaymentPortal = false;
                    }
                    else {
                        var ua = navigator.userAgent.toLowerCase();
                        if (ua.indexOf('safari') != -1) {
                            if (ua.indexOf('chrome') > -1) {
                                _this.businessService.createFormPost(_this.paymentMap);
                            }
                            else {
                                _this.businessService.createSafariFormPost(_this.paymentMap);
                            }
                        }
                        else {
                            _this.businessService.createFormPost(_this.paymentMap);
                        }
                        _this.connectingWithPaymentPortal = false;
                    }
                    _this.invoiceLoaded = true;
                    _this.invoiceLoading = false;
                }
            }, function (error) {
                _this.setErrorConnectingWithPaymentPortal();
            });
        }
    };
    InvoiceDetailComponent.prototype.openChoosePayAmount = function () {
        var _this = this;
        // TT-6332 - open modal to ask what they want to pay
        var dialogRef = this.dialog.open(_modals_select_pay_amount_select_pay_amount_component__WEBPACK_IMPORTED_MODULE_11__["SelectPayAmountComponent"], {
            maxWidth: this.responsiveService.getMaxWidthForModals(),
            data: { invoice: this.invoice, preference: this.preference, currency: this.currency }
        });
        dialogRef.afterClosed().subscribe(function (amountType) {
            if (amountType === 'balanceAmount') {
                _this.invoice.paymentAmount = _this.invoice.balanceAmount;
                _this.getPaymentMap(_this.invoice.balanceAmount);
            }
            else if (amountType === 'paymentAmount')
                _this.getPaymentMap();
        });
    };
    InvoiceDetailComponent.prototype.payInvoice = function () {
        var _this = this;
        var invoiceItems = this.invoiceItems.data;
        var showPackageOptionCounter = 0;
        for (var i = 0, x = invoiceItems.length; i < x; i++)
            if (invoiceItems[i].showPackagePurchaseOption)
                showPackageOptionCounter += 1;
        var choosePayAmount = this.invoice.status === 'OPEN' && this.invoice.paymentAmount < this.invoice.balanceAmount && !this.paymentAmountPassedViaParam && this.invoice.allowChoosePayAmount;
        if (this.invoice.status === 'OPEN' && showPackageOptionCounter > 0) {
            this.promptPackagePayService.openModal(showPackageOptionCounter, this.invoice);
            var promptPackagePayModalClosedSubscription_1 = this.promptPackagePayService.modalClosed.subscribe(function (payWithPackage) {
                if (payWithPackage) {
                    for (var i = 0, x = invoiceItems.length; i < x; i++)
                        if (invoiceItems[i].showPackagePurchaseOption) {
                            _this.togglePackageSelectorPopup(invoiceItems[i]);
                            break;
                        }
                }
                else if (choosePayAmount)
                    _this.openChoosePayAmount();
                else
                    _this.getPaymentMap(_this.invoice.paymentAmount);
                promptPackagePayModalClosedSubscription_1.unsubscribe();
            });
        }
        else if (choosePayAmount)
            this.openChoosePayAmount();
        else
            this.getPaymentMap(this.invoice.paymentAmount);
    };
    InvoiceDetailComponent.prototype.renderInvoiceAfterPayment = function (invoice) {
        var _this = this;
        this.paying = false;
        this.router.navigate([], {
            relativeTo: this.route,
            queryParams: {
                paying: false
            },
            queryParamsHandling: 'merge',
        });
        for (var prop in invoice) {
            this.invoice[prop] = invoice[prop];
        }
        if (this.apptHash !== undefined && this.apptHash !== null) {
            if ((this.paymentRequired && (this.invoice.status === 'CLOSED' || this.invoice.subStatus === 'Partial Payment')) ||
                (this.authorizeRequired && this.invoice.subStatus === 'Authorized') ||
                (!this.paymentRequired && !this.authorizeRequired)) {
                this.businessService.getApptDetail(this.apptHash).subscribe(function (appt) {
                    _this.appt = appt;
                    if (_this.appt.status === 'OPEN') {
                        _this.apptConfirmationTextWhenInvoicePaid = _this.tagsService.convertApptPropertiesToTags('thanksInfo', _this.preference, _this.appt);
                    }
                    else if (_this.appt.status === 'PENDING_CONFIRMATION') {
                        _this.apptConfirmationTextWhenInvoicePaid = _this.tagsService.convertApptPropertiesToTags('thanksInfoConfirm', _this.preference, _this.appt);
                    }
                });
            }
        }
        if (this.invoice.invoiceItem && this.selectedClient) {
            for (var i = 0, x = this.invoice.invoiceItem.length; i < x; i++) {
                if (this.invoice.invoiceItem[i].packageSoldId !== null) {
                    this.selectedClient.packageSoldList = undefined;
                }
            }
        }
        this.invoiceLoaded = false;
        this.invoiceLoading = true;
        this.configureInvoiceDetail();
        this.cdRef.detectChanges();
        this.enteringPayment = false;
    };
    InvoiceDetailComponent.prototype.hidePaymentForm = function (invoice) {
        this.paymentFormHidden = true;
        if (!invoice) {
            this.getInvoiceDetail('loadAfterPayment');
        }
        else {
            this.renderInvoiceAfterPayment(invoice);
        }
    };
    InvoiceDetailComponent.prototype.printInvoice = function () {
        var _this = this;
        this.businessService.printInvoice(this.invoice.invoiceHash)
            .subscribe(function (invoice) {
            file_saver__WEBPACK_IMPORTED_MODULE_8__["saveAs"](invoice, _this.invoice.invoiceHash);
        });
    };
    InvoiceDetailComponent.prototype.goBack = function () {
        if (history.state !== undefined && history.state !== null && history.state.fromCart !== undefined && history.state.fromCart !== null && history.state.fromCart === true) {
            this.router.navigate(['/cart'], { relativeTo: this.route.root });
        }
        else if (this.authService.isAuth()) {
            this.router.navigate(['my-account/invoices'], { relativeTo: this.route.root });
            // this.router.navigate(['../../invoices'], {relativeTo: this.route});
        }
        else {
            this.router.navigate(['../../scheduler'], { relativeTo: this.route });
        }
    };
    InvoiceDetailComponent.prototype.getCurrencyDisplay = function (moneyValue) {
        return this.localeCurrency.transform(moneyValue, this.currency);
    };
    InvoiceDetailComponent.prototype.togglePackageSelectorPopup = function (invoiceItem) {
        var _this = this;
        var dataToPass = { invoice: this.invoice, preference: this.preference, invoiceItem: invoiceItem, packagesSold: this.packagesSold };
        var dialogRef = this.dialog.open(_modals_select_package_select_package_component__WEBPACK_IMPORTED_MODULE_12__["SelectPackageComponent"], {
            maxWidth: this.responsiveService.getMaxWidthForModals(),
            minWidth: this.responsiveService.getMaxWidthForModals(),
            data: dataToPass,
            id: "selectPackagesModal"
        });
        dialogRef.afterClosed().subscribe(function (updatedData) {
            if (updatedData) {
                if (updatedData.packageSold) {
                    for (var i = 0, x = _this.packagesSold.length; i < x; i++) {
                        if (_this.packagesSold[i].packageSoldId === updatedData.packageSold.packageSoldId)
                            _this.packagesSold[i] = updatedData.packageSold;
                    }
                }
                if (updatedData.invoice !== undefined && updatedData.invoice !== null) {
                    _this.invoice = updatedData.invoice;
                    _this.organizePackagesSold();
                }
            }
        });
    };
    InvoiceDetailComponent.prototype.configureInvoiceDetail = function () {
        var _this = this;
        this.invoiceItems.data = this.invoice.invoiceItem;
        this.invoiceItems.sortingDataAccessor = function (obj, property) { return _this.getProperty(obj, property); };
        this.invoiceItems.sort = this.sort;
        this.detailTitle = this.preference.labelMap.invoiceDetailTitle;
        if (this.params["paymentAmount"] !== undefined && this.params["paymentAmount"] !== null) {
            var paymentAmtParam = Number(this.params["paymentAmount"]);
            if (!isNaN(paymentAmtParam)) {
                this.invoice.paymentAmount = paymentAmtParam;
                this.paymentAmountPassedViaParam = true;
            }
        }
        switch (this.invoice.status) {
            case 'OPEN':
                this.invoiceStatusClass = 'invoiceStatusOpenChip';
                this.invoiceStatusChipBaseStyle = 'primary';
                break;
            case 'CLOSED':
                this.invoiceStatusClass = 'invoiceStatusClosedChip';
                this.invoiceStatusChipBaseStyle = 'success';
                break;
            case 'VOID':
                this.invoiceStatusClass = 'invoiceStatusVoidChip';
                this.invoiceStatusChipBaseStyle = 'warning';
                break;
            default:
                this.invoiceStatusClass = 'invoiceStatusDefaultChip';
                this.invoiceStatusChipBaseStyle = 'default';
        }
        if (this.invoice.invoiceType === 'QUOTE') {
            this.detailTitle = this.preference.labelMap.invoiceQuoteDetailTitle;
        }
        if (this.invoice.preAuthPayment && !this.invoice.hasBeenPreAuthed) {
            this.payBtnLabel = this.preference.labelMap.authorizeCCBtnLabel;
        }
        else {
            this.payBtnLabel = this.preference.labelMap.invoicePayBtnLabel;
        }
        if (this.paying && this.invoice.status === 'OPEN' && this.invoice.balanceAmount > 0) {
            this.connectingWithPaymentPortal = true;
            this.payInvoice();
        }
        else {
            this.paying = false;
            this.invoiceLoaded = true;
            this.invoiceLoading = false;
        }
    };
    InvoiceDetailComponent.prototype.organizePackagesSold = function () {
        this.showPackagePurchaseOption = false;
        for (var i = 0, x = this.packagesSold.length; i < x; i++) {
            for (var j = 0, y = this.invoice.invoiceItem.length; j < y; j++) {
                if (this.invoice.invoiceItem[j].netAmount > 0 && this.invoice.invoiceItem[j].reasonId &&
                    this.packagesSold[i].status === 'OPEN' && this.packagesSold[i].pkg.serviceIds.indexOf(this.invoice.invoiceItem[j].reasonId) !== -1) {
                    this.invoice.invoiceItem[j].showPackagePurchaseOption = true;
                    this.showPackagePurchaseOption = true;
                }
            }
        }
        if (this.showPackagePurchaseOption && this.displayedColumns.indexOf("showPackagePurchaseOption") === -1) {
            this.displayedColumns.splice(3, 0, "showPackagePurchaseOption");
            this.columnDefs.splice(3, 0, { name: 'showPackagePurchaseOption', title: 'Package', filter: null });
        }
        else if (!this.showPackagePurchaseOption && this.displayedColumns.indexOf("showPackagePurchaseOption") !== -1) {
            for (var i = 0, x = this.displayedColumns.length; i < x; i++) {
                if (this.displayedColumns[i] === 'showPackagePurchaseOption') {
                    this.displayedColumns.splice(i, 1);
                    break;
                }
            }
            for (var i = 0, x = this.columnDefs.length; i < x; i++) {
                if (this.columnDefs[i].name === 'showPackagePurchaseOption') {
                    this.columnDefs.splice(i, 1);
                    break;
                }
            }
        }
        if (this.showPackagePurchaseOption)
            this.paying = false;
        this.configureInvoiceDetail();
    };
    InvoiceDetailComponent.prototype.checkPackageForPaying = function () {
        var _this = this;
        if (this.invoice.status === 'OPEN' && this.invoice.client !== undefined && this.invoice.client !== null) {
            if (this.invoice.client.clientAccountId !== undefined && this.invoice.client.clientAccountId !== null) {
                this.clientAccountService.getPackageSoldByClientAccountId(this.invoice.client.clientAccountId, 'OPEN').subscribe(function (packagesSold) {
                    _this.packagesSold = packagesSold;
                    _this.organizePackagesSold();
                }, function (error) {
                    _this.configureInvoiceDetail();
                });
            }
            else {
                this.clientAccountService.getPackagesSoldByClientId(this.invoice.client.clientId, 'OPEN').subscribe(function (packagesSold) {
                    _this.packagesSold = packagesSold;
                    _this.organizePackagesSold();
                }, function (error) {
                    _this.configureInvoiceDetail();
                });
            }
        }
        else {
            this.configureInvoiceDetail();
        }
    };
    InvoiceDetailComponent.prototype.getInvoiceDetail = function (path) {
        var _this = this;
        this.businessService.getInvoiceDetail(this.invoiceHash)
            .subscribe(function (invoice) {
            _this.invoice = invoice;
            if (path === 'loadAfterPayment') {
                _this.renderInvoiceAfterPayment(_this.invoice);
            }
            else {
                _this.checkPackageForPaying();
            }
        }, function (error) {
            _this.goBack();
        });
    };
    InvoiceDetailComponent.prototype.loadInvoiceState = function () {
        var _this = this;
        var invoiceIdString = this.route.params.subscribe(function (params) {
            _this.invoiceHash = params['invoiceHash'];
        });
        if (history.state !== undefined && history.state !== null) {
            if (history.state.invoice !== undefined && history.state.invoice !== null) {
                this.invoice = history.state.invoice;
            }
            if (history.state.apptHash !== undefined && history.state.apptHash !== null) {
                this.apptHash = history.state.apptHash;
            }
            if (history.state.authorizeRequired !== undefined && history.state.authorizeRequired !== null) {
                this.authorizeRequired = history.state.authorizeRequired;
            }
            if (history.state.paymentRequired !== undefined && history.state.paymentRequired !== null) {
                this.paymentRequired = history.state.paymentRequired;
            }
        }
        if (this.invoice)
            this.checkPackageForPaying();
        else
            this.getInvoiceDetail('onload');
    };
    InvoiceDetailComponent.prototype.ngAfterViewChecked = function () {
        this.responsiveService.setHeightForEmbedAccount();
    };
    InvoiceDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.route.queryParams.subscribe(function (params) {
            _this.params = params;
            var paying = params["paying"];
            if (paying === 'false')
                _this.paying = false;
            else if (paying === 'true')
                _this.paying = true;
        });
        this.clientAccount = this.clientAccountService.loggedInClient;
        this.currency = this.businessService.currency;
        if (this.clientAccountService.selectedClient !== undefined && this.clientAccountService.selectedClient !== null) {
            for (var i = 0, x = this.clientAccount.clientList.length; i < x; i++) {
                if (this.clientAccount.clientList[i].clientId === this.clientAccountService.selectedClient.clientId) {
                    this.selectedClient = this.clientAccount.clientList[i];
                }
            }
        }
        else if (this.clientAccount !== undefined && this.clientAccount !== null) {
            this.selectedClient = this.clientAccount.clientList[0];
            this.clientAccountService.setSelectedClient(this.selectedClient, this.preference.schedulerPreferenceFieldDefnList);
        }
        this.loadInvoiceState();
    };
    InvoiceDetailComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_2__["BusinessService"] },
        { type: _client_account_service__WEBPACK_IMPORTED_MODULE_3__["ClientAccountService"] },
        { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_6__["AuthService"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_7__["TagsService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
        { type: _pipes_localecurrency_pipe__WEBPACK_IMPORTED_MODULE_13__["LocaleCurrency"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"] },
        { type: _prompt_package_pay_prompt_package_pay_service__WEBPACK_IMPORTED_MODULE_15__["PromptPackagePayService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_9__["ResponsiveService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_14__["SchedulerPreferenceService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSort"], { static: false }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSort"]),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_5__["MatSort"]])
    ], InvoiceDetailComponent.prototype, "matSort", null);
    InvoiceDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-invoice-detail',
            template: __webpack_require__(/*! raw-loader!./invoice-detail.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/view-invoices/invoice-detail/invoice-detail.component.html"),
            styles: [__webpack_require__(/*! ./invoice-detail.component.css */ "./src/app/client-account/view-invoices/invoice-detail/invoice-detail.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_2__["BusinessService"], _client_account_service__WEBPACK_IMPORTED_MODULE_3__["ClientAccountService"], _auth_auth_service__WEBPACK_IMPORTED_MODULE_6__["AuthService"], _tags_service__WEBPACK_IMPORTED_MODULE_7__["TagsService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _pipes_localecurrency_pipe__WEBPACK_IMPORTED_MODULE_13__["LocaleCurrency"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"],
            _prompt_package_pay_prompt_package_pay_service__WEBPACK_IMPORTED_MODULE_15__["PromptPackagePayService"],
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"], _responsive_service__WEBPACK_IMPORTED_MODULE_9__["ResponsiveService"], _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_14__["SchedulerPreferenceService"]])
    ], InvoiceDetailComponent);
    return InvoiceDetailComponent;
}());



/***/ }),

/***/ "./src/app/client-account/view-invoices/invoice-detail/prompt-package-pay/prompt-package-pay.component.ts":
/*!****************************************************************************************************************!*\
  !*** ./src/app/client-account/view-invoices/invoice-detail/prompt-package-pay/prompt-package-pay.component.ts ***!
  \****************************************************************************************************************/
/*! exports provided: PromptPackagePayComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PromptPackagePayComponent", function() { return PromptPackagePayComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");






var PromptPackagePayComponent = /** @class */ (function () {
    function PromptPackagePayComponent(passedData, schedulerPreferenceService, router, dialogRef, tagsService) {
        this.passedData = passedData;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.router = router;
        this.dialogRef = dialogRef;
        this.tagsService = tagsService;
        this.preference = schedulerPreferenceService.schedulerPreference;
    }
    PromptPackagePayComponent.prototype.selectPayWithPackage = function (payWithPackage) {
        this.dialogRef.close(payWithPackage);
    };
    PromptPackagePayComponent.prototype.ngOnInit = function () {
        this.invoice = this.passedData.invoice;
        this.showPackageOptionCounter = this.passedData.showPackageOptionCounter;
    };
    PromptPackagePayComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_5__["SchedulerPreferenceService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_4__["TagsService"] }
    ]; };
    PromptPackagePayComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-prompt-package-pay',
            template: __webpack_require__(/*! raw-loader!./prompt-package-pay.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/view-invoices/invoice-detail/prompt-package-pay/prompt-package-pay.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_5__["SchedulerPreferenceService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], _tags_service__WEBPACK_IMPORTED_MODULE_4__["TagsService"]])
    ], PromptPackagePayComponent);
    return PromptPackagePayComponent;
}());



/***/ }),

/***/ "./src/app/client-account/view-invoices/invoice-detail/prompt-package-pay/prompt-package-pay.module.ts":
/*!*************************************************************************************************************!*\
  !*** ./src/app/client-account/view-invoices/invoice-detail/prompt-package-pay/prompt-package-pay.module.ts ***!
  \*************************************************************************************************************/
/*! exports provided: PromptPackagePayModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PromptPackagePayModule", function() { return PromptPackagePayModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _prompt_package_pay_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./prompt-package-pay.component */ "./src/app/client-account/view-invoices/invoice-detail/prompt-package-pay/prompt-package-pay.component.ts");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../material.module */ "./src/app/material.module.ts");





var PromptPackagePayModule = /** @class */ (function () {
    function PromptPackagePayModule() {
    }
    PromptPackagePayModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [_prompt_package_pay_component__WEBPACK_IMPORTED_MODULE_3__["PromptPackagePayComponent"]],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
                _material_module__WEBPACK_IMPORTED_MODULE_4__["MaterialModule"]
            ],
            entryComponents: [_prompt_package_pay_component__WEBPACK_IMPORTED_MODULE_3__["PromptPackagePayComponent"]],
            exports: [_prompt_package_pay_component__WEBPACK_IMPORTED_MODULE_3__["PromptPackagePayComponent"]]
        })
    ], PromptPackagePayModule);
    return PromptPackagePayModule;
}());



/***/ }),

/***/ "./src/app/client-account/view-invoices/invoice-detail/prompt-package-pay/prompt-package-pay.service.ts":
/*!**************************************************************************************************************!*\
  !*** ./src/app/client-account/view-invoices/invoice-detail/prompt-package-pay/prompt-package-pay.service.ts ***!
  \**************************************************************************************************************/
/*! exports provided: PromptPackagePayService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PromptPackagePayService", function() { return PromptPackagePayService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var rxjs_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/index */ "./node_modules/rxjs/index.js");
/* harmony import */ var rxjs_index__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(rxjs_index__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _prompt_package_pay_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./prompt-package-pay.component */ "./src/app/client-account/view-invoices/invoice-detail/prompt-package-pay/prompt-package-pay.component.ts");






var PromptPackagePayService = /** @class */ (function () {
    function PromptPackagePayService(injector, dialog) {
        this.injector = injector;
        this.dialog = dialog;
        this.modalClosed = new rxjs_index__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.responsiveService = injector.get(_responsive_service__WEBPACK_IMPORTED_MODULE_2__["ResponsiveService"]);
    }
    PromptPackagePayService.prototype.openModal = function (showPackageOptionCounter, invoice) {
        var _this = this;
        var dialogRef = this.dialog.open(_prompt_package_pay_component__WEBPACK_IMPORTED_MODULE_5__["PromptPackagePayComponent"], {
            maxWidth: this.responsiveService.getMaxWidthForModals(),
            data: { invoice: invoice, showPackageOptionCounter: showPackageOptionCounter }
        });
        dialogRef.afterClosed().subscribe(function (payWithPackages) {
            _this.modalClosed.next(payWithPackages);
        });
    };
    PromptPackagePayService.ctorParameters = function () { return [
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] },
        { type: _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatDialog"] }
    ]; };
    PromptPackagePayService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatDialog"]])
    ], PromptPackagePayService);
    return PromptPackagePayService;
}());



/***/ }),

/***/ "./src/app/client-account/view-invoices/payment-portals/payments.model.ts":
/*!********************************************************************************!*\
  !*** ./src/app/client-account/view-invoices/payment-portals/payments.model.ts ***!
  \********************************************************************************/
/*! exports provided: CreditCard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreditCard", function() { return CreditCard; });
var CreditCard = /** @class */ (function () {
    function CreditCard() {
    }
    return CreditCard;
}());



/***/ }),

/***/ "./src/app/client-account/view-invoices/payment-portals/square/square.component.css":
/*!******************************************************************************************!*\
  !*** ./src/app/client-account/view-invoices/payment-portals/square/square.component.css ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#paymentForm, #nonce-form{\n    margin: 0 auto;\n}\n#paymentForm > div.row > div.col-12,\n#nonce-form > div.row > div.col-12 {\n    display: flex;\n    justify-content: space-between;\n}\n/* Customize the \"Pay with Credit Card\" button */\n.button-credit-card {\n    height: 56px;\n    border-radius: 5px;\n    font-size: 16px;\n    line-height: 24px;\n    letter-spacing: 0;\n    text-align: center;\n    transition: background .2s ease-in-out;\n}\n/**COPY FROM OUR ORIGINAL SQUARE PAYMENT PAGE**/\n.sq-input--focus {\n    /* Indicates how form inputs should appear when they have focus */\n    outline: 5px auto rgb(59, 153, 252);\n}\n.sq-input--error {\n    /* Indicates how form inputs should appear when they contain invalid values */\n    outline: 5px auto rgb(255, 97, 97);\n}\nform {\n    clear: both;\n    margin-left: 140px;\n}\nform input{\n    background-color: #428bca;\n    color: #fff;\n    padding: 8px 5px;\n    border: 1px solid #428bca;\n    border-radius: 3px;\n\n}\n.chargeButton {\n    min-width: 120px;\n    background: #2996cc;\n    color: #fff;\n    height: 40px;\n    line-height: 38px;\n    padding: 0 1em;\n    font-size: 14px;\n    border: 1px solid #2996cc;\n    border-radius: 3px;\n}\n.error-message {\n    background: #e52817;\n    color: #fff;\n    text-align: center;\n    -webkit-animation-name: flash-message; /* Chrome, Safari, Opera */\n    -webkit-animation-duration: 2s; /* Chrome, Safari, Opera */\n    animation-name: flash-message;\n    animation-duration: 2s;\n    margin-left: -15px;\n    margin-right: -15px;\n    border-radius: 0px;\n    font-size: 14px;\n}\n@-webkit-keyframes flash-message {\n    0%   {opacity: 0;}\n    5%   {opacity: .05;}\n    10%   {opacity: .10;}\n    15%   {opacity: .15;}\n    20%   {opacity: .20;}\n    25%  {opacity: .25;}\n    30%  {opacity: .30;}\n    35%  {opacity: .35;}\n    40%  {opacity: .40;}\n    45%  {opacity: .45;}\n    50%  {opacity: .50;}\n    55%  {opacity: .55;}\n    60%  {opacity: .60;}\n    65%  {opacity: .65;}\n    70%  {opacity: .70;}\n    75%  {opacity: .75;}\n    80%  {opacity: .80;}\n    85%  {opacity: .85;}\n    90%  {opacity: .90;}\n    95%  {opacity: .95;}\n    100% {opacity: 1;}\n}\n.form-field {\n    display: flex;\n    width: 100%;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    margin-bottom: 15px;\n}\n/*.form-field:nth-child(3),.form-field:nth-child(4){*/\n/*    margin-bottom: 15px;*/\n/*}*/\n.form-field#cardNumberField {\n    width: 100%;\n}\n.form-field#expirationDate,\n.form-field#cvv,\n.form-field#postalCode {\n    width: 30%;\n}\n.form-field__label {\n    min-height: 47px;\n    padding: 14px 24px;\n    border-bottom: 1px #ddd solid;\n    position: relative;\n    width: 200px;\n    font-weight: 500;\n    background-color: #f2f4f5;\n    cursor: default;\n    margin-bottom: 0px;\n}\n.form-field__content {\n    overflow: hidden;\n    /*border-bottom: 1px #ddd solid;*/\n    position: relative;\n    width: 100%;\n}\n.form-field__input {\n    min-height: 51px;\n    padding: 13px 24px;\n    width: 100%;\n    background-color: transparent;\n    display: block;\n    color: #3d454d;\n    font-size: 14px;\n    line-height: 1.5;\n    text-rendering: auto;\n    letter-spacing: normal;\n    word-spacing: normal;\n    text-transform: none;\n    text-indent: 0px;\n    text-shadow: none;\n    text-align: start;\n    border: none;\n}\n.sq-input--error{\n    margin-bottom: 0px;\n}\n@media(max-width:992px){\n\n}\n@media(max-width:768px){\n\n}\ninput:disabled {\n    background-color: #F8F8F8;\n    cursor: not-allowed;\n}\n.hidePayBtn {\n    display: none;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2xpZW50LWFjY291bnQvdmlldy1pbnZvaWNlcy9wYXltZW50LXBvcnRhbHMvc3F1YXJlL3NxdWFyZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztBQUNsQjtBQUNBOztJQUVJLGFBQWE7SUFDYiw4QkFBOEI7QUFDbEM7QUFHQSxnREFBZ0Q7QUFDaEQ7SUFDSSxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUlsQixzQ0FBc0M7QUFDMUM7QUFFQSwrQ0FBK0M7QUFDL0M7SUFDSSxpRUFBaUU7SUFDakUsbUNBQW1DO0FBQ3ZDO0FBQ0E7SUFDSSw2RUFBNkU7SUFDN0Usa0NBQWtDO0FBQ3RDO0FBQ0E7SUFDSSxXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSx5QkFBeUI7SUFDekIsV0FBVztJQUNYLGdCQUFnQjtJQUNoQix5QkFBeUI7SUFDekIsa0JBQWtCOztBQUV0QjtBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixXQUFXO0lBQ1gsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixjQUFjO0lBQ2QsZUFBZTtJQUNmLHlCQUF5QjtJQUN6QixrQkFBa0I7QUFDdEI7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLHFDQUFxQyxFQUFFLDBCQUEwQjtJQUNqRSw4QkFBOEIsRUFBRSwwQkFBMEI7SUFDMUQsNkJBQTZCO0lBQzdCLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25CO0FBQ0E7SUFDSSxNQUFNLFVBQVUsQ0FBQztJQUNqQixNQUFNLFlBQVksQ0FBQztJQUNuQixPQUFPLFlBQVksQ0FBQztJQUNwQixPQUFPLFlBQVksQ0FBQztJQUNwQixPQUFPLFlBQVksQ0FBQztJQUNwQixNQUFNLFlBQVksQ0FBQztJQUNuQixNQUFNLFlBQVksQ0FBQztJQUNuQixNQUFNLFlBQVksQ0FBQztJQUNuQixNQUFNLFlBQVksQ0FBQztJQUNuQixNQUFNLFlBQVksQ0FBQztJQUNuQixNQUFNLFlBQVksQ0FBQztJQUNuQixNQUFNLFlBQVksQ0FBQztJQUNuQixNQUFNLFlBQVksQ0FBQztJQUNuQixNQUFNLFlBQVksQ0FBQztJQUNuQixNQUFNLFlBQVksQ0FBQztJQUNuQixNQUFNLFlBQVksQ0FBQztJQUNuQixNQUFNLFlBQVksQ0FBQztJQUNuQixNQUFNLFlBQVksQ0FBQztJQUNuQixNQUFNLFlBQVksQ0FBQztJQUNuQixNQUFNLFlBQVksQ0FBQztJQUNuQixNQUFNLFVBQVUsQ0FBQztBQUNyQjtBQUdBO0lBQ0ksYUFBYTtJQUNiLFdBQVc7SUFDWCxzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtBQUN2QjtBQUNBLHFEQUFxRDtBQUNyRCwyQkFBMkI7QUFDM0IsSUFBSTtBQUNKO0lBQ0ksV0FBVztBQUNmO0FBQ0E7OztJQUdJLFVBQVU7QUFDZDtBQUNBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQiw2QkFBNkI7SUFDN0Isa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIseUJBQXlCO0lBQ3pCLGVBQWU7SUFDZixrQkFBa0I7QUFDdEI7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixpQ0FBaUM7SUFDakMsa0JBQWtCO0lBQ2xCLFdBQVc7QUFDZjtBQUNBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsNkJBQTZCO0lBQzdCLGNBQWM7SUFDZCxjQUFjO0lBQ2QsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixvQkFBb0I7SUFDcEIsc0JBQXNCO0lBQ3RCLG9CQUFvQjtJQUNwQixvQkFBb0I7SUFDcEIsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixpQkFBaUI7SUFDakIsWUFBWTtBQUNoQjtBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCO0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0lBQ0kseUJBQXlCO0lBQ3pCLG1CQUFtQjtBQUN2QjtBQUVBO0lBQ0ksYUFBYTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL2NsaWVudC1hY2NvdW50L3ZpZXctaW52b2ljZXMvcGF5bWVudC1wb3J0YWxzL3NxdWFyZS9zcXVhcmUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNwYXltZW50Rm9ybSwgI25vbmNlLWZvcm17XG4gICAgbWFyZ2luOiAwIGF1dG87XG59XG4jcGF5bWVudEZvcm0gPiBkaXYucm93ID4gZGl2LmNvbC0xMixcbiNub25jZS1mb3JtID4gZGl2LnJvdyA+IGRpdi5jb2wtMTIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuXG5cbi8qIEN1c3RvbWl6ZSB0aGUgXCJQYXkgd2l0aCBDcmVkaXQgQ2FyZFwiIGJ1dHRvbiAqL1xuLmJ1dHRvbi1jcmVkaXQtY2FyZCB7XG4gICAgaGVpZ2h0OiA1NnB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAuMnMgZWFzZS1pbi1vdXQ7XG4gICAgLW1vei10cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIC4ycyBlYXNlLWluLW91dDtcbiAgICAtbXMtdHJhbnNpdGlvbjogYmFja2dyb3VuZCAuMnMgZWFzZS1pbi1vdXQ7XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAuMnMgZWFzZS1pbi1vdXQ7XG59XG5cbi8qKkNPUFkgRlJPTSBPVVIgT1JJR0lOQUwgU1FVQVJFIFBBWU1FTlQgUEFHRSoqL1xuLnNxLWlucHV0LS1mb2N1cyB7XG4gICAgLyogSW5kaWNhdGVzIGhvdyBmb3JtIGlucHV0cyBzaG91bGQgYXBwZWFyIHdoZW4gdGhleSBoYXZlIGZvY3VzICovXG4gICAgb3V0bGluZTogNXB4IGF1dG8gcmdiKDU5LCAxNTMsIDI1Mik7XG59XG4uc3EtaW5wdXQtLWVycm9yIHtcbiAgICAvKiBJbmRpY2F0ZXMgaG93IGZvcm0gaW5wdXRzIHNob3VsZCBhcHBlYXIgd2hlbiB0aGV5IGNvbnRhaW4gaW52YWxpZCB2YWx1ZXMgKi9cbiAgICBvdXRsaW5lOiA1cHggYXV0byByZ2IoMjU1LCA5NywgOTcpO1xufVxuZm9ybSB7XG4gICAgY2xlYXI6IGJvdGg7XG4gICAgbWFyZ2luLWxlZnQ6IDE0MHB4O1xufVxuZm9ybSBpbnB1dHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDI4YmNhO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIHBhZGRpbmc6IDhweCA1cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzQyOGJjYTtcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XG5cbn1cblxuLmNoYXJnZUJ1dHRvbiB7XG4gICAgbWluLXdpZHRoOiAxMjBweDtcbiAgICBiYWNrZ3JvdW5kOiAjMjk5NmNjO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGhlaWdodDogNDBweDtcbiAgICBsaW5lLWhlaWdodDogMzhweDtcbiAgICBwYWRkaW5nOiAwIDFlbTtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzI5OTZjYztcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XG59XG5cbi5lcnJvci1tZXNzYWdlIHtcbiAgICBiYWNrZ3JvdW5kOiAjZTUyODE3O1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiBmbGFzaC1tZXNzYWdlOyAvKiBDaHJvbWUsIFNhZmFyaSwgT3BlcmEgKi9cbiAgICAtd2Via2l0LWFuaW1hdGlvbi1kdXJhdGlvbjogMnM7IC8qIENocm9tZSwgU2FmYXJpLCBPcGVyYSAqL1xuICAgIGFuaW1hdGlvbi1uYW1lOiBmbGFzaC1tZXNzYWdlO1xuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMnM7XG4gICAgbWFyZ2luLWxlZnQ6IC0xNXB4O1xuICAgIG1hcmdpbi1yaWdodDogLTE1cHg7XG4gICAgYm9yZGVyLXJhZGl1czogMHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbn1cbkAtd2Via2l0LWtleWZyYW1lcyBmbGFzaC1tZXNzYWdlIHtcbiAgICAwJSAgIHtvcGFjaXR5OiAwO31cbiAgICA1JSAgIHtvcGFjaXR5OiAuMDU7fVxuICAgIDEwJSAgIHtvcGFjaXR5OiAuMTA7fVxuICAgIDE1JSAgIHtvcGFjaXR5OiAuMTU7fVxuICAgIDIwJSAgIHtvcGFjaXR5OiAuMjA7fVxuICAgIDI1JSAge29wYWNpdHk6IC4yNTt9XG4gICAgMzAlICB7b3BhY2l0eTogLjMwO31cbiAgICAzNSUgIHtvcGFjaXR5OiAuMzU7fVxuICAgIDQwJSAge29wYWNpdHk6IC40MDt9XG4gICAgNDUlICB7b3BhY2l0eTogLjQ1O31cbiAgICA1MCUgIHtvcGFjaXR5OiAuNTA7fVxuICAgIDU1JSAge29wYWNpdHk6IC41NTt9XG4gICAgNjAlICB7b3BhY2l0eTogLjYwO31cbiAgICA2NSUgIHtvcGFjaXR5OiAuNjU7fVxuICAgIDcwJSAge29wYWNpdHk6IC43MDt9XG4gICAgNzUlICB7b3BhY2l0eTogLjc1O31cbiAgICA4MCUgIHtvcGFjaXR5OiAuODA7fVxuICAgIDg1JSAge29wYWNpdHk6IC44NTt9XG4gICAgOTAlICB7b3BhY2l0eTogLjkwO31cbiAgICA5NSUgIHtvcGFjaXR5OiAuOTU7fVxuICAgIDEwMCUge29wYWNpdHk6IDE7fVxufVxuXG5cbi5mb3JtLWZpZWxkIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG59XG4vKi5mb3JtLWZpZWxkOm50aC1jaGlsZCgzKSwuZm9ybS1maWVsZDpudGgtY2hpbGQoNCl7Ki9cbi8qICAgIG1hcmdpbi1ib3R0b206IDE1cHg7Ki9cbi8qfSovXG4uZm9ybS1maWVsZCNjYXJkTnVtYmVyRmllbGQge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuLmZvcm0tZmllbGQjZXhwaXJhdGlvbkRhdGUsXG4uZm9ybS1maWVsZCNjdnYsXG4uZm9ybS1maWVsZCNwb3N0YWxDb2RlIHtcbiAgICB3aWR0aDogMzAlO1xufVxuLmZvcm0tZmllbGRfX2xhYmVsIHtcbiAgICBtaW4taGVpZ2h0OiA0N3B4O1xuICAgIHBhZGRpbmc6IDE0cHggMjRweDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggI2RkZCBzb2xpZDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDIwMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YyZjRmNTtcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgbWFyZ2luLWJvdHRvbTogMHB4O1xufVxuXG4uZm9ybS1maWVsZF9fY29udGVudCB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAvKmJvcmRlci1ib3R0b206IDFweCAjZGRkIHNvbGlkOyovXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiAxMDAlO1xufVxuLmZvcm0tZmllbGRfX2lucHV0IHtcbiAgICBtaW4taGVpZ2h0OiA1MXB4O1xuICAgIHBhZGRpbmc6IDEzcHggMjRweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjb2xvcjogIzNkNDU0ZDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICB0ZXh0LXJlbmRlcmluZzogYXV0bztcbiAgICBsZXR0ZXItc3BhY2luZzogbm9ybWFsO1xuICAgIHdvcmQtc3BhY2luZzogbm9ybWFsO1xuICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICAgIHRleHQtaW5kZW50OiAwcHg7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmU7XG4gICAgdGV4dC1hbGlnbjogc3RhcnQ7XG4gICAgYm9yZGVyOiBub25lO1xufVxuXG4uc3EtaW5wdXQtLWVycm9ye1xuICAgIG1hcmdpbi1ib3R0b206IDBweDtcbn1cblxuQG1lZGlhKG1heC13aWR0aDo5OTJweCl7XG5cbn1cbkBtZWRpYShtYXgtd2lkdGg6NzY4cHgpe1xuXG59XG5pbnB1dDpkaXNhYmxlZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0Y4RjhGODtcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xufVxuXG4uaGlkZVBheUJ0biB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cbiJdfQ== */"

/***/ }),

/***/ "./src/app/client-account/view-invoices/payment-portals/square/square.component.ts":
/*!*****************************************************************************************!*\
  !*** ./src/app/client-account/view-invoices/payment-portals/square/square.component.ts ***!
  \*****************************************************************************************/
/*! exports provided: SquareComponent, SquareCard, SquareCustomer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SquareComponent", function() { return SquareComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SquareCard", function() { return SquareCard; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SquareCustomer", function() { return SquareCustomer; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _client_account_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../responsive.service */ "./src/app/responsive.service.ts");








var SquareComponent = /** @class */ (function () {
    function SquareComponent(businessService, clientAccountService, tagsService, route, router, responsiveService) {
        this.businessService = businessService;
        this.clientAccountService = clientAccountService;
        this.tagsService = tagsService;
        this.route = route;
        this.router = router;
        this.responsiveService = responsiveService;
        this.onGoBack = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.squareJsProd = 'https://web.squarecdn.com/v1/square.js';
        this.squareJsTest = 'https://sandbox.web.squarecdn.com/v1/square.js';
        this.applicationIdProd = 'sq0idp-BUSIYGB-opVjWqDKVijxhA';
        this.applicationIdTest = 'sandbox-sq0idb-W6SeSVjyx2pPBMf0HH-fLA';
        this.applicationId = this.applicationIdProd;
        this.paymentFormLoaded = false;
        this.saveClientPayment = false;
    }
    SquareComponent.prototype.setSaveClientPayment = function () {
        if (this.saveClientPayment)
            document.getElementById('saveClientPayment').value = "true"; //casting so .value will work
        else
            document.getElementById('saveClientPayment').value = "false"; //casting so .value will work
    };
    SquareComponent.prototype.createSquarePaymentForm = function (counter) {
        var _this = this;
        if (typeof Square !== "undefined" && counter < 200) {
            (function () { return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](_this, void 0, void 0, function () {
                var payments, cardOptions, card_1, payButton, e_1;
                var _this = this;
                return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (this.invoice) {
                                payments = Square.payments(this.applicationId, this.invoice.squareLocationId);
                            }
                            else {
                                payments = Square.payments(this.applicationId);
                            }
                            cardOptions = {
                                style: {
                                    input: {
                                        backgroundColor: 'white'
                                    },
                                }
                            };
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 4, , 5]);
                            return [4 /*yield*/, payments.card(cardOptions)];
                        case 2:
                            card_1 = _a.sent();
                            return [4 /*yield*/, card_1.attach('#card')];
                        case 3:
                            _a.sent();
                            payButton = document.getElementById('sq-creditcard');
                            this.paymentFormLoaded = true;
                            payButton.addEventListener('click', function () { return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](_this, void 0, void 0, function () {
                                var result, paymentsErrorBox, nonce, url, path_1, debug, newUrl, invoiceHash, balanceAmount, paymentAmount, saveClientPayment, clientId;
                                return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_a) {
                                    switch (_a.label) {
                                        case 0:
                                            document.getElementById('sq-creditcard').innerHTML = '<i class="fa fa-spinner fa-spin fa-fw"></i> ' + this.submittingBtnLabel;
                                            document.getElementById('sq-creditcard').disabled = true;
                                            return [4 /*yield*/, card_1.tokenize()];
                                        case 1:
                                            result = _a.sent();
                                            paymentsErrorBox = document.getElementById("paymentsErrorBox");
                                            if (result.status === 'OK') {
                                                paymentsErrorBox.hidden = true;
                                                paymentsErrorBox.innerHTML = '';
                                                nonce = result.token;
                                                document.getElementById('paymentsErrorBox').hidden = true;
                                                document.getElementById('card-nonce').value = nonce; //casting so .value will work
                                                url = void 0;
                                                path_1 = sessionStorage.getItem("paymentFormPath");
                                                debug = false;
                                                if (path_1 === 'invoice') {
                                                    newUrl = window.location.href.substring(0, window.location.href.indexOf('?'));
                                                    window.location.href = newUrl + '?paying=true';
                                                    invoiceHash = document.getElementById('invoiceHash').value;
                                                    balanceAmount = document.getElementById('balanceAmount').value;
                                                    paymentAmount = document.getElementById('paymentAmount').value;
                                                    saveClientPayment = document.getElementById('saveClientPayment').value;
                                                    if (paymentAmount === undefined || paymentAmount === null) {
                                                        paymentAmount = balanceAmount;
                                                    }
                                                    if (debug)
                                                        url = sessionStorage.getItem('csAPIBase') + 'cs/payInvoice/' + invoiceHash + '?square-card-nonce=' + nonce + '&amt=' + paymentAmount + '&saveClientPayment=' + saveClientPayment;
                                                    else
                                                        url = '../../../' + sessionStorage.getItem('csAPIBase') + 'cs/payInvoice/' + invoiceHash + '?square-card-nonce=' + nonce + '&amt=' + paymentAmount + '&saveClientPayment=' + saveClientPayment;
                                                }
                                                else if (path_1 === 'addCard') {
                                                    clientId = document.getElementById('clientId').value;
                                                    if (debug)
                                                        url = sessionStorage.getItem('csAPIBase') + 'cs/client/' + clientId + '/paymentInfo?square-card-nonce=' + nonce;
                                                    else
                                                        url = '../../../' + sessionStorage.getItem('csAPIBase') + 'cs/client/' + clientId + '/paymentInfo?square-card-nonce=' + nonce;
                                                }
                                                fetch(url, {
                                                    method: 'POST',
                                                    headers: {
                                                        'Accept': 'application/json',
                                                        'Content-Type': 'application/json',
                                                        'Authorization': 'Bearer ' + sessionStorage.getItem('token')
                                                    }
                                                })
                                                    .catch(function (err) {
                                                    alert('Network error: ' + err);
                                                })
                                                    .then(function (response) {
                                                    if (!response.ok) {
                                                        return response.text().then(function (errorInfo) { return Promise.reject(errorInfo); });
                                                    }
                                                    return response.text();
                                                })
                                                    .then(function (data) {
                                                    if (path_1 === 'invoice') {
                                                        var updatedInvoice = JSON.parse(data);
                                                        if (updatedInvoice.paymentConfirmUrl !== null && updatedInvoice.paymentConfirmUrl.trim() !== "" && updatedInvoice.subStatus !== 'Payment Declined')
                                                            window.location.href = updatedInvoice.paymentConfirmUrl;
                                                        else {
                                                            sessionStorage.setItem('updatedInvoice', data);
                                                            var newUrl = window.location.href.substring(0, window.location.href.indexOf('?'));
                                                            window.location.href = newUrl + '?paying=false';
                                                        }
                                                    }
                                                    else if (path_1 === 'addCard') {
                                                        sessionStorage.setItem('updatedCardsList', data);
                                                        window.location.href = window.location.href + '?cardAdded=true';
                                                    }
                                                })
                                                    .catch(function (err) {
                                                    if (path_1 === 'invoice') {
                                                        var newUrl = window.location.href.substring(0, window.location.href.indexOf('?'));
                                                        window.location.href = newUrl + '?paying=error';
                                                    }
                                                    //paymentsErrorBox
                                                });
                                            }
                                            else {
                                                // Log errors from nonce generation to the browser developer console.
                                                paymentsErrorBox.hidden = false;
                                                paymentsErrorBox.innerHTML = '<i class="fas fa-exclamation-triangle"></i> <strong>Error:</strong> ';
                                                result.errors.forEach(function (error) {
                                                    paymentsErrorBox.innerHTML = paymentsErrorBox.innerHTML + error.message + '<br/>';
                                                });
                                                document.getElementById('sq-creditcard').innerHTML = 'Re-submit';
                                                document.getElementById('sq-creditcard').disabled = false;
                                            }
                                            return [2 /*return*/];
                                    }
                                });
                            }); });
                            return [3 /*break*/, 5];
                        case 4:
                            e_1 = _a.sent();
                            console.error(e_1);
                            return [3 /*break*/, 5];
                        case 5: return [2 /*return*/];
                    }
                });
            }); })();
            this.addNonceFormEventListener(0);
        }
        else {
            counter++;
            setTimeout(function () { return _this.createSquarePaymentForm(counter); }, 200);
        }
    };
    SquareComponent.prototype.addSqJSFile = function () {
        var squareJSFileAdded = false;
        var scripts = document.getElementsByTagName("script");
        var squareScriptToUse = this.squareJsProd;
        if (this.businessService.businessConfigTest) {
            squareScriptToUse = this.squareJsTest;
            this.applicationId = this.applicationIdTest;
        }
        for (var i = 0, x = scripts.length; i < x; i++) {
            if (scripts[i].getAttribute('src') !== null && scripts[i].getAttribute('src') === squareScriptToUse) {
                squareJSFileAdded = true;
            }
        }
        if (!squareJSFileAdded) {
            var node = document.createElement('script');
            node.src = squareScriptToUse;
            node.type = 'text/javascript';
            node.async = false;
            node.charset = 'utf-8';
            document.getElementsByTagName('head')[0].appendChild(node);
        }
        this.createSquarePaymentForm(0);
    };
    SquareComponent.prototype.ngAfterViewChecked = function () {
        this.responsiveService.setHeightForEmbedAccount();
    };
    SquareComponent.prototype.ngOnInit = function () {
        var _this = this;
        sessionStorage.setItem("paymentFormPath", this.path);
        this.preference.continueShoppingUrl;
        this.addSqJSFile();
        if (this.path === 'addCard') {
            this.submitBtnLabel = this.preference.labelMap.clientPaymentsAddCardBtn;
            this.submittingBtnLabel = this.preference.labelMap.clientPaymentsAddingCardBtn;
        }
        this.paramsSubscription = this.route.queryParams
            .subscribe(function (params) {
            var paying = params.paying;
            if (paying === "false" && !_this.paymentFormHidden) {
                var updatedInvoice = sessionStorage.getItem('updatedInvoice');
                sessionStorage.removeItem('updatedInvoice');
                _this.goBack(JSON.parse(updatedInvoice));
            }
            else if (paying === 'error') {
                document.getElementById('sq-creditcard').innerHTML = _this.submitBtnLabel;
                document.getElementById('sq-creditcard').disabled = false;
                document.getElementById('paymentsErrorBox').innerHTML = _this.submitFailBtnLabel;
                document.getElementById('paymentsErrorBox').hidden = false;
            }
        });
    };
    SquareComponent.prototype.goBack = function (invoice) {
        this.onGoBack.emit(invoice);
    };
    // onSubmit(e){
    //   e.preventDefault();
    // }
    SquareComponent.prototype.addNonceFormEventListener = function (counter) {
        var path = sessionStorage.getItem("paymentFormPath");
        if (path === 'invoice') {
            document.getElementById('invoiceHash').value = this.invoice.invoiceHash; //casting so .value will work
            document.getElementById('balanceAmount').value = String(this.invoice.balanceAmount); //casting so .value will work
            document.getElementById('paymentAmount').value = String(this.invoice.paymentAmount); //casting so .value will work
            document.getElementById('saveClientPayment').value = "false"; //casting so .value will work
            // nonceForm.addEventListener('submit', this.onSubmit);
        }
        else if (path === 'addCard')
            document.getElementById('clientId').value = String(this.client.clientId); //casting so .value will work
    };
    SquareComponent.prototype.ngOnDestroy = function () {
        this.paramsSubscription.unsubscribe();
    };
    SquareComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"] },
        { type: _client_account_service__WEBPACK_IMPORTED_MODULE_4__["ClientAccountService"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_6__["TagsService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_7__["ResponsiveService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], SquareComponent.prototype, "onGoBack", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], SquareComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["Invoice"])
    ], SquareComponent.prototype, "invoice", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["Client"])
    ], SquareComponent.prototype, "client", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], SquareComponent.prototype, "path", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], SquareComponent.prototype, "currency", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], SquareComponent.prototype, "paymentFormHidden", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], SquareComponent.prototype, "submitBtnLabel", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], SquareComponent.prototype, "submittingBtnLabel", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], SquareComponent.prototype, "submitFailBtnLabel", void 0);
    SquareComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'square-payment-form',
            template: __webpack_require__(/*! raw-loader!./square.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/view-invoices/payment-portals/square/square.component.html"),
            styles: [__webpack_require__(/*! ./square.component.css */ "./src/app/client-account/view-invoices/payment-portals/square/square.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"], _client_account_service__WEBPACK_IMPORTED_MODULE_4__["ClientAccountService"], _tags_service__WEBPACK_IMPORTED_MODULE_6__["TagsService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"], _responsive_service__WEBPACK_IMPORTED_MODULE_7__["ResponsiveService"]])
    ], SquareComponent);
    return SquareComponent;
}());

var SquareCard = /** @class */ (function () {
    function SquareCard() {
    }
    return SquareCard;
}());

var SquareCustomer = /** @class */ (function () {
    function SquareCustomer() {
    }
    return SquareCustomer;
}());



/***/ }),

/***/ "./src/app/client-account/view-invoices/payment-portals/stripe/stripe.component.css":
/*!******************************************************************************************!*\
  !*** ./src/app/client-account/view-invoices/payment-portals/stripe/stripe.component.css ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/**\n * The CSS shown here will not be introduced in the Quickstart guide, but shows\n * how you can use CSS to style your Element's container.\n */\n.StripeElement {\n    box-sizing: border-box;\n\n    height: 40px;\n\n    padding: 10px 12px;\n\n    border: 1px solid transparent;\n    border-radius: 4px;\n    background-color: white;\n\n    box-shadow: 0 1px 3px 0 #e6ebf1;\n    transition: box-shadow 150ms ease;\n}\n.StripeElement--focus {\n    box-shadow: 0 1px 3px 0 #cfd7df;\n}\n.StripeElement--invalid {\n    border-color: #fa755a;\n}\n.StripeElement--webkit-autofill {\n    background-color: #fefde5 !important;\n}\n#stripePaymentFormDetail form {\n    width: 100%;\n}\n#card-errors {\n    margin-bottom: 15px;\n}\n.button-credit-card {\n    height: 56px;\n    border-radius: 5px;\n    font-size: 16px;\n    line-height: 24px;\n    letter-spacing: 0;\n    text-align: center;\n    transition: background .2s ease-in-out;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2xpZW50LWFjY291bnQvdmlldy1pbnZvaWNlcy9wYXltZW50LXBvcnRhbHMvc3RyaXBlL3N0cmlwZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7RUFHRTtBQUNGO0lBQ0ksc0JBQXNCOztJQUV0QixZQUFZOztJQUVaLGtCQUFrQjs7SUFFbEIsNkJBQTZCO0lBQzdCLGtCQUFrQjtJQUNsQix1QkFBdUI7O0lBRXZCLCtCQUErQjtJQUUvQixpQ0FBaUM7QUFDckM7QUFFQTtJQUNJLCtCQUErQjtBQUNuQztBQUVBO0lBQ0kscUJBQXFCO0FBQ3pCO0FBRUE7SUFDSSxvQ0FBb0M7QUFDeEM7QUFDQTtJQUNJLFdBQVc7QUFDZjtBQUNBO0lBQ0ksbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUlsQixzQ0FBc0M7QUFDMUMiLCJmaWxlIjoic3JjL2FwcC9jbGllbnQtYWNjb3VudC92aWV3LWludm9pY2VzL3BheW1lbnQtcG9ydGFscy9zdHJpcGUvc3RyaXBlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoZSBDU1Mgc2hvd24gaGVyZSB3aWxsIG5vdCBiZSBpbnRyb2R1Y2VkIGluIHRoZSBRdWlja3N0YXJ0IGd1aWRlLCBidXQgc2hvd3NcbiAqIGhvdyB5b3UgY2FuIHVzZSBDU1MgdG8gc3R5bGUgeW91ciBFbGVtZW50J3MgY29udGFpbmVyLlxuICovXG4uU3RyaXBlRWxlbWVudCB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcblxuICAgIGhlaWdodDogNDBweDtcblxuICAgIHBhZGRpbmc6IDEwcHggMTJweDtcblxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcblxuICAgIGJveC1zaGFkb3c6IDAgMXB4IDNweCAwICNlNmViZjE7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBib3gtc2hhZG93IDE1MG1zIGVhc2U7XG4gICAgdHJhbnNpdGlvbjogYm94LXNoYWRvdyAxNTBtcyBlYXNlO1xufVxuXG4uU3RyaXBlRWxlbWVudC0tZm9jdXMge1xuICAgIGJveC1zaGFkb3c6IDAgMXB4IDNweCAwICNjZmQ3ZGY7XG59XG5cbi5TdHJpcGVFbGVtZW50LS1pbnZhbGlkIHtcbiAgICBib3JkZXItY29sb3I6ICNmYTc1NWE7XG59XG5cbi5TdHJpcGVFbGVtZW50LS13ZWJraXQtYXV0b2ZpbGwge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZWZkZTUgIWltcG9ydGFudDtcbn1cbiNzdHJpcGVQYXltZW50Rm9ybURldGFpbCBmb3JtIHtcbiAgICB3aWR0aDogMTAwJTtcbn1cbiNjYXJkLWVycm9ycyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcbn1cbi5idXR0b24tY3JlZGl0LWNhcmQge1xuICAgIGhlaWdodDogNTZweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyNHB4O1xuICAgIGxldHRlci1zcGFjaW5nOiAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGJhY2tncm91bmQgLjJzIGVhc2UtaW4tb3V0O1xuICAgIC1tb3otdHJhbnNpdGlvbjogYmFja2dyb3VuZCAuMnMgZWFzZS1pbi1vdXQ7XG4gICAgLW1zLXRyYW5zaXRpb246IGJhY2tncm91bmQgLjJzIGVhc2UtaW4tb3V0O1xuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgLjJzIGVhc2UtaW4tb3V0O1xufVxuIl19 */"

/***/ }),

/***/ "./src/app/client-account/view-invoices/payment-portals/stripe/stripe.component.ts":
/*!*****************************************************************************************!*\
  !*** ./src/app/client-account/view-invoices/payment-portals/stripe/stripe.component.ts ***!
  \*****************************************************************************************/
/*! exports provided: StripeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StripeComponent", function() { return StripeComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _client_account_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _stripe_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./stripe.service */ "./src/app/client-account/view-invoices/payment-portals/stripe/stripe.service.ts");









var StripeComponent = /** @class */ (function () {
    function StripeComponent(businessService, clientAccountService, tagsService, route, router, responsiveService, stripeService) {
        this.businessService = businessService;
        this.clientAccountService = clientAccountService;
        this.tagsService = tagsService;
        this.route = route;
        this.router = router;
        this.responsiveService = responsiveService;
        this.stripeService = stripeService;
        this.onGoBack = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.stripeJs = 'https://js.stripe.com/v3/';
        this.paymentFormLoaded = false;
        this.paymentFormHasErrors = false;
        this.paying = false;
        this.loading = false;
        this.saveClientPayment = false;
    }
    StripeComponent.prototype.setSaveClientPayment = function () {
        if (this.saveClientPayment)
            document.getElementById('saveClientPayment').value = "true"; //casting so .value will work
        else
            document.getElementById('saveClientPayment').value = "false"; //casting so .value will work
    };
    StripeComponent.prototype.handleForm = function (e) {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var _a, source, error, cardErrors;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_b) {
                switch (_b.label) {
                    case 0:
                        e.preventDefault();
                        return [4 /*yield*/, this.stripe.createSource(this.card)];
                    case 1:
                        _a = _b.sent(), source = _a.source, error = _a.error;
                        if (error) {
                            cardErrors = error.message;
                        }
                        else {
                            // Send the token to your server.
                            this.loading = true;
                            // const user = await this.auth.getUser();
                            // const fun = this.functions.httpsCallable('stripeCreateCharge');
                            // this.confirmation = await fun({ source: source.id, uid: user.uid, amount: this.amount }).toPromise();
                            this.loading = false;
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    StripeComponent.prototype.submitStripeForm = function () {
        this.form.onsubmit(undefined);
    };
    StripeComponent.prototype.goBackToInvoice = function (data) {
        sessionStorage.setItem('updatedInvoice', data);
        var newUrl = window.location.href.substring(0, window.location.href.indexOf('?'));
        window.location.href = newUrl + '?paying=false';
    };
    StripeComponent.prototype.createStripePaymentForm = function (counter) {
        var _this = this;
        if (typeof Stripe !== "undefined" && counter < 20) {
            //LOAD STRIPE PAYMENT FORM
            var stripe_1 = Stripe(this.publishableKey, { stripeAccount: this.accountId });
            var elements = stripe_1.elements();
            // Custom styling can be passed to options when creating an Element.
            var style = {
                base: {
                    // Add your base input styles here. For example:
                    fontSize: '16px',
                    color: "#32325d",
                }
            };
            // Create an instance of the card Element.
            var card_1 = elements.create('card', { style: style });
            // Add an instance of the card Element into the `card-element` <div>.
            card_1.mount('#card-element');
            this.form = document.getElementById('stripeCreditCardForm');
            document.getElementById('card-errors').hidden = true;
            this.form.addEventListener('submit', function (event) {
                event.preventDefault();
                document.getElementById('stripe-creditcard').disabled = true;
                stripe_1.createPaymentMethod({
                    type: 'card',
                    card: card_1
                }).then(function (result) {
                    if (result.error) {
                        // Inform the customer that there was an error.
                        document.getElementById('card-errors').hidden = false;
                        var errorElement = document.getElementById('card-errors');
                        errorElement.textContent = result.error.message;
                        var newUrl = window.location.href.substring(0, window.location.href.indexOf('?'));
                        window.location.href = newUrl + '?paying=error';
                        document.getElementById('stripe-creditcard').disabled = false;
                    }
                    else {
                        var path_1 = sessionStorage.getItem("paymentFormPath");
                        // Send the token to your server
                        var submittingBtnLabel = sessionStorage.getItem('submittingBtnLabel');
                        sessionStorage.removeItem('submittingBtnLabel');
                        document.getElementById('stripe-creditcard').innerHTML = '<i class="fa fa-spinner fa-spin fa-fw"></i> ' + submittingBtnLabel;
                        document.getElementById('stripe-creditcard').disabled = true;
                        var url_1;
                        var debug_1 = false;
                        var require3dSecure_1 = result.paymentMethod && result.paymentMethod.card && result.paymentMethod.card.three_d_secure_usage && result.paymentMethod.card.three_d_secure_usage.supported;
                        var invoiceHash_1 = null;
                        var authOnly_1 = null;
                        var balanceAmount = null;
                        var paymentAmount = null;
                        var saveClientPayment = null;
                        if (path_1 === 'invoice') {
                            var newUrl = window.location.href.substring(0, window.location.href.indexOf('?'));
                            window.location.href = newUrl + '?paying=true';
                            invoiceHash_1 = document.getElementById('invoiceHash').value;
                            authOnly_1 = document.getElementById('authOnly').value;
                            balanceAmount = document.getElementById('balanceAmount').value;
                            paymentAmount = document.getElementById('paymentAmount').value;
                            saveClientPayment = document.getElementById('saveClientPayment').value;
                            if (paymentAmount === undefined || paymentAmount === null) {
                                paymentAmount = balanceAmount;
                            }
                            if (require3dSecure_1) {
                                if (debug_1)
                                    url_1 = sessionStorage.getItem('csAPIBase') + 'cs/stripe/paymentIntent/' + invoiceHash_1 + '?amt=' + paymentAmount + '&saveClientPayment=' + saveClientPayment + '&stripePaymentMethodId=' + result.paymentMethod.id + '&require3dSecure=true' + '&authOnly=' + authOnly_1;
                                else
                                    url_1 = '../../../' + sessionStorage.getItem('csAPIBase') + 'cs/stripe/paymentIntent/' + invoiceHash_1 + '?amt=' + paymentAmount + '&saveClientPayment=' + saveClientPayment + '&stripePaymentMethodId=' + result.paymentMethod.id + '&require3dSecure=true' + '&authOnly=' + authOnly_1;
                            }
                            else {
                                if (debug_1)
                                    url_1 = sessionStorage.getItem('csAPIBase') + 'cs/payInvoice/' + invoiceHash_1 + '?stripePaymentMethodId=' + result.paymentMethod.id + '&amt=' + paymentAmount + '&saveClientPayment=' + saveClientPayment + '&authOnly=' + authOnly_1;
                                else
                                    url_1 = '../../../' + sessionStorage.getItem('csAPIBase') + 'cs/payInvoice/' + invoiceHash_1 + '?stripePaymentMethodId=' + result.paymentMethod.id + '&amt=' + paymentAmount + '&saveClientPayment=' + saveClientPayment + '&authOnly=' + authOnly_1;
                            }
                        }
                        else if (path_1 === 'addCard') {
                            var clientId = document.getElementById('clientId').value;
                            if (debug_1)
                                url_1 = sessionStorage.getItem('csAPIBase') + 'cs/client/' + clientId + '/paymentInfo?stripePaymentMethodId=' + result.paymentMethod.id;
                            else
                                url_1 = '../../../' + sessionStorage.getItem('csAPIBase') + 'cs/client/' + clientId + '/paymentInfo?stripePaymentMethodId=' + result.paymentMethod.id;
                        }
                        fetch(url_1, {
                            method: 'POST',
                            headers: {
                                'Accept': 'application/json',
                                'Content-Type': 'application/json',
                                'Authorization': 'Bearer ' + sessionStorage.getItem('token')
                            }
                        })
                            .catch(function (err) {
                            document.getElementById('card-errors').hidden = false;
                            var errorElement = document.getElementById('card-errors');
                            var jsonErr = JSON.parse(err);
                            if (jsonErr && jsonErr.message)
                                errorElement.textContent = jsonErr.message;
                            else
                                errorElement.textContent = err;
                            var newUrl = window.location.href.substring(0, window.location.href.indexOf('?'));
                            window.location.href = newUrl + '?paying=error';
                        })
                            .then(function (response) {
                            if (!response.ok) {
                                return response.text().then(function (errorInfo) { return Promise.reject(errorInfo); });
                            }
                            return response.text();
                        })
                            .then(function (data) {
                            if (path_1 === 'invoice') {
                                if (require3dSecure_1) {
                                    var paymentIntentData = JSON.parse(data);
                                    stripe_1.confirmCardPayment(paymentIntentData.secret, {}).then(function (result) {
                                        if (result.error) {
                                            // Inform the customer that there was an error.
                                            document.getElementById('card-errors').hidden = false;
                                            var errorElement = document.getElementById('card-errors');
                                            errorElement.textContent = result.error.message;
                                            var newUrl = window.location.href.substring(0, window.location.href.indexOf('?'));
                                            window.location.href = newUrl + '?paying=error';
                                            document.getElementById('stripe-creditcard').disabled = false;
                                        }
                                        else if (result.paymentIntent) {
                                            if (debug_1)
                                                url_1 = sessionStorage.getItem('csAPIBase') + 'cs/stripe/chargePaymentIntent/' + invoiceHash_1 + '?paymentIntentId=' + result.paymentIntent.id + '&authOnly=' + authOnly_1;
                                            else
                                                url_1 = '../../../' + sessionStorage.getItem('csAPIBase') + 'cs/stripe/chargePaymentIntent/' + invoiceHash_1 + '?paymentIntentId=' + result.paymentIntent.id + '&authOnly=' + authOnly_1;
                                            fetch(url_1, {
                                                method: 'POST',
                                                headers: {
                                                    'Accept': 'application/json',
                                                    'Content-Type': 'application/json',
                                                    'Authorization': 'Bearer ' + sessionStorage.getItem('token')
                                                }
                                            })
                                                .catch(function (err) {
                                                document.getElementById('card-errors').hidden = false;
                                                var errorElement = document.getElementById('card-errors');
                                                var jsonErr = JSON.parse(err);
                                                if (jsonErr && jsonErr.message)
                                                    errorElement.textContent = jsonErr.message;
                                                else
                                                    errorElement.textContent = err;
                                                var newUrl = window.location.href.substring(0, window.location.href.indexOf('?'));
                                                window.location.href = newUrl + '?paying=error';
                                            })
                                                .then(function (response) {
                                                if (!response.ok) {
                                                    return response.text().then(function (errorInfo) { return Promise.reject(errorInfo); });
                                                }
                                                return response.text();
                                            })
                                                .then(function (data) {
                                                var updatedInvoice = JSON.parse(data);
                                                if (updatedInvoice.paymentConfirmUrl !== null && updatedInvoice.paymentConfirmUrl.trim() !== "" && updatedInvoice.subStatus !== 'Payment Declined')
                                                    window.location.href = updatedInvoice.paymentConfirmUrl;
                                                else {
                                                    sessionStorage.setItem('updatedInvoice', data);
                                                    var newUrl = window.location.href.substring(0, window.location.href.indexOf('?'));
                                                    window.location.href = newUrl + '?paying=false';
                                                }
                                            });
                                        }
                                    });
                                }
                                else {
                                    var updatedInvoice = JSON.parse(data);
                                    if (updatedInvoice.paymentConfirmUrl !== null && updatedInvoice.paymentConfirmUrl.trim() !== "" && updatedInvoice.subStatus !== 'Payment Declined')
                                        window.location.href = updatedInvoice.paymentConfirmUrl;
                                    else {
                                        sessionStorage.setItem('updatedInvoice', data);
                                        var newUrl = window.location.href.substring(0, window.location.href.indexOf('?'));
                                        window.location.href = newUrl + '?paying=false';
                                    }
                                }
                            }
                            else if (path_1 === 'addCard') {
                                sessionStorage.setItem('updatedCardsList', data);
                                window.location.href = window.location.href + '?cardAdded=true';
                            }
                        })
                            .catch(function (err) {
                            document.getElementById('card-errors').hidden = false;
                            var errorElement = document.getElementById('card-errors');
                            var jsonErr = JSON.parse(err);
                            if (jsonErr && jsonErr.message)
                                errorElement.textContent = jsonErr.message;
                            else
                                errorElement.textContent = err;
                            var newUrl = window.location.href.substring(0, window.location.href.indexOf('?'));
                            window.location.href = newUrl + '?paying=error';
                        });
                    }
                });
            });
            this.paymentFormLoaded = true;
            var path = sessionStorage.getItem("paymentFormPath");
            if (path === 'invoice') {
                document.getElementById('invoiceHash').value = this.invoice.invoiceHash; //casting so .value will work
                document.getElementById('balanceAmount').value = String(this.invoice.balanceAmount); //casting so .value will work
                document.getElementById('paymentAmount').value = String(this.invoice.paymentAmount); //casting so .value will work
                document.getElementById('saveClientPayment').value = "false"; //casting so .value will work
                var authOnly = this.invoice.preAuthPayment && !this.invoice.hasBeenPreAuthed;
                document.getElementById('authOnly').value = String(authOnly); //casting so .value will work
            }
            else if (path === 'addCard') {
                document.getElementById('clientId').value = String(this.client.clientId); //casting so .value will work
            }
        }
        else {
            counter++;
            setTimeout(function () { return _this.createStripePaymentForm(counter); }, 100);
        }
    };
    StripeComponent.prototype.addStripeJSFile = function () {
        this.stripeService.addStripeJSFile();
        this.createStripePaymentForm(0);
    };
    StripeComponent.prototype.ngAfterViewChecked = function () {
        this.responsiveService.setHeightForEmbedAccount();
    };
    StripeComponent.prototype.ngOnInit = function () {
        var _this = this;
        sessionStorage.setItem("paymentFormPath", this.path);
        var businessId;
        if (this.path === 'invoice') {
            businessId = this.invoice.businessId;
        }
        else if (this.path === 'addCard') {
            this.submitBtnLabel = this.preference.labelMap.clientPaymentsAddCardBtn;
            this.submittingBtnLabel = this.preference.labelMap.clientPaymentsAddingCardBtn;
            businessId = this.client.businessId;
        }
        if (this.invoice && this.invoice.invoiceId) {
            this.businessService.getStripeConfigByInvoice(businessId, this.invoice.invoiceId).subscribe(function (stripeConfig) {
                _this.publishableKey = stripeConfig.stripePublishableKey;
                _this.accountId = stripeConfig.stripeAccountId;
                _this.addStripeJSFile();
            });
        }
        else {
            this.businessService.getStripeConfigDefault(businessId).subscribe(function (stripeConfig) {
                _this.publishableKey = stripeConfig.stripePublishableKey;
                _this.accountId = stripeConfig.stripeAccountId;
                _this.addStripeJSFile();
            });
        }
        sessionStorage.setItem('submittingBtnLabel', this.submittingBtnLabel);
        this.route.queryParams
            .subscribe(function (params) {
            var paying = params.paying;
            var cardAdded = params.cardAdded;
            if (paying === "false") {
                var updatedInvoice = sessionStorage.getItem('updatedInvoice');
                sessionStorage.removeItem('updatedInvoice');
                _this.goBack(JSON.parse(updatedInvoice));
            }
            else if (paying === 'error') {
                document.getElementById('stripe-creditcard').innerHTML = _this.submitBtnLabel;
                document.getElementById('stripe-creditcard').disabled = false;
                _this.submittingBtnLabel = _this.tagsService.assignObjectToTags(_this.invoice, _this.preference.labelMap.invoiceCreditCardChargingLabel, _this.tagsService.invoiceFieldTags, _this.currency);
                sessionStorage.setItem('invoiceCreditCardChargingLabel', _this.submittingBtnLabel);
            }
        });
    };
    StripeComponent.prototype.goBack = function (invoice) {
        this.onGoBack.emit(invoice);
    };
    StripeComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"] },
        { type: _client_account_service__WEBPACK_IMPORTED_MODULE_4__["ClientAccountService"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_5__["TagsService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["ActivatedRoute"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["Router"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_7__["ResponsiveService"] },
        { type: _stripe_service__WEBPACK_IMPORTED_MODULE_8__["StripeService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], StripeComponent.prototype, "onGoBack", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], StripeComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["Invoice"])
    ], StripeComponent.prototype, "invoice", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["Client"])
    ], StripeComponent.prototype, "client", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], StripeComponent.prototype, "currency", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], StripeComponent.prototype, "path", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], StripeComponent.prototype, "submitBtnLabel", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], StripeComponent.prototype, "submittingBtnLabel", void 0);
    StripeComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'stripe-payment-form',
            template: __webpack_require__(/*! raw-loader!./stripe.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/view-invoices/payment-portals/stripe/stripe.component.html"),
            styles: [__webpack_require__(/*! ./stripe.component.css */ "./src/app/client-account/view-invoices/payment-portals/stripe/stripe.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"], _client_account_service__WEBPACK_IMPORTED_MODULE_4__["ClientAccountService"], _tags_service__WEBPACK_IMPORTED_MODULE_5__["TagsService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_6__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_6__["Router"], _responsive_service__WEBPACK_IMPORTED_MODULE_7__["ResponsiveService"], _stripe_service__WEBPACK_IMPORTED_MODULE_8__["StripeService"]])
    ], StripeComponent);
    return StripeComponent;
}());



/***/ }),

/***/ "./src/app/client-account/view-invoices/payment-portals/stripe/stripe.service.ts":
/*!***************************************************************************************!*\
  !*** ./src/app/client-account/view-invoices/payment-portals/stripe/stripe.service.ts ***!
  \***************************************************************************************/
/*! exports provided: StripeService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StripeService", function() { return StripeService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _api_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../api.service */ "./src/app/api.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");





var StripeService = /** @class */ (function () {
    function StripeService(injector, http) {
        this.injector = injector;
        this.http = http;
        this.stripeJs = 'https://js.stripe.com/v3/';
        this.apiService = injector.get(_api_service__WEBPACK_IMPORTED_MODULE_2__["ApiService"]);
    }
    StripeService.prototype.addStripeJSFile = function () {
        var stripeJSFileAdded = false;
        var scripts = document.getElementsByTagName("script");
        for (var i = 0, x = scripts.length; i < x; i++) {
            if (scripts[i].getAttribute('src') !== null && scripts[i].getAttribute('src') === this.stripeJs) {
                stripeJSFileAdded = true;
            }
        }
        if (!stripeJSFileAdded) {
            var node = document.createElement('script');
            node.src = this.stripeJs;
            node.type = 'text/javascript';
            node.async = false;
            node.charset = 'utf-8';
            document.getElementsByTagName('head')[0].appendChild(node);
        }
    };
    StripeService.prototype.createStripePaymentForm = function (counter, paymentIntent) {
        var _this = this;
        if (typeof Stripe !== "undefined" && counter < 20) {
            var stripe = Stripe(paymentIntent.stripePublishableKey);
            stripe.confirmCardPayment(paymentIntent.secret, {}).then(function (result) {
                var newUrl = window.location.href.substring(0, window.location.href.indexOf('?'));
                window.location.href = newUrl + '?paying=false';
            });
        }
        else {
            counter++;
            setTimeout(function () { return _this.createStripePaymentForm(counter, paymentIntent); }, 100);
        }
    };
    StripeService.prototype.chargeStripeCardOnFile = function (invoice, paymentMethodId, amt) {
        var _this = this;
        var paramsToPass = new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpParams"]();
        paramsToPass = paramsToPass.append('amt', JSON.stringify(amt));
        paramsToPass = paramsToPass.append('stripePaymentMethodId', paymentMethodId);
        return this.http
            .post(this.apiService.apiUrl + 'stripe/paymentIntent/' + invoice.invoiceHash, {}, { observe: "body", responseType: "json", params: paramsToPass })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            _this.addStripeJSFile();
            _this.createStripePaymentForm(0, responseData);
            return responseData;
        }));
    };
    StripeService.ctorParameters = function () { return [
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] },
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"] }
    ]; };
    StripeService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"], _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]])
    ], StripeService);
    return StripeService;
}());



/***/ }),

/***/ "./src/app/client-account/view-invoices/view-invoices-list/view-invoices-list.component.ts":
/*!*************************************************************************************************!*\
  !*** ./src/app/client-account/view-invoices/view-invoices-list/view-invoices-list.component.ts ***!
  \*************************************************************************************************/
/*! exports provided: ViewInvoicesListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewInvoicesListComponent", function() { return ViewInvoicesListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _client_account_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var moment_moment__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment_moment__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(moment_moment__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! moment-timezone/moment-timezone */ "./node_modules/moment-timezone/moment-timezone.js");
/* harmony import */ var moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../auth/auth.service */ "./src/app/auth/auth.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");














var ViewInvoicesListComponent = /** @class */ (function () {
    function ViewInvoicesListComponent(businessService, clientAccountService, route, timeService, tagsService, router, datePipe, responsiveService, currencyPipe, titleCasePipe, authService, schedulerPreferenceService) {
        this.businessService = businessService;
        this.clientAccountService = clientAccountService;
        this.route = route;
        this.timeService = timeService;
        this.tagsService = tagsService;
        this.router = router;
        this.datePipe = datePipe;
        this.responsiveService = responsiveService;
        this.currencyPipe = currencyPipe;
        this.titleCasePipe = titleCasePipe;
        this.authService = authService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.pageLoaded = false;
        this.invoicesLoaded = false;
        this.errorLoading = false;
        this.loadingInvoices = false;
        this.displayedColumns = ['invoiceNumber', 'invoiceType', 'invoiceDate', 'invoiceTotalAmount', 'balanceAmount'];
        this.columnDefs = [
            { name: 'invoiceNumber', title: 'Invoice ID', filter: null },
            { name: 'invoiceType', title: 'Type', filter: 'titleCase' },
            { name: 'invoiceDate', title: 'Date', filter: 'date',
                filterFormats: [{ format: 'EEEE, MMM d, y', concatenator: false, useMoment: false }] },
            { name: 'invoiceTotalAmount', title: 'Total', filter: 'currency' },
            { name: 'balanceAmount', title: 'Remaining Balance', filter: 'currency' },
        ];
        this.invoices = new _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatTableDataSource"]();
        this.invoiceStatuses = [
            { 'status': 'OPEN', 'selected': true, 'buttonLabel': 'invoicesOpenBtnLabel', 'titleBarProp': 'invoicesOpenListTitle', 'noInvoicesFoundProp': 'invoicesNoOpenMsg' },
            { 'status': 'CLOSED', 'selected': false, 'buttonLabel': 'invoicesClosedBtnLabel', 'titleBarProp': 'invoicesClosedListTitle', 'noInvoicesFoundProp': 'invoicesNoClosedMsg' },
            { 'status': 'VOID', 'selected': false, 'buttonLabel': 'invoicesVoidedBtnLabel', 'titleBarProp': 'invoicesVoidedListTitle', 'noInvoicesFoundProp': 'invoicesNoVoidedMsg' }
        ];
        this.getProperty = function (obj, path) { return (path.split('.').reduce(function (o, p) { return o && o[p]; }, obj)); };
        this.getFilterDisplay = function (element, col) {
            var returnStringForDisplay = '';
            switch (col.filter) {
                case 'date':
                    for (var i = 0, x = col.filterFormats.length; i < x; i++) {
                        if (!col.filterFormats[i].concatenator && col.filterFormats[i].useMoment) {
                            if (moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_10__["tz"].zone(this.selectedClient.timeZoneCode.timeZoneCode) === null) {
                                for (var i_1 = 0, x_1 = this.momentTimezoneService.allTimezones.zones.length; i_1 < x_1; i_1++) {
                                    if (this.momentTimezoneService.allTimezones.zones[i_1].indexOf(this.selectedClient.timeZoneCode.timeZoneCode) !== -1) {
                                        moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_10__["tz"].add(this.momentTimezoneService.allTimezones.zones[i_1]);
                                    }
                                }
                            }
                            returnStringForDisplay = returnStringForDisplay +
                                moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_10__(element[col.name]).tz(this.selectedClient.timeZoneCode.timeZoneCode).format(col.filterFormats[i].format);
                        }
                        else if (!col.filterFormats[i].concatenator && !col.filterFormats[i].useMoment) {
                            var timeZoneCode = sessionStorage.getItem("browserTimezone");
                            if (this.selectedClient.timeZoneCode !== null)
                                timeZoneCode = this.selectedClient.timeZoneCode.timeZoneCode;
                            returnStringForDisplay = returnStringForDisplay +
                                this.datePipe.transform(element[col.name], col.filterFormats[i].format, timeZoneCode, sessionStorage.getItem('locale'));
                        }
                        else {
                            returnStringForDisplay = returnStringForDisplay + col.filterFormats[i].format;
                        }
                    }
                    break;
                case 'currency':
                    returnStringForDisplay = this.currencyPipe.transform(element[col.name], this.currency.currencyCode, "symbol", "1.2-2", sessionStorage.getItem('locale'));
                    break;
                case 'titleCase':
                    returnStringForDisplay = this.titleCasePipe.transform(element[col.name]);
                    break;
            }
            return returnStringForDisplay;
        };
        this.selectStatus = function (status) {
            for (var i = 0, x = this.invoiceStatuses.length; i < x; i++) {
                if (this.invoiceStatuses[i].status === status.status) {
                    this.invoiceStatuses[i].selected = true;
                }
                else {
                    this.invoiceStatuses[i].selected = false;
                }
            }
            this.getInvoicesByStatus();
        };
        this.preference = schedulerPreferenceService.schedulerPreference;
        moment_moment__WEBPACK_IMPORTED_MODULE_9__["locale"](sessionStorage.getItem('locale'));
    }
    Object.defineProperty(ViewInvoicesListComponent.prototype, "matSort", {
        set: function (ms) {
            this.sort = ms;
            this.setDataSourceAttributes();
        },
        enumerable: true,
        configurable: true
    });
    ViewInvoicesListComponent.prototype.setDataSourceAttributes = function () {
        this.invoices.sort = this.sort;
    };
    ViewInvoicesListComponent.prototype.goBack = function () {
        if (this.authService.isAuth()) {
            this.router.navigate(['my-account'], { relativeTo: this.route.root });
        }
        else {
            this.router.navigate([''], { relativeTo: this.route.root });
        }
    };
    ViewInvoicesListComponent.prototype.viewInvoiceDetails = function (invoice) {
        this.router.navigate([invoice.invoiceHash], { relativeTo: this.route, state: { invoice: invoice } });
    };
    ViewInvoicesListComponent.prototype.viewInvoiceDetailsNonActions = function (invoice) {
        if (this.responsiveService.onMobileViewPort) {
            this.viewInvoiceDetails(invoice);
        }
    };
    ViewInvoicesListComponent.prototype.selectClient = function (changeEvent) {
        var client = changeEvent.client;
        var event = changeEvent.event;
        if (client.clientId !== this.selectedClient.clientId && event.isUserInput) {
            this.selectedClient = client;
            this.clientAccountService.selectedClient = this.selectedClient;
            this.getInvoicesByStatus();
        }
    };
    ViewInvoicesListComponent.prototype.getInvoicesByStatus = function () {
        var _this = this;
        this.loadingInvoices = true;
        var invoiceStatusString = '';
        for (var i = 0, x = this.invoiceStatuses.length; i < x; i++) {
            if (this.invoiceStatuses[i].selected) {
                this.titleBarProp = this.invoiceStatuses[i].titleBarProp;
                this.noInvoicesFoundProp = this.invoiceStatuses[i].noInvoicesFoundProp;
                invoiceStatusString = invoiceStatusString + this.invoiceStatuses[i].status;
            }
        }
        this.pageLoaded = true;
        this.clientAccountService.getInvoicesByStatus(this.selectedClient.clientId, invoiceStatusString)
            .subscribe(function (invoices) {
            if (invoices === null) {
                invoices = [];
            }
            for (var i = 0, x = invoices.length; i < x; i++) {
                if (!invoices[i].invoiceType)
                    invoices[i].invoiceType = 'INVOICE';
                if (!invoices[i].invoiceNumber)
                    invoices[i].invoiceNumber = String(invoices[i].invoiceId);
            }
            _this.invoices.data = invoices;
            _this.invoices.sortingDataAccessor = function (obj, property) { return _this.getProperty(obj, property); };
            _this.invoices.sort = _this.sort;
            _this.invoicesLoaded = true;
            _this.loadingInvoices = false;
            _this.errorLoading = false;
        }, function (error) {
            _this.invoicesLoaded = false;
            _this.loadingInvoices = false;
            _this.errorLoading = true;
        });
    };
    ViewInvoicesListComponent.prototype.ngAfterViewChecked = function () {
        this.responsiveService.setHeightForEmbedAccount();
    };
    ViewInvoicesListComponent.prototype.ngOnInit = function () {
        if (!this.authService.isAuth()) {
            this.goBack();
        }
        else {
            if (!this.responsiveService.onMobileViewPort)
                this.displayedColumns.push('actions');
            if (this.businessService.business) {
                if (this.businessService.business.status !== 'ACTIVE') {
                    this.invoicesLoaded = false;
                    this.errorLoading = true;
                    // this.miniWebsite = this.businessService.createErrorMiniWebsite('inactive');
                }
                else {
                    this.currency = this.businessService.currency;
                    this.clientAccount = this.clientAccountService.loggedInClient;
                    if (this.clientAccountService.selectedClient !== undefined && this.clientAccountService.selectedClient !== null) {
                        for (var i = 0, x = this.clientAccount.clientList.length; i < x; i++) {
                            if (this.clientAccount.clientList[i].clientId === this.clientAccountService.selectedClient.clientId) {
                                this.selectedClient = this.clientAccount.clientList[i];
                            }
                        }
                    }
                    else {
                        this.selectedClient = this.clientAccountService.selectClientBasedOnLoggedInEmail();
                        this.clientAccountService.setSelectedClient(this.selectedClient, this.preference.schedulerPreferenceFieldDefnList);
                    }
                    if (this.selectedClient === undefined && this.selectedClient !== null &&
                        this.clientAccountService.loggedInClient !== undefined && this.clientAccountService.loggedInClient !== null) {
                        this.selectedClient = this.clientAccountService.loggedInClient.clientList[0];
                    }
                    this.getInvoicesByStatus();
                }
            }
            else {
                this.invoicesLoaded = false;
                this.errorLoading = true;
                // this.miniWebsite = this.businessService.createErrorMiniWebsite('errorLoading');
            }
        }
    };
    ViewInvoicesListComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_6__["BusinessService"] },
        { type: _client_account_service__WEBPACK_IMPORTED_MODULE_3__["ClientAccountService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["ActivatedRoute"] },
        { type: _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_7__["TimeService"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_4__["TagsService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_11__["ResponsiveService"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["CurrencyPipe"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_5__["TitleCasePipe"] },
        { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_12__["AuthService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_13__["SchedulerPreferenceService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatSort"], { static: false }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatSort"]),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatSort"]])
    ], ViewInvoicesListComponent.prototype, "matSort", null);
    ViewInvoicesListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-view-invoices-list',
            template: __webpack_require__(/*! raw-loader!./view-invoices-list.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/view-invoices/view-invoices-list/view-invoices-list.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_6__["BusinessService"], _client_account_service__WEBPACK_IMPORTED_MODULE_3__["ClientAccountService"], _angular_router__WEBPACK_IMPORTED_MODULE_8__["ActivatedRoute"], _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_7__["TimeService"],
            _tags_service__WEBPACK_IMPORTED_MODULE_4__["TagsService"], _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"], _angular_common__WEBPACK_IMPORTED_MODULE_5__["DatePipe"], _responsive_service__WEBPACK_IMPORTED_MODULE_11__["ResponsiveService"],
            _angular_common__WEBPACK_IMPORTED_MODULE_5__["CurrencyPipe"], _angular_common__WEBPACK_IMPORTED_MODULE_5__["TitleCasePipe"], _auth_auth_service__WEBPACK_IMPORTED_MODULE_12__["AuthService"], _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_13__["SchedulerPreferenceService"]])
    ], ViewInvoicesListComponent);
    return ViewInvoicesListComponent;
}());



/***/ }),

/***/ "./src/app/client-account/view-invoices/view-invoices.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/client-account/view-invoices/view-invoices.component.ts ***!
  \*************************************************************************/
/*! exports provided: ViewInvoicesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewInvoicesComponent", function() { return ViewInvoicesComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var ViewInvoicesComponent = /** @class */ (function () {
    function ViewInvoicesComponent() {
    }
    ViewInvoicesComponent.prototype.ngOnInit = function () {
    };
    ViewInvoicesComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-view-invoices',
            template: __webpack_require__(/*! raw-loader!./view-invoices.component.html */ "./node_modules/raw-loader/index.js!./src/app/client-account/view-invoices/view-invoices.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], ViewInvoicesComponent);
    return ViewInvoicesComponent;
}());



/***/ }),

/***/ "./src/app/common-classes/TableColumnData.model.ts":
/*!*********************************************************!*\
  !*** ./src/app/common-classes/TableColumnData.model.ts ***!
  \*********************************************************/
/*! exports provided: TableColumnDataModel, TableColumnDataFilterFormat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TableColumnDataModel", function() { return TableColumnDataModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TableColumnDataFilterFormat", function() { return TableColumnDataFilterFormat; });
var TableColumnDataModel = /** @class */ (function () {
    function TableColumnDataModel(name, title, filter, filterFormats, selected, nestedProp, sticky, tag, noDateString) {
        this.name = name;
        this.title = title;
        this.filter = filter;
        this.filterFormats = filterFormats;
        this.selected = selected;
        if (selected === undefined)
            this.selected = true;
        this.nestedProp = nestedProp;
        this.sticky = sticky;
        this.tag = tag;
        this.noDateString = noDateString;
        if (filter !== undefined && filterFormats === undefined) {
            switch (filter) {
                case 'date':
                    var filterFormat = new TableColumnDataFilterFormat('short');
                    this.filterFormats = [filterFormat];
                    break;
            }
        }
    }
    TableColumnDataModel.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: Array },
        { type: Boolean },
        { type: String },
        { type: Boolean },
        { type: String },
        { type: String }
    ]; };
    return TableColumnDataModel;
}());

var TableColumnDataFilterFormat = /** @class */ (function () {
    function TableColumnDataFilterFormat(format, concatenator, useMoment, useUTC) {
        this.concatenator = false;
        this.useMoment = false;
        this.format = format;
        if (concatenator !== undefined)
            this.concatenator = concatenator;
        if (useMoment !== undefined)
            this.useMoment = useMoment;
        if (useUTC !== undefined)
            this.useUTC = useUTC;
    }
    TableColumnDataFilterFormat.ctorParameters = function () { return [
        { type: String },
        { type: Boolean },
        { type: Boolean },
        { type: Boolean }
    ]; };
    return TableColumnDataFilterFormat;
}());



/***/ }),

/***/ "./src/app/common-classes/app-objects.model.ts":
/*!*****************************************************!*\
  !*** ./src/app/common-classes/app-objects.model.ts ***!
  \*****************************************************/
/*! exports provided: ConfigListMap, landingPageObjects, miniWebsite, inactiveBusinessMiniWebsite, errorLoadingMiniWebsite, loginRegisterPopUpObject, CSFilterParameterBean, CouponAPIReturnData, Coupon, Client, ClientAccount, ExistingSessionObject, Resource, RecurringAppointment, MultipleAppts, CourseSet, RecurringClassSchedule, MonthDay, MonthDataObj, InvoiceItem, Invoice, PaymentDataMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConfigListMap", function() { return ConfigListMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "landingPageObjects", function() { return landingPageObjects; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "miniWebsite", function() { return miniWebsite; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inactiveBusinessMiniWebsite", function() { return inactiveBusinessMiniWebsite; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "errorLoadingMiniWebsite", function() { return errorLoadingMiniWebsite; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loginRegisterPopUpObject", function() { return loginRegisterPopUpObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CSFilterParameterBean", function() { return CSFilterParameterBean; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CouponAPIReturnData", function() { return CouponAPIReturnData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Coupon", function() { return Coupon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Client", function() { return Client; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientAccount", function() { return ClientAccount; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExistingSessionObject", function() { return ExistingSessionObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Resource", function() { return Resource; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RecurringAppointment", function() { return RecurringAppointment; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultipleAppts", function() { return MultipleAppts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CourseSet", function() { return CourseSet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RecurringClassSchedule", function() { return RecurringClassSchedule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MonthDay", function() { return MonthDay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MonthDataObj", function() { return MonthDataObj; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InvoiceItem", function() { return InvoiceItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Invoice", function() { return Invoice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PaymentDataMap", function() { return PaymentDataMap; });
/* harmony import */ var _scheduler_time_time_objects_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scheduler/time/time-objects.model */ "./src/app/scheduler/time/time-objects.model.ts");
/* harmony import */ var _models_Group_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../models/Group.model */ "./src/models/Group.model.ts");
/* harmony import */ var _models_Reason_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../models/Reason.model */ "./src/models/Reason.model.ts");
/* harmony import */ var _models_Location_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../models/Location.model */ "./src/models/Location.model.ts");
/* harmony import */ var _models_Staff_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../models/Staff.model */ "./src/models/Staff.model.ts");





var ConfigListMap = /** @class */ (function () {
    function ConfigListMap(courseLabelPlural, locationAddressLabel, classLabel, reasonGroupLabelPlural, supplierLineLabelPlural, resourceLabel, staffLabel, serviceLabelPlural, staffLabelPlural, supplierLabelPlural, locationLabelPlural, supplierLineLabel, additionalStaffLabel, clientLabelPlural, reasonLabel, reasonLabelPlural, serviceLabel, courseLabel, locationGroupLabelPlural, locationLabel, locationSuperGroupLabel, locationSuperGroupLabelPlural, resourceLabelPlural, coordinatorStaffLabel, clientLabel, supplierLabel, staffProfileSkypeIdLabel, classLabelPlural, reasonGroupLabel, locationGroupLabel) {
        if (courseLabelPlural === void 0) { courseLabelPlural = "courses"; }
        if (locationAddressLabel === void 0) { locationAddressLabel = "address"; }
        if (classLabel === void 0) { classLabel = "class"; }
        if (reasonGroupLabelPlural === void 0) { reasonGroupLabelPlural = "reason groups"; }
        if (supplierLineLabelPlural === void 0) { supplierLineLabelPlural = "supplier lines"; }
        if (resourceLabel === void 0) { resourceLabel = "resource"; }
        if (staffLabel === void 0) { staffLabel = "staff"; }
        if (serviceLabelPlural === void 0) { serviceLabelPlural = "services"; }
        if (staffLabelPlural === void 0) { staffLabelPlural = "staff"; }
        if (supplierLabelPlural === void 0) { supplierLabelPlural = "suppliers"; }
        if (locationLabelPlural === void 0) { locationLabelPlural = "locations"; }
        if (supplierLineLabel === void 0) { supplierLineLabel = "supplier line"; }
        if (additionalStaffLabel === void 0) { additionalStaffLabel = "additional staff"; }
        if (clientLabelPlural === void 0) { clientLabelPlural = "clients"; }
        if (reasonLabel === void 0) { reasonLabel = "service & class"; }
        if (reasonLabelPlural === void 0) { reasonLabelPlural = "services & classes"; }
        if (serviceLabel === void 0) { serviceLabel = "service"; }
        if (courseLabel === void 0) { courseLabel = "course"; }
        if (locationGroupLabelPlural === void 0) { locationGroupLabelPlural = "location groups"; }
        if (locationLabel === void 0) { locationLabel = "location"; }
        if (locationSuperGroupLabel === void 0) { locationSuperGroupLabel = "location super group"; }
        if (locationSuperGroupLabelPlural === void 0) { locationSuperGroupLabelPlural = "location super groups"; }
        if (resourceLabelPlural === void 0) { resourceLabelPlural = "resources"; }
        if (coordinatorStaffLabel === void 0) { coordinatorStaffLabel = "coordinator staff"; }
        if (clientLabel === void 0) { clientLabel = "client"; }
        if (supplierLabel === void 0) { supplierLabel = "supplier"; }
        if (staffProfileSkypeIdLabel === void 0) { staffProfileSkypeIdLabel = "Skype ID"; }
        if (classLabelPlural === void 0) { classLabelPlural = "classes"; }
        if (reasonGroupLabel === void 0) { reasonGroupLabel = "reason group"; }
        if (locationGroupLabel === void 0) { locationGroupLabel = "location group"; }
        this.courseLabelPlural = courseLabelPlural;
        this.locationAddressLabel = locationAddressLabel;
        this.classLabel = classLabel;
        this.reasonGroupLabelPlural = reasonGroupLabelPlural;
        this.supplierLineLabelPlural = supplierLineLabelPlural;
        this.resourceLabel = resourceLabel;
        this.staffLabel = staffLabel;
        this.serviceLabelPlural = serviceLabelPlural;
        this.staffLabelPlural = staffLabelPlural;
        this.supplierLabelPlural = supplierLabelPlural;
        this.locationLabelPlural = locationLabelPlural;
        this.supplierLineLabel = supplierLineLabel;
        this.additionalStaffLabel = additionalStaffLabel;
        this.clientLabelPlural = clientLabelPlural;
        this.reasonLabel = reasonLabel;
        this.reasonLabelPlural = reasonLabelPlural;
        this.serviceLabel = serviceLabel;
        this.courseLabel = courseLabel;
        this.locationGroupLabelPlural = locationGroupLabelPlural;
        this.locationLabel = locationLabel;
        this.locationSuperGroupLabel = locationSuperGroupLabel;
        this.locationSuperGroupLabelPlural = locationSuperGroupLabelPlural;
        this.resourceLabelPlural = resourceLabelPlural;
        this.coordinatorStaffLabel = coordinatorStaffLabel;
        this.clientLabel = clientLabel;
        this.supplierLabel = supplierLabel;
        this.staffProfileSkypeIdLabel = staffProfileSkypeIdLabel;
        this.classLabelPlural = classLabelPlural;
        this.reasonGroupLabel = reasonGroupLabel;
        this.locationGroupLabel = locationGroupLabel;
    }
    ConfigListMap.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return ConfigListMap;
}());

var landingPageObjects = /** @class */ (function () {
    function landingPageObjects() {
    }
    return landingPageObjects;
}());

var miniWebsite = /** @class */ (function () {
    function miniWebsite() {
    }
    return miniWebsite;
}());

var inactiveBusinessMiniWebsite = /** @class */ (function () {
    function inactiveBusinessMiniWebsite() {
        this.businessId = null;
        this.businessInfoVisible = false;
        this.pageTitle = 'TimeTap Booking: Business Inactive';
        this.policyVisible = false;
        this.logoAlign = 'center';
        this.logoUrl = 'https://9a812d2609e610ab07eb-b463fa4ca2c8095be4f297e4d7f6781b.ssl.cf2.rackcdn.com/timetap-logo-black.png';
    }
    return inactiveBusinessMiniWebsite;
}());

var errorLoadingMiniWebsite = /** @class */ (function () {
    function errorLoadingMiniWebsite() {
        this.businessId = null;
        this.businessInfoVisible = false;
        this.pageTitle = 'TimeTap Booking: Loading Error';
        this.policyVisible = false;
        this.logoAlign = 'center';
        this.logoUrl = 'https://9a812d2609e610ab07eb-b463fa4ca2c8095be4f297e4d7f6781b.ssl.cf2.rackcdn.com/timetap-logo-black.png';
    }
    return errorLoadingMiniWebsite;
}());

var loginRegisterPopUpObject = /** @class */ (function () {
    function loginRegisterPopUpObject() {
        this.connectClientCallFrom = "CONNECT_CLIENT";
    }
    return loginRegisterPopUpObject;
}());

var CSFilterParameterBean = /** @class */ (function () {
    function CSFilterParameterBean() {
        this.staffIdList = null;
        this.reasonIdList = null;
        this.locationIdList = null;
        this.locationGroupIdList = null;
        this.reasonGroupIdList = null;
        this.locationSuperGroupIdList = null;
        this.reasonSuperGroupIdList = null;
        this.classScheduleIdList = null;
        this.groupIdList = null;
    }
    CSFilterParameterBean.prototype.createInitial = function (auditReferralId, debug, locale, businessId, schedulerLinkId, clientTimeZone) {
        this.auditReferralId = auditReferralId;
        this.debug = false;
        this.locale = locale;
        this.businessId = businessId;
        this.schedulerLinkId = schedulerLinkId;
        this.clientTimeZone = clientTimeZone;
        return this;
    };
    return CSFilterParameterBean;
}());

var CouponAPIReturnData = /** @class */ (function () {
    function CouponAPIReturnData(coupon, reasonAPIBeanList, status, statusDetail) {
        this.coupon = coupon;
        this.reasonAPIBeanList = reasonAPIBeanList;
        this.status = status;
        this.statusDetail = statusDetail;
    }
    CouponAPIReturnData.ctorParameters = function () { return [
        { type: Coupon },
        { type: Array },
        { type: String },
        { type: String }
    ]; };
    return CouponAPIReturnData;
}());

var Coupon = /** @class */ (function () {
    function Coupon(active, businessId, couponCode, couponId, couponName, couponType, createdDate, createdUser, amount, description, endDate, maxUseCount, modifiedDate, modifiedUser, percentage, reasonId, reasonIdList, appliedReasonCount) {
        this.active = active;
        this.businessId = businessId;
        this.couponCode = couponCode;
        this.couponId = couponId;
        this.couponName = couponName;
        this.couponType = couponType;
        this.createdDate = createdDate;
        this.createdUser = createdUser;
        this.amount = amount;
        this.description = description;
        this.endDate = endDate;
        this.maxUseCount = maxUseCount;
        this.modifiedDate = modifiedDate;
        this.modifiedUser = modifiedUser;
        this.percentage = percentage;
        this.reasonId = reasonId;
        this.reasonIdList = reasonIdList;
        this.appliedReasonCount = appliedReasonCount;
    }
    Coupon.ctorParameters = function () { return [
        { type: Boolean },
        { type: Number },
        { type: String },
        { type: Number },
        { type: String },
        { type: String },
        { type: Date },
        { type: String },
        { type: Number },
        { type: String },
        { type: Date },
        { type: Number },
        { type: Date },
        { type: String },
        { type: Number },
        { type: Number },
        { type: Array },
        { type: Number }
    ]; };
    return Coupon;
}());

var Client = /** @class */ (function () {
    function Client(clientId, clientAccountId, password, fields, locale, status, createdUser, createdDate, timeZoneCode, deleted, fullName, emailAddress, activeApptCount, fieldDataList, allowWaitListText) {
        this.clientId = clientId;
        this.clientAccountId = clientAccountId;
        this.password = password;
        this.fields = fields;
        this.locale = locale;
        this.status = status;
        this.createdUser = createdUser;
        this.createdDate = createdDate;
        this.timeZoneCode = timeZoneCode;
        this.deleted = deleted;
        this.fullName = fullName;
        this.emailAddress = emailAddress;
        this.activeApptCount = activeApptCount;
        this.fieldDataList = fieldDataList;
        this.allowWaitListText = allowWaitListText;
    }
    Client.ctorParameters = function () { return [
        { type: Number },
        { type: Number },
        { type: String },
        { type: Array },
        { type: String },
        { type: String },
        { type: String },
        { type: Number },
        { type: _scheduler_time_time_objects_model__WEBPACK_IMPORTED_MODULE_0__["TimeZoneCode"] },
        { type: Boolean },
        { type: String },
        { type: String },
        { type: Number },
        { type: Array },
        { type: Boolean }
    ]; };
    return Client;
}());

var ClientAccount = /** @class */ (function () {
    function ClientAccount(emailAddress, password, active, businessId, clientAccountId, clientList, createdDate, createdUser, linkedClientAccountId, modifiedDate, modifiedUser) {
        this.emailAddress = emailAddress;
        this.password = password;
        this.active = active;
        this.businessId = businessId;
        this.clientAccountId = clientAccountId;
        this.clientList = clientList;
        this.createdDate = createdDate;
        this.createdUser = createdUser;
        this.linkedClientAccountId = linkedClientAccountId;
        this.modifiedDate = modifiedDate;
        this.modifiedUser = modifiedUser;
    }
    ClientAccount.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: Boolean },
        { type: Number },
        { type: Number },
        { type: Array },
        { type: Date },
        { type: String },
        { type: Number },
        { type: Date },
        { type: String }
    ]; };
    return ClientAccount;
}());

var ExistingSessionObject = /** @class */ (function () {
    function ExistingSessionObject(businessId, clientAccount, handle, locale, privateUrlHash, passwordLogin, parmInvitationUUId, invitationExpired, invitationCompleted, parmInvoiceHash, parmCoupon, parmDisclaimerFormUUID, sessionToken, parmAuditReferralId, customFieldMap) {
        this.businessId = businessId;
        this.clientAccount = clientAccount;
        this.handle = handle;
        this.locale = locale;
        this.privateUrlHash = privateUrlHash;
        this.passwordLogin = passwordLogin;
        this.parmInvitationUUId = parmInvitationUUId;
        this.invitationExpired = invitationExpired;
        this.invitationCompleted = invitationCompleted;
        this.parmInvoiceHash = parmInvoiceHash;
        this.parmCoupon = parmCoupon;
        this.parmDisclaimerFormUUID = parmDisclaimerFormUUID;
        this.sessionToken = sessionToken;
        this.parmAuditReferralId = parmAuditReferralId;
        this.customFieldMap = customFieldMap;
    }
    ExistingSessionObject.ctorParameters = function () { return [
        { type: Number },
        { type: ClientAccount },
        { type: String },
        { type: String },
        { type: String },
        { type: Boolean },
        { type: String },
        { type: Boolean },
        { type: Boolean },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: undefined }
    ]; };
    return ExistingSessionObject;
}());

var Resource = /** @class */ (function () {
    function Resource(resourceId, resourceName) {
        this.resourceId = resourceId;
        this.resourceName = resourceName;
    }
    Resource.ctorParameters = function () { return [
        { type: Number },
        { type: String }
    ]; };
    return Resource;
}());

var RecurringAppointment = /** @class */ (function () {
    function RecurringAppointment(recurringAppointmentId, businessId, location, staff, client, reason, adhoc, fields, startDate, endDate, resource, remindClientSmsHrs, seats, locationSuperGroup, locationGroup, reasonSuperGroup, reasonGroup, address, timeSlotList, classScheduleList, startTimeDate, endTimeDate, clientStartTime, clientEndTime, recurringSchedule, coupon) {
        this.recurringAppointmentId = recurringAppointmentId;
        this.businessId = businessId;
        this.location = location;
        this.staff = staff;
        this.client = client;
        this.reason = reason;
        this.adhoc = adhoc;
        this.fields = fields;
        this.startDate = startDate;
        this.endDate = endDate;
        this.resource = resource;
        this.remindClientSmsHrs = remindClientSmsHrs;
        this.seats = seats;
        this.locationSuperGroup = locationSuperGroup;
        this.locationGroup = locationGroup;
        this.reasonSuperGroup = reasonSuperGroup;
        this.reasonGroup = reasonGroup;
        this.address = address;
        this.timeSlotList = timeSlotList;
        this.classScheduleList = classScheduleList;
        this.startTimeDate = startTimeDate;
        this.endTimeDate = endTimeDate;
        this.clientStartTime = clientStartTime;
        this.clientEndTime = clientEndTime;
        this.recurringSchedule = recurringSchedule;
        this.coupon = coupon;
    }
    RecurringAppointment.ctorParameters = function () { return [
        { type: Number },
        { type: Number },
        { type: _models_Location_model__WEBPACK_IMPORTED_MODULE_3__["Location"] },
        { type: _models_Staff_model__WEBPACK_IMPORTED_MODULE_4__["Staff"] },
        { type: Client },
        { type: _models_Reason_model__WEBPACK_IMPORTED_MODULE_2__["Reason"] },
        { type: Boolean },
        { type: Array },
        { type: String },
        { type: String },
        { type: Resource },
        { type: Number },
        { type: Number },
        { type: _models_Group_model__WEBPACK_IMPORTED_MODULE_1__["Group"] },
        { type: _models_Group_model__WEBPACK_IMPORTED_MODULE_1__["Group"] },
        { type: _models_Group_model__WEBPACK_IMPORTED_MODULE_1__["Group"] },
        { type: _models_Group_model__WEBPACK_IMPORTED_MODULE_1__["Group"] },
        { type: String },
        { type: Array },
        { type: Array },
        { type: Date },
        { type: Date },
        { type: Number },
        { type: Number },
        { type: undefined },
        { type: Coupon }
    ]; };
    return RecurringAppointment;
}());

var MultipleAppts = /** @class */ (function () {
    function MultipleAppts(appointments, recurringAppointment) {
        this.appointments = appointments;
        this.recurringAppointment = recurringAppointment;
    }
    MultipleAppts.ctorParameters = function () { return [
        { type: Array },
        { type: RecurringAppointment }
    ]; };
    return MultipleAppts;
}());

var CourseSet = /** @class */ (function () {
    function CourseSet() {
    }
    return CourseSet;
}());

var RecurringClassSchedule = /** @class */ (function () {
    function RecurringClassSchedule() {
    }
    RecurringClassSchedule.prototype.copyPropsFromAPI = function (repeatingClassSchedule) {
        for (var prop in repeatingClassSchedule)
            this[prop] = repeatingClassSchedule[prop];
    };
    return RecurringClassSchedule;
}());

var MonthDay = /** @class */ (function () {
    function MonthDay(dayNumInMonth, available, isDayInMonth) {
        this.dayNumInMonth = dayNumInMonth;
        this.available = available;
        this.isDayInMonth = isDayInMonth;
    }
    MonthDay.ctorParameters = function () { return [
        { type: Number },
        { type: Boolean },
        { type: Boolean }
    ]; };
    return MonthDay;
}());

var MonthDataObj = /** @class */ (function () {
    function MonthDataObj(monthFullName, monthAbbreviation, daysInMonth, monthNumberFull, monthNumberIndex, currentYear, startDayOfWeek, startDayOfWeekNum, startDateOfMonth) {
        this.monthFullName = monthFullName;
        this.monthAbbreviation = monthAbbreviation;
        this.daysInMonth = daysInMonth;
        this.monthNumberFull = monthNumberFull;
        this.monthNumberIndex = monthNumberIndex;
        this.currentYear = currentYear;
        this.startDayOfWeek = startDayOfWeek;
        this.startDayOfWeekNum = startDayOfWeekNum;
        this.startDateOfMonth = startDateOfMonth;
    }
    MonthDataObj.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: String },
        { type: Number },
        { type: Date }
    ]; };
    return MonthDataObj;
}());

var InvoiceItem = /** @class */ (function () {
    function InvoiceItem(businessId, clientId) {
        this.businessId = businessId;
        this.clientId = clientId;
        this.active = true;
    }
    InvoiceItem.ctorParameters = function () { return [
        { type: Number },
        { type: Number }
    ]; };
    return InvoiceItem;
}());

var Invoice = /** @class */ (function () {
    function Invoice(businessId, client) {
        this.businessId = businessId;
        this.client = client;
        this.status = "OPEN";
    }
    Invoice.ctorParameters = function () { return [
        { type: Number },
        { type: Client }
    ]; };
    return Invoice;
}());

var PaymentDataMap = /** @class */ (function () {
    function PaymentDataMap() {
    }
    return PaymentDataMap;
}());



/***/ }),

/***/ "./src/app/common-classes/default-labels.model.ts":
/*!********************************************************!*\
  !*** ./src/app/common-classes/default-labels.model.ts ***!
  \********************************************************/
/*! exports provided: LabelMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LabelMap", function() { return LabelMap; });
/* harmony import */ var _app_objects_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");


var LabelMap = /** @class */ (function () {
    function LabelMap(configListLabels, titleCasePipe, cancelHrs, rescheduleHrs, waitListFirstAvailable) {
        this.configListLabels = configListLabels;
        this.titleCasePipe = titleCasePipe;
        this.cancelHrs = cancelHrs;
        this.rescheduleHrs = rescheduleHrs;
        this.waitListFirstAvailable = waitListFirstAvailable;
        this.errorLoadingLabel = "Error loading data. Please refresh the page and try again.";
        this.additionalGuestText = "Additional Guests";
        this.allDayLabel = 'All Day';
        // Below need to be translated still
        this.addToCalendarBtn = "Add to Calendar";
        this.addToCalendarGoogleLabel = "Google";
        this.addToCalendarAppleLabel = "Apple iCal";
        this.addToCalendarOutlookLabel = "Outlook Live";
        this.addToCalendarYahooLabel = "Yahoo";
        this.addToCalendarICSLabel = ".ics File";
        this.addToCalendarEventTitle = "[Appointment] %REASON% with %STAFF_FULLNAME%";
        this.addToCalendarEventLocation = "%LOCATION_NAME% %APPT_ADDRESS%";
        this.addToCalendarEventDescription = "Manage your appointment at %MANAGE_APPT_URL%";
        this.addToCartBtn = "Add to Cart";
        this.addToCartBtnSuccess = "Added to Cart!";
        //Above need to be translated still
        this.appointmentDetailText = "<dl class=\"row\"><dt class=\"col-3\"><strong>Id:</strong></dt>\n" +
            "<dd class=\"col-9\">%APPT_ID%</dd>\n" +
            "<dt class=\"col-3\"><strong>Date and Time:</strong></dt>\n" +
            "<dd class=\"col-9\">%APPT_CLIENT_START_DATE_TIME_FULL% %TIMEZONE_SHORT%</dd>\n" +
            "<dt class=\"col-3\"><strong>" + this.titleCasePipe.transform(this.configListLabels.reasonLabel) + ":</strong></dt>\n" +
            "<dd class=\"col-9\">%REASON%</dd>\n" +
            "<dt class=\"col-3\"><strong>" + this.titleCasePipe.transform(this.configListLabels.locationLabel) + ":</strong></dt>\n" +
            "<dd class=\"col-9\">%LOCATION_NAME%</dd>\n" +
            "<dt class=\"col-3\"><strong>" + this.titleCasePipe.transform(this.configListLabels.staffLabel) + ":</strong></dt>\n" +
            "<dd class=\"col-9\">%STAFF_FULLNAME%</dd>\n" +
            "</dl>";
        this.apptDetailTitle = "Appointment Detail";
        this.apptDetailPendingApptInfoMsg = "Your appointment is currently pending confirmation. You will be notified once a " + this.configListLabels.staffLabel + " has approved your appointment request.";
        this.apptDetailRescheduleConfirmMsg = "Success! Your appointment has been rescheduled.";
        this.modalCloseBtnLabel = "Close";
        this.apptCancelHourPlural = this.cancelHrs == 1 ? 'hour' : 'hours';
        // Below need to be translated still
        this.apptCancelNotInOpenStatusMsg = "You cannot cancel appointments that are in %APPT_STATUS% status.";
        //Above need to be translated still
        this.apptCancelPastTimeframeMsg = "You are past the allowed timeframe to cancel this appointment. Cancellations are allowed up to %ALLOWED_CANCEL_HOURS% " + this.apptCancelHourPlural + " before the appointment start time.";
        this.apptDoesNotBelongToAccountErrorMsg = "There was an error loading the details for this appointment. This appointment does not belong to this account.";
        this.apptDoesNotBelongToAccountErrorTitle = "Error Loading Appointment Details";
        this.apptMaxRescheduleCountErrorMsg = "You have reached the max number of allowed reschedulings for this appointment.";
        this.apptListErrorLoadingMsg = "Error loading appointment lists. Please try again later.";
        this.apptMaxRescheduleCountErrorTitle = "Rescheduling Not Allowed";
        this.apptRescheduleHourPlural = this.rescheduleHrs == 1 ? 'hour' : 'hours';
        // Below need to be translated still
        this.apptRescheduleNotAllowedByBusiness = "Rescheduling is not allowed by this business";
        this.apptRescheduleNotInOpenStatus = "This appointment is currently in %APPT_STATUS% status. You can only reschedule appointments that are in Open status.";
        //Above need to be translated still
        this.apptReschedulePastTimeframeMsg = "You are past the allowed timeframe to reschedule this appointment. Rescheduling is allowed up to %ALLOWED_RESCHEDULE_HOURS% " + this.apptRescheduleHourPlural + " before the appointment start time.";
        this.apptRescheduleNotAllowedTitle = "Reschedule Appointment";
        // appointmentFieldList: string = null;//NOT SURE IF USED
        this.authorizeCCBtnLabel = "Authorize Card";
        this.bookNewApptLabel = "Book a New Appointment";
        this.businessInfoText = '<p>Thanks for visiting our web scheduler to make an appointment with us! Click through the screens on the right to reserve a time to meet with <strong>%BUSINESS_NAME%</strong>. We look forward to servicing you soon!</p>\n' +
            '<h4>Additional Info:</h4>\n' +
            '<p>Managing your own appointments and need some help? Read the how-to guides on:</p>\n' +
            '<ul>   <li>Booking your <a target=\'_blank\' href="https://timetap.atlassian.net/wiki/display/TCB/Booking+your+first+appointment">first appointment</a></li>\n' +
            '   <li><a target=\'_blank\' href="https://timetap.atlassian.net/wiki/display/TCB/Registering+for+our+Scheduler">Registering</a> on our scheduler</li>\n' +
            '   <li><a target=\'_blank\' href="https://timetap.atlassian.net/wiki/display/TCB/Cancelling+an+Appointment">Cancelling</a> or <a href="https://timetap.atlassian.net/wiki/display/TCB/Rescheduling+an+Appointment">Rescheduling</a> an appointment</li>\n' +
            '</ul><p></p>';
        this.buttonSpacerString = "&nbsp;";
        // Below need to be translated still
        this.calendarId = "Appointment ID";
        //Above need to be translated still
        this.cancelApptErrorMsg = "There was an error cancelling your appointment. Please refresh the page and try again.";
        this.cancelApptNoReasonEnteredErrorMsg = "No reason entered. You must enter a reason to cancel your appointment.";
        this.cancelBtnLabel = "Cancel";
        this.cancelAppointmentModalTitle = "Cancel Appointment";
        this.cancelAppointmentModalDescription = "Please enter a reason below for why you want to cancel this appointment:";
        this.cancelModalReasonTitle = "Cancellation Reason:";
        // Below need to be translated still
        this.cancelNotAllowedClientOnHold = "Your " + this.configListLabels.clientLabel + " account status is currently on hold and does not allow you to cancel your own appointments. To cancel appointments, please contact the business.";
        //Above need to be translated still
        this.cancelledApptBtnLabel = "Cancelled";
        this.cancelledApptTitle = "Cancelled Appointments";
        // Below need to be translated still
        this.cancelRepeatingAppointmentModalTitle = "Cancel Repeating Appointment";
        this.cancelRepeatingAppointmentModalDescription = "By cancelling this repeating appointment, you will be cancelling any remaining open appointments and prevent this repeating appointment series from adding any more appointments in the future. Please enter a reason below for why you want to cancel:";
        this.cancelRepeatingAppointmentErrorMsg = "There was an error cancelling your repeating appointment. Please refresh the page and try again.";
        this.cancelRepeatingAppointmentNoReasonEnteredErrorMsg = "No reason entered. You must enter a reason to cancel your repeating appointment.";
        this.cancelWaitlistRegistrationModalTitle = "Cancel Wait List Registration";
        this.cancelWaitlistRegistrationModalDescription = "By cancelling this wait list registration you are removing yourself from being notified when timeslots open up that meet this wait list criteria. Please enter a reason below for why you want to cancel:";
        this.cancelWaitlistRegistrationErrorMsg = "There was an error cancelling your wait list registration. Please refresh the page and try again.";
        this.cancelWaitlistRegistrationNoReasonEnteredErrorMsg = "No reason entered. You must enter a reason to cancel your wait list registration";
        this.cartApplyDiscountLabel = "Apply Discount";
        this.cartCheckoutBtn = "Continue To Checkout";
        this.cartDiscountsLabel = "Discounts:";
        this.cartEmptyMsg = "You have no items in your cart.";
        this.cartEmptyShopLinkLabel = "Shop Our Store";
        this.cartCouponCodeReasonSpecific = "The coupon you entered is not valid for the items in your cart.";
        this.cartQuantityLabel = "Quantity";
        this.cartRemoveLabel = "Remove";
        this.cartSubtotalLabel = "Subtotal:";
        this.cartSummaryTitle = "Order Summary";
        this.cartTaxLabel = "Tax:";
        this.cartTotalLabel = "Total:";
        this.cartTriggerLoginMsg = "In order to complete the checkout process, please login to your account below.";
        //Above need to be translated still
        this.clientBlacklistError = "The email address you have entered has been put on our list of blocked " + this.configListLabels.clientLabelPlural + ". At this time, you cannot create an appointment with our office. Thank you";
        this.clientCancelTimeframeError = "You are outside of the allowed timeframe to cancel this appointment"; //NOT SURE IF USED
        this.clientConfirmedApptMsg = "Thanks! You are confirmed for your appointment!";
        this.clientProfileTitle = '%CLIENT_FULLNAME% Profile';
        // Below need to be translated still
        this.clientApptCannotBeConfirmedMsg = "Sorry, appointments that are in %APPT_STATUS% status cannot be confirmed.";
        this.clientOnHoldError = "Your " + this.titleCasePipe.transform(this.configListLabels.clientLabel) + " account is currently on hold. Please contact the business directly to book an appointment.";
        this.clientProfileAddNewClientLabel = "Add Connected " + this.titleCasePipe.transform(this.configListLabels.clientLabel);
        this.clientProfileNoFormsMsg = 'There are no forms assigned to you that you need to fill out.';
        this.clientProfileViewFormsBtn = '<i class=\"fas fa-search\"></i>';
        this.clientProfileHomeFormsToFillOutText = "<i class=\"fas fa-exclamation-triangle\"></i> You have forms that need to get filled out! Please click through the form links below:";
        //Above need to be translated still
        this.clientDetailsCancelEditBtnLabel = 'Cancel Edits';
        this.clientDetailsEditBtnLabel = 'Edit';
        this.clientDetailsSaveEditBtnLabel = 'Save Changes';
        // Below need to be translated still
        this.clientInfoFieldsInvalid = "We could not save your appointment because the following %INVALID_FIELD_COUNT% fields have errors:";
        this.clientInfoFieldsInvalidTitle = "Error saving appointment";
        this.clientPackageNoApptsMsg = "No appointments have been redeemed with this package.";
        this.clientPaymentsAddCardTitle = "Add New Card";
        this.clientPaymentsAddCardBtn = "Add Card";
        this.clientPaymentsAddingCardBtn = "Adding Card...";
        this.clientPaymentsAddCardToConfirmAppointmentDescription = "In order to complete your booking, you must first add a card on file. Please fill out your card details below to confirm your booking.";
        this.clientPaymentsDeleteBtn = "<i class='fas fa-trash'></i>";
        this.clientPaymentsDeleteDescription = "Please confirm that you want to remove your %CREDIT_CARD_BRAND% card ending in %CREDIT_CARD_LAST4% from your list of payments.";
        this.clientPaymentsDeleteErrorMsg = "There was an error deleting your card. Please try again.";
        this.clientPaymentsNoCardsOnFile = "There are no stored cards on file.";
        this.clientStartTimeDate = 'Date & Time';
        //Above need to be translated still
        this.completedApptBtnLabel = "Completed";
        this.completedApptTitle = "Completed Appointments";
        // Below need to be translated still
        this.confirmEmailMismatchError = "Email addresses do not match!";
        this.cookiesBannerText = "For continuous improvement of user experience this website uses  cookies for collecting your IP address and individual statistics.";
        //Above need to be translated still
        this.courseSessionsLabel = "Sessions";
        this.defaultSMSRemindValue = "false";
        // Below need to be translated still
        this.disclaimerFormConfirmationMessage = "<p style='text-align: center;'><strong>You have some forms that need to be filled out:</strong></p><div style='text-align: center'>%FORM_LINK_LIST%</div>";
        this.disclaimerFormErrorLoading = "We could not find a form for you to fill out at this link. Please check your link and try again.";
        this.disclaimerFormErrorSubmitting = "We could not submit your form at this time. Please try again.";
        this.disclaimerFormLink = "%FORM_NAME%";
        this.disclaimerFormSubmitBtn = "Submit";
        this.disclaimerSuccessMsg = "<strong>Thanks for submitting the %FORM_NAME%!</strong> We've successfully received your form.";
        this.disclaimerFormFieldsInvalid = "We could not save your form because the following %INVALID_FIELD_COUNT% fields have errors:";
        this.disclaimerFormFieldsInvalidTitle = "Error saving form";
        this.emailSettingsNoCategoriesMsg = 'There are no email templates enabled for you to change your subscription for.';
        this.endDateNullLabel = 'No date set';
        this.errorReschedulingAppointment = "There was an error rescheduling your appointment. Please refresh your page and try again.";
        //Above need to be translated still
        this.errorSavingAllAppointmentsDblBooked = "<div style='text-align:center;'>Unfortunately, all the appointment dates and times you selected have recently been reserved by someone else. Please click back to choose a different dates and times.</div>";
        this.errorSavingAppointment = "<div style='text-align:center;'>There was an error saving your appointment. Please refresh your page and try again.</div>";
        this.errorSavingAppointmentAddCard = "<div style='text-align:center;'>In order to complete your booking, you must have a card on file. Please click save and add a card when prompted to complete your booking.</div>";
        this.errorSavingAppointmentDblBooked = "<div style='text-align:center;'>Unfortunately, the appointment date and time you've selected has recently been reserved by someone else. Please click back to choose a different date and time.</div>";
        this.errorSavingAppointmentClassMaxCapacity = "<div style='text-align:center;'>Unfortunately, the date and time you've selected has reached its max capacity. Please click back to choose a different date and time.</div>";
        this.errorSavingAppointmentTimeOut = "<div style='text-align:center;'>We are still processing your appointment request. You should receive an email notification in the next 10-15 minutes confirming your request. If you do not, please try booking again. </div>";
        this.errorSavingClassApptAlreadyEnrolled = "You are already enrolled in this " + this.configListLabels.classLabel + " session. You cannot enroll in a " + this.configListLabels.classLabel + " session more than once.";
        this.fileUploadBtnChooseFile = "Choose File";
        this.fileUploadBtnUploadingFile = "Uploading File";
        this.fileUploadBtnUploadedFile = "File Uploaded!";
        this.fileUploadErrorMsg = "Error uploading file. Please try again.";
        this.filterButton = "Search";
        this.filterLabel = "Filter by zip code";
        this.genericErrorMsg = "Error loading data.";
        this.headerNavLogin = 'Login';
        this.headerNavMyAccount = 'My Account';
        this.headerNavRegister = 'Register';
        this.headerNavScheduler = 'Book Appointment';
        this.headerNavStore = 'Packages';
        this.headerNavWaitList = 'Join Wait List';
        this.headerText = '%BUSINESS_NAME%';
        this.hourLabel = 'Hour';
        this.hoursLabel = 'Hours';
        this.infoPnlBookingSummary = "Booking %REASON% on %APPT_CLIENT_START_DATE_TIME_MEDIUM%";
        this.infoBookingSummaryWaitList = "Joining wait list for %REASON% on %WAITLIST_DATE_LIST%";
        this.infoPnlNameLabel = "Booking For:";
        this.infoPnlSendTextCBLabel = 'Send Text Message Reminder:';
        this.infoPnlSendTextCBLabelWaitList = 'Send Text Message Notification:';
        this.infoPnlSendTextHrsCBLabel = "Choose when you'd like to receive the text";
        this.infoPnlSendTextD1Hr = '1 Hr in advance';
        this.infoPnlSendTextD2Hr = '2 Hrs in advance';
        this.infoPnlSendTextD4Hr = '4 Hrs in advance';
        this.infoPnlSendTextD12Hr = '12 Hrs in advance';
        this.infoPnlSendTextD24Hr = '24 Hrs in advance';
        this.infoTitle = "Your Information";
        this.invitationCampaignErrorNoInvitationTitle = "Need Invitation";
        this.invitationCampaignErrorNoInvitationMsg = "This scheduler requires an invitation to book. Please request an invitation from the business.";
        this.invitationCampaignErrorInvitationCompletedTitle = "Invitation Already Completed";
        this.invitationCampaignErrorInvitationCompletedMsg = "You have already booked through this invitation. Please request another invitation from the business to book again.";
        this.invitationCampaignErrorInvitationExpiredTitle = "Invitation Expired";
        this.expiredInvitationText = "Your invitation to book with this business has expired.";
        this.invoiceConnectingWithPaymentPortal = "Connecting to Payment Portal...";
        this.invoiceCreditCardChargeLabel = "Pay %INVOICE_PAYMENT_AMOUNT%";
        this.invoiceCreditCardChargeFailedLabel = "We were unable to charge your card at this time. Please try again. If you continue to experience issues, please contact us.";
        this.invoiceCreditCardChargingLabel = "Submitting payment...";
        this.invoiceCreditCardAuthorizeLabel = "Authorize for %INVOICE_PAYMENT_AMOUNT%";
        this.invoiceCreditCardAuthorizeFailedLabel = "We were unable to authorize your card at this time. Please try again. If you continue to experience issues, please contact us.";
        this.invoiceCreditCardAuthorizingLabel = "Authorizing card...";
        this.invoiceCreditCardSavePayment = "Save card for future payments";
        this.invoiceDateIssuedLabel = "Date Issued:";
        this.invoiceDetailTitle = "Invoice Detail";
        this.invoiceIdLabel = "Invoice Id:";
        this.invoiceItemsSelectPackage = "Redeem with Package";
        this.invoiceItemsTableHeader = "Invoice Items:";
        this.invoiceDownloadBtnLabel = "Download";
        this.invoiceListErrorLoadingMsg = "Error loading invoice lists. Please try again later.";
        this.invoicePayBtnLabel = "Pay Now";
        this.invoiceQuoteDetailTitle = "Quote Detail";
        this.invoiceSubTotalLabel = "Sub Total";
        this.invoiceTransactionFeeLabel = "Transaction Fee";
        this.invoiceTaxLabel = "Tax";
        this.invoiceEnterPaymentTitle = "Enter Card Information";
        this.invoiceTotalLabel = "Invoice Total";
        this.invoicePaidToDateLabel = "Paid To Date:";
        this.invoiceBalanceLabel = "Balance:";
        this.invoiceDepositAmountLabel = "Amount Due:";
        this.invoiceStatusLabel = "Status:";
        this.invoicesOpenListTitle = "Open Invoices";
        this.invoicesOpenBtnLabel = "Open";
        this.invoicesNoOpenMsg = "No open invoices found";
        this.invoicesClosedListTitle = "Closed Invoices";
        this.invoicesClosedBtnLabel = "Closed";
        this.invoicesNoClosedMsg = "No closed invoices found";
        this.invoicesVoidedListTitle = "Voided Invoices";
        this.invoicesVoidedBtnLabel = "Voided";
        this.invoicesNoVoidedMsg = "No voided invoices found";
        this.invoicesViewDetailBtnLabel = "<i class=\"fas fa-search\"></i>";
        // Below need to be translated still
        this.joinWaitListDescription = "Select what you'd like to join the wait list for below and then enter the dates and times you'd like to sign up for.";
        this.joinWaitListBtnSpecificTimes = "Join Wait List";
        this.joinWaitListBtnFirstAvailable = "Join Wait List for First Available";
        this.joinWaitListNoReasonMsg = 'There are no wait listable reasons configured for scheduling on this booking site.';
        //Above need to be translated still
        this.labelBack = "Back";
        this.labelBookAnother = "Book Another Appointment";
        this.labelNext = "Next";
        this.labelNoPreference = "* No Preference *";
        this.labelSave = "Save";
        // Below need to be translated still
        this.loadingMsgGeneric = "Loading...";
        this.loadingMsgAppts = "Loading Appointments...";
        //Above need to be translated still
        this.location = this.titleCasePipe.transform(this.configListLabels.locationLabel);
        this["location.locationName"] = this.titleCasePipe.transform(this.configListLabels.locationLabel); //Used for mapping column header on appt list
        this.locationGroupTitle = this.titleCasePipe.transform(this.configListLabels.locationGroupLabel);
        this.locationGroupPnlErrorLoading = this.errorLoadingLabel;
        this.locationGroupPnlNoObjectsMsg = "There are no " + this.configListLabels.locationGroupLabelPlural + " available for booking at this time";
        this.locationSuperGroupTitle = this.titleCasePipe.transform(this.configListLabels.locationSuperGroupLabel);
        this.locationSuperGroupPnlErrorLoading = this.errorLoadingLabel;
        this.locationSuperGroupPnlNoObjectsMsg = "There are no " + this.configListLabels.locationSuperGroupLabelPlural + "available for booking at this time";
        this.locationPnlErrorLoading = this.errorLoadingLabel;
        this.locationPnlNoLocationsFilterSearchMsg = "No " + this.configListLabels.locationLabelPlural + " found with search '%FILTER_SEARCH%'";
        this.locationPnlMapInfoWindowContent = "<strong>%LOCATION_NAME%</strong><br/> %LOCATION_ADDRESS%";
        this.locationPnlVariableAddressInitialDescription = "Type in the address for your appointment below. Once you have finished, please hit the validate button to complete lookup.";
        this.locationPnlVariableAddressInputLabel = "Address";
        this.locationPnlVariableAddressMatchingAddressesTitle = "Matching Addresses:";
        this.locationPnlVariableAddressMatchingAddressesDescription = "Below is a list of addresses that match the address you typed in. Please click the confirm button next to the address that best represents yours:";
        this.locationPnlVariableAddressTitle = "Enter Address";
        this.locationPnlVariableAddressValidateBtn = "Validate Address";
        this.locationPnlVariableAddressConfirmBtn = "Confirm Address";
        this.locationTitle = this.titleCasePipe.transform(this.configListLabels.locationLabel);
        this.locationNoAvailError = "There are no " + this.configListLabels.locationLabelPlural + " available for booking at this time";
        this.loginErrorMsg = "There was an error logging you in. Please check your email address and password and try again.";
        this.loginTitle = "Login";
        this.loginForgotPwd = "Forgot Password?";
        this.loginBtnLabel = "Login";
        this.loginBtnLabelLoggingIn = "Logging in...";
        this.loggedInWelcomeText = "<div style='text-align: center; font-size: large;'><p>Now that you've logged into our scheduler, you can:</p><p style='margin-bottom: 5px;'>&bull; Schedule a new appointment</p><p>&bull; View and manage past and future appointments</p><p>Select a button below to get started:</p></div>";
        this.loggedInWelcomeTitle = 'Welcome, %CLIENT_FIRSTNAME%!';
        this.loginModalEmailLabel = 'Your email';
        this.loginModalPasswordLabel = 'Your password';
        this.logoutLabel = "Logout";
        this.maxApptsReachedModalErrorMsg = "You are only allowed to have %MAX_ACTIVE_APPTS% open appointments at a time and you have reached that limit. You must first cancel an existing appointment before being allowed to book any new appointments.";
        this.maxApptsReachedModalErrorTitle = "Max Appointments Reached";
        this.maxApptsReachedBookingErrorMsg = "You've selected to book for %CLIENT_FULLNAME% but they have already reached their max number of bookings allowed. " + this.maxApptsReachedModalErrorMsg;
        this.maxApptsReachedBookingMultipleErrorMsg = "This scheduler only allows for %MAX_ACTIVE_APPTS% upcoming appointments to be scheduled at any given time. You've selected to book %TIME_CART_COUNT% appointments for %CLIENT_FULLNAME%. %CLIENT_FULLNAME% already has %CLIENT_ACTIVE_APPT_COUNT% active appointments and booking %TIME_CART_COUNT% would put them over the maximum allowed of %MAX_ACTIVE_APPTS%. Please go back to the time page and remove %APPT_COUNT_TO_REMOVE% appointments from your time cart.";
        this.metaDescription = 'Schedule an appointment online, book online';
        this.minuteLabel = 'Minute';
        this.minutesLabel = 'Minutes';
        // Below need to be translated still
        this.monthLabel = "Month";
        this.monthsLabel = "Months";
        //Above need to be translated still
        this.myAccountMyProfileBtnLabel = "My Profile";
        this.noAppointmentText = "All appointment times are currently reserved. Please check back again later.";
        this.noStaffError = "There is currently no availability for you to make an appointment through this scheduler. Please check back again later.";
        // Below need to be translated still
        this.noApptsMsg = "No appointments found";
        //Above need to be translated still
        this.noCancelledApptsMsg = "No cancelled appointments found";
        this.noCompletedApptsMsg = "No completed appointments found";
        this.noNoShowApptsMsg = "No no show appointments found";
        this.noOpenApptsMsg = "No open appointments found";
        this.noshowApptBtnLabel = "No Show";
        this.noshowApptTitle = "No Show Appointments";
        this.openApptTitle = "Open Appointments";
        this.pageTitle = '%BUSINESS_NAME%';
        this.passwordFieldLabel = "Set Your Password";
        this.payNowButtonLabel = 'Pay Now';
        this.policyText = '<h4>Policies &amp; Procedures</h4><p>Cancellations are allowed up to 24 hours before the appointment start time.</p>';
        this.promptPayWithPackageTitle = "Would You Like to Use Your Package?";
        this.promptPayWithPackageDesc = "Items on your invoice can be paid for with one of your packages. If you'd like to use your package against one of your invoice line items, please click the pay with package button below. Otherwise, please click the button to pay by card.";
        this.promptPayWithPackageBtn = "Pay With Package";
        this.promptPayWithPackageCreditCardBtn = "Pay With Card";
        // Below need to be translated still
        this.packagesAppointmentsLabel = 'Appointments';
        this.packagesErrorLoading = 'There was an error loading packages. Please refresh your page and try again. If you continue to experience issues, please contact support.';
        this.packagesExpiresAfterLabel = 'Expires After:';
        this.packagesExpiresAfterDaysLabel = 'Days';
        this.packagesIncludedReasonsTitle = 'Included ' + this.titleCasePipe.transform(this.configListLabels.reasonLabelPlural) + ':';
        this.packagesLoadingMsg = "Loading packages...";
        this.packagesNoExpirationLabel = '<em>No expiration date</em>';
        //Above need to be translated still
        this.poweredByTimeTap = "Powered by <a href='https://www.timetap.com' target='_blank'>TimeTap.com";
        //Below need to be translated still
        this.printBtnLabel = "Print";
        //Above need to be translated still
        this.quotaFullMsg = "The selected reason for your appointment has reached its maximum quota for the booking timeframe";
        this.reason = this.titleCasePipe.transform(this.configListLabels.reasonLabel);
        this["reason.reasonDesc"] = this.titleCasePipe.transform(this.configListLabels.reasonLabel); //Used for mapping column header on appt list
        this.reasonPnlNoReasonsMsg = "No " + this.configListLabels.serviceLabelPlural + " or " + this.configListLabels.classLabelPlural + " are available for booking at this time.";
        this.repeatingApptDateList = "<b>%APPT_DATE_TIME%:</b> %STAFF_FULLNAME% at %LOCATION_NAME%";
        this.addOnReasonListItemLabelSimple = '%REASON%';
        this.addOnReasonListItemLabelPrice = '%REASON% - %REASON_PRICE%';
        this.addOnReasonListItemLabelDesc = '%REASON% - %REASON_DESCRIPTION%';
        this.addOnReasonListItemLabelInstructions = '%REASON% - %REASON_INSTRUCTIONS%';
        this.addOnReasonListItemLabelInstructions2 = '%REASON% - %REASON_INSTRUCTIONS2%';
        this.addOnReasonListItemLabelPriceDesc = '%REASON% - %REASON_PRICE% - %REASON_DESCRIPTION%';
        this.addOnReasonListItemLabelPriceInstructions = '%REASON% - %REASON_PRICE% - %REASON_INSTRUCTIONS%';
        this.addOnReasonListItemLabelPriceInstructions2 = '%REASON% - %REASON_PRICE% - %REASON_INSTRUCTIONS2%';
        // Below need to be translated still
        this.repeatingApptFilterModalApplyFiltersBtn = "Apply Filters";
        this.repeatingApptFilterModalStartDateLabel = "Starting as soon as:";
        this.repeatingApptFilterModalWeekdaysLabel = "Best Days of the Week:";
        this.repeatingApptFilterModalWeekdaysNeedToSelect = "Please select the best days of the week for you.";
        this.repeatingApptFilterModalDescription = "Please select what days and times would work best for your %REASON_REPEATING_OPTION_SESSION_COUNT% sessions of %REASON% and we will show the best matching available times and dates:";
        this.repeatingApptFilterModalTitle = "Repeating Appointment Filters";
        this.registerAnotherWaitList = "Register For Another Wait List";
        //Above need to be translated still
        this.registerDescription = "First, please enter your email and we'll check if you've made appointments here in the past. If so we'll send you a password reset email ";
        this.registerDescriptionClientFound = "Looks like you've been here before! We've sent you an email to set a password for the scheduler. Once you've done that, come back here to login.";
        this.registerTitle = "Register";
        this.registerButtonCheckEmail = "Check Email";
        this.registerDescriptionClientNotFound = "We couldn't find your email address %CLIENT_EMAILADDRESS% in our records. Please fill out the fields below to register for our scheduler:";
        this.registerDescriptionClientNotFoundPreRegisteredOnly = "We couldn't find your email address %CLIENT_EMAILADDRESS% in our records. Please contact the business to get registered for the scheduler.";
        // Below need to be translated still
        this.registerConnectClientTitle = "Add a Connected " + this.titleCasePipe.transform(this.configListLabels.clientLabel);
        this.registerDescriptionConnectClient = "Please enter the details of the " + this.configListLabels.clientLabel + " you would like to connect to your account:";
        this.registerButtonConnectClient = "Add & Connect " + this.titleCasePipe.transform(this.configListLabels.clientLabel);
        //Above need to be translated still
        this.registerErrorMsg = "There was an error submitting your registration. Please try again.";
        this.registerForgotPwdEnterEmailPlaceholder = 'Your email';
        this.registerButtonRegister = "Register";
        this.registerLoginErrorMsg = "We've successfully registered you for the scheduler, but there was an error logging you in. Please refresh the page and click the login button to try again.";
        //Below need to be translated still
        this.repeatingApptBtnLabel = "Repeating";
        this.repeatingApptDetailTitle = "Repeating Appointment Detail";
        this.repeatingApptTitle = "Repeating Appointments";
        this.noRepeatingApptsMsg = "No repeating appointments found";
        this.repeatingApptDetailEndDateLabel = "End Date:";
        this.repeatingApptDetailIdLabel = "Id:";
        this.repeatingApptDetailDaysRepeatsLabel = "Repeats every %REPEAT_FREQUENCY% %REPEAT_PERIOD% on:";
        this.repeatingApptDetailStartDateLabel = "Start Date:";
        //Above need to be translated still
        this.requiredFieldsEmptyMsg = "Please fill all the required fields. Scroll down if necessary.";
        // Below need to be translated still
        this.rescheduleNotAllowedClientOnHold = "Your " + this.configListLabels.clientLabel + " account status is currently on hold and does not allow you to reschedule your own appointments. To reschedule appointments, please contact the business.";
        //Above need to be translated still
        this.rescheduleBtnLabel = "Reschedule";
        this.resetPwdEmailSent = "We've sent an email with a link to reset your password to %CLIENT_EMAILADDRESS%. Please check your email, reset your password, and then return here to login.";
        this.resetPwdTitle = "Reset Password";
        this.resetPwdButtonLabel = "Reset Password";
        this.resetPwdDescription = "Please enter your email address below and click the " + this.resetPwdButtonLabel + " button below.";
        this.resetPwdDescriptionEnteringNewPasswords = "Please enter the new password you'd like to use to login to the scheduler below.";
        this.resetPwdRequestExpired = "This password reset request is no longer active. To generate another link to reset your password, click the button below.";
        this.resetPwdErrorPasswordsMismatched = "Passwords do not match. Please check your passwords.";
        this.resetPwdEnterPasswordPlaceholder = 'Enter new password';
        this.resetPwdEnterPasswordErrorMsg = 'Must enter new password';
        this.resetPwdConfirmPasswordPlaceholder = 'Confirm new password';
        this.resetPwdConfirmPasswordErrorMsg = 'Please check passwords match';
        this.resetPwdRequestError = "There was an error resetting your password. Please try again.";
        this.resetPwdResendRequestButtonLabel = "Resend Reset Password Request";
        this.resetPwdSuccessMsg = "Your password has been reset! You can now login with your email address and your new password.";
        this.selectAddOnsTitle = "Add Ons For Your Appointment";
        this.selectAddOnsDescription = "Below is a list of add ons that you can choose to include with your appointment for %REASON%. Please select any you'd like to add:";
        this.selectAddOnsAddAddOnsBtn = "Add Selected Add Ons";
        this.selectAddOnsDeclineAddOnsBtn = "Do Not Add Any Add Ons";
        // Below need to be translated still
        this.selectPackageTitle = "Select Package";
        this.selectPackageDescription = "Please select which of your packages you would like to use to redeem this appointment with:";
        this.selectPackageDropdownDescription = "%PACKAGE_NAME% (%PACKAGE_USED_QUANTITY% Used, %PACKAGE_REMAINING_QUANTITY% Remaining)";
        this.selectPackageBtn = "Select Package";
        this.selectPackageConfirmTitle = "Confirm Selected Package";
        this.selectPackageConfirmDescription = "You have selected to apply the following package to the line item %INVOICE_ITEM_DESCRIPTION%: <br/><br/><strong>" + this.selectPackageDropdownDescription + "</strong><br/><br/> Once you apply the package, it cannot be removed unless you contact the business. Please confirm this is the right package you wish to apply.";
        this.selectPackageConfirmBtn = "Confirm";
        this.selectPackageSelectDiffPackageBtn = "Select Different Package";
        this.selectPayAmountTitle = "Select Payment Amount";
        this.selectPayAmountDesc = "The required amount due is %INVOICE_PAYMENT_AMOUNT%, but you can choose to pay the full amount of the invoice by selecting that option below:";
        this.selectPayAmountDueBtn = "Pay amount due:<br/>%INVOICE_PAYMENT_AMOUNT%";
        this.selectPayAmountBalanceBtn = "Pay remaining balance:<br/>%INVOICE_BALANCE_AMOUNT%";
        // Above need to be translated still
        this.serviceGroupTitle = this.titleCasePipe.transform(this.configListLabels.reasonGroupLabel);
        this.serviceGroupPnlErrorLoading = this.errorLoadingLabel;
        this.serviceGroupPnlNoObjectsMsg = "There are no " + this.configListLabels.reasonGroupLabel + " available for booking at this time";
        this.serviceSuperGroupTitle = "Reason Super Group";
        this.serviceSuperGroupPnlErrorLoading = this.errorLoadingLabel;
        this.serviceSuperGroupPnlNoObjectsMsg = "There are no reason super groups available for booking at this time";
        this.serviceTitle = this.titleCasePipe.transform(this.configListLabels.serviceLabel);
        this.servicePnlCouponButton = "Apply";
        this.servicePnlCouponErrorNoCode = "No coupon code entered. Please enter a code and retry.";
        this.servicePnlCouponErrorNoCouponFound = "No coupon found for coupon code: '%COUPON_CODE%'. Please check the spelling and retry.";
        this.servicePnlCouponErrorExpired = "Coupon code '%COUPON_CODE%' expired on %COUPON_ENDDATE%.";
        this.servicePnlCouponErrorMaxUseReached = "Coupon code '%COUPON_CODE%' has already reached its max use count of %COUPON_MAX_USE_COUNT%.";
        this.servicePnlCouponErrorNoReasonsDiscounted = "Coupon code '%COUPON_CODE%' does not apply to any of the appointment reasons shown.";
        this.servicePnlCouponSuccess = "Success! The coupon code '%COUPON_CODE%' has been applied to %COUPON_APPLIED_REASON_COUNT% reasons below.";
        this.servicePnlCouponLabel = "Enter Coupon Code";
        this.servicePnlErrorLoading = this.errorLoadingLabel;
        this.servicePnlNoObjectsMsg = "There are no " + this.configListLabels.serviceLabelPlural + " or " + this.configListLabels.classLabelPlural + " available for booking at this time";
        this.staff = this.titleCasePipe.transform(this.configListLabels.staffLabel);
        this["staff.fullName"] = this.titleCasePipe.transform(this.configListLabels.staffLabel); //Used for mapping column header on appt list
        this.staffGroupTitle = this.titleCasePipe.transform(this.configListLabels.staffLabel) + " Group";
        this.staffTitle = this.titleCasePipe.transform(this.configListLabels.staffLabel);
        this.staffPnlErrorLoading = this.errorLoadingLabel;
        this.staffPnlNoObjectsMsg = "There are no staff available for booking at this time";
        this.staffPnlNoStaffFilterSearchMsg = "No staff found with search '%FILTER_SEARCH%'";
        // Below need to be translated still
        this.statusLabel = "Status:";
        this.staffStartTimeDate = this.titleCasePipe.transform(this.configListLabels.staffLabel) + ' Start Date & Time';
        this.staffEndTimeDate = this.titleCasePipe.transform(this.configListLabels.staffLabel) + ' End Date & Time';
        // Above need to be translated still
        this.switchToRegisterLink = "Register Now";
        this.switchToRegisterText = "Need an account?";
        this.thanksCourses = "<p style='text-align: center;'><strong>Your registration for %REASON% is successful</strong><br/> <br />" + this.titleCasePipe.transform(this.configListLabels.staffLabel) + ": %STAFF_FULLNAME%<br />Set: %SET_NAME%<br /> <br />" + this.titleCasePipe.transform(this.configListLabels.locationLabel) + ": %LOCATION_NAME%<br />%LOCATION_ADDRESS%</p>";
        this.thanksInfo = "<p style='text-align: center;'><strong>Your appointment has been scheduled!</strong><br> <br>" + this.titleCasePipe.transform(this.configListLabels.staffLabel) + ": %STAFF_FULLNAME%<br>Time: %APPT_DATE_TIME%<br>" + this.titleCasePipe.transform(this.configListLabels.serviceLabel) + ": %REASON%<br> <BR>" + this.titleCasePipe.transform(this.configListLabels.locationLabel) + ":  %LOCATION_NAME%<br>%LOCATION_ADDRESS%<br></p>";
        this.thanksInfoRepeating = "<p style='text-align: center;'><strong>Your appointments for %REASON% have been scheduled!</strong></p><div style='text-align: center'>%REPEATING_APPT_DATE_LIST%</div>";
        this.thanksInfoRepeatingApptsNotSaved = "<p style='text-align: center'><strong>Unfortunately, these times were booked by someone else and were not reserved:</strong></p><br><div style='text-align: center'>%REPEATING_APPT_DATE_LIST%</div>";
        this.thanksPnlErrorLoading = this.errorLoadingLabel;
        this.thanksInfoConfirm = "Your appointment is awaiting " + this.configListLabels.staffLabel + " confirmation. You will receive an email shortly to let you know whether the " + this.configListLabels.staffLabel + " person has confirmed or declined your appointment request.";
        this.thanksInfoConfirmRepeating = "Your appointments are awaiting " + this.configListLabels.staffLabel + " confirmation. You will receive an email shortly to let you know whether the " + this.configListLabels.staffLabel + " person has confirmed or declined your appointment requests.";
        this.thanksConfirmPnlErrorLoading = this.errorLoadingLabel;
        this.thanksInfoPayment = "<p style='text-align: center;'><strong>Your appointment is scheduled. Go ahead and submit payment now or wait until your appointment time.</strong><br /> <br />If you would like to go ahead and submit payment, please click the button below:<br />%PAYMENT_BUTTON%</p>";
        this.thanksInfoPaymentRepeating = "<p style='text-align: center;'><strong>Your appointments are scheduled. Go ahead and submit payment now or wait until your first appointment.</strong><br /> <br />If you would like to go ahead and submit payment, please click the button below:<br />%PAYMENT_BUTTON%</p>";
        this.thanksInfoPaymentAuthOnly = "<p style='text-align: center;'><strong>Please enter your credit card details using the button below to confirm your appointment.</strong><br /> <br />By clicking on the payment button below you will be prompted to enter your credit card information but no money will be drafted from your card at this time. This is just required in order to hold your appointment.<br />%PAYMENT_BUTTON%</p>";
        this.thanksInfoPaymentAuthOnlyRepeating = "<p style='text-align: center;'><strong>Please enter your credit card details using the button below to confirm your appointments.</strong><br /> <br />By clicking on the payment button below you will be prompted to enter your credit card information but no money will be drafted from your card at this time. This is just required in order to hold your appointments.<br />%PAYMENT_BUTTON%</p>";
        this.thanksInfoPaymentRequired = "<p style='text-align: center;'><strong>Your appointment is not yet scheduled.</strong><br /> <br />Please click on the button below to make payment. Failure to do that will result in cancellation of your appointment.<br />%PAYMENT_BUTTON%</p>";
        this.thanksInfoPaymentRequiredRepeating = "<p style='text-align: center;'><strong>Your appointments are not yet scheduled.</strong><br /> <br />Please click on the button below to make payment for your appointments. Failure to do that will result in cancellations of your appointments.<br />%PAYMENT_BUTTON%</p>";
        this.thanksInfoPaymentStaffConfirmationRequired = "<p style='text-align: center;'>Your appointment is pending approval. Go ahead and submit payment now or wait until your appointment time.<br> <br> If you would like to go ahead and submit payment, please click the button below:<br />%PAYMENT_BUTTON%</p>";
        this.thanksInfoPaymentStaffConfirmationRequiredRepeating = "<p style='text-align: center;'>Your appointments are pending approval. Go ahead and submit payment now or wait until your appointment times.<br> <br> If you would like to go ahead and submit payment, please click the button below:<br />%PAYMENT_BUTTON%</p>";
        this.thanksInfoPaymentRequiredStaffConfirmationRequired = "<p style='text-align: center;'>Please click on the button below to make payment. Failure to do that will result in cancellation of your appointment request.<br />%PAYMENT_BUTTON%</p>";
        this.thanksInfoPaymentRequiredStaffConfirmationRequiredRepeating = "<p style='text-align: center;'>Please click on the button below to make payment. Failure to do that will result in cancellation of your appointment requests.<br />%PAYMENT_BUTTON%</p>";
        this.thanksPaymentTitle = "Pay Now Or Later";
        this.thanksPaymentTitleAuthOnly = "Authorize Your Card";
        this.thanksPaymentTitleRequired = "Pay Now";
        this.thanksInfoPaymentStaffConfirmationRequiredTitle = "Your appointment request is pending approval";
        this.thanksInfoPaymentRequiredStaffConfirmationRequiredTitle = "Pay Now";
        this.thanksTitle = "Thank You!";
        this.thanksWaitListTitle = "You are on the Wait List";
        this.timePnlBookingSummary = "Booking %REASON% with %STAFF_FULLNAME% at %LOCATION_NAME%";
        this.timePnlCalendarLabel = "Select Date:";
        this.timePnlCartBookingTimesListTitle = "Selected Dates & Times for Booking:";
        this.timePnlCartCloseBtnLabel = "Close";
        this.timePnlCartDescription = "Below are all the times you've selected. If you no longer want to book one of the selected times, click the button to remove it.";
        this.timePnlCartNoTimesSelected = "There are currently no times selected. Close this window and select a few dates and times from the calendar to book.";
        this.timePnlCartRemoveBtnLabel = "Remove";
        this.timePnlCartTitle = "Selected Times";
        this.timePnlCartWaitlistTimesListTitle = "Selected Dates & Times for Waitlist:";
        this.timePnlChangeTimezoneLabel = "Change Timezone";
        this.timePnlErrorLoading = this.errorLoadingLabel;
        this.timePnlLoadingTimesLabel = "Loading Times...";
        this.timePnlNoCourseSetsAvailable = "There is no open availability for %REASON%.";
        this.timePnlNoTimesAvailOnSelectDay = "There are no times available on the selected date. Please choose a different date.";
        this.timePnlNoTimesAvailOnSelectMonth = "There are no times available in the current month. Please choose a different month.";
        this.timePnlRescheduleBookingSummary = "Rescheduling %REASON% with %STAFF_FULLNAME% at %LOCATION_NAME%";
        this.timePnlSeatsLabel = "Seats Remaining";
        this.timePnlSeatsFullJoinWaitlist = "0 seats remaining. Join wait list.";
        this.timePnlSelectCourseSetLabel = "Select the Course Set you'd like to book:";
        // Below need to be translated still
        this.timePnlSelectRepeatingApptSetLabel = "Select the best days and times for your appointments:";
        this.timePnlRepeatingApptNoTimesAvail = "There are no repeating appointment options that match your filter criteria. Please select new filters and try again..";
        this.timePnlChangeFiltersBtn = "Change Filters";
        this.timePnlShowSetCalendar = "Show Calendar";
        this.timePnlHideSetCalendar = "Hide Calendar";
        //Above need to be translated still
        this.timePnlSelectTimeLabel = "Select Time On:";
        this.timePnlSelectTimeNoClassCalendarLabel = "Select Session Date & Time:";
        this.timePnlSelectedTimesBtnLabel = "%SELECTED_TIMES_COUNT% Times Selected";
        this.timePnlTimezoneLabel = "Your Timezone";
        this.timePnlTimezoneLabelForBusiness = "Timezone:";
        this.timePnlWaitlistTitle = "Join the Waitlist";
        this.timePnlWaitlistText = this.waitListFirstAvailable ? "<div style='text-align: center;'>If you only want to be notified if specific date(s) and time(s) become available, then select those form the calendar below. Otherwise, you can click the button to be notified of the first available opening:</div>" : "<div style='text-align: center;'>Select the date(s) and time(s) you would like to be on the wait list for and we will send you a notification if those times become available.</div>";
        this.timeTitle = "Time";
        this.upcomingApptBtnLabel = "Upcoming";
        this.viewApptDetailBtnLabel = "<i class='fas fa-search'></i>";
        this.viewApptLabel = "View Appointments";
        this.viewApptTitle = "Appointment History";
        this.viewDetailsBtnLabel = 'View Details';
        this.viewingAccountForLabel = "Viewing Account For:";
        this.viewingApptsForLabel = "Viewing Appointments For:";
        this.viewingInvoicesForLabel = "Viewing Invoices For:";
        this.viewingProfileForLabel = "Viewing Profile For:";
        this.viewInvoiceLabel = "View Invoices";
        this.waitListAcceptScreenErrorTitle = "Error Finding Appointment";
        this.waitListAcceptScreenErrorText = "We could not find the requested wait list appointment. Please be sure you have the proper link and try again. If you continue to experience issues, please contact TimeTap Support.";
        this.waitListAcceptScreenHeader = "Claim Appointment";
        this.waitListAcceptScreenText = "If you would like to claim the appointment with %STAFF_FULLNAME% at %LOCATION_NAME% for %REASON% on %APPT_DATE_TIME%, please click the claim button.";
        this.waitListAcceptCourseRegistrationScreenText = "<p style='text-align: center;'><strong>If you would like to register for %REASON% with %STAFF_FULLNAME% at %LOCATION_NAME% for the dates listed below, please click the claim button.</strong></p><div style='text-align: center'>%REPEATING_APPT_DATE_LIST%</div>";
        this.waitlistAlreadyClaimed = "Appointment Already Claimed";
        this.waitlistAlreadyClaimedText = "<p style='text-align: center;'>We're sorry, but this appointment has already been claimed. We will let you know if another time becomes available.</p>";
        this.waitlistClaimApptBtn = "Claim Appointment";
        this.waitlistClaimListNoClaims = "There are no times being held for you on the wait list currently. Please check again later.";
        this.waitlistClaimListErrorLoadingMsg = "Error loading wait list hold times. Please try again later.";
        this.waitlistClaimedApptCancelledTitle = "Appointment Cancelled";
        this.waitlistClaimedApptCancelledText = "This appointment with %STAFF_FULLNAME% at %LOCATION_NAME% for %REASON% on %APPT_DATE_TIME% has been cancelled.";
        // Below need to be translated still
        this.waitlistClaimedApptCancelledTextNoApptData = "This appointment has been cancelled and can no longer be claimed.";
        //Above need to be translated still
        this.waitListDateListClass = "<b>%APPT_DATE% at %APPT_CLIENT_START_TIME_SHORT%:</b> %STAFF_FULLNAME% at %LOCATION_NAME% for %REASON%";
        this.waitListDateListFirstAvail = "<b>First Available Date and Time:</b> %STAFF_FULLNAME% at %LOCATION_NAME% for %REASON%";
        this.waitListDateListService = "<b>%APPT_DATE% at %APPT_CLIENT_START_TIME_SHORT% - %APPT_CLIENT_END_TIME_SHORT%:</b> %STAFF_FULLNAME% at %LOCATION_NAME% for %REASON%";
        this.waitListDateListAllDay = "<b>%APPT_DATE% for All Day:</b> %STAFF_FULLNAME% at %LOCATION_NAME% for %REASON%";
        this.waitListFirstAvailableInTimeCart = "First available date & time";
        this.waitListFirstAvailableText = "Click here to get notified on first available opening";
        // Below need to be translated still
        this.waitListOutsideBookingWindowTitle = "Outside Booking Window";
        this.waitListOutsideBookingWindowMsg = "<p style='text-align: center;'>We're sorry, but you are outside the allowed booking window for this appointment to claim it.</p>";
        this.waitlistPastStartTimeTitle = "Appointment Time Has Passed";
        this.waitlistPastStartTimeText = "<p style='text-align: center;'>We're sorry, but this appointment time has already passed and is no longer available to claim.</p>";
        this.waitlistRegistrationBtnLabel = "Wait List";
        this.waitlistRegistrationTitle = "Wait List Registrations";
        this.noWaitlistRegistrationsMsg = "No wait list registrations found";
        this.waitlistRegistrationDetailDateLabel = "Date & Time:";
        this.waitlistRegistrationIdLabel = "Registration ID:";
        this.waitlistRegistrationDetailTitle = "Wait List Registration Detail";
        this.waitlistRegistrationDetailAvailableTimes = "Currently available appointment times for you to claim from this wait list registration:";
        this.waitlistRegistrationDetailCancelBtnLabel = "Cancel Registration";
        //Above need to be translated still
        this.waitlistRemoveError = "There was an error removing you from the wait list. Please try again. If you continue to experience issues, please contact support.";
        this.waitlistRemoveLoadError = "There was an error loading your wait list registration. Please check your link and try again.  If you continue to experience issues, please contact support.";
        this.waitlistRemoveSuccessTitle = "Successfully Removed From Wait List";
        this.waitlistRemoveSuccessText = "<p style='text-align: center;'><strong>You have been successfully removed from the wait list for the following registration(s): </strong></p><div style='text-align: center'>%WAITLIST_DATE_LIST%</div><p style='text-align: center;'></p>";
        this.waitlistRemoveTitle = "Remove From Wait List";
        this.waitlistRemoveText = "<p style='text-align: center;'><strong>Please click the Remove button below if you no longer wish to receive wait list notifications for the following registration(s): </strong></p><div style='text-align: center'>%WAITLIST_DATE_LIST%</div><p style='text-align: center;'></p>";
        this.waitlistRemoveBtn = "Remove";
        this.waitListSuccessText = "<p style='text-align: center;'><strong>You have been added to the waiting list for the following dates and times:</strong></p><div style='text-align: center'>%WAITLIST_DATE_LIST%</div><p style='text-align: center;'>Should an appointment become available you will be contacted by email or phone.</p>";
        this.waitListText = "Click here to join the Wait List for another date/time.";
        this.waitListTextExitWaitListMode = "Pick from available dates and times";
        // Below need to be translated still
        this.weekLabel = "Week";
        this.weeksLabel = "Months";
        //Above need to be translated still
        this.welcomeText = '<p><span style="font-size: x-large;">Please click through the next few screens to select an appropriate time slot for your appointment.</span></p>\n<p><span style="font-size: x-large;"><br />Once your appointment is set, you will receive an email confirmation. You will also get a reminder email 24 hours before your appointment.<br />Thank You!<br /></span></p>';
        this.welcomeTitle = "Welcome";
        this.welcomePnlErrorLoading = "Scheduler failed to load. Please refresh your page and try again.";
        this.cancelReasonList = null;
        this.filterHint = null;
        this.infoText = null;
        this.locationGroupText = null;
        this.locationSuperGroupText = null;
        this.locationText = null;
        this.serviceGroupText = null;
        this.servicePnlCouponHint = null;
        this.serviceSuperGroupText = null;
        this.serviceText = null;
        this.smsHint = null;
        this.smsHintWaitList = null;
        this.staffGroupText = null;
        this.staffText = null;
        this.timeText = null;
    }
    LabelMap.prototype.ngOnInit = function () {
        if (this.rescheduleHrs === 0) {
            this.apptReschedulePastTimeframeMsg = "You are past the allowed timeframe to reschedule this appointment. Rescheduling is allowed up to the start time of the appointment.";
        }
        if (this.cancelHrs === 0) {
            this.apptCancelPastTimeframeMsg = "You are past the allowed timeframe to cancel this appointment. Cancellations are allowed up to the start time of the appointment.";
        }
        //@ts-ignore
    };
    LabelMap.ctorParameters = function () { return [
        { type: _app_objects_model__WEBPACK_IMPORTED_MODULE_0__["ConfigListMap"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_1__["TitleCasePipe"] },
        { type: Number },
        { type: Number },
        { type: Boolean }
    ]; };
    return LabelMap;
}());



/***/ }),

/***/ "./src/app/common-classes/default-styles.model.ts":
/*!********************************************************!*\
  !*** ./src/app/common-classes/default-styles.model.ts ***!
  \********************************************************/
/*! exports provided: CSSProperties, DefaultStyleMap, DisplayConfigObj, MiniWebsiteDisplayConfig, BaseAlerts, BaseLinks, BaseSpinner, SpinnerElement, BaseButtons, BaseChips, BaseFormElements, FormElements, MatListElements, CardElements, NewToOldStylesMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CSSProperties", function() { return CSSProperties; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultStyleMap", function() { return DefaultStyleMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DisplayConfigObj", function() { return DisplayConfigObj; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MiniWebsiteDisplayConfig", function() { return MiniWebsiteDisplayConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseAlerts", function() { return BaseAlerts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseLinks", function() { return BaseLinks; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseSpinner", function() { return BaseSpinner; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpinnerElement", function() { return SpinnerElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseButtons", function() { return BaseButtons; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseChips", function() { return BaseChips; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseFormElements", function() { return BaseFormElements; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormElements", function() { return FormElements; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatListElements", function() { return MatListElements; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CardElements", function() { return CardElements; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NewToOldStylesMap", function() { return NewToOldStylesMap; });
var CSSProperties = /** @class */ (function () {
    function CSSProperties(backgroundColor, color, borderColor, justifyContent, alignment, float, position, top, fontSize, borderBottomColor, borderBottomWidth, backgroundImage, stroke, maxWidth) {
        this.backgroundColor = backgroundColor;
        this.borderColor = borderColor;
        this.color = color;
        this.justifyContent = justifyContent;
        this.alignment = alignment;
        this.float = float;
        this.position = position;
        this.top = top;
        this.fontSize = fontSize;
        this.borderBottomColor = borderBottomColor;
        this.borderBottomWidth = borderBottomWidth;
        this.backgroundImage = backgroundImage;
        this.stroke = stroke;
        this.maxWidth = maxWidth;
    }
    CSSProperties.prototype.setStyles = function (properties) {
        this.backgroundColor = properties['backgroundColor'];
        this.borderColor = properties['borderColor'];
        this.color = properties['color'];
        this.justifyContent = properties['justifyContent'];
        this.alignment = properties['alignment'];
        this.float = properties['float'];
        this.position = properties['position'];
        this.top = properties['top'];
        this.fontSize = properties['fontSize'];
        this.borderBottomColor = properties['borderBottomColor'];
        this.borderBottomWidth = properties['borderBottomWidth'];
        this.backgroundImage = properties['backgroundImage'];
        this.stroke = properties['stroke'];
        this.maxWidth = properties['maxWidth'];
    };
    CSSProperties.prototype.getStylesForStylesheet = function () {
        var returnObject = {};
        if (this.backgroundColor !== undefined)
            returnObject['background-color'] = this.backgroundColor;
        if (this.color !== undefined)
            returnObject['color'] = this.color;
        if (this.borderColor !== undefined)
            returnObject['border-color'] = this.borderColor;
        if (this.justifyContent !== undefined)
            returnObject['justify-content'] = this.justifyContent;
        if (this.alignment !== undefined)
            returnObject['alignment'] = this.alignment;
        if (this.float !== undefined)
            returnObject['float'] = this.float;
        if (this.position !== undefined)
            returnObject['position'] = this.position;
        if (this.top !== undefined)
            returnObject['top'] = this.top;
        if (this.fontSize !== undefined)
            returnObject['font-size'] = this.fontSize;
        if (this.borderBottomColor !== undefined)
            returnObject['border-bottom-color'] = this.borderBottomColor;
        if (this.borderBottomWidth !== undefined)
            returnObject['border-bottom-width'] = this.borderBottomWidth;
        if (this.backgroundImage !== undefined)
            returnObject['background-image'] = this.backgroundImage;
        if (this.stroke !== undefined)
            returnObject['stroke'] = this.stroke;
        if (this.maxWidth !== undefined)
            returnObject['max-width'] = this.maxWidth;
        return returnObject;
    };
    CSSProperties.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return CSSProperties;
}());

//Used to set default values that styleMap should inherit if no values have been saved by business
var DefaultStyleMap = /** @class */ (function () {
    function DefaultStyleMap() {
        this.packages = { columns: 3 };
    }
    return DefaultStyleMap;
}());

var DisplayConfigObj = /** @class */ (function () {
    function DisplayConfigObj() {
        this.enable = false;
        this.children = [];
    }
    return DisplayConfigObj;
}());

//Used to hide/show elements on screen
var MiniWebsiteDisplayConfig = /** @class */ (function () {
    function MiniWebsiteDisplayConfig() {
        this.store = { enable: false, children: ['packages'] };
        this.packages = new DisplayConfigObj();
        this.waitList = { enable: false, children: [] };
    }
    return MiniWebsiteDisplayConfig;
}());

var BaseAlerts = /** @class */ (function () {
    function BaseAlerts() {
        this.infoAlert = new CSSProperties('#cce5ff', '#004085', '#b8daff');
        this.successAlert = new CSSProperties('#d4edda', '#155724', '#c3e6cb');
        this.errorAlert = new CSSProperties('#f8d7da', '#721c24', '#f5c6cb');
    }
    return BaseAlerts;
}());

var BaseLinks = /** @class */ (function () {
    function BaseLinks() {
        this.linkBaseColor = '#1C827C';
    }
    return BaseLinks;
}());

var BaseSpinner = /** @class */ (function () {
    function BaseSpinner() {
        this.spinner = new CSSProperties(undefined, '#1c827c');
    }
    return BaseSpinner;
}());

var SpinnerElement = /** @class */ (function () {
    function SpinnerElement() {
        this.spinner = {
            savedSelectorValue: 'loadingSpinner',
            strokeSelector: 'mat-progress-spinner.loadingSpinner circle'
        };
    }
    return SpinnerElement;
}());

var BaseButtons = /** @class */ (function () {
    function BaseButtons() {
        this.basicBtn = new CSSProperties(null, '#000000');
        this.primaryBtn = new CSSProperties(null, '#0071EB');
        this.accentBtn = new CSSProperties(null, '#1C827C');
        // successBtn: CSSProperties = new CSSProperties(null,'#28a745');
        this.successBtn = new CSSProperties(null, '#218739');
        this.errorBtn = new CSSProperties(null, '#dc3545');
    }
    return BaseButtons;
}());

var BaseChips = /** @class */ (function () {
    function BaseChips() {
        this.basicChip = new CSSProperties('#E0e0e0', '#000000');
        this.primaryChip = new CSSProperties('#0071EB', '#ffffff');
        this.successChip = new CSSProperties('#28a745', '#ffffff');
        this.warningChip = new CSSProperties('#ffc107', '#212529');
        this.errorChip = new CSSProperties('#dc3545', '#ffffff');
    }
    return BaseChips;
}());

var BaseFormElements = /** @class */ (function () {
    function BaseFormElements() {
        this.formFieldGeneral = new CSSProperties(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, '14px');
        this.formFieldResting = new CSSProperties(undefined, '#0000008a');
        this.formFieldFocused = new CSSProperties(undefined, '#45b6af');
        this.formFieldInvalid = new CSSProperties(undefined, '#dc3545');
        this.formFieldPrint = new CSSProperties(undefined, '#000000');
        this.radioDial = new CSSProperties(undefined, '#45b6af');
        this.checkBox = new CSSProperties(undefined, '#45b6af');
    }
    return BaseFormElements;
}());

var FormElements = /** @class */ (function () {
    function FormElements() {
        this.formFieldGeneral = {
            savedSelectorValue: 'mat-form-field.mat-form-field',
            textSelector: 'mat-form-field.mat-form-field, ' +
                'div.checkbox-list.form-field mat-label, ' +
                'div.radio-list.form-field mat-label, ' +
                'div.file-upload.form-field > mat-label, ' +
                'div.signature-field.form-field > mat-label, ' +
                'div.fieldsInline div.inlineChkBox, ' +
                'div.fieldsInline div.inlineSelect div.mat-select-value span, ' +
                '.mat-list.form-field > mat-list-item.mat-list-item, ' +
                '.mat-checkbox.mat-checkbox-tt, ' +
                'label.customFieldLabel, ' +
                'div.formDescriptionField'
        };
        this.formFieldResting = {
            savedSelectorValue: '.mat-form-field',
            colorSelector: '.mat-form-field .mat-form-field-label, ' +
                '.mat-form-field .mat-form-field-label > span, ' +
                '.mat-form-field .mat-form-field-required-marker, ' +
                'div.checkbox-list.form-field mat-label, ' +
                'div.radio-list.form-field mat-label, ' +
                'div.file-upload.form-field > mat-label, ' +
                'div.signature-field.form-field > mat-label, ' +
                'mat-hint.mat-hint, div.fieldsInline div.inlineChkBox, ' +
                'div.fieldsInline div.inlineSelect div.mat-select-value span, ' +
                '.mat-list.form-field > mat-list-item.mat-list-item',
            backgroundSelector: '.mat-form-field .mat-form-field-underline',
        };
        this.formFieldFocused = {
            savedSelectorValue: '.mat-form-field.mat-focused',
            colorSelector: '.mat-form-field.mat-focused .mat-form-field-label, ' +
                '.mat-form-field.mat-focused .mat-form-field-label > span, ' +
                '.mat-form-field.mat-focused .mat-form-field-required-marker',
            backgroundSelector: '.mat-form-field.mat-focused .mat-form-field-ripple',
        };
        this.formFieldInvalid = {
            savedSelectorValue: '.mat-form-field-invalid',
            colorSelector: '.mat-form-field.mat-form-field-invalid .mat-form-field-label, ' +
                '.mat-form-field.mat-form-field-invalid .mat-form-field-label > span, ' +
                '.mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker',
            backgroundSelector: '.mat-form-field.mat-form-field-invalid .mat-form-field-ripple',
        };
        this.formFieldDisabled = {
            savedSelectorValue: '.mat-form-field-disabled',
            colorSelector: '.mat-form-field.mat-form-field-disabled .mat-form-field-label, ' +
                '.mat-form-field.mat-form-field-disabled .mat-form-field-label > span, ' +
                'div.checkbox-list.form-field.mat-form-field-disabled mat-label, ' +
                'div.radio-list.form-field.mat-form-field-disabled mat-label, ' +
                'div.file-upload.form-field.mat-form-field-disabled > mat-label, ' +
                'div.signature-field.form-field.mat-form-field-disabled > mat-label, ' +
                '.mat-form-field-disabled .mat-form-field-required-marker' +
                '.formDisabled .mat-input-element:disabled,' +
                '.formDisabled div.checkbox-list div.printCheckboxes, ' +
                '.formDisabled label.customFieldLabel, ' +
                '.formDisabled div.formDescriptionField',
            dottedUnderlineSelector: '.mat-form-field.mat-form-field-disabled .mat-form-field-underline',
        };
        this.formFieldPrint = {
            savedSelectorValue: '.mat-form-field-print',
            colorSelector: '#printSection .mat-form-field.mat-form-field-disabled .mat-form-field-label, ' +
                '#printSection .mat-form-field.mat-form-field-disabled .mat-form-field-label > span, ' +
                '#printSection div.checkbox-list.form-field.mat-form-field-disabled mat-label, ' +
                '#printSection div.checkbox-list.form-field.mat-form-field-disabled .mat-checkbox-label, ' +
                '#printSection div.radio-list.form-field.mat-form-field-disabled mat-label, ' +
                '#printSection div.file-upload.form-field.mat-form-field-disabled > mat-label, ' +
                '#printSection div.signature-field.form-field.mat-form-field-disabled > mat-label, ' +
                '#printSection .mat-form-field-disabled .mat-form-field-required-marker,' +
                '#printSection .mat-input-element:disabled,' +
                '#printSection div.checkbox-list div.printCheckboxes, ' +
                '#printSection label.customFieldLabel, ' +
                '#printSection div.formDescriptionField',
            dottedUnderlineSelector: '#printSection .mat-form-field.mat-form-field-disabled .mat-form-field-underline',
        };
        this.radioDial = {
            savedSelectorValue: '.mat-radio-button-tt',
            borderSelector: '.mat-radio-button.mat-radio-button-tt.mat-radio-checked .mat-radio-outer-circle',
            backgroundSelector: '.mat-radio-button.mat-radio-button-tt .mat-radio-inner-circle,' +
                '.mat-radio-button.mat-radio-button-tt .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-radio-button-tt.mat-radio-checked .mat-radio-persistent-ripple',
        };
        this.checkbox = {
            savedSelectorValue: '.mat-checkbox-tt',
            borderSelector: '.mat-checkbox.mat-checkbox-tt.mat-checkbox-checked',
            backgroundSelector: '.mat-checkbox.mat-checkbox-tt .mat-checkbox-ripple .mat-ripple-element:not(.mat-checkbox-disabled),' +
                '.mat-checkbox.mat-checkbox-tt.mat-checkbox-checked .mat-checkbox-background',
        };
    }
    return FormElements;
}());

var MatListElements = /** @class */ (function () {
    function MatListElements() {
        this.listItemInactive = {
            savedSelectorValue: '.mat-list-item',
            colorSelector: 'mat-list-item.mat-list-item div.mat-list-text',
            backgroundSelector: 'mat-list-item.mat-list-item'
        };
        this.listItemActive = {
            savedSelectorValue: 'mat-list > .mat-list-item.selected,mat-list > .mat-list-item:hover',
            colorSelector: 'mat-list-item.mat-list-item.selected div.mat-list-text,mat-list-item.mat-list-item:hover div.mat-list-text',
            backgroundSelector: 'mat-list-item.mat-list-item.selected, mat-list-item.mat-list-item:hover'
        };
    }
    return MatListElements;
}());

var CardElements = /** @class */ (function () {
    function CardElements() {
        this.headerBorderSelector = '';
    }
    return CardElements;
}());

var NewToOldStylesMap = /** @class */ (function () {
    function NewToOldStylesMap() {
        this.map = [{ newProp: 'body', oldProps: [{ oldPropName: 'websiteBackgroundColor', newPropProperty: 'backgroundColor' },
                    { oldPropName: 'baseTextColor', newPropProperty: 'color' }] },
            { newProp: 'h1', oldProps: [{ oldPropName: 'baseTextColor', newPropProperty: 'color' }] },
            { newProp: 'h2', oldProps: [{ oldPropName: 'baseTextColor', newPropProperty: 'color' }] },
            { newProp: 'h3', oldProps: [{ oldPropName: 'baseTextColor', newPropProperty: 'color' }] },
            { newProp: 'h4', oldProps: [{ oldPropName: 'baseTextColor', newPropProperty: 'color' }] },
            { newProp: 'h5', oldProps: [{ oldPropName: 'baseTextColor', newPropProperty: 'color' }] },
            { newProp: 'h6', oldProps: [{ oldPropName: 'baseTextColor', newPropProperty: 'color' }] },
            { newProp: 'label', oldProps: [{ oldPropName: 'baseTextColor', newPropProperty: 'color' }] },
            { newProp: 'span', oldProps: [{ oldPropName: 'baseTextColor', newPropProperty: 'color' }] },
            { newProp: 'p', oldProps: [{ oldPropName: 'baseTextColor', newPropProperty: 'color' }] },
            { newProp: 'businessInfo', oldProps: [{ oldPropName: 'businessInfoColor', newPropProperty: 'backgroundColor' }] },
            { newProp: 'policy', oldProps: [{ oldPropName: 'policyBackgroundColor', newPropProperty: 'backgroundColor' }] },
            { newProp: 'footer', oldProps: [{ oldPropName: 'footerBackgroundColor', newPropProperty: 'backgroundColor' },
                    { oldPropName: 'footerTextColor', newPropProperty: 'color' }] },
            { newProp: 'pageHeader', oldProps: [{ oldPropName: 'navigationBackgroundColor', newPropProperty: 'backgroundColor' }] },
            { newProp: 'schedulerHeaderText', oldProps: [{ oldPropName: 'headerColor', newPropProperty: 'color' }] },
            { newProp: 'businessLogo', oldProps: [{ oldPropName: 'logoAlign', newPropProperty: 'alignment' }] },
            { newProp: 'primaryBtn', oldProps: [{ oldPropName: 'primaryButtonBaseColor', newPropProperty: 'color' }] },
            { newProp: 'basicBtn', oldProps: [{ oldPropName: 'basicButtonBaseColor', newPropProperty: 'color' }] },
            { newProp: 'successBtn', oldProps: [{ oldPropName: 'successButtonBaseColor', newPropProperty: 'color' }] },
            { newProp: 'errorBtn', oldProps: [{ oldPropName: 'errorButtonBaseColor', newPropProperty: 'color' }] },
            { newProp: 'accentBtn', oldProps: [{ oldPropName: 'accentButtonBaseColor', newPropProperty: 'color' }] },
            { newProp: 'darkAccentBtn', oldProps: [{ oldPropName: 'darkAccentBtnBaseColor', newPropProperty: 'color' }] },
            { newProp: 'loginBtn', oldProps: [{ oldPropName: 'loginBtnBaseColor', newPropProperty: 'color' }] },
            { newProp: 'registerBtn', oldProps: [{ oldPropName: 'registerBtnBaseColor', newPropProperty: 'color' }] },
            { newProp: 'logoutBtn', oldProps: [{ oldPropName: 'logoutBtnBaseColor', newPropProperty: 'color' }] },
            { newProp: 'backBtn', oldProps: [{ oldPropName: 'backBtnBaseColor', newPropProperty: 'color' }] },
            { newProp: 'nextBtn', oldProps: [{ oldPropName: 'backBtnBaseColor', newPropProperty: 'color' }] },
            { newProp: 'successBtn', oldProps: [{ oldPropName: 'successButtonBaseColor', newPropProperty: 'color' }] },
            { newProp: 'footerTimeTapLink', oldProps: [{ oldPropName: 'footerLinkColor', newPropProperty: 'color' }] },
            { newProp: 'basicChip', oldProps: [{ oldPropName: 'defaultChipBGColor', newPropProperty: 'backgroundColor' },
                    { oldPropName: 'defaultChipFontColor', newPropProperty: 'color' }] },
            { newProp: 'selectedDayOnCalendar', oldProps: [{ oldPropName: 'darkAccentBtnBaseColor', newPropProperty: 'backgroundColor' },
                    { oldPropName: 'linkWithBGBaseColor', newPropProperty: 'color' }] },
            { newProp: 'dayHasAvailability', oldProps: [{ oldPropName: 'accentButtonBaseColor', newPropProperty: 'backgroundColor' },
                    { oldPropName: 'linkWithBGBaseColor', newPropProperty: 'color' }] },
            { newProp: '.mat-checkbox-tt', oldProps: [{ oldPropName: 'accentTextColor', newPropProperty: 'color' }] },
            { newProp: '.mat-radio-button-tt', oldProps: [{ oldPropName: 'accentTextColor', newPropProperty: 'color' }] },
            { newProp: '.mat-form-field', oldProps: [{ oldPropName: 'accentTextColor', newPropProperty: 'color' }] },
            { newProp: 'a', oldProps: [{ oldPropName: 'linkBaseColor', newPropProperty: 'color' }] }
        ];
    }
    return NewToOldStylesMap;
}());



/***/ }),

/***/ "./src/app/common-classes/label-map.service.ts":
/*!*****************************************************!*\
  !*** ./src/app/common-classes/label-map.service.ts ***!
  \*****************************************************/
/*! exports provided: LabelMapService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LabelMapService", function() { return LabelMapService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _default_labels_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./default-labels.model */ "./src/app/common-classes/default-labels.model.ts");
/* harmony import */ var _languages_label_map_es_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../languages/label-map-es.model */ "./src/app/languages/label-map-es.model.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _languages_label_map_nl_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../languages/label-map-nl.model */ "./src/app/languages/label-map-nl.model.ts");
/* harmony import */ var _config_list_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../config-list.service */ "./src/app/config-list.service.ts");







var LabelMapService = /** @class */ (function () {
    function LabelMapService(titleCasePipe, injector) {
        this.titleCasePipe = titleCasePipe;
        this.injector = injector;
        this.configListService = injector.get(_config_list_service__WEBPACK_IMPORTED_MODULE_6__["ConfigListService"]);
    }
    LabelMapService.prototype.getTranslatedLabelMapValues = function (reconciledLabelMap, preference) {
        var originalLabelMapValues = new _default_labels_model__WEBPACK_IMPORTED_MODULE_2__["LabelMap"](this.configListService.configList, this.titleCasePipe, preference.cancelHrs, preference.rescheduleHrs, preference.waitListFirstAvailable);
        var languageLabelMap = null;
        var languageSubstring = sessionStorage.getItem('locale');
        if (languageSubstring.indexOf("-") !== -1) {
            var indexOfHyphen = languageSubstring.indexOf("-");
            languageSubstring = languageSubstring.substring(0, indexOfHyphen);
        }
        switch (languageSubstring) {
            case 'es':
                languageLabelMap = new _languages_label_map_es_model__WEBPACK_IMPORTED_MODULE_3__["SpanishLabelMap"](this.configListService.configList, this.titleCasePipe, preference.cancelHrs, preference.rescheduleHrs, preference.waitListFirstAvailable);
                break;
            case 'nl':
                languageLabelMap = new _languages_label_map_nl_model__WEBPACK_IMPORTED_MODULE_5__["DutchLabelMap"](this.configListService.configList, this.titleCasePipe, preference.cancelHrs, preference.rescheduleHrs, preference.waitListFirstAvailable);
                break;
            default:
                return reconciledLabelMap;
        }
        // let propsToPrint = ['thanksCourses','thanksInfo']
        for (var prop in reconciledLabelMap) {
            // if(propsToPrint.indexOf(prop) !== -1){//USed to check if there is a discrepancy in properties taht are nto translating by default
            //     console.log(originalLabelMapValues[prop]);
            //     console.log(reconciledLabelMap[prop]);
            // }
            if (originalLabelMapValues.hasOwnProperty(prop) && originalLabelMapValues[prop] === reconciledLabelMap[prop] &&
                languageLabelMap.hasOwnProperty(prop) && languageLabelMap[prop] !== null) {
                reconciledLabelMap[prop] = languageLabelMap[prop];
            }
        }
        return reconciledLabelMap;
    };
    LabelMapService.prototype.reconcileLabels = function (preference, preferenceLabelMap, configListLabels) {
        var labelMap = new _default_labels_model__WEBPACK_IMPORTED_MODULE_2__["LabelMap"](this.configListService.configList, this.titleCasePipe, preference.cancelHrs, preference.rescheduleHrs, preference.waitListFirstAvailable);
        //let originalLabelMapValues = new LabelMap(configListLabels, this.titleCasePipe, this.businessService.landingPageObjects.preference);
        for (var key in preference) {
            if (this.hasOwnProperty(key) && preference[key] !== null) {
                labelMap[key] = preference[key];
            }
        }
        var keysToSetIfEmptyString = ['thanksInfoPayment', 'thanksInfoPaymentRequired', 'thanksInfoPaymentAuthOnly', 'thanksCourses', 'thanksInfo', 'thanksInfoConfirm'];
        var keysToSetToDotNotation = [{ labelMapProp: 'location.locationName', preferenceLabelMapProp: 'locationName' }, { labelMapProp: 'staff.fullName', preferenceLabelMapProp: 'staffFullName' }, { labelMapProp: 'reason.reasonDesc', preferenceLabelMapProp: 'reasonDesc' }];
        for (var key in preferenceLabelMap) {
            if (preferenceLabelMap.hasOwnProperty(key) && preferenceLabelMap[key] !== null &&
                (keysToSetIfEmptyString.indexOf(key) === -1 || (keysToSetIfEmptyString.indexOf(key) !== -1 && preferenceLabelMap[key].trim() !== ""))) {
                labelMap[key] = preferenceLabelMap[key];
            }
        }
        for (var i = 0, x = keysToSetToDotNotation.length; i < x; i++) {
            if (preferenceLabelMap[keysToSetToDotNotation[i].preferenceLabelMapProp])
                labelMap[keysToSetToDotNotation[i].labelMapProp] = preferenceLabelMap[keysToSetToDotNotation[i].preferenceLabelMapProp];
        }
        if (preference.autoTranslateDefaultLabels)
            this.getTranslatedLabelMapValues(labelMap, preference);
        // if(labelMap['timePnlWaitlistText'] === originalLabelMapValues['timePnlWaitlistText'] && preference.waitListFirstAvailable){
        //     labelMap['timePnlWaitlistText'] = "<div style='text-align: center;'>If you only want to be notified if specific date(s) and time(s) become available, then select those form the calendar below. Otherwise, you can click the button to be notified of the first available opening:</div>";
        // }
        return labelMap;
    };
    LabelMapService.prototype.reconcileSchedulerLinkPropertiesToLabelMap = function (schedulerLink, schedulerLinkLabelMap, labelMap) {
        // let defaultLabelMap = this.getTranslatedLabelMapValues();
        //FIRST FOR SCHEDULER LINKS, TAKE ANY VALUES THAT ARE FLAT ON TEH SCHEDULER LINK AND MIGRATE TO THE LABELMAP
        for (var key in schedulerLink) {
            if (this.hasOwnProperty(key) && schedulerLink[key] !== null) {
                labelMap[key] = schedulerLink[key];
            }
        }
        if (schedulerLinkLabelMap !== null) {
            for (var key in labelMap) {
                if (!schedulerLinkLabelMap.hasOwnProperty(key)) {
                    schedulerLinkLabelMap[key] = labelMap[key];
                }
            }
        }
        else {
            schedulerLinkLabelMap = labelMap;
        }
        return schedulerLinkLabelMap;
    };
    LabelMapService.ctorParameters = function () { return [
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_4__["TitleCasePipe"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] }
    ]; };
    LabelMapService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_4__["TitleCasePipe"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]])
    ], LabelMapService);
    return LabelMapService;
}());



/***/ }),

/***/ "./src/app/config-list.service.ts":
/*!****************************************!*\
  !*** ./src/app/config-list.service.ts ***!
  \****************************************/
/*! exports provided: ConfigListService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConfigListService", function() { return ConfigListService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");



var ConfigListService = /** @class */ (function () {
    function ConfigListService(titleCasePipe) {
        this.titleCasePipe = titleCasePipe;
    }
    ConfigListService.prototype.setConfigList = function (configList) {
        this.configList = configList;
    };
    ConfigListService.prototype.getTitleCaseLabel = function (labelProp) {
        if (this.configList)
            return this.titleCasePipe.transform(this.configList[labelProp]);
        else
            return labelProp;
    };
    ConfigListService.prototype.clearConfigList = function () {
        this.configList = null;
    };
    ConfigListService.ctorParameters = function () { return [
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_2__["TitleCasePipe"] }
    ]; };
    ConfigListService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_2__["TitleCasePipe"]])
    ], ConfigListService);
    return ConfigListService;
}());



/***/ }),

/***/ "./src/app/core.module.ts":
/*!********************************!*\
  !*** ./src/app/core.module.ts ***!
  \********************************/
/*! exports provided: CoreModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CoreModule", function() { return CoreModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./client-account/client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _data_tables_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data-tables.service */ "./src/app/data-tables.service.ts");
/* harmony import */ var _disclaimer_form_disclaimer_form_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./disclaimer-form/disclaimer-form.service */ "./src/app/disclaimer-form/disclaimer-form.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _locale_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./locale.service */ "./src/app/locale.service.ts");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _form_functions_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./form-functions.service */ "./src/app/form-functions.service.ts");
/* harmony import */ var _store_store_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./store/store.service */ "./src/app/store/store.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _waitlist_waitlist_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./waitlist/waitlist.service */ "./src/app/waitlist/waitlist.service.ts");
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./scheduler/client-info/client-info.service */ "./src/app/scheduler/client-info/client-info.service.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./business.service */ "./src/app/business.service.ts");
/* harmony import */ var _scheduler_time_moment_timezones_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./scheduler/time/moment-timezones.service */ "./src/app/scheduler/time/moment-timezones.service.ts");
/* harmony import */ var _auth_auth_interceptor_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./auth/auth-interceptor.service */ "./src/app/auth/auth-interceptor.service.ts");
/* harmony import */ var _google_analytics_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./google-analytics.service */ "./src/app/google-analytics.service.ts");
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./auth/auth.service */ "./src/app/auth/auth.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _common_classes_label_map_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./common-classes/label-map.service */ "./src/app/common-classes/label-map.service.ts");
/* harmony import */ var _styleSheetService__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./styleSheetService */ "./src/app/styleSheetService.ts");






















var CoreModule = /** @class */ (function () {
    function CoreModule() {
    }
    CoreModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            providers: [
                _locale_service__WEBPACK_IMPORTED_MODULE_6__["LocaleService"], _business_service__WEBPACK_IMPORTED_MODULE_14__["BusinessService"], _store_store_service__WEBPACK_IMPORTED_MODULE_9__["StoreService"], _waitlist_waitlist_service__WEBPACK_IMPORTED_MODULE_11__["WaitlistService"], _common_classes_label_map_service__WEBPACK_IMPORTED_MODULE_20__["LabelMapService"], _responsive_service__WEBPACK_IMPORTED_MODULE_19__["ResponsiveService"], _auth_auth_service__WEBPACK_IMPORTED_MODULE_18__["AuthService"], _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_12__["TimeService"],
                _styleSheetService__WEBPACK_IMPORTED_MODULE_21__["StyleSheetService"], _scheduler_time_moment_timezones_service__WEBPACK_IMPORTED_MODULE_15__["MomentTimezoneService"], _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_2__["ClientAccountService"],
                _scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_13__["ClientInfoService"], _angular_common__WEBPACK_IMPORTED_MODULE_10__["DatePipe"], _angular_common__WEBPACK_IMPORTED_MODULE_10__["TitleCasePipe"], _angular_common__WEBPACK_IMPORTED_MODULE_10__["CurrencyPipe"], _tags_service__WEBPACK_IMPORTED_MODULE_7__["TagsService"], _data_tables_service__WEBPACK_IMPORTED_MODULE_3__["DataTablesService"], { provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_5__["HTTP_INTERCEPTORS"], useClass: _auth_auth_interceptor_service__WEBPACK_IMPORTED_MODULE_16__["AuthInterceptorService"], multi: true },
                _disclaimer_form_disclaimer_form_service__WEBPACK_IMPORTED_MODULE_4__["DisclaimerFormService"], _form_functions_service__WEBPACK_IMPORTED_MODULE_8__["FormFunctionsService"], _google_analytics_service__WEBPACK_IMPORTED_MODULE_17__["GoogleAnalyticsService"]
            ]
        })
    ], CoreModule);
    return CoreModule;
}());



/***/ }),

/***/ "./src/app/data-tables.component.css":
/*!*******************************************!*\
  !*** ./src/app/data-tables.component.css ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".emptyDataList {\n    margin-top: 1rem;\n}\n:host /deep/ mat-footer-cell {\n    justify-content: center;\n}\nmat-footer-cell .alert {\n    width: 100%;\n    text-align: center;\n}\nmat-header-cell:first-of-type,\nmat-cell:first-of-type {\n    padding-left: 5px;\n}\n\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGF0YS10YWJsZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksdUJBQXVCO0FBQzNCO0FBRUE7SUFDSSxXQUFXO0lBQ1gsa0JBQWtCO0FBQ3RCO0FBQ0E7O0lBRUksaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvZGF0YS10YWJsZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lbXB0eURhdGFMaXN0IHtcbiAgICBtYXJnaW4tdG9wOiAxcmVtO1xufVxuOmhvc3QgL2RlZXAvIG1hdC1mb290ZXItY2VsbCB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbm1hdC1mb290ZXItY2VsbCAuYWxlcnQge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbm1hdC1oZWFkZXItY2VsbDpmaXJzdC1vZi10eXBlLFxubWF0LWNlbGw6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgcGFkZGluZy1sZWZ0OiA1cHg7XG59XG5cbiJdfQ== */"

/***/ }),

/***/ "./src/app/data-tables.service.ts":
/*!****************************************!*\
  !*** ./src/app/data-tables.service.ts ***!
  \****************************************/
/*! exports provided: DataTablesService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataTablesService", function() { return DataTablesService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common-classes/TableColumnData.model */ "./src/app/common-classes/TableColumnData.model.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./business.service */ "./src/app/business.service.ts");
/* harmony import */ var moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment-timezone/moment-timezone */ "./node_modules/moment-timezone/moment-timezone.js");
/* harmony import */ var moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _scheduler_time_moment_timezones_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scheduler/time/moment-timezones.service */ "./src/app/scheduler/time/moment-timezones.service.ts");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _config_list_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./config-list.service */ "./src/app/config-list.service.ts");
/* harmony import */ var _pipes_militaryTimeConversion_pipe__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../pipes/militaryTimeConversion.pipe */ "./src/pipes/militaryTimeConversion.pipe.ts");












var DataTablesService = /** @class */ (function () {
    function DataTablesService(titleCasePipe, datePipe, tagsService, timeService, businessService, momentTimezoneService, injector, militaryTime) {
        this.titleCasePipe = titleCasePipe;
        this.datePipe = datePipe;
        this.tagsService = tagsService;
        this.timeService = timeService;
        this.businessService = businessService;
        this.momentTimezoneService = momentTimezoneService;
        this.injector = injector;
        this.militaryTime = militaryTime;
        this.fullDateFilterUTC = new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataFilterFormat"]('fullDate', false, false, true);
        this.shortTimeFilterUTC = new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataFilterFormat"]('shortTime', false, false, true);
        this.shortTimeFilter = new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataFilterFormat"]('shortTime');
        this.momentTimeFilter = new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataFilterFormat"]('h:mm a z', false, true);
        this.dateFileFormats = [
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataFilterFormat"]('EEEE, MMM d, y', false, false),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataFilterFormat"](' at ', true, false),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataFilterFormat"]('h:mm a z', false, true)
        ];
        this.simpleDateFileFormat = [
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataFilterFormat"]('EEEE, MMM d, y', false, false)
        ];
        this.commonTableDataColumns = [
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('status', 'Status', 'chip'),
        ];
        this.getProperty = function (obj, path) { return (path.split('.').reduce(function (o, p) { return o && o[p]; }, obj)); };
        this.getFilterDisplay = function (element, col, selectedClient) {
            var timeZoneCode = sessionStorage.getItem("timezone");
            if (selectedClient && selectedClient.timeZoneCode)
                timeZoneCode = selectedClient.timeZoneCode.timeZoneCode;
            else if (this.timeService.clientTimezone)
                timeZoneCode = this.timeService.clientTimezone;
            var returnStringForDisplay = '';
            switch (col.filter) {
                case 'date':
                    var datePropValue = element[col.name];
                    if (!datePropValue)
                        datePropValue = this.getProperty(element, col.name);
                    if (datePropValue) {
                        for (var i = 0, x = col.filterFormats.length; i < x; i++) {
                            if (!col.filterFormats[i].concatenator && col.filterFormats[i].useMoment) {
                                timeZoneCode = this.timeService.checkToAddMomentTimezone(undefined, timeZoneCode);
                                returnStringForDisplay = returnStringForDisplay +
                                    moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5__(datePropValue).tz(timeZoneCode).format(col.filterFormats[i].format);
                            }
                            else if (!col.filterFormats[i].concatenator && !col.filterFormats[i].useMoment) {
                                if (col.filterFormats[i].useUTC)
                                    timeZoneCode = 'UTC';
                                try {
                                    returnStringForDisplay = returnStringForDisplay +
                                        this.datePipe.transform(datePropValue, col.filterFormats[i].format, timeZoneCode, sessionStorage.getItem('locale'));
                                }
                                catch (e) {
                                    returnStringForDisplay = this.getProperty(element, col.name);
                                    break;
                                }
                            }
                            else {
                                returnStringForDisplay = returnStringForDisplay + col.filterFormats[i].format;
                            }
                        }
                    }
                    else {
                        if (element.hasOwnProperty('waitListId') && !element.hasOwnProperty('calendarId')) // is a waitlist object and thus should have the first available label
                            returnStringForDisplay = this.schedulerPreferenceService.schedulerPreference.labelMap.waitListFirstAvailableInTimeCart;
                        else
                            returnStringForDisplay = this.schedulerPreferenceService.schedulerPreference.labelMap.endDateNullLabel;
                    }
                    break;
                case 'boolean':
                    if (element[col.name] || (col.nestedProp !== undefined && element[col.nestedProp][col.name]))
                        return '<i class="far fa-check-square"></i>';
                    else
                        return '<i class="far fa-square"></i>';
                    break;
                case 'time':
                    var time = element[col.name];
                    if (!time)
                        time = this.getProperty(element, col.name);
                    returnStringForDisplay = this.militaryTime.transform(time, this.schedulerPreferenceService.schedulerPreference.timeFormat24Hrs);
                    break;
                case 'chip':
                    switch (element[col.name]) {
                        case 'OPEN':
                        case 'Open':
                        case 'open':
                        case 'INVITED':
                        case 'invited':
                        case 'Invited':
                            returnStringForDisplay = 'primary';
                            break;
                        case 'Closed':
                        case 'CLOSED':
                        case 'closed':
                        case 'COMPLETED':
                        case 'completed':
                        case 'Completed':
                        case 'BOOKED':
                        case 'booked':
                        case 'Booked':
                            returnStringForDisplay = 'success';
                            break;
                        case 'Cancelled':
                        case 'CANCELLED':
                        case 'cancelled':
                        case 'REMOVED':
                        case 'removed':
                        case 'Removed':
                            returnStringForDisplay = 'error';
                            break;
                        case 'NO_SHOW':
                        case 'no_show':
                        case 'No_Show':
                        case 'EXPIRED':
                        case 'expired':
                        case 'Expired':
                            returnStringForDisplay = 'warning';
                            break;
                        default:
                            returnStringForDisplay = 'basic';
                    }
                    break;
            }
            return returnStringForDisplay;
        };
        this.setupColumnDefs = function (defaultColumnDefs, tableColumnDefs) {
            var fieldsCurrentlyInColumnDefs = [];
            for (var i = 0, x = defaultColumnDefs.length; i < x; i++)
                fieldsCurrentlyInColumnDefs.push(defaultColumnDefs[i].name);
            for (var i = 0, x = tableColumnDefs.length; i < x; i++) {
                var columnFound = false;
                for (var j = 0, y = defaultColumnDefs.length; j < y; j++) {
                    if (tableColumnDefs[i].name === defaultColumnDefs[j].name) {
                        defaultColumnDefs[j].title = tableColumnDefs[i].title;
                        tableColumnDefs[i] = defaultColumnDefs[j];
                        columnFound = true;
                    }
                }
                for (var j = 0, y = this.commonTableDataColumns.length; j < y; j++) {
                    if (tableColumnDefs[i].name === this.commonTableDataColumns[j].name) {
                        this.commonTableDataColumns[j].title = tableColumnDefs[i].title;
                        tableColumnDefs[i] = this.commonTableDataColumns[j];
                        columnFound = true;
                    }
                }
                if (!columnFound) {
                    // tableColumnDefs[i].filter = null; -- LHB 05/21/2021 commented out as part of fix for TT-7810
                }
            }
            return tableColumnDefs;
        };
        this.addCustomFieldsToListDataObjects = function (dataObject, selectedClient) {
            //Loop through appointment and client fields to add them to the flat appt object in case they have them on display as columns in the list view
            if (dataObject.fields !== undefined && dataObject.fields !== null) {
                for (var j = 0, y = dataObject.fields.length; j < y; j++) {
                    var apptPropLabel = "field_" + dataObject.fields[j].schedulerPreferenceFieldDefnId;
                    if (dataObject.fields[j].dataType === 'FILEUPLOAD') {
                        dataObject[apptPropLabel] = "<a href='" + dataObject.fields[j].extendedValue + "' target='_blank'>Open File</a>";
                    }
                    else {
                        dataObject[apptPropLabel] = dataObject.fields[j].value;
                    }
                }
            }
            if (selectedClient !== undefined && selectedClient.fields !== undefined && selectedClient.fields !== null && selectedClient.fields.length > 0) {
                for (var j = 0, y = selectedClient.fields.length; j < y; j++) {
                    var apptPropLabel = "field_" + selectedClient.fields[j].schedulerPreferenceFieldDefnId;
                    if (selectedClient.fields[j].dataType === 'FILEUPLOAD') {
                        dataObject[apptPropLabel] = "<a href='" + selectedClient.fields[j].extendedValue + "' target='_blank'>Open File</a>";
                    }
                    else {
                        dataObject[apptPropLabel] = selectedClient.fields[j].value;
                    }
                }
            }
            return dataObject;
        };
        this.schedulerPreferenceService = injector.get(_scheduler_preference_service__WEBPACK_IMPORTED_MODULE_9__["SchedulerPreferenceService"]);
        this.configListService = injector.get(_config_list_service__WEBPACK_IMPORTED_MODULE_10__["ConfigListService"]);
    }
    DataTablesService.prototype.getDefaultApptDisplayedColumns = function (prefixProp) {
        if (prefixProp === undefined)
            prefixProp = "";
        var defaultApptDisplayedColumns = [prefixProp + '%APPT_ID%',
            prefixProp + '%APPT_CLIENT_START_DATE_TIME_LONG%',
            prefixProp + '%LOCATION_NAME%',
            prefixProp + '%STAFF_FULLNAME%',
            prefixProp + '%REASON%'];
        return defaultApptDisplayedColumns;
    };
    DataTablesService.prototype.getDefaultApptColumnDefs = function () {
        var defaultApptColumnDefs = [
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('calendarId', 'Appointment ID'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('clientStartTimeDate', 'Date & Time', 'date', this.dateFileFormats),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('location.locationName', this.configListService.getTitleCaseLabel('locationLabel') || 'Location'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('staff.fullName', this.configListService.getTitleCaseLabel('staffLabel') || 'Staff'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('reason.reasonDesc', this.configListService.getTitleCaseLabel('reasonLabel') || 'Reason')
        ];
        return defaultApptColumnDefs;
    };
    DataTablesService.prototype.getDefaultRepeatingApptDisplayedColumns = function (prefixProp) {
        if (prefixProp === undefined)
            prefixProp = "";
        var defaultApptDisplayedColumns = [prefixProp + '%RECURRING_APPT_ID%',
            prefixProp + '%RECURRING_STATUS%',
            prefixProp + '%RECURRING_APPT_STARTDATE%',
            prefixProp + '%RECURRING_APPT_ENDDATE%',
            prefixProp + '%LOCATION_NAME%',
            prefixProp + '%STAFF_FULLNAME%',
            prefixProp + '%REASON%'];
        return defaultApptDisplayedColumns;
    };
    DataTablesService.prototype.getDefaultRepeatingApptColumnDefs = function () {
        var defaultApptColumnDefs = [
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('recurringAppointmentId', 'ID'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('status', 'Status', 'chip'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('startDate', 'Start Date', 'date', this.simpleDateFileFormat),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('endDate', 'End Date', 'date', this.simpleDateFileFormat),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('location.locationName', this.configListService.getTitleCaseLabel('locationLabel') || 'Location'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('staff.fullName', this.configListService.getTitleCaseLabel('staffLabel') || 'Staff'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('reason.reasonDesc', this.configListService.getTitleCaseLabel('reasonLabel') || 'Reason')
        ];
        return defaultApptColumnDefs;
    };
    DataTablesService.prototype.getDefaultWaitlistRegistrationDisplayedColumns = function (prefixProp) {
        if (prefixProp === undefined)
            prefixProp = "";
        var defaultApptDisplayedColumns = [prefixProp + '%WAIT_LIST_ID%',
            prefixProp + '%WAIT_LIST_STATUS%',
            prefixProp + '%WAIT_LIST_PREFERRED_DATE%',
            prefixProp + '%LOCATION_NAME%',
            prefixProp + '%STAFF_FULLNAME%',
            prefixProp + '%REASON%'];
        return defaultApptDisplayedColumns;
    };
    DataTablesService.prototype.getDefaultWaitlistRegistrationColumnDefs = function () {
        var defaultApptColumnDefs = [
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('waitListId', 'ID'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('status', 'Status', 'chip'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('preferredDate', 'Date & Time', 'date', this.dateFileFormats),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('location.locationName', this.configListService.getTitleCaseLabel('locationLabel') || 'Location'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('staff.fullName', this.configListService.getTitleCaseLabel('staffLabel') || 'Staff'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('reason.reasonDesc', this.configListService.getTitleCaseLabel('reasonLabel') || 'Reason')
        ];
        return defaultApptColumnDefs;
    };
    DataTablesService.prototype.getDefaultPackageSoldColumns = function () {
        var defaultPackageSoldColumns = ['expand', 'pkg.packageName', 'packageSoldId', 'quantityUsedDisplay', 'status', 'purchaseDate', 'expireDate'];
        return defaultPackageSoldColumns;
    };
    DataTablesService.prototype.getDefaultPackageSoldColumnDefs = function () {
        var defaultPackageSoldColumnDefs = [
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('pkg.packageName', 'Package Name'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('packageSoldId', 'ID'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('quantityUsedDisplay', 'Quantity Used'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('status', 'Status'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('purchaseDate', 'Purchased On', 'date', [new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataFilterFormat"]('shortDate', false, false)]),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('expireDate', 'Expires', 'date', [new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataFilterFormat"]('shortDate', false, false)]),
        ];
        return defaultPackageSoldColumnDefs;
    };
    DataTablesService.prototype.getDefaultPaymentInfoColumns = function () {
        var defaultPackageSoldColumns = ['brand', 'last4', 'expiration', 'zip', 'actions'];
        return defaultPackageSoldColumns;
    };
    DataTablesService.prototype.getDefaultPaymentInfoColumnDefs = function () {
        var defaultPackageSoldColumnDefs = [
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('brand', 'Card Type'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('last4', 'Last 4'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('expiration', 'Expiration'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('zip', 'Zip Code'),
        ];
        return defaultPackageSoldColumnDefs;
    };
    DataTablesService.prototype.getDefaultDisclaimerFormColumns = function () {
        var defaultDisclaimerFormColumns = ['formName', 'required', 'status', 'expiresBy', 'actions'];
        return defaultDisclaimerFormColumns;
    };
    DataTablesService.prototype.getDefaultDisclaimerFormColumnDefs = function () {
        var defaultPackageSoldColumnDefs = [
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('formName', 'Form Name'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('required', 'Required', 'boolean'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('status', 'Status'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('expiresBy', 'Expires', 'date', [new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataFilterFormat"]('shortDate', false, false)]),
        ];
        return defaultPackageSoldColumnDefs;
    };
    DataTablesService.prototype.getDefaultEmailSettingsColumns = function () {
        var defaultDisclaimerFormColumns = ['displayName', 'type', 'selected', 'actions'];
        return defaultDisclaimerFormColumns;
    };
    DataTablesService.prototype.getDefaultEmailSettingsColumnDefs = function () {
        var defaultPackageSoldColumnDefs = [
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('displayName', 'Email Category / Template Name'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('type', 'Type'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_2__["TableColumnDataModel"]('selected', 'Subscribed', 'boolean'),
        ];
        return defaultPackageSoldColumnDefs;
    };
    DataTablesService.prototype.getDisplayedColumns = function (preferenceDefinedColumns, defaultColumnDefs, preference, onMobileViewPort, columnToAdd) {
        var columnsForTable;
        if (columnToAdd && preferenceDefinedColumns.indexOf(columnToAdd) === -1)
            preferenceDefinedColumns.push(columnToAdd);
        columnsForTable = this.tagsService.getApptListColumnValues(preferenceDefinedColumns, preference.schedulerPreferenceFieldDefnList, preference.labelMap, onMobileViewPort, 'apptFieldTags');
        columnsForTable.columns = this.setupColumnDefs(defaultColumnDefs, columnsForTable.columns);
        return columnsForTable;
    };
    DataTablesService.ctorParameters = function () { return [
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["TitleCasePipe"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_7__["TagsService"] },
        { type: _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_8__["TimeService"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"] },
        { type: _scheduler_time_moment_timezones_service__WEBPACK_IMPORTED_MODULE_6__["MomentTimezoneService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] },
        { type: _pipes_militaryTimeConversion_pipe__WEBPACK_IMPORTED_MODULE_11__["MilitaryTimeConversion"] }
    ]; };
    DataTablesService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_3__["TitleCasePipe"], _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"], _tags_service__WEBPACK_IMPORTED_MODULE_7__["TagsService"], _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_8__["TimeService"],
            _business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"], _scheduler_time_moment_timezones_service__WEBPACK_IMPORTED_MODULE_6__["MomentTimezoneService"],
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"], _pipes_militaryTimeConversion_pipe__WEBPACK_IMPORTED_MODULE_11__["MilitaryTimeConversion"]])
    ], DataTablesService);
    return DataTablesService;
}());



/***/ }),

/***/ "./src/app/disclaimer-form/disclaimer-form-detail/disclaimer-form-detail.component.css":
/*!*********************************************************************************************!*\
  !*** ./src/app/disclaimer-form/disclaimer-form-detail/disclaimer-form-detail.component.css ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "canvas.signature {\n    height: 100px;\n    z-index: 1000;\n    width: 100%;\n    border-bottom: 2px solid rgba(0,0,0,0.42);\n}\ndiv.fieldError canvas.signature {\n    border-bottom: 2px solid rgba(220, 53, 69, 1);\n}\ndiv.printCheckboxes i {\n    font-size: 18px;\n    margin-right: 5px;\n}\ndiv.printCheckboxes label {\n    line-height: 24px;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlzY2xhaW1lci1mb3JtL2Rpc2NsYWltZXItZm9ybS1kZXRhaWwvZGlzY2xhaW1lci1mb3JtLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLGFBQWE7SUFDYixXQUFXO0lBQ1gseUNBQXlDO0FBQzdDO0FBQ0E7SUFDSSw2Q0FBNkM7QUFDakQ7QUFDQTtJQUNJLGVBQWU7SUFDZixpQkFBaUI7QUFDckI7QUFDQTtJQUNJLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2Rpc2NsYWltZXItZm9ybS9kaXNjbGFpbWVyLWZvcm0tZGV0YWlsL2Rpc2NsYWltZXItZm9ybS1kZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImNhbnZhcy5zaWduYXR1cmUge1xuICAgIGhlaWdodDogMTAwcHg7XG4gICAgei1pbmRleDogMTAwMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgcmdiYSgwLDAsMCwwLjQyKTtcbn1cbmRpdi5maWVsZEVycm9yIGNhbnZhcy5zaWduYXR1cmUge1xuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCByZ2JhKDIyMCwgNTMsIDY5LCAxKTtcbn1cbmRpdi5wcmludENoZWNrYm94ZXMgaSB7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIG1hcmdpbi1yaWdodDogNXB4O1xufVxuZGl2LnByaW50Q2hlY2tib3hlcyBsYWJlbCB7XG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XG59XG4iXX0= */"

/***/ }),

/***/ "./src/app/disclaimer-form/disclaimer-form-detail/disclaimer-form-detail.component.ts":
/*!********************************************************************************************!*\
  !*** ./src/app/disclaimer-form/disclaimer-form-detail/disclaimer-form-detail.component.ts ***!
  \********************************************************************************************/
/*! exports provided: DisclaimerFormDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DisclaimerFormDetailComponent", function() { return DisclaimerFormDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _disclaimer_form_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../disclaimer-form.model */ "./src/app/disclaimer-form/disclaimer-form.model.ts");
/* harmony import */ var _disclaimer_form_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../disclaimer-form.service */ "./src/app/disclaimer-form/disclaimer-form.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _styleSheetService__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../styleSheetService */ "./src/app/styleSheetService.ts");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _form_functions_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../form-functions.service */ "./src/app/form-functions.service.ts");
/* harmony import */ var signature_pad_dist_signature_pad__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! signature_pad/dist/signature_pad */ "./node_modules/signature_pad/dist/signature_pad.js");
/* harmony import */ var signature_pad_dist_signature_pad__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(signature_pad_dist_signature_pad__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../auth/auth.service */ "./src/app/auth/auth.service.ts");
/* harmony import */ var _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../client-account/client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../modals/error-modal/error-modal.component */ "./src/app/modals/error-modal/error-modal.component.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _fullstory_browser__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @fullstory/browser */ "./node_modules/@fullstory/browser/dist/index.esm.js");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var rxjs_index__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! rxjs/index */ "./node_modules/rxjs/index.js");
/* harmony import */ var rxjs_index__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(rxjs_index__WEBPACK_IMPORTED_MODULE_20__);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");






















var DisclaimerFormDetailComponent = /** @class */ (function () {
    function DisclaimerFormDetailComponent(disclaimerFormService, route, router, styleSheetService, tagsService, authService, clientAccountService, responsiveService, sanitizer, businessService, formFunctionsService, timeService, dialog, schedulerPreferenceService) {
        this.disclaimerFormService = disclaimerFormService;
        this.route = route;
        this.router = router;
        this.styleSheetService = styleSheetService;
        this.tagsService = tagsService;
        this.authService = authService;
        this.clientAccountService = clientAccountService;
        this.responsiveService = responsiveService;
        this.sanitizer = sanitizer;
        this.businessService = businessService;
        this.formFunctionsService = formFunctionsService;
        this.timeService = timeService;
        this.dialog = dialog;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.disclaimerFormGroup = new _angular_forms__WEBPACK_IMPORTED_MODULE_8__["FormGroup"]({});
        this.disclaimerFormDataLoading = false;
        this.disclaimerFormDataLoaded = false;
        this.errorLoadingDisclaimerFormData = false;
        this.submittingDisclaimerForm = false;
        this.errorSubmittingDisclaimerForm = false;
        this.showBackButton = false;
        this.requiredEmptyCounter = 0;
        this.signaturePads = [];
        this.toggleOnlyDisplayOnPrint = false; // LHB 1/7/2021 TT-7225
        this.fieldSaveSubject = new rxjs_index__WEBPACK_IMPORTED_MODULE_20__["Subject"]();
        this.fieldsToSave = {};
        this.preference = schedulerPreferenceService.schedulerPreference;
    }
    DisclaimerFormDetailComponent.prototype.saveFieldTrigger = function (field) {
        var value = this.getFieldValue(field);
        if (!value)
            value = ' ';
        this.fieldsToSave[field.id] = value;
        this.fieldSaveSubject.next(this.fieldsToSave);
    };
    DisclaimerFormDetailComponent.prototype.saveField = function (fieldsToSave) {
        this.disclaimerFormService.saveFields(this.disclaimerFormData, fieldsToSave).subscribe(function () { }, function (error) {
            try {
                console.log(error.error);
                console.log(error.message);
            }
            catch (e) {
                console.log(error);
            }
        });
    };
    // saveField(field: DisclaimerFormField) { // 5/8/2021 TT-7762
    // let value = this.getFieldValue(field);
    // if (!value)
    //   value = ' ';
    // this.disclaimerFormService.saveField(this.disclaimerFormData, field.id, value).subscribe(() => {},
    //     (error: HttpErrorResponse) => {
    //         try {
    //           console.log(error.error);
    //           console.log(error.message);
    //         } catch (e) {
    //           console.log(error)
    //         }
    //
    //     });
    // }
    DisclaimerFormDetailComponent.prototype.getFieldValue = function (field) {
        var fieldId = field.htmlId;
        var value = this.disclaimerFormGroup.controls[fieldId].value;
        if (value !== null && value !== "" && field.dataType === 'DATE')
            value = this.timeService.getStringDateFromTime(value);
        return value;
    };
    DisclaimerFormDetailComponent.prototype.resizeSignatureCanvas = function (canvas, signaturePad) {
        var ratio = Math.max(window.devicePixelRatio || 1, 1);
        canvas.width = canvas.offsetWidth * ratio;
        canvas.height = canvas.offsetHeight * ratio;
        canvas.getContext("2d").scale(ratio, ratio);
        signaturePad.clear();
    };
    DisclaimerFormDetailComponent.prototype.storeSignature = function (fieldId) {
        for (var i = 0, x = this.signaturePads.length; i < x; i++) {
            if (this.signaturePads[i].fieldId === fieldId) {
                var dataUrl = null;
                if (!this.signaturePads[i].signaturePad.isEmpty()) { // if it was a required signature, check that something has been filled in there and if not, fill in null to respective field value
                    dataUrl = this.signaturePads[i].signaturePad.toDataURL("image/svg+xml");
                }
                this.disclaimerFormGroup.controls[fieldId].setValue(dataUrl);
                for (var i_1 = 0, x_1 = this.disclaimerFormData.formFields.length; i_1 < x_1; i_1++)
                    if (this.disclaimerFormData.formFields[i_1].htmlId === fieldId)
                        this.saveFieldTrigger(this.disclaimerFormData.formFields[i_1]);
            }
        }
    };
    DisclaimerFormDetailComponent.prototype.dataURItoBlob = function (dataURI, type) {
        // convert base64 to raw binary data held in a string
        var byteString = atob(dataURI.split(',')[1]);
        // separate out the mime component
        var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];
        // write the bytes of the string to an ArrayBuffer
        var ab = new ArrayBuffer(byteString.length);
        var ia = new Uint8Array(ab);
        for (var i = 0; i < byteString.length; i++) {
            ia[i] = byteString.charCodeAt(i);
        }
        // write the ArrayBuffer to a blob, and you're done
        var bb = new Blob([ab], { type: type });
        return bb;
    };
    DisclaimerFormDetailComponent.prototype.instantiateSignature = function () {
        var _this = this;
        setTimeout(function () {
            if (_this.disclaimerFormData.formFields) {
                var _loop_1 = function (i, x) {
                    if (_this.disclaimerFormData.formFields[i].dataType === 'TXT' && _this.disclaimerFormData.formFields[i].inputType === 'signature') {
                        var fieldId_1 = _this.disclaimerFormData.formFields[i].htmlId;
                        var canvas = document.getElementById(fieldId_1);
                        if (canvas) {
                            var signaturePad = new signature_pad_dist_signature_pad__WEBPACK_IMPORTED_MODULE_10__(canvas, { penColor: 'rgb(0,0,0)', onEnd: function () { _this.storeSignature(fieldId_1); } });
                            _this.resizeSignatureCanvas(canvas, signaturePad);
                            if (_this.disclaimerFormData.formFields[i].value !== null) {
                                signaturePad.fromDataURL(_this.disclaimerFormData.formFields[i].value);
                                if (_this.disclaimerFormData.status === 'SUBMITTED')
                                    signaturePad.off();
                            }
                            _this.signaturePads.push({ signaturePad: signaturePad, fieldId: fieldId_1, required: _this.disclaimerFormData.formFields[i].required });
                        }
                    }
                };
                for (var i = 0, x = _this.disclaimerFormData.formFields.length; i < x; i++) {
                    _loop_1(i, x);
                }
            }
        }, 200);
    };
    DisclaimerFormDetailComponent.prototype.goBack = function () {
        if (this.authService.isAuth() && history.state !== undefined && history.state !== null) {
            if (history.state.onMyProfile !== undefined && history.state.onMyProfile !== null && history.state.onMyProfile === true)
                this.router.navigate(['/my-account/profile'], { relativeTo: this.route.root, state: { showForms: true } });
            else if (history.state.onProfileHome !== undefined && history.state.onProfileHome !== null && history.state.onProfileHome === true)
                this.router.navigate(['/my-account'], { relativeTo: this.route.root });
            else
                this.router.navigate(['scheduler'], { relativeTo: this.route.root });
        }
        else {
            this.router.navigate(['scheduler'], { relativeTo: this.route.root });
        }
    };
    DisclaimerFormDetailComponent.prototype.showRequiredFieldEmptyMessage = function () {
        var errorMessage = this.tagsService.getInvalidFormFieldErrorMsg(this.disclaimerFormData.formFields, 'htmlId', this.disclaimerFormGroup, this.preference, 'disclaimerFormFieldsInvalid');
        var dialogRef = this.dialog.open(_modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_15__["ErrorModalComponent"], {
            maxWidth: this.responsiveService.getMaxWidthForModals(),
            data: { preference: this.preference, errorType: 'disclaimerFormFieldsInvalid', errorMessage: errorMessage }
        });
    };
    DisclaimerFormDetailComponent.prototype.submitDisclaimerForm = function () {
        var _this = this;
        this.requiredEmptyCounter = 0;
        var allFormFieldsAreDescriptions = true; // LHB 6/1/2021 TT-7866
        var descriptionFieldTypes = ['description', 'variableDescription'];
        for (var i = 0, x = this.disclaimerFormData.formFields.length; i < x; i++) {
            var fieldId = this.disclaimerFormData.formFields[i].htmlId;
            if (descriptionFieldTypes.indexOf(this.disclaimerFormData.formFields[i].fieldType) === -1)
                allFormFieldsAreDescriptions = false;
            this.disclaimerFormData.formFields[i].value = this.getFieldValue(this.disclaimerFormData.formFields[i]);
            console.log('this.disclaimerFormData.formFields[' + i + ']', this.disclaimerFormData.formFields[i]);
            console.log('this.disclaimerFormData.formFields[' + i + '].value', this.disclaimerFormData.formFields[i].value);
            if (this.disclaimerFormData.formFields[i].required && (this.disclaimerFormData.formFields[i].value === null || this.disclaimerFormData.formFields[i].value === "")) {
                this.disclaimerFormGroup.controls[fieldId].setErrors({ incorrect: true });
                this.disclaimerFormGroup.controls[fieldId].markAsTouched();
                this.disclaimerFormData.formFields[i].error = true;
                this.requiredEmptyCounter++;
            }
            else {
                this.disclaimerFormData.formFields[i].error = false;
            }
        }
        if (this.requiredEmptyCounter === 0) {
            this.submittingDisclaimerForm = true;
            this.errorSubmittingDisclaimerForm = false;
            this.disclaimerFormService.saveFormData(this.disclaimerFormData, 'SUBMITTED', allFormFieldsAreDescriptions).subscribe(function (disclaimerFormData) {
                _this.submittingDisclaimerForm = false;
                _this.disclaimerFormData = disclaimerFormData;
                if (_this.selectedClient !== undefined && _this.selectedClient !== null && _this.selectedClient.formList !== undefined && _this.selectedClient.formList !== null && _this.selectedClient.formList.length > 0) {
                    for (var i = 0, x = _this.selectedClient.formList.length; i < x; i++) {
                        if (_this.selectedClient.formList[i].disclaimerFormUuid === _this.disclaimerFormData.disclaimerFormUuid) {
                            _this.selectedClient.formList[i].status = _this.disclaimerFormData.status;
                        }
                    }
                }
                window.scrollTo(0, 0);
                _this.organizeFormFields();
            }, function (error) {
                console.log(error);
                var requiredFieldMissingError = 'REQUIRED_FIELD_MISSING:';
                if (error.error && error.error.message && error.error.message.indexOf(requiredFieldMissingError) !== -1) {
                    var errorMessage = error.error.message;
                    var errorMessageWithoutPrimary = errorMessage.slice(requiredFieldMissingError.length);
                    var indexOfSecondSemiColon = errorMessageWithoutPrimary.indexOf(':');
                    var fieldId = errorMessageWithoutPrimary.slice(0, indexOfSecondSemiColon);
                    for (var i = 0, x = _this.disclaimerFormData.formFields.length; i < x; i++) {
                        if (_this.disclaimerFormData.formFields[i].id === fieldId) {
                            var htmlId = _this.disclaimerFormData.formFields[i].htmlId;
                            _this.disclaimerFormGroup.controls[htmlId].setErrors({ incorrect: true });
                            _this.disclaimerFormGroup.controls[htmlId].markAsTouched();
                            _this.disclaimerFormData.formFields[i].error = true;
                        }
                    }
                    _this.showRequiredFieldEmptyMessage();
                    _this.submittingDisclaimerForm = false;
                    _this.errorSubmittingDisclaimerForm = true;
                }
                else {
                    window.scrollTo(0, 0);
                    _this.submittingDisclaimerForm = false;
                    _this.errorSubmittingDisclaimerForm = true;
                }
            });
        }
        else {
            this.showRequiredFieldEmptyMessage();
        }
    };
    DisclaimerFormDetailComponent.prototype.setMultiCheckboxValue = function (field, dropdownValue, event) {
        field.value = this.formFunctionsService.setMultiCheckboxValue(field.value, dropdownValue.label, event);
        this.disclaimerFormGroup.controls[field.htmlId].setValue(field.value);
        this.saveFieldTrigger(field);
    };
    DisclaimerFormDetailComponent.prototype.setRadioValue = function (field, dropdownValue, event) {
        field.value = dropdownValue.label;
        this.disclaimerFormGroup.controls[field.htmlId].setValue(field.value);
        this.saveFieldTrigger(field);
    };
    DisclaimerFormDetailComponent.prototype.renderSubmittedSignature = function () {
        if (this.disclaimerFormData.status === 'SUBMITTED' && !this.disclaimerFormData.disclaimerForm.hideSubmittedForms && this.disclaimerFormData.formFields) {
            for (var i = 0, y = this.disclaimerFormData.formFields.length; i < y; i++) {
                if (this.disclaimerFormData.formFields[i].dataType === 'TXT' && this.disclaimerFormData.formFields[i].inputType === 'signature' && !this.disclaimerFormData.formFields[i].sigImgAdded) {
                    var sigImgValue = this.disclaimerFormData.formFields[i].value;
                    if (sigImgValue !== null && sigImgValue.indexOf('http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd') !== -1) { // old signature not new signature pad
                        var newStringValue = '';
                        for (var j = 0, z = sigImgValue.length; j < z; j++) {
                            if (sigImgValue === '"') {
                                newStringValue = newStringValue + "'";
                            }
                            else {
                                newStringValue = newStringValue + sigImgValue[j];
                            }
                        }
                        sigImgValue = newStringValue.replace("data:image/svg+xml,<?xml version='1.0' encoding='UTF-8' standalone='no'?><!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'>", '');
                        sigImgValue = newStringValue.replace(/\\/g, '');
                        sigImgValue = this.sanitizer.bypassSecurityTrustHtml(sigImgValue);
                        sigImgValue.changingThisBreaksApplicationSecurity = sigImgValue.changingThisBreaksApplicationSecurity.replace("data:image/svg+xml,", "");
                        this.disclaimerFormData.formFields[i].sigImgAdded = true;
                        this.disclaimerFormData.formFields[i].sigImgOld = true;
                        this.disclaimerFormData.formFields[i].value = sigImgValue;
                    }
                    else {
                        var imgId = this.disclaimerFormData.formFields[i].htmlId + "img";
                        var img = new Image();
                        img.src = sigImgValue;
                        var imageField = document.getElementById(imgId);
                        imageField.appendChild(img);
                        this.disclaimerFormData.formFields[i].sigImgAdded = true;
                        this.disclaimerFormData.formFields[i].sigImgOld = false;
                    }
                }
            }
        }
    };
    DisclaimerFormDetailComponent.prototype.ngAfterViewChecked = function () {
        if (this.disclaimerFormData !== undefined)
            this.renderSubmittedSignature();
    };
    DisclaimerFormDetailComponent.prototype.organizeFormFields = function () {
        var _this = this;
        if (this.disclaimerFormData.formFields) {
            for (var i = 0, x = this.disclaimerFormData.formFields.length; i < x; i++) {
                this.disclaimerFormData.formFields[i].htmlId = 'field' + i;
                if (this.disclaimerFormData.formFields[i].dataType === 'DATE' && this.disclaimerFormData.formFields[i].value !== null && this.disclaimerFormData.formFields[i].value !== "" &&
                    typeof this.disclaimerFormData.formFields[i].dataType === 'string') {
                    this.disclaimerFormData.formFields[i].value = this.timeService.convertStringDateToObject(this.disclaimerFormData.formFields[i].value, 0);
                }
                if (this.disclaimerFormData.formFields[i].fieldValues !== null && (this.disclaimerFormData.formFields[i].dataType === 'CHECKBOXES' || this.disclaimerFormData.formFields[i].dataType === 'RADIO')) {
                    this.disclaimerFormData.formFields[i].fieldValueObjs = [];
                    var selectedValuesArray = this.formFunctionsService.getCheckedValues(this.disclaimerFormData.formFields[i].value);
                    for (var j = 0, y = this.disclaimerFormData.formFields[i].fieldValues.length; j < y; j++) {
                        var fieldValueObj = new _disclaimer_form_model__WEBPACK_IMPORTED_MODULE_2__["FieldValueObject"]();
                        fieldValueObj.label = this.disclaimerFormData.formFields[i].fieldValues[j];
                        fieldValueObj.label = fieldValueObj.label.trim(); // LHB 07/20/2020 TT-6850
                        if (selectedValuesArray.indexOf(fieldValueObj.label) !== -1) {
                            fieldValueObj.selected = true;
                        }
                        else
                            fieldValueObj.selected = false;
                        this.disclaimerFormData.formFields[i].fieldValueObjs.push(fieldValueObj);
                    }
                }
            }
            var controlsObject = {};
            for (var i = 0, x = this.disclaimerFormData.formFields.length; i < x; i++) {
                var validatorsArray = [];
                if (this.disclaimerFormData.formFields[i].required) {
                    validatorsArray.push(_angular_forms__WEBPACK_IMPORTED_MODULE_8__["Validators"].required);
                }
                controlsObject[this.disclaimerFormData.formFields[i].htmlId] = new _angular_forms__WEBPACK_IMPORTED_MODULE_8__["FormControl"]({
                    value: this.disclaimerFormData.formFields[i].value,
                    disabled: this.disclaimerFormData.status === 'SUBMITTED'
                }, validatorsArray);
            }
            this.disclaimerFormGroup = new _angular_forms__WEBPACK_IMPORTED_MODULE_8__["FormGroup"](controlsObject);
        }
        this.disclaimerFormTitle = this.disclaimerFormData.disclaimerForm.formName;
        this.styleSheetService.addStylesheetToHead(this.disclaimerFormData.disclaimerForm.stylesheet);
        this.disclaimerFormDataLoading = false;
        setTimeout(function () {
            _this.toggleOnlyDisplayOnPrint = true;
        }, 100);
        this.instantiateSignature();
    };
    DisclaimerFormDetailComponent.prototype.determineSuccessMsg = function () {
        if (this.disclaimerFormData.disclaimerForm.thankYouMsg === null || this.disclaimerFormData.disclaimerForm.thankYouMsg === "") {
            this.formSuccessMessage = this.tagsService.assignObjectToTags(this.disclaimerFormData.disclaimerForm, this.preference.labelMap.disclaimerSuccessMsg, this.tagsService.disclaimerFormTags);
        }
        else {
            this.formSuccessMessage = this.disclaimerFormData.disclaimerForm.thankYouMsg;
        }
    };
    DisclaimerFormDetailComponent.prototype.getDisclaimerFormData = function () {
        var _this = this;
        if (this.disclaimerFormUUID !== undefined && this.disclaimerFormUUID !== null && this.disclaimerFormUUID !== '') {
            this.disclaimerFormDataLoading = true;
            this.disclaimerFormService.getDisclaimerFormData(this.disclaimerFormUUID).subscribe(function (disclaimerFormData) {
                _this.disclaimerFormData = disclaimerFormData;
                _this.disclaimerFormDataLoaded = true;
                _this.errorLoadingDisclaimerFormData = false;
                _this.determineSuccessMsg();
                _this.organizeFormFields();
                _this.enableFullStory();
            }, function (error) {
                _this.disclaimerFormDataLoaded = false;
                _this.errorLoadingDisclaimerFormData = true;
                _this.disclaimerFormDataLoading = false;
            });
        }
        else {
        }
    };
    DisclaimerFormDetailComponent.prototype.enableFullStory = function () {
        var shouldEnableFullStory = false;
        try {
            shouldEnableFullStory = JSON.parse(sessionStorage.getItem('enableFullStory'));
        }
        catch (e) {
        }
        if (shouldEnableFullStory) {
            if (!this.authService.fullStoryEnabled) {
                _fullstory_browser__WEBPACK_IMPORTED_MODULE_18__["init"]({ orgId: '11WBN3' });
                this.authService.fullStoryEnabled = true;
            }
            else
                _fullstory_browser__WEBPACK_IMPORTED_MODULE_18__["restart"]();
            var uid = String(this.disclaimerFormData.client.clientId);
            var disclaimerFormName = '';
            if (this.disclaimerFormData.disclaimerForm && this.disclaimerFormData.disclaimerForm.formName)
                disclaimerFormName = this.disclaimerFormData.disclaimerForm.formName;
            var userDetails = {
                displayName: this.disclaimerFormData.client.fullName,
                email: this.disclaimerFormData.client.emailAddress,
                formUUID: this.disclaimerFormData.disclaimerFormUuid,
                businessId: this.disclaimerFormData.businessId,
                formName: disclaimerFormName
            };
            _fullstory_browser__WEBPACK_IMPORTED_MODULE_18__["identify"](uid, userDetails);
        }
    };
    DisclaimerFormDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        var disclaimerFormIdString = this.route.params.subscribe(function (params) {
            _this.disclaimerFormUUID = params['disclaimerFormUUID'];
            _this.getDisclaimerFormData();
        });
        this.fieldSaveSubject.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_21__["debounceTime"])(500)).subscribe(function (fieldsToSave) { return _this.saveField(fieldsToSave); });
        if (this.authService.isAuth())
            this.selectedClient = this.clientAccountService.setSelectedClientOnComponent(this.preference);
        if (this.authService.isAuth() && history.state !== undefined && history.state !== null &&
            (history.state.onMyProfile !== undefined && history.state.onMyProfile !== null && history.state.onMyProfile === true) ||
            (history.state.onProfileHome !== undefined && history.state.onProfileHome !== null && history.state.onProfileHome === true))
            this.showBackButton = true;
    };
    DisclaimerFormDetailComponent.prototype.ngOnDestroy = function () {
        var shouldEnableFullStory = sessionStorage.getItem('enableFullStory');
        try {
            if (shouldEnableFullStory !== null && shouldEnableFullStory !== '') {
                shouldEnableFullStory = JSON.parse(shouldEnableFullStory);
                if (shouldEnableFullStory)
                    _fullstory_browser__WEBPACK_IMPORTED_MODULE_18__["shutdown"]();
            }
        }
        catch (e) {
            console.log(e);
        }
    };
    DisclaimerFormDetailComponent.ctorParameters = function () { return [
        { type: _disclaimer_form_service__WEBPACK_IMPORTED_MODULE_3__["DisclaimerFormService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
        { type: _styleSheetService__WEBPACK_IMPORTED_MODULE_5__["StyleSheetService"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_11__["TagsService"] },
        { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_13__["AuthService"] },
        { type: _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_14__["ClientAccountService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_16__["ResponsiveService"] },
        { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__["DomSanitizer"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_7__["BusinessService"] },
        { type: _form_functions_service__WEBPACK_IMPORTED_MODULE_9__["FormFunctionsService"] },
        { type: _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_12__["TimeService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_17__["MatDialog"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_19__["SchedulerPreferenceService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('.signature', { static: true }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"])
    ], DisclaimerFormDetailComponent.prototype, "el", void 0);
    DisclaimerFormDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-disclaimer-form-detail',
            template: __webpack_require__(/*! raw-loader!./disclaimer-form-detail.component.html */ "./node_modules/raw-loader/index.js!./src/app/disclaimer-form/disclaimer-form-detail/disclaimer-form-detail.component.html"),
            styles: [__webpack_require__(/*! ./disclaimer-form-detail.component.css */ "./src/app/disclaimer-form/disclaimer-form-detail/disclaimer-form-detail.component.css"), __webpack_require__(/*! ../../form-field-styles.component.css */ "./src/app/form-field-styles.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_disclaimer_form_service__WEBPACK_IMPORTED_MODULE_3__["DisclaimerFormService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _styleSheetService__WEBPACK_IMPORTED_MODULE_5__["StyleSheetService"],
            _tags_service__WEBPACK_IMPORTED_MODULE_11__["TagsService"], _auth_auth_service__WEBPACK_IMPORTED_MODULE_13__["AuthService"], _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_14__["ClientAccountService"], _responsive_service__WEBPACK_IMPORTED_MODULE_16__["ResponsiveService"],
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__["DomSanitizer"], _business_service__WEBPACK_IMPORTED_MODULE_7__["BusinessService"], _form_functions_service__WEBPACK_IMPORTED_MODULE_9__["FormFunctionsService"], _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_12__["TimeService"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_17__["MatDialog"],
            _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_19__["SchedulerPreferenceService"]])
    ], DisclaimerFormDetailComponent);
    return DisclaimerFormDetailComponent;
}());



/***/ }),

/***/ "./src/app/disclaimer-form/disclaimer-form.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/disclaimer-form/disclaimer-form.component.ts ***!
  \**************************************************************/
/*! exports provided: DisclaimerFormComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DisclaimerFormComponent", function() { return DisclaimerFormComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _disclaimer_form_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./disclaimer-form.service */ "./src/app/disclaimer-form/disclaimer-form.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");




var DisclaimerFormComponent = /** @class */ (function () {
    function DisclaimerFormComponent(disclaimerFormService, route) {
        this.disclaimerFormService = disclaimerFormService;
        this.route = route;
    }
    DisclaimerFormComponent.prototype.ngOnInit = function () {
    };
    DisclaimerFormComponent.ctorParameters = function () { return [
        { type: _disclaimer_form_service__WEBPACK_IMPORTED_MODULE_2__["DisclaimerFormService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"] }
    ]; };
    DisclaimerFormComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-disclaimer-form',
            template: __webpack_require__(/*! raw-loader!./disclaimer-form.component.html */ "./node_modules/raw-loader/index.js!./src/app/disclaimer-form/disclaimer-form.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_disclaimer_form_service__WEBPACK_IMPORTED_MODULE_2__["DisclaimerFormService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]])
    ], DisclaimerFormComponent);
    return DisclaimerFormComponent;
}());



/***/ }),

/***/ "./src/app/disclaimer-form/disclaimer-form.model.ts":
/*!**********************************************************!*\
  !*** ./src/app/disclaimer-form/disclaimer-form.model.ts ***!
  \**********************************************************/
/*! exports provided: ClientFormListObj, DisclaimerForm, FieldValueObject, DisclaimerFormField, DisclaimerFormData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientFormListObj", function() { return ClientFormListObj; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DisclaimerForm", function() { return DisclaimerForm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FieldValueObject", function() { return FieldValueObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DisclaimerFormField", function() { return DisclaimerFormField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DisclaimerFormData", function() { return DisclaimerFormData; });
var ClientFormListObj = /** @class */ (function () {
    function ClientFormListObj() {
    }
    return ClientFormListObj;
}());

var DisclaimerForm = /** @class */ (function () {
    function DisclaimerForm() {
    }
    return DisclaimerForm;
}());

var FieldValueObject = /** @class */ (function () {
    function FieldValueObject() {
    }
    return FieldValueObject;
}());

var DisclaimerFormField = /** @class */ (function () {
    function DisclaimerFormField() {
    }
    return DisclaimerFormField;
}());

var DisclaimerFormData = /** @class */ (function () {
    function DisclaimerFormData() {
    }
    return DisclaimerFormData;
}());



/***/ }),

/***/ "./src/app/disclaimer-form/disclaimer-form.service.ts":
/*!************************************************************!*\
  !*** ./src/app/disclaimer-form/disclaimer-form.service.ts ***!
  \************************************************************/
/*! exports provided: DisclaimerFormService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DisclaimerFormService", function() { return DisclaimerFormService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/internal/operators */ "./node_modules/rxjs/internal/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_6__);







var DisclaimerFormService = /** @class */ (function () {
    function DisclaimerFormService(http, datePipe) {
        this.http = http;
        this.datePipe = datePipe;
        this.apiUrl = sessionStorage.getItem('csAPIBase') + 'cs/';
    }
    DisclaimerFormService.prototype.handleError = function (error) {
        console.log(error);
        return Promise.reject(error);
    };
    DisclaimerFormService.prototype.getDisclaimerFormData = function (disclaimerFormUUID) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]();
        var backofficeSessionToken = sessionStorage.getItem('backofficeSessionToken');
        params = params.append('backofficeSessionToken', backofficeSessionToken);
        return this.http
            .get(this.apiUrl + 'disclaimerFormData/' + disclaimerFormUUID, { observe: "body", responseType: 'json', params: params })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    DisclaimerFormService.prototype.saveFormData = function (disclaimerForm, newStatus, allFormFieldsAreDescriptions) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]();
        params = params.append('newStatus', newStatus);
        params = params.append('backofficeSessionToken', sessionStorage.getItem('backofficeSessionToken'));
        var dfd = lodash__WEBPACK_IMPORTED_MODULE_6__["cloneDeep"](disclaimerForm);
        if (!allFormFieldsAreDescriptions)
            dfd.formFields = null;
        if (dfd.dataJson && !allFormFieldsAreDescriptions)
            dfd.dataJson = null;
        if (dfd.disclaimerForm && dfd.disclaimerForm.formFields && !allFormFieldsAreDescriptions)
            dfd.disclaimerForm.formFields = null;
        return this.http
            .post(this.apiUrl + 'disclaimerFormData', dfd, { observe: "body", responseType: 'json', params: params })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    DisclaimerFormService.prototype.saveFields = function (disclaimerFormData, fieldsToSave) {
        return this.http
            .post(this.apiUrl + 'disclaimerFormData/' + disclaimerFormData.disclaimerFormUuid + '/saveFieldValues', fieldsToSave, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    DisclaimerFormService.prototype.saveField = function (disclaimerFormData, fieldId, value) {
        return this.http
            .post(this.apiUrl + 'disclaimerFormData/' + disclaimerFormData.disclaimerFormUuid + '/' + fieldId, value, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_5__["catchError"])(this.handleError));
    };
    DisclaimerFormService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"] }
    ]; };
    DisclaimerFormService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"], _angular_common__WEBPACK_IMPORTED_MODULE_3__["DatePipe"]])
    ], DisclaimerFormService);
    return DisclaimerFormService;
}());



/***/ }),

/***/ "./src/app/email-settings/email-settings-container.component.ts":
/*!**********************************************************************!*\
  !*** ./src/app/email-settings/email-settings-container.component.ts ***!
  \**********************************************************************/
/*! exports provided: EmailSettingsContainerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmailSettingsContainerComponent", function() { return EmailSettingsContainerComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../responsive.service */ "./src/app/responsive.service.ts");



var EmailSettingsContainerComponent = /** @class */ (function () {
    function EmailSettingsContainerComponent(responsiveService) {
        this.responsiveService = responsiveService;
    }
    EmailSettingsContainerComponent.prototype.ngOnInit = function () {
    };
    EmailSettingsContainerComponent.ctorParameters = function () { return [
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_2__["ResponsiveService"] }
    ]; };
    EmailSettingsContainerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-email-settings-container',
            template: "\n    <mat-card id=\"clientProfile\" class=\"myAccountCard noBorderBottom\" backgroundStyling containerClass=\"myAccountCard\" [ngClass]=\"{'embeddedView': responsiveService.isEmbedded}\">\n        <router-outlet></router-outlet>\n    </mat-card>\n  "
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_responsive_service__WEBPACK_IMPORTED_MODULE_2__["ResponsiveService"]])
    ], EmailSettingsContainerComponent);
    return EmailSettingsContainerComponent;
}());



/***/ }),

/***/ "./src/app/email-settings/email-settings.component.ts":
/*!************************************************************!*\
  !*** ./src/app/email-settings/email-settings.component.ts ***!
  \************************************************************/
/*! exports provided: EmailSettingsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmailSettingsComponent", function() { return EmailSettingsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _email_settings_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./email-settings.service */ "./src/app/email-settings/email-settings.service.ts");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/esm5/table.es5.js");
/* harmony import */ var _data_tables_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../data-tables.service */ "./src/app/data-tables.service.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _models_EmailSettingsList_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../models/EmailSettingsList.model */ "./src/models/EmailSettingsList.model.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");










var EmailSettingsComponent = /** @class */ (function () {
    function EmailSettingsComponent(emailSettingsService, dataTablesService, businessService, route, schedulerPreferenceService) {
        this.emailSettingsService = emailSettingsService;
        this.dataTablesService = dataTablesService;
        this.businessService = businessService;
        this.route = route;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.displayedColumns = this.dataTablesService.getDefaultEmailSettingsColumns();
        this.columnDefs = this.dataTablesService.getDefaultEmailSettingsColumnDefs();
        this.emailCategoriesList = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"]();
        this.changingSubscribeStatus = false;
        this.subscribeStatusChanged = false;
        this.errorChangingSubscribeStatus = false;
        this.preference = schedulerPreferenceService.schedulerPreference;
    }
    EmailSettingsComponent.prototype.establishTable = function () {
        var _this = this;
        var emailSettings = [];
        for (var i = 0, x = this.emailCategories.length; i < x; i++) {
            var emailSetting = new _models_EmailSettingsList_model__WEBPACK_IMPORTED_MODULE_8__["EmailSettingConfig"]();
            emailSetting.displayName = this.emailCategories[i].emailCategoryDisplayName;
            emailSetting.type = this.emailCategories[i].type;
            emailSetting.selected = this.emailCategories[i].selected;
            emailSetting.id = this.emailCategories[i].emailCatagoryId;
            emailSetting.emailTemplateOrCategory = 'emailCategory';
            emailSettings.push(emailSetting);
        }
        for (var i = 0, x = this.emailTemplates.length; i < x; i++) {
            var emailSetting = new _models_EmailSettingsList_model__WEBPACK_IMPORTED_MODULE_8__["EmailSettingConfig"]();
            emailSetting.displayName = this.emailTemplates[i].externalName || this.emailTemplates[i].templateName;
            emailSetting.type = this.emailTemplates[i].emailCatagory.type;
            emailSetting.selected = this.emailTemplates[i].selected;
            emailSetting.id = this.emailTemplates[i].emailTemplateId;
            emailSetting.emailTemplateOrCategory = 'emailTemplate';
            emailSettings.push(emailSetting);
        }
        this.emailCategoriesList.data = emailSettings;
        this.emailCategoriesList.sortingDataAccessor = function (obj, property) { return _this.dataTablesService.getProperty(obj, property); };
        this.emailCategoriesList.sort = this.sort;
    };
    EmailSettingsComponent.prototype.updateSelected = function () {
        if (!this.selectedClient.excludeEmailCategoryIdList)
            this.selectedClient.excludeEmailCategoryIdList = [];
        for (var i = 0, x = this.emailCategories.length; i < x; i++)
            if (this.selectedClient.excludeEmailCategoryIdList.indexOf(this.emailCategories[i].emailCatagoryId) !== -1)
                this.emailCategories[i].selected = false;
            else
                this.emailCategories[i].selected = true;
        if (!this.selectedClient.excludeEmailTemplateIdList)
            this.selectedClient.excludeEmailTemplateIdList = [];
        for (var i = 0, x = this.emailTemplates.length; i < x; i++)
            if (this.selectedClient.excludeEmailTemplateIdList.indexOf(this.emailTemplates[i].emailTemplateId) !== -1)
                this.emailTemplates[i].selected = false;
            else
                this.emailTemplates[i].selected = true;
        this.establishTable();
    };
    EmailSettingsComponent.prototype.changeSubscribeStatus = function (emailSettingConfig) {
        var _this = this;
        emailSettingConfig.changingSubscribeStatus = true;
        emailSettingConfig.subscribeStatusChanged = false;
        emailSettingConfig.errorChangingSubscribeStatus = false;
        if (emailSettingConfig.emailTemplateOrCategory === 'emailCategory')
            for (var i = 0, x = this.emailCategories.length; i < x; i++)
                if (this.emailCategories[i].emailCatagoryId === emailSettingConfig.id)
                    this.emailCategories[i].selected = !this.emailCategories[i].selected;
        if (emailSettingConfig.emailTemplateOrCategory === 'emailTemplate')
            for (var i = 0, x = this.emailTemplates.length; i < x; i++)
                if (this.emailTemplates[i].emailTemplateId === emailSettingConfig.id)
                    this.emailTemplates[i].selected = !this.emailTemplates[i].selected;
        var excludedEmailCategoryIdList = [];
        var subscribedEmailCategoryIdList = [];
        for (var i = 0, x = this.emailCategories.length; i < x; i++) {
            if (!this.emailCategories[i].selected)
                excludedEmailCategoryIdList.push(this.emailCategories[i].emailCatagoryId);
            else
                subscribedEmailCategoryIdList.push(this.emailCategories[i].emailCatagoryId);
        }
        var excludeEmailTemplateIdList = [];
        var subscribedEmailTemplateIdList = [];
        for (var i = 0, x = this.emailTemplates.length; i < x; i++) {
            if (!this.emailTemplates[i].selected)
                excludeEmailTemplateIdList.push(this.emailTemplates[i].emailTemplateId);
            else
                subscribedEmailTemplateIdList.push(this.emailTemplates[i].emailTemplateId);
        }
        this.emailSettingsService.updateClientEmails(this.selectedClient.clientId, excludedEmailCategoryIdList, subscribedEmailCategoryIdList, excludeEmailTemplateIdList, subscribedEmailTemplateIdList)
            .subscribe(function (updatedClient) {
            _this.selectedClient.excludeEmailCategoryIdList = updatedClient.excludeEmailCategoryIdList;
            _this.selectedClient.excludeEmailTemplateIdList = updatedClient.excludeEmailTemplateIdList;
            _this.updateSelected();
            emailSettingConfig.changingSubscribeStatus = false;
            emailSettingConfig.subscribeStatusChanged = true;
            setTimeout(function () {
                emailSettingConfig.subscribeStatusChanged = false;
            }, 2000);
            emailSettingConfig.errorChangingSubscribeStatus = false;
        }, function (error) {
            //FAILED TO SAVE CLIENT
            emailSettingConfig.changingSubscribeStatus = false;
            emailSettingConfig.errorChangingSubscribeStatus = true;
            setTimeout(function () {
                emailSettingConfig.errorChangingSubscribeStatus = false;
            }, 2000);
            emailSettingConfig.subscribeStatusChanged = false;
        });
    };
    EmailSettingsComponent.prototype.getClientForEmail = function () {
        var _this = this;
        this.route.params.subscribe(function (params) {
            _this.clientHash = params["clientHash"];
        });
        this.emailSettingsService.getClientForEmailSettings(this.clientHash).subscribe(function (client) {
            _this.selectedClient = client;
            _this.updateSelected();
        });
    };
    EmailSettingsComponent.prototype.ngOnInit = function () {
        this.emailCategories = this.emailSettingsService.emailCategories;
        this.emailTemplates = this.emailSettingsService.emailTemplates;
        if (this.selectedClient)
            this.updateSelected();
        else
            this.getClientForEmail();
    };
    EmailSettingsComponent.ctorParameters = function () { return [
        { type: _email_settings_service__WEBPACK_IMPORTED_MODULE_3__["EmailSettingsService"] },
        { type: _data_tables_service__WEBPACK_IMPORTED_MODULE_5__["DataTablesService"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_6__["BusinessService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_9__["SchedulerPreferenceService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["Client"])
    ], EmailSettingsComponent.prototype, "selectedClient", void 0);
    EmailSettingsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'email-settings',
            template: __webpack_require__(/*! raw-loader!./email-settings.component.html */ "./node_modules/raw-loader/index.js!./src/app/email-settings/email-settings.component.html"),
            styles: [__webpack_require__(/*! ../data-tables.component.css */ "./src/app/data-tables.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_email_settings_service__WEBPACK_IMPORTED_MODULE_3__["EmailSettingsService"], _data_tables_service__WEBPACK_IMPORTED_MODULE_5__["DataTablesService"], _business_service__WEBPACK_IMPORTED_MODULE_6__["BusinessService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"], _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_9__["SchedulerPreferenceService"]])
    ], EmailSettingsComponent);
    return EmailSettingsComponent;
}());



/***/ }),

/***/ "./src/app/email-settings/email-settings.service.ts":
/*!**********************************************************!*\
  !*** ./src/app/email-settings/email-settings.service.ts ***!
  \**********************************************************/
/*! exports provided: EmailSettingsService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmailSettingsService", function() { return EmailSettingsService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_EmailCategory_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../models/EmailCategory.model */ "./src/models/EmailCategory.model.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _api_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../api.service */ "./src/app/api.service.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/internal/operators */ "./node_modules/rxjs/internal/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _format_functions_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../format-functions.service */ "./src/app/format-functions.service.ts");









var EmailSettingsService = /** @class */ (function () {
    function EmailSettingsService(titleCasePipe, injector, http) {
        this.titleCasePipe = titleCasePipe;
        this.injector = injector;
        this.http = http;
        this.apiService = injector.get(_api_service__WEBPACK_IMPORTED_MODULE_4__["ApiService"]);
        this.formatFnsService = injector.get(_format_functions_service__WEBPACK_IMPORTED_MODULE_8__["FormatFunctionsService"]);
    }
    EmailSettingsService.prototype.getClientForEmailSettings = function (clientHash) {
        return this.http.get(this.apiService.apiUrl + 'clientEmails/' + clientHash, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_6__["catchError"])(this.apiService.handleError));
    };
    EmailSettingsService.prototype.updateClientEmails = function (clientId, excludedEmailCategoryIdList, subscribedEmailCategoryIdList, excludedEmailTemplateIdList, subscribedEmailTemplateIdList) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_7__["HttpParams"]();
        var excludedCategoryIdString = this.formatFnsService.formatArrayIntoCommaSeparatedString(excludedEmailCategoryIdList);
        if (excludedCategoryIdString)
            params = params.append('excludedEmailCategoryIds', excludedCategoryIdString);
        var subscribedEmailCategoryIdString = this.formatFnsService.formatArrayIntoCommaSeparatedString(subscribedEmailCategoryIdList);
        if (subscribedEmailCategoryIdString)
            params = params.append('subscribedEmailCategoryIds', subscribedEmailCategoryIdString);
        var excludedTemplateIdString = this.formatFnsService.formatArrayIntoCommaSeparatedString(excludedEmailTemplateIdList);
        if (excludedTemplateIdString)
            params = params.append('excludedEmailTemplateIds', excludedTemplateIdString);
        var subscribedEmailTemplateIdString = this.formatFnsService.formatArrayIntoCommaSeparatedString(subscribedEmailTemplateIdList);
        if (subscribedEmailTemplateIdString)
            params = params.append('subscribedEmailTemplateIds', subscribedEmailTemplateIdString);
        return this.http.post(this.apiService.apiUrl + 'clientEmails/' + clientId, null, { observe: "body", responseType: 'json', params: params })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_6__["catchError"])(this.apiService.handleError));
    };
    EmailSettingsService.prototype.getEmailCategoryNameMap = function (onload) {
        if (onload || this.emailCategoryNameMap === undefined) {
            var clientLabel = this.titleCasePipe.transform(this.configListMap.clientLabel);
            var staffLabel = this.titleCasePipe.transform(this.configListMap.staffLabel);
            var classLabel = this.titleCasePipe.transform(this.configListMap.classLabel);
            var courseLabel = this.titleCasePipe.transform(this.configListMap.courseLabel);
            var categoryNamesByCode = new _models_EmailCategory_model__WEBPACK_IMPORTED_MODULE_2__["CategoryNamesByCode"](clientLabel, staffLabel, classLabel, courseLabel);
            this.emailCategoryNameMap = new _models_EmailCategory_model__WEBPACK_IMPORTED_MODULE_2__["EmailCategoryNameMap"](categoryNamesByCode);
            return this.emailCategoryNameMap;
        }
        else
            return this.emailCategoryNameMap;
    };
    EmailSettingsService.prototype.mapDisplayNameToEmailCategories = function (emailCategoryCode, emailCategoryNameMap) {
        for (var prop in emailCategoryNameMap)
            if (emailCategoryNameMap[prop] instanceof _models_EmailCategory_model__WEBPACK_IMPORTED_MODULE_2__["EmailCategoryNameMapObj"] && emailCategoryNameMap[prop].codeName === emailCategoryCode)
                return emailCategoryNameMap[prop].displayName;
        return emailCategoryCode;
    };
    EmailSettingsService.prototype.setEmailCategories = function (emailCategories, configListMap) {
        this.configListMap = configListMap;
        if (emailCategories) {
            for (var i = 0, x = emailCategories.length; i < x; i++) {
                var emailCategoryNameMap = this.getEmailCategoryNameMap();
                emailCategories[i].emailCategoryDisplayName = this.mapDisplayNameToEmailCategories(emailCategories[i].code, emailCategoryNameMap);
            }
            this.emailCategories = emailCategories;
        }
        else
            this.emailCategories = [];
    };
    EmailSettingsService.prototype.setEmailTemplates = function (emailTemplates) {
        if (emailTemplates)
            this.emailTemplates = emailTemplates;
        else
            this.emailTemplates = [];
    };
    EmailSettingsService.ctorParameters = function () { return [
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["TitleCasePipe"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] },
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_7__["HttpClient"] }
    ]; };
    EmailSettingsService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_3__["TitleCasePipe"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"], _angular_common_http__WEBPACK_IMPORTED_MODULE_7__["HttpClient"]])
    ], EmailSettingsService);
    return EmailSettingsService;
}());



/***/ }),

/***/ "./src/app/form-field-styles.component.css":
/*!*************************************************!*\
  !*** ./src/app/form-field-styles.component.css ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "mat-form-field {\n    width: 100%;\n}\ndiv.file-upload mat-error {\n    display: inline;\n    margin-left: 15px;\n}\nmat-label.requiredField::after {\n    content: \" *\";\n}\nmat-label.customFieldLabel {\n    padding-right: 15px;\n}\n/*:host /deep/ .mat-form-field .mat-form-field-label > span,*/\n/*:host /deep/ .mat-form-field-required-marker{*/\n/*color: #0000008a;*/\n/*}*/\n/*:host /deep/ .mat-form-field .mat-form-field-ripple {*/\n/*background-color: #0000008a;*/\n/*}*/\n/*:host /deep/ .mat-form-field.mat-focused .mat-form-field-label,*/\n/*:host /deep/ .mat-form-field.mat-focused .mat-form-field-label > span,*/\n/*:host /deep/ .mat-focused .mat-form-field-required-marker{*/\n/*color: #45b6af;*/\n/*}*/\n/*:host /deep/ .mat-form-field.mat-focused .mat-form-field-ripple {*/\n/*background-color: #45b6af;*/\n/*}*/\n/*:host /deep/ .mat-form-field.mat-form-field-invalid .mat-form-field-label,*/\n/*:host /deep/ .mat-form-field.mat-form-field-invalid .mat-form-field-label > span,*/\n/*:host /deep/ .mat-form-field-invalid .mat-form-field-required-marker,*/\n/*div.checkbox-field.mat-form-field-invalid mat-label {*/\n/*color: #dc3545;*/\n/*}*/\n/*:host /deep/ .mat-form-field.mat-form-field-invalid .mat-form-field-ripple {*/\n/*background-color: #dc3545;*/\n/*}*/\n:host /deep/ .mat-list-base .mat-list-item {\n    height: auto;\n    font-weight: 600;\n}\n:host /deep/ mat-list > mat-list-item:hover {\n    background-color: transparent;\n    cursor: default;\n}\n:host /deep/ mat-list.form-field {\n    margin: 15px 0px;\n}\n.fieldsInline {\n    display: inline;\n}\n:host /deep/ mat-checkbox .mat-checkbox-layout {\n    overflow-wrap: break-word;\n    white-space: normal;\n}\n.inlineSelect {\n    display: inline-block;\n    width: 75% !important;\n    float: right;\n}\ndiv.inlineSelect > mat-select {\n    width: 30%;\n}\n.inlineChkBox {\n    display: inline-block;\n    width: 25%;\n}\n#clientProfileFields mat-list.mat-list-base > mat-list-item.mat-list-item > div.mat-list-item-content,\n#clientInfoPanel mat-list.mat-list-base > mat-list-item.mat-list-item > div.mat-list-item-content {\n    padding-left: 0px;\n    font-size: 14px;\n    color: #0009;\n}\n#clientProfileFields mat-list.mat-list-base > mat-list-item.mat-list-item,\n#clientInfoPanel mat-list.mat-list-base > mat-list-item.mat-list-item {\n    height: auto;\n    padding-top: .75em;\n}\n#clientProfileFields mat-list.mat-list-base > mat-list-item.mat-list-item:hover,\n#clientInfoPanel mat-list.mat-list-base > mat-list-item.mat-list-item:hover {\n    background-color: transparent;\n    cursor: default;\n}\n#clientProfileFields mat-divider.mat-divider,\n#clientInfoPanel mat-divider.mat-divider {\n    position: relative;\n}\ndiv.checkbox-field{\n    padding-top: .75em;\n    padding-bottom: 1.25em;\n}\ndiv.checkbox-list, div.radio-list{\n    padding-bottom: 1.25em;\n}\ndiv.radio-list mat-radio-group {\n    display: flex;\n    flex-direction: column;\n    margin: 15px 0;\n}\ndiv.checkbox-field > div > mat-hint,\ndiv.checkbox-list > mat-hint,\ndiv.radio-list > mat-hint,\ndiv.file-upload > div > mat-hint.field-hint{\n    font-size: 75%;\n}\nmat-hint > a {\n    cursor: pointer;\n}\nul.displayInline li {\n    display: inline;\n}\ndiv.formDescriptionField {\n   margin-top: 15px;\n}\n@media (max-width: 575.98px) {\n    .inlineChkBox {\n        width: 100%;\n    }\n\n    .inlineSelect, div.inlineSelect > mat-select {\n        width: 100% !important;\n    }\n}\ndiv.fieldError mat-label {\n    color: #dc3545;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9ybS1maWVsZC1zdHlsZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZjtBQUNBO0lBQ0ksZUFBZTtJQUNmLGlCQUFpQjtBQUNyQjtBQUNBO0lBQ0ksYUFBYTtBQUNqQjtBQUNBO0lBQ0ksbUJBQW1CO0FBQ3ZCO0FBQ0EsNkRBQTZEO0FBQzdELGdEQUFnRDtBQUM1QyxvQkFBb0I7QUFDeEIsSUFBSTtBQUNKLHdEQUF3RDtBQUNwRCwrQkFBK0I7QUFDbkMsSUFBSTtBQUNKLGtFQUFrRTtBQUNsRSx5RUFBeUU7QUFDekUsNkRBQTZEO0FBQ3pELGtCQUFrQjtBQUN0QixJQUFJO0FBQ0osb0VBQW9FO0FBQ2hFLDZCQUE2QjtBQUNqQyxJQUFJO0FBQ0osNkVBQTZFO0FBQzdFLG9GQUFvRjtBQUNwRix3RUFBd0U7QUFDeEUsd0RBQXdEO0FBQ3BELGtCQUFrQjtBQUN0QixJQUFJO0FBQ0osK0VBQStFO0FBQzNFLDZCQUE2QjtBQUNqQyxJQUFJO0FBQ0o7SUFDSSxZQUFZO0lBQ1osZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSw2QkFBNkI7SUFDN0IsZUFBZTtBQUNuQjtBQUNBO0lBQ0ksZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxlQUFlO0FBQ25CO0FBQ0E7SUFDSSx5QkFBeUI7SUFDekIsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxxQkFBcUI7SUFDckIscUJBQXFCO0lBQ3JCLFlBQVk7QUFDaEI7QUFDQTtJQUNJLFVBQVU7QUFDZDtBQUNBO0lBQ0kscUJBQXFCO0lBQ3JCLFVBQVU7QUFDZDtBQUNBOztJQUVJLGlCQUFpQjtJQUNqQixlQUFlO0lBQ2YsWUFBWTtBQUNoQjtBQUNBOztJQUVJLFlBQVk7SUFDWixrQkFBa0I7QUFDdEI7QUFDQTs7SUFFSSw2QkFBNkI7SUFDN0IsZUFBZTtBQUNuQjtBQUNBOztJQUVJLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLHNCQUFzQjtBQUMxQjtBQUNBO0lBQ0ksc0JBQXNCO0FBQzFCO0FBQ0E7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGNBQWM7QUFDbEI7QUFDQTs7OztJQUlJLGNBQWM7QUFDbEI7QUFDQTtJQUNJLGVBQWU7QUFDbkI7QUFFQTtJQUNJLGVBQWU7QUFDbkI7QUFDQTtHQUNHLGdCQUFnQjtBQUNuQjtBQUVBO0lBQ0k7UUFDSSxXQUFXO0lBQ2Y7O0lBRUE7UUFDSSxzQkFBc0I7SUFDMUI7QUFDSjtBQUNBO0lBQ0ksY0FBYztBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2Zvcm0tZmllbGQtc3R5bGVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5kaXYuZmlsZS11cGxvYWQgbWF0LWVycm9yIHtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgbWFyZ2luLWxlZnQ6IDE1cHg7XG59XG5tYXQtbGFiZWwucmVxdWlyZWRGaWVsZDo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiICpcIjtcbn1cbm1hdC1sYWJlbC5jdXN0b21GaWVsZExhYmVsIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xufVxuLyo6aG9zdCAvZGVlcC8gLm1hdC1mb3JtLWZpZWxkIC5tYXQtZm9ybS1maWVsZC1sYWJlbCA+IHNwYW4sKi9cbi8qOmhvc3QgL2RlZXAvIC5tYXQtZm9ybS1maWVsZC1yZXF1aXJlZC1tYXJrZXJ7Ki9cbiAgICAvKmNvbG9yOiAjMDAwMDAwOGE7Ki9cbi8qfSovXG4vKjpob3N0IC9kZWVwLyAubWF0LWZvcm0tZmllbGQgLm1hdC1mb3JtLWZpZWxkLXJpcHBsZSB7Ki9cbiAgICAvKmJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA4YTsqL1xuLyp9Ki9cbi8qOmhvc3QgL2RlZXAvIC5tYXQtZm9ybS1maWVsZC5tYXQtZm9jdXNlZCAubWF0LWZvcm0tZmllbGQtbGFiZWwsKi9cbi8qOmhvc3QgL2RlZXAvIC5tYXQtZm9ybS1maWVsZC5tYXQtZm9jdXNlZCAubWF0LWZvcm0tZmllbGQtbGFiZWwgPiBzcGFuLCovXG4vKjpob3N0IC9kZWVwLyAubWF0LWZvY3VzZWQgLm1hdC1mb3JtLWZpZWxkLXJlcXVpcmVkLW1hcmtlcnsqL1xuICAgIC8qY29sb3I6ICM0NWI2YWY7Ki9cbi8qfSovXG4vKjpob3N0IC9kZWVwLyAubWF0LWZvcm0tZmllbGQubWF0LWZvY3VzZWQgLm1hdC1mb3JtLWZpZWxkLXJpcHBsZSB7Ki9cbiAgICAvKmJhY2tncm91bmQtY29sb3I6ICM0NWI2YWY7Ki9cbi8qfSovXG4vKjpob3N0IC9kZWVwLyAubWF0LWZvcm0tZmllbGQubWF0LWZvcm0tZmllbGQtaW52YWxpZCAubWF0LWZvcm0tZmllbGQtbGFiZWwsKi9cbi8qOmhvc3QgL2RlZXAvIC5tYXQtZm9ybS1maWVsZC5tYXQtZm9ybS1maWVsZC1pbnZhbGlkIC5tYXQtZm9ybS1maWVsZC1sYWJlbCA+IHNwYW4sKi9cbi8qOmhvc3QgL2RlZXAvIC5tYXQtZm9ybS1maWVsZC1pbnZhbGlkIC5tYXQtZm9ybS1maWVsZC1yZXF1aXJlZC1tYXJrZXIsKi9cbi8qZGl2LmNoZWNrYm94LWZpZWxkLm1hdC1mb3JtLWZpZWxkLWludmFsaWQgbWF0LWxhYmVsIHsqL1xuICAgIC8qY29sb3I6ICNkYzM1NDU7Ki9cbi8qfSovXG4vKjpob3N0IC9kZWVwLyAubWF0LWZvcm0tZmllbGQubWF0LWZvcm0tZmllbGQtaW52YWxpZCAubWF0LWZvcm0tZmllbGQtcmlwcGxlIHsqL1xuICAgIC8qYmFja2dyb3VuZC1jb2xvcjogI2RjMzU0NTsqL1xuLyp9Ki9cbjpob3N0IC9kZWVwLyAubWF0LWxpc3QtYmFzZSAubWF0LWxpc3QtaXRlbSB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG46aG9zdCAvZGVlcC8gbWF0LWxpc3QgPiBtYXQtbGlzdC1pdGVtOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XG59XG46aG9zdCAvZGVlcC8gbWF0LWxpc3QuZm9ybS1maWVsZCB7XG4gICAgbWFyZ2luOiAxNXB4IDBweDtcbn1cbi5maWVsZHNJbmxpbmUge1xuICAgIGRpc3BsYXk6IGlubGluZTtcbn1cbjpob3N0IC9kZWVwLyBtYXQtY2hlY2tib3ggLm1hdC1jaGVja2JveC1sYXlvdXQge1xuICAgIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbn1cbi5pbmxpbmVTZWxlY3Qge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogNzUlICFpbXBvcnRhbnQ7XG4gICAgZmxvYXQ6IHJpZ2h0O1xufVxuZGl2LmlubGluZVNlbGVjdCA+IG1hdC1zZWxlY3Qge1xuICAgIHdpZHRoOiAzMCU7XG59XG4uaW5saW5lQ2hrQm94IHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDI1JTtcbn1cbiNjbGllbnRQcm9maWxlRmllbGRzIG1hdC1saXN0Lm1hdC1saXN0LWJhc2UgPiBtYXQtbGlzdC1pdGVtLm1hdC1saXN0LWl0ZW0gPiBkaXYubWF0LWxpc3QtaXRlbS1jb250ZW50LFxuI2NsaWVudEluZm9QYW5lbCBtYXQtbGlzdC5tYXQtbGlzdC1iYXNlID4gbWF0LWxpc3QtaXRlbS5tYXQtbGlzdC1pdGVtID4gZGl2Lm1hdC1saXN0LWl0ZW0tY29udGVudCB7XG4gICAgcGFkZGluZy1sZWZ0OiAwcHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGNvbG9yOiAjMDAwOTtcbn1cbiNjbGllbnRQcm9maWxlRmllbGRzIG1hdC1saXN0Lm1hdC1saXN0LWJhc2UgPiBtYXQtbGlzdC1pdGVtLm1hdC1saXN0LWl0ZW0sXG4jY2xpZW50SW5mb1BhbmVsIG1hdC1saXN0Lm1hdC1saXN0LWJhc2UgPiBtYXQtbGlzdC1pdGVtLm1hdC1saXN0LWl0ZW0ge1xuICAgIGhlaWdodDogYXV0bztcbiAgICBwYWRkaW5nLXRvcDogLjc1ZW07XG59XG4jY2xpZW50UHJvZmlsZUZpZWxkcyBtYXQtbGlzdC5tYXQtbGlzdC1iYXNlID4gbWF0LWxpc3QtaXRlbS5tYXQtbGlzdC1pdGVtOmhvdmVyLFxuI2NsaWVudEluZm9QYW5lbCBtYXQtbGlzdC5tYXQtbGlzdC1iYXNlID4gbWF0LWxpc3QtaXRlbS5tYXQtbGlzdC1pdGVtOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XG59XG4jY2xpZW50UHJvZmlsZUZpZWxkcyBtYXQtZGl2aWRlci5tYXQtZGl2aWRlcixcbiNjbGllbnRJbmZvUGFuZWwgbWF0LWRpdmlkZXIubWF0LWRpdmlkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbmRpdi5jaGVja2JveC1maWVsZHtcbiAgICBwYWRkaW5nLXRvcDogLjc1ZW07XG4gICAgcGFkZGluZy1ib3R0b206IDEuMjVlbTtcbn1cbmRpdi5jaGVja2JveC1saXN0LCBkaXYucmFkaW8tbGlzdHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMS4yNWVtO1xufVxuZGl2LnJhZGlvLWxpc3QgbWF0LXJhZGlvLWdyb3VwIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgbWFyZ2luOiAxNXB4IDA7XG59XG5kaXYuY2hlY2tib3gtZmllbGQgPiBkaXYgPiBtYXQtaGludCxcbmRpdi5jaGVja2JveC1saXN0ID4gbWF0LWhpbnQsXG5kaXYucmFkaW8tbGlzdCA+IG1hdC1oaW50LFxuZGl2LmZpbGUtdXBsb2FkID4gZGl2ID4gbWF0LWhpbnQuZmllbGQtaGludHtcbiAgICBmb250LXNpemU6IDc1JTtcbn1cbm1hdC1oaW50ID4gYSB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG51bC5kaXNwbGF5SW5saW5lIGxpIHtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG59XG5kaXYuZm9ybURlc2NyaXB0aW9uRmllbGQge1xuICAgbWFyZ2luLXRvcDogMTVweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU3NS45OHB4KSB7XG4gICAgLmlubGluZUNoa0JveCB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cblxuICAgIC5pbmxpbmVTZWxlY3QsIGRpdi5pbmxpbmVTZWxlY3QgPiBtYXQtc2VsZWN0IHtcbiAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICB9XG59XG5kaXYuZmllbGRFcnJvciBtYXQtbGFiZWwge1xuICAgIGNvbG9yOiAjZGMzNTQ1O1xufVxuIl19 */"

/***/ }),

/***/ "./src/app/form-functions.service.ts":
/*!*******************************************!*\
  !*** ./src/app/form-functions.service.ts ***!
  \*******************************************/
/*! exports provided: FormFunctionsService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormFunctionsService", function() { return FormFunctionsService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_2__);



var FormFunctionsService = /** @class */ (function () {
    function FormFunctionsService() {
    }
    FormFunctionsService.prototype.printElement = function (elem, append, delimiter) {
        var domClone = elem.cloneNode(true);
        var printSection = jquery__WEBPACK_IMPORTED_MODULE_2__('<div id="printSection"></div>').appendTo(document.body);
        var printBody = jquery__WEBPACK_IMPORTED_MODULE_2__('<div></div>');
        printSection.append(printBody);
        printBody.css({
            minWidth: '800px', display: 'block', marginLeft: 'auto', marginRight: 'auto'
        });
        // $('login-register-btns').css({top: topPositionForLoginBtns});
        if (append !== true) {
            printBody.html("");
        }
        else if (append === true) {
            if (typeof (delimiter) === "string") {
                jquery__WEBPACK_IMPORTED_MODULE_2__(delimiter).appendTo(printBody);
            }
            else if (typeof (delimiter) === "object") {
                printBody.append(delimiter);
            }
        }
        printSection.append(domClone);
    };
    ;
    FormFunctionsService.prototype.hidePrintElement = function () {
        jquery__WEBPACK_IMPORTED_MODULE_2__('#printSection').css({ display: 'none' });
    };
    FormFunctionsService.prototype.setMultiCheckboxValue = function (value, labelToAdd, event) {
        //TT-6445 -- Using labelToAdd and replacing comma with %2C
        labelToAdd = labelToAdd.replace(/,/g, '%2C');
        var target = event.target;
        if ((event && event.checked) || (target && target.checked)) {
            if (value === null) {
                value = labelToAdd;
            }
            else {
                value = value + ',' + labelToAdd;
            }
        }
        else {
            value = value.replace(labelToAdd, '');
            if (value.indexOf(',,') !== -1) {
                value = value.replace(',,', ',');
            }
            var numberOfCommas = value.replace(/[^,]/g, '').length;
            if (numberOfCommas === 1 && value.indexOf(',') === 0) {
                value = value.replace(',', '');
            }
            if (value === '') {
                value = null;
            }
        }
        if (value !== null) {
            // remove comma that is at the end if there is one
            var indexOfLastCharacter = value.length - 1;
            if (value.substring(indexOfLastCharacter) === ",") {
                value = value.substring(0, indexOfLastCharacter);
            }
        }
        return value;
    };
    FormFunctionsService.prototype.getCheckedValues = function (storedFieldValue) {
        var checkedValuesArray = [];
        if (storedFieldValue === null) {
            //do nothing
        }
        else if (storedFieldValue.indexOf(',') === -1) { //JUST 1 VALUE SO PUSH IT TO checkedValuesArray
            checkedValuesArray.push(storedFieldValue);
        }
        else {
            checkedValuesArray = storedFieldValue.split(',');
        }
        if (checkedValuesArray.length !== 0) { //TT-4290
            for (var a = 0, x = checkedValuesArray.length; a < x; a++) {
                if (checkedValuesArray[a].indexOf('%2C') !== -1) {
                    checkedValuesArray[a] = checkedValuesArray[a].replace(/%2C/g, ',');
                }
                checkedValuesArray[a] = checkedValuesArray[a].replace(/&amp;/g, '&');
                checkedValuesArray[a] = checkedValuesArray[a].trim();
            }
        }
        return checkedValuesArray;
    };
    FormFunctionsService.prototype.checkRequired = function (displayedFormControl) {
        if (displayedFormControl.validator === null)
            return false;
        else {
            var validator = displayedFormControl.validator({});
            return validator && validator.required;
        }
    };
    FormFunctionsService.prototype.renderField = function (displayedFormControl, passedControl) {
        displayedFormControl.setValue(passedControl.value);
        if (passedControl.disabled)
            displayedFormControl.disable();
        else if (passedControl.enabled)
            displayedFormControl.enable();
        if (passedControl.validator)
            displayedFormControl.setValidators(passedControl.validator);
        displayedFormControl.setErrors(passedControl.errors);
        if (passedControl.touched)
            displayedFormControl.markAsTouched();
        return displayedFormControl;
    };
    FormFunctionsService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
    ], FormFunctionsService);
    return FormFunctionsService;
}());



/***/ }),

/***/ "./src/app/format-functions.service.ts":
/*!*********************************************!*\
  !*** ./src/app/format-functions.service.ts ***!
  \*********************************************/
/*! exports provided: FormatFunctionsService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormatFunctionsService", function() { return FormatFunctionsService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var FormatFunctionsService = /** @class */ (function () {
    function FormatFunctionsService() {
    }
    FormatFunctionsService.prototype.formatArrayIntoCommaSeparatedString = function (arrayToFormat) {
        var stringToReturn = '';
        if (arrayToFormat !== undefined && arrayToFormat !== null && arrayToFormat.length !== 0) {
            for (var i = 0, x = arrayToFormat.length; i < x; i++) {
                if (i === 0)
                    stringToReturn += arrayToFormat[i];
                else
                    stringToReturn = stringToReturn + ',' + arrayToFormat[i];
            }
        }
        else
            stringToReturn = undefined;
        return stringToReturn;
    };
    FormatFunctionsService.prototype.arraysEqual = function (a, b) {
        if (a === b)
            return true;
        if (a == null || b == null)
            return false;
        if (a.length !== b.length)
            return false;
        // If you don't care about the order of the elements inside
        // the array, you should sort both arrays here.
        // Please note that calling sort on an array will modify that array.
        // you might want to clone your array first.
        for (var i = 0; i < a.length; ++i)
            if (a[i] !== b[i])
                return false;
        return true;
    };
    FormatFunctionsService.prototype.turnStringArrayIntoNumberArray = function (arrayToParse) {
        var arrayToReturn = [];
        for (var i = 0, x = arrayToParse.length; i < x; i++)
            arrayToReturn.push(Number(arrayToParse[i]));
        return arrayToReturn;
    };
    FormatFunctionsService.prototype.removeUnderscoresInLabels = function (stringWithUnderscore) {
        return stringWithUnderscore.replace(/_/g, ' ');
    };
    FormatFunctionsService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], FormatFunctionsService);
    return FormatFunctionsService;
}());



/***/ }),

/***/ "./src/app/google-analytics.service.ts":
/*!*********************************************!*\
  !*** ./src/app/google-analytics.service.ts ***!
  \*********************************************/
/*! exports provided: GoogleAnalyticsService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GoogleAnalyticsService", function() { return GoogleAnalyticsService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var GoogleAnalyticsService = /** @class */ (function () {
    function GoogleAnalyticsService() {
    }
    GoogleAnalyticsService.prototype.eventEmitter = function (eventName, eventCategory, eventAction, eventLabel, eventValue) {
        if (eventLabel === void 0) { eventLabel = null; }
        if (eventValue === void 0) { eventValue = null; }
        var googleAnalyticsCode = sessionStorage.getItem("googleAnalyticsCode");
        if (googleAnalyticsCode !== null && googleAnalyticsCode !== "") {
            gtag('event', eventAction, {
                'event_category': eventCategory,
                'event_label': eventLabel,
                'event_name': eventName
            });
            // in the case that the scheduler is being loaded in an iframe, we need to
            // push the event to the parent window so that the wrapper can do the call to google.
            pushToParent(eventAction, eventCategory, eventLabel, eventName);
        }
    };
    GoogleAnalyticsService.prototype.getStaffNameForGoogleAnalyticsPost = function (staff, preference) {
        var staffName = ""; // LHB 08/12/2020 TT-6902
        if (staff === null)
            staffName = preference.labelMap.labelNoPreference;
        else
            staffName = staff.fullName;
        return staffName;
    };
    GoogleAnalyticsService.prototype.getLocationNameForGoogleAnalyticsPost = function (location) {
        var locationName = ""; // LHB 08/12/2020 TT-6902
        if (location === null)
            locationName = "various locations";
        else
            locationName = location.locationName;
        return locationName;
    };
    GoogleAnalyticsService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
    ], GoogleAnalyticsService);
    return GoogleAnalyticsService;
}());



/***/ }),

/***/ "./src/app/input-group.component.css":
/*!*******************************************!*\
  !*** ./src/app/input-group.component.css ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".input-group-dropdown {\n    min-width: 275px;\n    padding: 0.65rem 0;\n    background: #fff;\n    box-shadow: 0px 0px 50px 0px rgba(82, 63, 105, 0.15);\n    border-radius: 0.42rem;\n    position: absolute;\n    /*top: 100%;*/\n    left: auto /*rtl:ignore*/ !important;\n    z-index: 100;\n    display: block;\n}\n\n.input-group-dropdown .dataset .suggestion {\n    padding: 0.65rem 1rem;\n    font-size: 1rem;\n    color: #3F4254;\n    cursor: pointer;\n}\n\n.input-group-dropdown .dataset .suggestion:hover, .input-group-dropdown .dataset .selected {\n    background: #F3F6F9;\n}\n\n.input-group-append,\n.input-group-prepend {\n    width: 100%;\n}\n\n.input-group-append input.form-control {\n    border-top-right-radius: 0px;\n    border-bottom-right-radius: 0px;\n    border-right: none;\n}\n\n.input-group-append input.form-control.is-invalid {\n    border-right: 1px solid #f64e60;\n}\n\ndiv.invalid-feedback {\n    display: block;\n}\n\n.input-group-prepend input.form-control {\n    border-top-left-radius: 0px;\n    border-bottom-left-radius: 0px;\n    border-left: none;\n}\n\n.btn.disabled {\n    cursor: not-allowed;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW5wdXQtZ3JvdXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBRWhCLG9EQUFvRDtJQUNwRCxzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixvQ0FBb0M7SUFDcEMsWUFBWTtJQUNaLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsZUFBZTtJQUNmLGNBQWM7SUFDZCxlQUFlO0FBQ25COztBQUNBO0lBQ0ksbUJBQW1CO0FBQ3ZCOztBQUNBOztJQUVJLFdBQVc7QUFDZjs7QUFDQTtJQUNJLDRCQUE0QjtJQUM1QiwrQkFBK0I7SUFDL0Isa0JBQWtCO0FBQ3RCOztBQUNBO0lBQ0ksK0JBQStCO0FBQ25DOztBQUNBO0lBQ0ksY0FBYztBQUNsQjs7QUFDQTtJQUNJLDJCQUEyQjtJQUMzQiw4QkFBOEI7SUFDOUIsaUJBQWlCO0FBQ3JCOztBQUNBO0lBQ0ksbUJBQW1CO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvaW5wdXQtZ3JvdXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbnB1dC1ncm91cC1kcm9wZG93biB7XG4gICAgbWluLXdpZHRoOiAyNzVweDtcbiAgICBwYWRkaW5nOiAwLjY1cmVtIDA7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IDBweCAwcHggNTBweCAwcHggcmdiYSg4MiwgNjMsIDEwNSwgMC4xNSk7XG4gICAgYm94LXNoYWRvdzogMHB4IDBweCA1MHB4IDBweCByZ2JhKDgyLCA2MywgMTA1LCAwLjE1KTtcbiAgICBib3JkZXItcmFkaXVzOiAwLjQycmVtO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAvKnRvcDogMTAwJTsqL1xuICAgIGxlZnQ6IGF1dG8gLypydGw6aWdub3JlKi8gIWltcG9ydGFudDtcbiAgICB6LWluZGV4OiAxMDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5pbnB1dC1ncm91cC1kcm9wZG93biAuZGF0YXNldCAuc3VnZ2VzdGlvbiB7XG4gICAgcGFkZGluZzogMC42NXJlbSAxcmVtO1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICBjb2xvcjogIzNGNDI1NDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG4uaW5wdXQtZ3JvdXAtZHJvcGRvd24gLmRhdGFzZXQgLnN1Z2dlc3Rpb246aG92ZXIsIC5pbnB1dC1ncm91cC1kcm9wZG93biAuZGF0YXNldCAuc2VsZWN0ZWQge1xuICAgIGJhY2tncm91bmQ6ICNGM0Y2Rjk7XG59XG4uaW5wdXQtZ3JvdXAtYXBwZW5kLFxuLmlucHV0LWdyb3VwLXByZXBlbmQge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuLmlucHV0LWdyb3VwLWFwcGVuZCBpbnB1dC5mb3JtLWNvbnRyb2wge1xuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwcHg7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDBweDtcbiAgICBib3JkZXItcmlnaHQ6IG5vbmU7XG59XG4uaW5wdXQtZ3JvdXAtYXBwZW5kIGlucHV0LmZvcm0tY29udHJvbC5pcy1pbnZhbGlkIHtcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZjY0ZTYwO1xufVxuZGl2LmludmFsaWQtZmVlZGJhY2sge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuLmlucHV0LWdyb3VwLXByZXBlbmQgaW5wdXQuZm9ybS1jb250cm9sIHtcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwcHg7XG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMHB4O1xuICAgIGJvcmRlci1sZWZ0OiBub25lO1xufVxuLmJ0bi5kaXNhYmxlZCB7XG4gICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbn1cbiJdfQ== */"

/***/ }),

/***/ "./src/app/languages/label-map-es.model.ts":
/*!*************************************************!*\
  !*** ./src/app/languages/label-map-es.model.ts ***!
  \*************************************************/
/*! exports provided: SpanishLabelMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SpanishLabelMap", function() { return SpanishLabelMap; });
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");


var SpanishLabelMap = /** @class */ (function () {
    function SpanishLabelMap(configListLabels, titleCasePipe, cancelHrs, rescheduleHrs, waitListFirstAvailable) {
        this.configListLabels = configListLabels;
        this.titleCasePipe = titleCasePipe;
        this.cancelHrs = cancelHrs;
        this.rescheduleHrs = rescheduleHrs;
        this.waitListFirstAvailable = waitListFirstAvailable;
        this.errorLoadingLabel = "Error al cargar datos. Actualice la página e intente nuevamente.";
        this.additionalGuestText = "Invitados adicionales";
        this.appointmentDetailText = "<dl class=\"row\">\n" +
            "<dt class=\"col-3\"><strong>Estado:</strong></dt>\n" +
            "<dd class=\"col-9\">%APPT_STATUS_CHIP%</dd>\n" +
            "<dt class=\"col-3\"><strong>Id:</strong></dt>\n" +
            "<dd class=\"col-9\">%APPT_ID%</dd>\n" +
            "<dt class=\"col-3\"><strong>Fecha y hora:</strong></dt>\n" +
            "<dd class=\"col-9\">%APPT_DATE_TIME%</dd>\n" +
            "<dt class=\"col-3\"><strong> Servicio:</strong></dt>\n" +
            "<dd class=\"col-9\">%REASON%</dd>\n" +
            "<dt class=\"col-3\"><strong>Ubicación:</strong></dt>\n" +
            "<dd class=\"col-9\">%LOCATION_NAME%</dd>\n" +
            "<dt class=\"col-3\"><strong>Personal:</strong></dt>\n" +
            "<dd class=\"col-9\">%STAFF_FULLNAME%</dd>\n" +
            "</dl>";
        this.apptDetailTitle = "Detalle de la cita";
        this.apptDetailPendingApptInfoMsg = "Su cita está actualmente pendiente de confirmación. Se le notificará una vez que el personal haya aprobado su solicitud de cita.";
        this.errorModalCloseBtnLabel = "Cerrar";
        this.apptCancelHourPlural = this.cancelHrs == 1 ? 'hora' : 'horas';
        this.apptCancelPastTimeframeMsg = "El plazo permitido para cancelar esta cita ha expirado.. Se permiten cancelaciones hasta %ALLOWED_CANCEL_HOURS% " + this.apptCancelHourPlural + " antes de la hora de inicio de la cita.";
        this.apptDoesNotBelongToAccountErrorMsg = "Se produjo un error al cargar los detalles de esta cita. Esta cita no pertenece a esta cuenta.";
        this.apptDoesNotBelongToAccountErrorTitle = "Error al cargar los detalles de la cita";
        this.apptMaxRescheduleCountErrorMsg = "Ha alcanzado el número máximo de reprogramaciones permitidas para esta cita.";
        this.apptListErrorLoadingMsg = "Error al cargar listas de citas. Inténtelo de nuevo más tarde";
        this.apptMaxRescheduleCountErrorTitle = "Reprogramación no permitida";
        this.apptRescheduleHourPlural = this.rescheduleHrs == 1 ? 'hora' : 'horas';
        this.apptReschedulePastTimeframeMsg = "Ha pasado el plazo permitido para reprogramar esta cita. La reprogramación está permitida hasta %ALLOWED_RESCHEDULE_HOURS% " + this.apptRescheduleHourPlural + " antes de la hora de inicio de la cita.";
        this.apptRescheduleNotAllowedTitle = "Reprogramar cita";
        this.appointmentFieldList = null;
        this.authorizeCCBtnLabel = "Autorizar tarjeta";
        this.bookNewApptLabel = "Reservar una nueva cita";
        this.cancelApptErrorMsg = "Se produjo un error al cancelar su cita. Actualice la página e intente nuevamente";
        this.cancelApptNoReasonEnteredErrorMsg = "No se ingresó ninguna razón. Debe ingresar una razón para cancelar su cita";
        this.cancelBtnLabel = "Cancelar";
        this.cancelModalTitle = "Cancelar cita";
        this.cancelModalDescription = "No se ingresó una razón. Debe ingresar una razón para cancelar su cita";
        this.cancelModalReasonTitle = "Motivo de cancelacion:";
        this.cancelledApptBtnLabel = "Cancelada";
        this.cancelledApptTitle = "Citas canceladas";
        this.clientBlacklistError = "La dirección de correo electrónico que ha ingresado se ha incluido en nuestra lista de clientes bloqueados. En este momento, no puede crear una cita con nuestra oficina. Gracias";
        this.clientCancelTimeframeError = "Está fuera del plazo permitido para cancelar esta cita";
        this.clientConfirmedApptMsg = "¡Gracias! Su cita esta confirmada";
        this.clientProfileTitle = 'Perfil de %CLIENT_FULLNAME%';
        this.clientDetailsCancelEditBtnLabel = 'Cancelar ediciones';
        this.clientDetailsEditBtnLabel = 'Editar';
        this.clientDetailsSaveEditBtnLabel = 'Guardar cambios';
        this.completedApptBtnLabel = "Completada";
        this.completedApptTitle = "Citas completadas";
        this.courseSessionsLabel = "Sesiones";
        this.errorSavingAllAppointmentsDblBooked = "<div style='text-align: center;'> Desafortunadamente, todas las fechas y horas de las citas que seleccionó han sido reservadas recientemente por otra persona. Haga clic de nuevo para elegir fechas y horas diferentes.</div>";
        this.errorSavingAppointment = "<div style='text-align: center;'>Se produjo un error al guardar su cita. Actualice su página e intente nuevamente.</div>";
        this.errorSavingAppointmentDblBooked = "<div style='text-align: center;'> Desafortunadamente, la fecha y hora que ha seleccionado ha sido reservada recientemente por otra persona. Haga clic de nuevo para elegir una fecha y hora diferentes.</div>";
        this.errorSavingClassApptAlreadyEnrolled = "Ya está inscrito en esta sesión. No puede inscribirse en una sesión de clase";
        this.fileUploadBtnChooseFile = "Elegir archivo";
        this.fileUploadBtnUploadingFile = "Subir archivos";
        this.fileUploadBtnUploadedFile = "¡Archivo ha sido subido!";
        this.fileUploadErrorMsg = "Error al cargar el archivo Inténtalo de nuevo.";
        this.filterButton = "Buscar";
        this.filterLabel = "Filtrar por código postal";
        this.genericErrorMsg = "Error al cargar datos";
        this.headerNavLogin = 'Iniciar sesión';
        this.headerNavMyAccount = 'Mi cuenta';
        this.headerNavRegister = 'Registrarse';
        this.headerNavScheduler = 'Reservar cita';
        this.headerNavStore = 'Paquetes';
        this.hourLabel = 'Hora';
        this.hoursLabel = 'Horas';
        this.infoPnlBookingSummary = "Programando para %REASON% el %APPT_CLIENT_START_DATE_TIME_MEDIUM%";
        this.infoBookingSummaryWaitList = "Lista de espera para %REASON% el %APPT_CLIENT_START_DATE_TIME_MEDIUM%";
        this.infoPnlNameLabel = "Reservando para:";
        this.infoPnlSendTextCBLabel = 'Enviar recordatorio por mensaje de texto:';
        this.infoPnlSendTextHrsCBLabel = "Elija cuándo desea recibir el texto";
        this.infoPnlSendTextD1Hr = '1 hora por adelantado';
        this.infoPnlSendTextD2Hr = '2 horas por adelantado';
        this.infoPnlSendTextD4Hr = '4 horas por adelantado';
        this.infoPnlSendTextD12Hr = '12 horas por adelantado';
        this.infoPnlSendTextD24Hr = '24 horas por adelantado';
        this.infoTitle = "Su información";
        this.invitationCampaignErrorNoInvitationTitle = "Necesita invitación";
        this.invitationCampaignErrorNoInvitationMsg = "Este programador de citas requiere una invitación. Solicite una invitación al negocio o empresa.";
        this.invitationCampaignErrorInvitationCompletedTitle = "\"Invitación ya ha sido completada";
        this.invitationCampaignErrorInvitationCompletedMsg = "Ya ha reservado a través de esta invitación. Solicite otra invitación de la empresa para reservar de nuevo.";
        this.invitationCampaignErrorInvitationExpiredTitle = "Invitación expirada";
        this.invitationCampaignErrorInvitationExpiredMsg = "Su invitación para programar una cita con este negocio o empresa ha expirado";
        this.invoiceConnectingWithPaymentPortal = "Conectando al portal de pagos ...";
        this.invoiceCreditCardChargeLabel = "Pagar %INVOICE_PAYMENT_AMOUNT%";
        this.invoiceCreditCardChargeFailedLabel = "No pudimos procesar su pago en este momento, por favor inténtelo nuevamente. Contactenos si el problema persiste.";
        this.invoiceCreditCardChargingLabel = "Enviando pago...";
        this.invoiceCreditCardAuthorizeLabel = "Autorizar por %INVOICE_PAYMENT_AMOUNT%";
        this.invoiceCreditCardAuthorizeFailedLabel = "No pudimos autorizar su tarjeta en este momento. Por favor intente nuevamente. Contactenos si el problema persiste. ";
        this.invoiceCreditCardAuthorizingLabel = "Autorizando tarjeta...";
        this.invoiceDateIssuedLabel = "Fecha de emisión:";
        this.invoiceDetailTitle = "Detalles de la factura";
        this.invoiceIdLabel = "Id de factura:";
        this.invoiceItemsTableHeader = "Datos de la factura:";
        this.invoiceDownloadBtnLabel = "Descargar";
        this.invoiceListErrorLoadingMsg = "Error al cargar las listas de facturas. Vuelva a intentarlo más tarde";
        this.invoicePayBtnLabel = "Pagar ahora";
        this.invoiceQuoteDetailTitle = "Detalles de estimado";
        this.invoiceSubTotalLabel = "Total parcial:";
        this.invoiceEnterPaymentTitle = "Ingrese la información de la tarjeta";
        this.invoiceTotalLabel = "Factura Total:";
        this.invoicePaidToDateLabel = "Pagado hasta la fecha:";
        this.invoiceBalanceLabel = "Balance:";
        this.invoiceStatusLabel = "Estado:";
        this.invoicesOpenListTitle = "Abrir facturas";
        this.invoicesOpenBtnLabel = "Abiertas";
        this.invoicesNoOpenMsg = "No se encontraron facturas abiertas";
        this.invoicesClosedListTitle = "Facturas cerradas";
        this.invoicesClosedBtnLabel = "Cerrada";
        this.invoicesNoClosedMsg = "No se encontraron facturas cerradas";
        this.invoicesVoidedListTitle = "Facturas anuladas";
        this.invoicesVoidedBtnLabel = "Anulada";
        this.invoicesNoVoidedMsg = "No se encontraron facturas anuladas";
        this.invoicesViewDetailBtnLabel = "<i class ='fas fa-search'> </i>";
        this.labelBack = "Regresar";
        this.labelBookAnother = "Reservar otra cita";
        this.labelNext = "Próximo";
        this.labelNoPreference = "* Sin preferencias *";
        this.labelSave = "Guardar";
        this.locationGroupTitle = "Grupos de ubicación";
        this.locationGroupPnlErrorLoading = this.errorLoadingLabel;
        this.locationGroupPnlNoObjectsMsg = "No hay grupos de locaciones disponibles para reservar en este momento";
        this.locationSuperGroupTitle = "Ubicación Super Grupos";
        this.locationSuperGroupPnlErrorLoading = this.errorLoadingLabel;
        this.locationSuperGroupPnlNoObjectsMsg = "No hay supergrupos de locaciones disponibles para reservar en este momento";
        this.locationPnlErrorLoading = this.errorLoadingLabel;
        this.locationPnlNoLocationsFilterSearchMsg = "No se encontraron locaciones con la búsqueda '%FILTER_SEARCH%'";
        this.locationPnlMapInfoWindowContent = "<strong>%LOCATION_NAME%</strong><br/> %LOCATION_ADDRESS%";
        this.locationPnlVariableAddressInitialDescription = "Escriba la dirección de su cita a continuación. Una vez que haya terminado, presione el botón de validación para completar la búsqueda.";
        this.locationPnlVariableAddressInputLabel = "Dirección";
        this.locationPnlVariableAddressMatchingAddressesTitle = "Direcciones coincidentes:";
        this.locationPnlVariableAddressMatchingAddressesDescription = "A continuación se muestra una lista de direcciones que coinciden con la dirección que escribió. Haga clic en el botón de confirmación junto a la dirección que mejor representa la suya:";
        this.locationPnlVariableAddressTitle = "Introducir dirección";
        this.locationPnlVariableAddressValidateBtn = "Validar dirección";
        this.locationPnlVariableAddressConfirmBtn = "Confirmar dirección";
        this.locationTitle = "Ubicación";
        this.locationNoAvailError = "No hay locaciones disponibles para reservar en este momento";
        this.loginErrorMsg = "Hubo un error al iniciar sesión. Verifique su dirección de correo electrónico y contraseña e intente nuevamente.";
        this.loginTitle = "Iniciar sesión";
        this.loginForgotPwd = "¿Olvidó su contraseña?";
        this.loginBtnLabel = "Iniciar sesión";
        this.loginBtnLabelLoggingIn = "Iniciando sesión...";
        this.loggedInWelcomeText = "<div style = 'text-align: center; font-size: large;'> <p> Ahora que ha iniciado sesión en nuestro programador, puede: </p> <p style ='margin-bottom: 5px;'> & bull; Programe una nueva cita </p> <p> & bull; Ver y administrar citas pasadas y futuras </p> <p> Seleccione un botón a continuación para comenzar: </p> </div>";
        this.loggedInWelcomeTitle = '¡Bienvenido,%CLIENT_FIRSTNAME%!';
        this.logoutLabel = "Cerrar sesión";
        this.maxApptsReachedModalErrorMsg = "Solo se le permite tener %MAX_ACTIVE_APPTS% citas abiertas a la vez y ha alcanzado ese límite. Primero debe cancelar una cita existente antes de poder reservar nuevas citas.";
        this.maxApptsReachedModalErrorTitle = "Número máxima de citas se ha alcanzado";
        this.maxApptsReachedBookingErrorMsg = "Ha seleccionado reservar para %CLIENT_FULLNAME% pero ya ha alcanzado el número máximo de citas permitidas. " + this.maxApptsReachedModalErrorMsg;
        this.maxApptsReachedBookingMultipleErrorMsg = "Este programador solo permite programar hasta %MAX_ACTIVE_APPTS% citas en cualquier momento. Ha seleccionado reservar %TIME_CART_COUNT% citas para %CLIENT_FULLNAME%. %CLIENT_FULLNAME% ya tiene %CLIENT_ACTIVE_APPT_COUNT% citas activas y reservar %TIME_CART_COUNT% los podría por encima del máximo permitido de %MAX_ACTIVE_APPTS%. Vuelva a la página de horarios disponobles y remueva %APPT_COUNT_TO_REMOVE% citas de su carrito de citas.";
        this.minuteLabel = 'minuto';
        this.minutesLabel = 'minutos';
        this.myAccountMyProfileBtnLabel = "Mi perfil";
        this.noAppointmentText = "Todos los horarios de citas están reservados actualmente. Vuelva a consultar más tarde";
        this.noStaffError = "Actualmente no hay disponibilidad para que pueda hacer una cita a través de este programador. Vuelva a consultar más tarde";
        this.noCancelledApptsMsg = "No se encontraron citas canceladas";
        this.noCompletedApptsMsg = "No se encontraron citas completadas";
        this.noNoShowApptsMsg = "No se encontraron citas ausente";
        this.noOpenApptsMsg = "No se encontraron citas abiertas";
        this.noshowApptBtnLabel = "Ausente";
        this.noshowApptTitle = "Citas Ausentes";
        this.openApptTitle = "Citas Abiertas";
        this.passwordFieldLabel = "Establezca su contraseña";
        this.payNowButtonLabel = 'Pagar ahora';
        this.poweredByTimeTap = "Desarrollado por <a href='https://www.timetap.com' target='_blank'> TimeTap.com";
        this.quotaFullMsg = "El motivo seleccionado para su cita ha alcanzado su cuota máxima para el período de reserva";
        this.reasonPnlNoReasonsMsg = "No hay servicios o clases disponibles para reservar en este momento";
        this.repeatingApptDateList = "<li> <b>%APPT_DATE_TIME%: </b>%STAFF_FULLNAME% en %LOCATION_NAME% </li>";
        this.registerDescription = "Primero, ingrese su correo electrónico y verificaremos si ha hecho citas aquí en el pasado. Si es así, le enviaremos un correo electrónico de restablecimiento de contraseña";
        this.registerDescriptionClientExists = "¡Parece que has estado aquí antes! Te hemos enviado un correo electrónico para establecer una contraseña para el programador. Una vez que hayas hecho eso, vuelve aquí para iniciar sesión.";
        this.registerTitle = "Registrarse";
        this.registerButtonCheckEmail = "Verificar correo electrónico";
        this.registerDescriptionNoClientFound = "No pudimos encontrar su dirección de correo electrónico %CLIENT_EMAILADDRESS% en nuestros registros. Complete los campos a continuación para registrarse en nuestro programador:";
        this.registerErrorMsg = "Hubo un error al enviar su registro. Inténtelo de nuevo";
        this.registerButtonRegister = "Registrarse";
        this.registerLoginErrorMsg = "Te registramos correctamente para el programador, pero hubo un error al iniciar sesión. Actualiza la página y haz clic en el botón de inicio de sesión para volver a intentarlo.";
        this.requiredFieldsEmptyMsg = "Por favor complete todos los campos requeridos. Desplácese hacia abajo si es necesario.";
        this.resetPwdEmailSent = "Hemos enviado un correo electrónico con un enlace para restablecer su contraseña a %CLIENT_EMAILADDRESS%. Revise su correo electrónico, restablezca su contraseña y luego regrese aquí para iniciar sesión.";
        this.resetPwdTitle = "Restablecer contraseña";
        this.resetPwdButtonLabel = "Restablecer contraseña";
        this.resetPwdDescription = "Ingrese su dirección de correo electrónico a continuación y haga clic en el botón " + this.resetPwdButtonLabel + " a continuación.";
        this.rescheduleBtnLabel = "Reprogramar";
        this.serviceGroupTitle = "Grupo de razones";
        this.serviceGroupPnlErrorLoading = this.errorLoadingLabel;
        this.serviceGroupPnlNoObjectsMsg = "No hay super groups de razones disponibles para reservar en este momento";
        this.serviceSuperGroupTitle = "Super Grupo de Razones";
        this.serviceSuperGroupPnlErrorLoading = this.errorLoadingLabel;
        this.serviceSuperGroupPnlNoObjectsMsg = "No hay motivos para que los supergrupos estén disponibles para reservar en este momento";
        this.serviceTitle = "Servicio";
        this.servicePnlCouponButton = "Aplicar";
        this.servicePnlCouponErrorNoCode = "No se ingresó ningún código de cupón. Ingrese un código y vuelva a intentarlo";
        this.servicePnlCouponErrorNoCouponFound = "No se encontró ningún cupón con el código: '%COUPON_CODE%'. Revise el código y vuelva a intentarlo.";
        this.servicePnlCouponErrorExpired = "El código de cupón '% COUPON_CODE%' expiró el %COUPON_ENDDATE%.";
        this.servicePnlCouponErrorMaxUseReached = "El código de cupón '%COUPON_CODE%' ya ha alcanzado su recuento de uso máximo de %COUPON_MAX_USE_COUNT%.";
        this.servicePnlCouponErrorNoReasonsDiscounted = "El código de cupón '%COUPON_CODE%' no se aplica a ninguno de los motivos de citas mostrados.";
        this.servicePnlCouponSuccess = "El código de cupón '%COUPON_CODE%' se ha aplicado a %COUPON_APPLIED_REASON_COUNT% razones a continuación.";
        this.servicePnlCouponLabel = "Ingresar código de cupón";
        this.servicePnlErrorLoading = this.errorLoadingLabel;
        this.servicePnlNoObjectsMsg = "No hay servicios o clases disponibles para reservar en este momento";
        this.staffGroupTitle = "Grupo de personal";
        this.staffTitle = "Personal";
        this.staffPnlErrorLoading = this.errorLoadingLabel;
        this.staffPnlNoObjectsMsg = "No hay personal disponible para reservar en este momento";
        this.staffPnlNoStaffFilterSearchMsg = "No se encontró personal con la búsqueda '%FILTER_SEARCH%'";
        this.switchToRegisterLink = "Regístrese ahora";
        this.switchToRegisterText = "¿Necesita una cuenta?";
        this.thanksCourses = "<p style='text-align: center;'> <strong> Su registro para %REASON% es exitoso </strong> <br/> <br /> Personal: %STAFF_FULLNAME% <br /> Conjunto: %SET_NAME% <br /> <br /> Ubicación: %LOCATION_NAME% <br />% LOCATION_ADDRESS% </p> ";
        this.thanksInfo = "<p style='text-align: center;'> <strong> ¡Su cita ha sido programada! </strong> <br> <br> Personal: %STAFF_FULLNAME% <br> Hora: %APPT_DATE_TIME% <br>Servicio de: %REASON% <br> <br> Ubicación: %LOCATION_NAME% <br>%LOCATION_ADDRESS% <br> </p> ";
        this.thanksInfoRepeating = "<p style='text-align: center;'> <strong> ¡Se han programado sus citas para %REASON%! </strong> </p> <div style='text-align: center' >%REPEATING_APPT_DATE_LIST% </div> ";
        this.thanksInfoRepeatingApptsNotSaved = "<p style='text-align: center'> <strong>  Lamentablemente, estos horarios fueron reservados por otra persona y no pudieron ser reservados:  </strong> </p> <br> <div style='text-align: center;'>%REPEATING_APPT_DATE_LIST% </div> ";
        this.thanksPnlErrorLoading = this.errorLoadingLabel;
        this.thanksInfoConfirm = "Su cita está esperando la confirmación del personal. En breve recibirá un correo electrónico para informarle si el personal ha confirmado o rechazado su solicitud de cita.";
        this.thanksInfoConfirmRepeating = "Sus citas están esperando la confirmación del personal. Recibirá un correo electrónico en breve para informarle si el personal ha confirmado o rechazado sus solicitudes de cita.";
        this.thanksConfirmPnlErrorLoading = this.errorLoadingLabel;
        this.thanksInfoPayment = "<p style='text-align: center;'> <strong> Su cita está programada. Puede enviar el pago ahora o espere hasta la hora de su cita. </strong> <br /> <br/>  Si desea continuar y enviar el pago, haga clic en el botón a continuación:  <br/>%PAYMENT_BUTTON% </p> ";
        this.thanksInfoPaymentRepeating = "<p style='text-align: center;'> <strong>  Su citas está programada. Puede enviar el pago ahora o espere hasta su primera cita. </strong> <br /> <br/> Puede enviar el pago ahora o espere hasta la hora de su cita: <br />%PAYMENT_BUTTON% </p> ";
        this.thanksInfoPaymentAuthOnly = "<p style='text-align: center;'> <strong> Ingrese los detalles de su tarjeta de crédito con el botón a continuación para confirmar su cita. </strong> <br /> <br /> Al hacer clic en el botón de pago a continuación, se le pedirá que ingrese la información de su tarjeta de crédito, pero no se retirará dinero de su tarjeta en este momento. Esto solo es necesario para celebrar su cita. <br />%PAYMENT_BUTTON% </p> ";
        this.thanksInfoPaymentAuthOnlyRepeating = "<p style='text-align: center;'> <strong> Ingrese los detalles de su tarjeta de crédito usando el botón a continuación para confirmar sus citas. </strong> <br /> <br /> Al hacer clic en el botón de pago a continuación, se le pedirá que ingrese la información de su tarjeta de crédito, pero no se extraerá dinero de su tarjeta en este momento. Esto solo es necesario para mantener sus citas. <br />%PAYMENT_BUTTON% </p> ";
        this.thanksInfoPaymentRequired = "<p style='text-align: center;'> <strong> Su cita aún no está programada. </strong> <br /> <br /> Haga clic en el botón a continuación para realizar el pago. De lo contrario, se cancelará su cita. <br />% PAYMENT_BUTTON% </p> ";
        this.thanksInfoPaymentRequiredRepeating = "<p style='text-align: center;'> <strong> Sus citas aún no están programadas. </strong> <br /> <br /> Haga clic en el botón a continuación para realizar el pago sus citas. De lo contrario, se cancelarán sus citas. <br />% PAYMENT_BUTTON% </p> ";
        this.thanksPaymentTitle = "Pagar ahora o más tarde";
        this.thanksPaymentTitleAuthOnly = "Autorice su tarjeta";
        this.thanksPaymentTitleRequired = "Pagar ahora";
        this.thanksTitle = "¡Gracias!";
        this.thanksWaitListTitle = "Estás en la lista de espera";
        this.timePnlBookingSummary = "Programando para %REASON% con %STAFF_FULLNAME% en %LOCATION_NAME%";
        this.timePnlCalendarLabel = "Seleccionar fecha:";
        this.timePnlCartBookingTimesListTitle = "Fechas y horarios seleccionados para la cita:";
        this.timePnlCartCloseBtnLabel = "Cerrar";
        this.timePnlCartDescription = "A continuación se muestran todas los horarios que ha seleccionado. Si ya no desea reservar una de las horas seleccionadas, haga clic en el botón para eliminarla.";
        this.timePnlCartNoTimesSelected = "Actualmente no hay horarios seleccionados. Cierre esta ventana y seleccione algunas fechas y horas del calendario para reservar";
        this.timePnlCartRemoveBtnLabel = "Remover";
        this.timePnlErrorLoading = this.errorLoadingLabel;
        this.timePnlCartTitle = "Horarios seleccionados";
        this.timePnlCartWaitlistTimesListTitle = "Fechas y horarios seleccionadas para la lista de espera:";
        this.timePnlChangeTimezoneLabel = "Cambiar zona horaria";
        this.timePnlLoadingTimesLabel = "Cargando horarios disponibles...";
        this.timePnlNoTimesAvailOnSelectDay = "No hay horarios disponibles en la fecha seleccionada. Elija una fecha diferente";
        this.timePnlNoTimesAvailOnSelectMonth = "No hay horarios disponibles en el mes actual. Elija un mes diferente";
        this.timePnlRescheduleBookingSummary = "Reprogramación para %REASON% con %STAFF_FULLNAME% en %LOCATION_NAME%";
        this.timePnlSeatsLabel = "Asientos restantes";
        this.timePnlSeatsFullJoinWaitlist = "0 espacios restantes. Únase a la lista de espera.";
        this.timePnlSelectCourseSetLabel = "Seleccione el conjunto de cursos que desea reservar:";
        this.timePnlSelectTimeLabel = "Seleccione horario el:";
        this.timePnlSelectTimeNoClassCalendarLabel = "Seleccionar fecha y horario de sesión:";
        this.timePnlSelectedTimesBtnLabel = "%SELECTED_TIMES_COUNT% veces seleccionadas";
        this.timePnlTimezoneLabel = "Su zona horaria";
        this.timePnlTimezoneLabelForBusiness = "Zona horaria:";
        this.timePnlWaitlistTitle = "Únase a la lista de espera";
        this.timePnlWaitlistText = this.waitListFirstAvailable ? "<div style='text-align: center;'>Si desea ser notificado en especificos días y horarios disponibles, seleccione los días y horarios en el calendario. De lo contrario, puede hacer clic en el botón para recibir una notificación de la primera apertura disponible:</div>" : "<div style='text-align: center;'>Seleccione la(s) fecha(s) y horario(s) para las cuales le gustaría estar en la lista de espera y le enviaremos una notificación si esos horarios están disponibles.</div>";
        this.timeTitle = "Horario";
        this.upcomingApptBtnLabel = "Subiendo";
        this.viewApptLabel = "Ver citas";
        this.viewApptTitle = "Historial de citas";
        this.viewingAccountForLabel = "Viendo cuenta para:";
        this.viewingApptsForLabel = "Viendo citas para:";
        this.viewingInvoicesForLabel = "Viendo facturas para:";
        this.viewingProfileForLabel = "Viendo perfil para:";
        this.viewInvoiceLabel = "Ver facturas";
        this.waitListAcceptScreenErrorTitle = "Error al encontrar la cita";
        this.waitListAcceptScreenErrorText = "No pudimos encontrar la cita solicitada en la lista de espera. Asegúrese de tener el enlace adecuado e intente nuevamente. Si continúa teniendo problemas, comuníquese con el Soporte de TimeTap.";
        this.waitListAcceptScreenHeader = "Solicitar cita";
        this.waitListAcceptScreenText = "Si desea reclamar la cita con %STAFF_FULLNAME% en %LOCATION_NAME% para %REASON% en %APPT_DATE_TIME%, haga clic en el botón de reclamo.";
        this.waitlistAlreadyClaimed = "Cita ya reclamada";
        this.waitlistAlreadyClaimedText = "<p style='text-align: center;'>Lo sentimos, pero esta cita ya ha sido reclamada. Le haremos saber si hay otro horario disponible.</p>";
        this.waitlistClaimApptBtn = "Reclamar cita";
        this.waitlistClaimedApptCancelledTitle = "Cita cancelada";
        this.waitlistClaimedApptCancelledText = "Esta cita con %STAFF_FULLNAME% en %LOCATION_NAME% para %REASON% en %APPT_DATE_TIME% ha sido cancelado..";
        this.waitListDateListClass = "<li> <b>%APPT_DATE% a las %APPT_CLIENT_START_TIME_SHORT%: </b>%STAFF_FULLNAME% en %LOCATION_NAME% para %REASON% </li>";
        this.waitListDateListFirstAvail = "<li> <b> Primera fecha y hora disponibles: </b>%STAFF_FULLNAME% en %LOCATION_NAME% para %REASON% </li>";
        this.waitListDateListService = "<li> <b>%APPT_DATE% a las %APPT_CLIENT_START_TIME_SHORT%: </b>%STAFF_FULLNAME% en %LOCATION_NAME% para %REASON%</li>";
        this.waitListFirstAvailableInTimeCart = "Primera fecha y horario disponibles";
        this.waitListFirstAvailableText = "Haga clic aquí para recibir una notificación sobre la primera apertura disponible";
        this.waitListRegisterSuccessTitle = "¡Gracias!";
        this.waitlistRemoveError = "Se produjo un error al eliminarlo de la lista de espera. Inténtalo de nuevo. Si continúa teniendo problemas, póngase en contacto con el servicio de asistencia.";
        this.waitlistRemoveSuccessTitle = "Eliminado exitosamente";
        this.waitlistRemoveSuccessText = "<p style='text-align: center;'><strong>Ha sido eliminado exitosamente de la lista de espera para los siguientes registros: </strong></p><div style='text-align: center'>%WAITLIST_DATE_LIST%</div><p style='text-align: center;'></p>";
        this.waitlistRemoveTitle = "Eliminar de la lista de espera";
        this.waitlistRemoveText = "<p style='text-align: center;'><strong>Haga clic en el botón Eliminar a continuación si ya no desea recibir notificaciones de la lista de espera para los siguientes registros: </strong></p><div style='text-align: center'>%WAITLIST_DATE_LIST%</div><p style='text-align: center;'></p>";
        this.waitlistRemoveBtn = "Eliminar";
        this.waitListSuccessText = "<p style='text-align: center;'> <strong> Ha sido agregado a la lista de espera para las siguientes fechas y horarios: </strong> </p> <div style='text-align: center'>%WAITLIST_DATE_LIST% </div> <p style='text-align: center;'> En caso de que haya una cita disponible, será contactado por correo electrónico o por sms.</p> ";
        this.waitListText = "Haga clic aquí para unirse a la lista de espera para otra fecha/horario";
        this.waitListTextExitWaitListMode = "Elija entre fechas y horarios disponibles";
        this.welcomeText = "<p> <span style='font-size: x-large;'> Haga clic en las siguientes pantallas para seleccionar un intervalo de tiempo apropiado para su cita. </span> </p> <p> <span style='font-size: x-large;'> <br /> Una vez establecida su cita, recibirá un correo electrónico de confirmación. También recibirá un correo electrónico recordatorio 24 horas antes de su cita. <br/> ¡Gracias! <br/> </span> </p> ";
        this.welcomeTitle = "Bienvenido";
        this.welcomePnlErrorLoading = "El programador no se pudo cargar. Actualice su página e intente nuevamente.";
        this.cancelReasonList = null;
        this.filterHint = null;
        this.infoText = null;
        this.locationGroupText = null;
        this.locationSuperGroupText = null;
        this.locationText = null;
        this.serviceGroupText = null;
        this.servicePnlCouponHint = null;
        this.serviceSuperGroupText = null;
        this.serviceText = null;
        this.smsHint = null;
        this.staffGroupText = null;
        this.staffText = null;
        this.timeText = null;
    }
    SpanishLabelMap.prototype.ngOnInit = function () {
        if (this.rescheduleHrs === 0) {
            this.apptReschedulePastTimeframeMsg = "Ha pasado el plazo permitido para reprogramar esta cita. La reprogramación está permitida hasta la hora de inicio de la cita.";
        }
        if (this.cancelHrs === 0) {
            this.apptCancelPastTimeframeMsg = "El plazo permitido para cancelar esta cita ha expirado. Se permiten cancelaciones hasta la hora de inicio de la cita.";
        }
        //@ts-ignore
    };
    SpanishLabelMap.ctorParameters = function () { return [
        { type: _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_0__["ConfigListMap"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_1__["TitleCasePipe"] },
        { type: Number },
        { type: Number },
        { type: Boolean }
    ]; };
    return SpanishLabelMap;
}());



/***/ }),

/***/ "./src/app/languages/label-map-nl.model.ts":
/*!*************************************************!*\
  !*** ./src/app/languages/label-map-nl.model.ts ***!
  \*************************************************/
/*! exports provided: DutchLabelMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DutchLabelMap", function() { return DutchLabelMap; });
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");


var DutchLabelMap = /** @class */ (function () {
    function DutchLabelMap(configListLabels, titleCasePipe, cancelHrs, rescheduleHrs, waitListFirstAvailable) {
        this.configListLabels = configListLabels;
        this.titleCasePipe = titleCasePipe;
        this.cancelHrs = cancelHrs;
        this.rescheduleHrs = rescheduleHrs;
        this.waitListFirstAvailable = waitListFirstAvailable;
        this.hourLabel = 'Uur';
        this.hoursLabel = 'Uren';
        this.minuteLabel = 'Minuut';
        this.minutesLabel = 'Minuten';
    }
    DutchLabelMap.prototype.ngOnInit = function () {
        // if(this.rescheduleHrs === 0){
        //     this.apptReschedulePastTimeframeMsg = "Ha pasado el plazo permitido para reprogramar esta cita. La reprogramación está permitida hasta la hora de inicio de la cita.";
        // }
        // if(this.cancelHrs === 0){
        //     this.apptCancelPastTimeframeMsg = "El plazo permitido para cancelar esta cita ha expirado. Se permiten cancelaciones hasta la hora de inicio de la cita.";
        // }
    };
    DutchLabelMap.ctorParameters = function () { return [
        { type: _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_0__["ConfigListMap"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_1__["TitleCasePipe"] },
        { type: Number },
        { type: Number },
        { type: Boolean }
    ]; };
    return DutchLabelMap;
}());



/***/ }),

/***/ "./src/app/locale.service.ts":
/*!***********************************!*\
  !*** ./src/app/locale.service.ts ***!
  \***********************************/
/*! exports provided: LocaleService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocaleService", function() { return LocaleService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_common_locales_ar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/locales/ar */ "./node_modules/@angular/common/locales/ar.js");
/* harmony import */ var _angular_common_locales_ar__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_ar__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_common_locales_bg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/locales/bg */ "./node_modules/@angular/common/locales/bg.js");
/* harmony import */ var _angular_common_locales_bg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_bg__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _angular_common_locales_ca__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common/locales/ca */ "./node_modules/@angular/common/locales/ca.js");
/* harmony import */ var _angular_common_locales_ca__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_ca__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _angular_common_locales_da__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common/locales/da */ "./node_modules/@angular/common/locales/da.js");
/* harmony import */ var _angular_common_locales_da__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_da__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _angular_common_locales_de__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common/locales/de */ "./node_modules/@angular/common/locales/de.js");
/* harmony import */ var _angular_common_locales_de__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_de__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _angular_common_locales_el__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common/locales/el */ "./node_modules/@angular/common/locales/el.js");
/* harmony import */ var _angular_common_locales_el__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_el__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _angular_common_locales_es__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common/locales/es */ "./node_modules/@angular/common/locales/es.js");
/* harmony import */ var _angular_common_locales_es__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_es__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _angular_common_locales_fi__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/common/locales/fi */ "./node_modules/@angular/common/locales/fi.js");
/* harmony import */ var _angular_common_locales_fi__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_fi__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _angular_common_locales_fil__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common/locales/fil */ "./node_modules/@angular/common/locales/fil.js");
/* harmony import */ var _angular_common_locales_fil__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_fil__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _angular_common_locales_fr__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/common/locales/fr */ "./node_modules/@angular/common/locales/fr.js");
/* harmony import */ var _angular_common_locales_fr__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_fr__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _angular_common_locales_he__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/common/locales/he */ "./node_modules/@angular/common/locales/he.js");
/* harmony import */ var _angular_common_locales_he__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_he__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var _angular_common_locales_hi__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/common/locales/hi */ "./node_modules/@angular/common/locales/hi.js");
/* harmony import */ var _angular_common_locales_hi__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_hi__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var _angular_common_locales_is__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/common/locales/is */ "./node_modules/@angular/common/locales/is.js");
/* harmony import */ var _angular_common_locales_is__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_is__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var _angular_common_locales_id__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/common/locales/id */ "./node_modules/@angular/common/locales/id.js");
/* harmony import */ var _angular_common_locales_id__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_id__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var _angular_common_locales_it__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/common/locales/it */ "./node_modules/@angular/common/locales/it.js");
/* harmony import */ var _angular_common_locales_it__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_it__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var _angular_common_locales_ja__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/common/locales/ja */ "./node_modules/@angular/common/locales/ja.js");
/* harmony import */ var _angular_common_locales_ja__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_ja__WEBPACK_IMPORTED_MODULE_18__);
/* harmony import */ var _angular_common_locales_ko__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common/locales/ko */ "./node_modules/@angular/common/locales/ko.js");
/* harmony import */ var _angular_common_locales_ko__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_ko__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var _angular_common_locales_nl__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/common/locales/nl */ "./node_modules/@angular/common/locales/nl.js");
/* harmony import */ var _angular_common_locales_nl__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_nl__WEBPACK_IMPORTED_MODULE_20__);
/* harmony import */ var _angular_common_locales_nb__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/common/locales/nb */ "./node_modules/@angular/common/locales/nb.js");
/* harmony import */ var _angular_common_locales_nb__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_nb__WEBPACK_IMPORTED_MODULE_21__);
/* harmony import */ var _angular_common_locales_nn__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/common/locales/nn */ "./node_modules/@angular/common/locales/nn.js");
/* harmony import */ var _angular_common_locales_nn__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_nn__WEBPACK_IMPORTED_MODULE_22__);
/* harmony import */ var _angular_common_locales_pt__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/common/locales/pt */ "./node_modules/@angular/common/locales/pt.js");
/* harmony import */ var _angular_common_locales_pt__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_pt__WEBPACK_IMPORTED_MODULE_23__);
/* harmony import */ var _angular_common_locales_ru__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @angular/common/locales/ru */ "./node_modules/@angular/common/locales/ru.js");
/* harmony import */ var _angular_common_locales_ru__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_ru__WEBPACK_IMPORTED_MODULE_24__);
/* harmony import */ var _angular_common_locales_sv__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @angular/common/locales/sv */ "./node_modules/@angular/common/locales/sv.js");
/* harmony import */ var _angular_common_locales_sv__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_sv__WEBPACK_IMPORTED_MODULE_25__);
/* harmony import */ var _angular_common_locales_tr__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @angular/common/locales/tr */ "./node_modules/@angular/common/locales/tr.js");
/* harmony import */ var _angular_common_locales_tr__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_tr__WEBPACK_IMPORTED_MODULE_26__);
/* harmony import */ var _angular_common_locales_vi__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @angular/common/locales/vi */ "./node_modules/@angular/common/locales/vi.js");
/* harmony import */ var _angular_common_locales_vi__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_vi__WEBPACK_IMPORTED_MODULE_27__);
/* harmony import */ var _angular_common_locales_zh__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @angular/common/locales/zh */ "./node_modules/@angular/common/locales/zh.js");
/* harmony import */ var _angular_common_locales_zh__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_zh__WEBPACK_IMPORTED_MODULE_28__);
/* harmony import */ var _angular_common_locales_en_GB__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @angular/common/locales/en-GB */ "./node_modules/@angular/common/locales/en-GB.js");
/* harmony import */ var _angular_common_locales_en_GB__WEBPACK_IMPORTED_MODULE_29___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_en_GB__WEBPACK_IMPORTED_MODULE_29__);
/* harmony import */ var _angular_common_locales_es_AR__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @angular/common/locales/es-AR */ "./node_modules/@angular/common/locales/es-AR.js");
/* harmony import */ var _angular_common_locales_es_AR__WEBPACK_IMPORTED_MODULE_30___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_es_AR__WEBPACK_IMPORTED_MODULE_30__);
/* harmony import */ var _angular_common_locales_es_BO__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @angular/common/locales/es-BO */ "./node_modules/@angular/common/locales/es-BO.js");
/* harmony import */ var _angular_common_locales_es_BO__WEBPACK_IMPORTED_MODULE_31___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_es_BO__WEBPACK_IMPORTED_MODULE_31__);
/* harmony import */ var _angular_common_locales_es_CL__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @angular/common/locales/es-CL */ "./node_modules/@angular/common/locales/es-CL.js");
/* harmony import */ var _angular_common_locales_es_CL__WEBPACK_IMPORTED_MODULE_32___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_es_CL__WEBPACK_IMPORTED_MODULE_32__);
/* harmony import */ var _angular_common_locales_es_CO__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @angular/common/locales/es-CO */ "./node_modules/@angular/common/locales/es-CO.js");
/* harmony import */ var _angular_common_locales_es_CO__WEBPACK_IMPORTED_MODULE_33___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_es_CO__WEBPACK_IMPORTED_MODULE_33__);
/* harmony import */ var _angular_common_locales_es_CR__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @angular/common/locales/es-CR */ "./node_modules/@angular/common/locales/es-CR.js");
/* harmony import */ var _angular_common_locales_es_CR__WEBPACK_IMPORTED_MODULE_34___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_es_CR__WEBPACK_IMPORTED_MODULE_34__);
/* harmony import */ var _angular_common_locales_es_CU__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @angular/common/locales/es-CU */ "./node_modules/@angular/common/locales/es-CU.js");
/* harmony import */ var _angular_common_locales_es_CU__WEBPACK_IMPORTED_MODULE_35___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_es_CU__WEBPACK_IMPORTED_MODULE_35__);
/* harmony import */ var _angular_common_locales_es_DO__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! @angular/common/locales/es-DO */ "./node_modules/@angular/common/locales/es-DO.js");
/* harmony import */ var _angular_common_locales_es_DO__WEBPACK_IMPORTED_MODULE_36___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_es_DO__WEBPACK_IMPORTED_MODULE_36__);
/* harmony import */ var _angular_common_locales_es_EC__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @angular/common/locales/es-EC */ "./node_modules/@angular/common/locales/es-EC.js");
/* harmony import */ var _angular_common_locales_es_EC__WEBPACK_IMPORTED_MODULE_37___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_es_EC__WEBPACK_IMPORTED_MODULE_37__);
/* harmony import */ var _angular_common_locales_es_SV__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! @angular/common/locales/es-SV */ "./node_modules/@angular/common/locales/es-SV.js");
/* harmony import */ var _angular_common_locales_es_SV__WEBPACK_IMPORTED_MODULE_38___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_es_SV__WEBPACK_IMPORTED_MODULE_38__);
/* harmony import */ var _angular_common_locales_es_GT__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! @angular/common/locales/es-GT */ "./node_modules/@angular/common/locales/es-GT.js");
/* harmony import */ var _angular_common_locales_es_GT__WEBPACK_IMPORTED_MODULE_39___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_es_GT__WEBPACK_IMPORTED_MODULE_39__);
/* harmony import */ var _angular_common_locales_es_HN__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! @angular/common/locales/es-HN */ "./node_modules/@angular/common/locales/es-HN.js");
/* harmony import */ var _angular_common_locales_es_HN__WEBPACK_IMPORTED_MODULE_40___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_es_HN__WEBPACK_IMPORTED_MODULE_40__);
/* harmony import */ var _angular_common_locales_es_MX__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! @angular/common/locales/es-MX */ "./node_modules/@angular/common/locales/es-MX.js");
/* harmony import */ var _angular_common_locales_es_MX__WEBPACK_IMPORTED_MODULE_41___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_es_MX__WEBPACK_IMPORTED_MODULE_41__);
/* harmony import */ var _angular_common_locales_es_NI__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! @angular/common/locales/es-NI */ "./node_modules/@angular/common/locales/es-NI.js");
/* harmony import */ var _angular_common_locales_es_NI__WEBPACK_IMPORTED_MODULE_42___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_es_NI__WEBPACK_IMPORTED_MODULE_42__);
/* harmony import */ var _angular_common_locales_es_PA__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! @angular/common/locales/es-PA */ "./node_modules/@angular/common/locales/es-PA.js");
/* harmony import */ var _angular_common_locales_es_PA__WEBPACK_IMPORTED_MODULE_43___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_es_PA__WEBPACK_IMPORTED_MODULE_43__);
/* harmony import */ var _angular_common_locales_es_PY__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! @angular/common/locales/es-PY */ "./node_modules/@angular/common/locales/es-PY.js");
/* harmony import */ var _angular_common_locales_es_PY__WEBPACK_IMPORTED_MODULE_44___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_es_PY__WEBPACK_IMPORTED_MODULE_44__);
/* harmony import */ var _angular_common_locales_es_PE__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! @angular/common/locales/es-PE */ "./node_modules/@angular/common/locales/es-PE.js");
/* harmony import */ var _angular_common_locales_es_PE__WEBPACK_IMPORTED_MODULE_45___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_es_PE__WEBPACK_IMPORTED_MODULE_45__);
/* harmony import */ var _angular_common_locales_es_PR__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! @angular/common/locales/es-PR */ "./node_modules/@angular/common/locales/es-PR.js");
/* harmony import */ var _angular_common_locales_es_PR__WEBPACK_IMPORTED_MODULE_46___default = /*#__PURE__*/__webpack_require__.n(_angular_common_locales_es_PR__WEBPACK_IMPORTED_MODULE_46__);
/* harmony import */ var moment_moment__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment_moment__WEBPACK_IMPORTED_MODULE_47___default = /*#__PURE__*/__webpack_require__.n(moment_moment__WEBPACK_IMPORTED_MODULE_47__);



// parent level locales (without country)


























// English locales

// Spanish locales


















var LocaleService = /** @class */ (function () {
    function LocaleService() {
        var storedLocale = 'en-US';
        try {
            storedLocale = sessionStorage.getItem('locale');
        }
        catch (e) {
        }
        moment_moment__WEBPACK_IMPORTED_MODULE_47__["locale"](storedLocale);
    }
    Object.defineProperty(LocaleService.prototype, "locale", {
        get: function () {
            return this._locale || 'en-US';
        },
        set: function (value) {
            this._locale = value;
        },
        enumerable: true,
        configurable: true
    });
    LocaleService.prototype.registerCulture = function (culture) {
        if (!culture) {
            return;
        }
        this.locale = culture;
        var fullLocaleFound = this.setLocaleWithLanguageAndCountry(culture);
        if (!fullLocaleFound) {
            this.setLocaleWithLanguageOnly(culture);
        }
    };
    LocaleService.prototype.setLocaleWithLanguageAndCountry = function (culture) {
        switch (culture) {
            case 'en-GB':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_en_GB__WEBPACK_IMPORTED_MODULE_29___default.a, culture);
                return true;
                break;
            case 'en-AU':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_en_GB__WEBPACK_IMPORTED_MODULE_29___default.a, culture);
                return true;
                break;
            case 'es-AR':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_es_AR__WEBPACK_IMPORTED_MODULE_30___default.a, culture);
                return true;
                break;
            case 'es-BO':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_es_BO__WEBPACK_IMPORTED_MODULE_31___default.a, culture);
                return true;
                break;
            case 'es-CL':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_es_CL__WEBPACK_IMPORTED_MODULE_32___default.a, culture);
                return true;
                break;
            case 'es-CO':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_es_CO__WEBPACK_IMPORTED_MODULE_33___default.a, culture);
                return true;
                break;
            case 'es-CR':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_es_CR__WEBPACK_IMPORTED_MODULE_34___default.a, culture);
                return true;
                break;
            case 'es-CU':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_es_CU__WEBPACK_IMPORTED_MODULE_35___default.a, culture);
                return true;
                break;
            case 'es-DO':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_es_DO__WEBPACK_IMPORTED_MODULE_36___default.a, culture);
                return true;
                break;
            case 'es-EC':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_es_EC__WEBPACK_IMPORTED_MODULE_37___default.a, culture);
                return true;
                break;
            case 'es-SV':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_es_SV__WEBPACK_IMPORTED_MODULE_38___default.a, culture);
                return true;
                break;
            case 'es-GT':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_es_GT__WEBPACK_IMPORTED_MODULE_39___default.a, culture);
                return true;
                break;
            case 'es-HN':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_es_HN__WEBPACK_IMPORTED_MODULE_40___default.a, culture);
                return true;
                break;
            case 'es-MX':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_es_MX__WEBPACK_IMPORTED_MODULE_41___default.a, culture);
                return true;
                break;
            case 'es-NI':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_es_NI__WEBPACK_IMPORTED_MODULE_42___default.a, culture);
                return true;
                break;
            case 'es-PA':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_es_PA__WEBPACK_IMPORTED_MODULE_43___default.a, culture);
                return true;
                break;
            case 'es-PY':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_es_PY__WEBPACK_IMPORTED_MODULE_44___default.a, culture);
                return true;
                break;
            case 'es-PE':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_es_PE__WEBPACK_IMPORTED_MODULE_45___default.a, culture);
                return true;
                break;
            case 'es-PR':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_es_PR__WEBPACK_IMPORTED_MODULE_46___default.a, culture);
                return true;
                break;
        }
        return false;
    };
    LocaleService.prototype.setLocaleWithLanguageOnly = function (culture) {
        var languageSubstring = culture;
        if (culture.indexOf("-") !== -1) {
            var indexOfHyphen = culture.indexOf("-");
            languageSubstring = culture.substring(0, indexOfHyphen);
        }
        // Register locale data since only the en-US locale data comes with Angular
        switch (languageSubstring) {
            case 'ar':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_ar__WEBPACK_IMPORTED_MODULE_3___default.a, culture);
                break;
            case 'bg':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_bg__WEBPACK_IMPORTED_MODULE_4___default.a, culture);
                break;
            case 'ca':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_ca__WEBPACK_IMPORTED_MODULE_5___default.a, culture);
                break;
            case 'da':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_da__WEBPACK_IMPORTED_MODULE_6___default.a, culture);
                break;
            case 'de':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_de__WEBPACK_IMPORTED_MODULE_7___default.a, culture);
                break;
            case 'el':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_el__WEBPACK_IMPORTED_MODULE_8___default.a, culture);
                break;
            case 'es':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_es__WEBPACK_IMPORTED_MODULE_9___default.a, culture);
                break;
            case 'fi':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_fi__WEBPACK_IMPORTED_MODULE_10___default.a, culture);
                break;
            case 'fil':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_fil__WEBPACK_IMPORTED_MODULE_11___default.a, culture);
                break;
            case 'fr':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_fr__WEBPACK_IMPORTED_MODULE_12___default.a, culture);
                break;
            case 'he':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_he__WEBPACK_IMPORTED_MODULE_13___default.a, culture);
                break;
            case 'hi':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_hi__WEBPACK_IMPORTED_MODULE_14___default.a, culture);
                break;
            case 'id':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_id__WEBPACK_IMPORTED_MODULE_16___default.a, culture);
                break;
            case 'is':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_is__WEBPACK_IMPORTED_MODULE_15___default.a, culture);
                break;
            case 'it':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_it__WEBPACK_IMPORTED_MODULE_17___default.a, culture);
                break;
            case 'ja':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_ja__WEBPACK_IMPORTED_MODULE_18___default.a, culture);
                break;
            case 'ko':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_ko__WEBPACK_IMPORTED_MODULE_19___default.a, culture);
                break;
            case 'no':
            case 'nb':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_nb__WEBPACK_IMPORTED_MODULE_21___default.a, culture);
                break;
            case 'nn':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_nn__WEBPACK_IMPORTED_MODULE_22___default.a, culture);
                break;
            case 'nl':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_nl__WEBPACK_IMPORTED_MODULE_20___default.a, culture);
                break;
            case 'pt':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_pt__WEBPACK_IMPORTED_MODULE_23___default.a, culture);
                break;
            case 'ru':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_ru__WEBPACK_IMPORTED_MODULE_24___default.a, culture);
                break;
            case 'sv':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_sv__WEBPACK_IMPORTED_MODULE_25___default.a, culture);
                break;
            case 'tr':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_tr__WEBPACK_IMPORTED_MODULE_26___default.a, culture);
                break;
            case 'vi':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_vi__WEBPACK_IMPORTED_MODULE_27___default.a, culture);
                break;
            case 'zh':
                Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["registerLocaleData"])(_angular_common_locales_zh__WEBPACK_IMPORTED_MODULE_28___default.a, culture);
                break;
        }
    };
    LocaleService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({ providedIn: 'root' }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], LocaleService);
    return LocaleService;
}());



/***/ }),

/***/ "./src/app/material.module.ts":
/*!************************************!*\
  !*** ./src/app/material.module.ts ***!
  \************************************/
/*! exports provided: MaterialModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MaterialModule", function() { return MaterialModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material-moment-adapter */ "./node_modules/@angular/material-moment-adapter/esm5/material-moment-adapter.es5.js");




var MaterialModule = /** @class */ (function () {
    function MaterialModule() {
    }
    MaterialModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            imports: [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatButtonModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatToolbarModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatSidenavModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatFormFieldModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatChipsModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatInputModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatProgressSpinnerModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatIconModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatCardModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatListModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatRadioModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDatepickerModule"], _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_3__["MatMomentDateModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatSelectModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatCheckboxModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatTableModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatSortModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDividerModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatExpansionModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatBottomSheetModule"]],
            exports: [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MatButtonModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatToolbarModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatSidenavModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatFormFieldModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatChipsModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatInputModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatProgressSpinnerModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatIconModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatCardModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatListModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatRadioModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDatepickerModule"], _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_3__["MatMomentDateModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatSelectModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatCheckboxModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogModule"],
                _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatTableModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatSortModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDividerModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatExpansionModule"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatBottomSheetModule"]]
        })
    ], MaterialModule);
    return MaterialModule;
}());



/***/ }),

/***/ "./src/app/mini-website.service.ts":
/*!*****************************************!*\
  !*** ./src/app/mini-website.service.ts ***!
  \*****************************************/
/*! exports provided: MiniWebsiteService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MiniWebsiteService", function() { return MiniWebsiteService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _styleSheetService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./styleSheetService */ "./src/app/styleSheetService.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tags.service */ "./src/app/tags.service.ts");







var MiniWebsiteService = /** @class */ (function () {
    function MiniWebsiteService(injector, titleService, meta) {
        this.injector = injector;
        this.titleService = titleService;
        this.meta = meta;
        this.styleSheetService = injector.get(_styleSheetService__WEBPACK_IMPORTED_MODULE_3__["StyleSheetService"]);
        this.schedulerPreferenceService = injector.get(_scheduler_preference_service__WEBPACK_IMPORTED_MODULE_4__["SchedulerPreferenceService"]);
        this.tagsService = injector.get(_tags_service__WEBPACK_IMPORTED_MODULE_6__["TagsService"]);
    }
    MiniWebsiteService.prototype.configureMiniWebsite = function (business) {
        this.styleSheetService.createStyleSheet(this.miniWebsite, this.schedulerPreferenceService.schedulerPreference);
        if (this.miniWebsite.styleSheetMap !== undefined && this.miniWebsite.styleSheetMap !== null &&
            this.miniWebsite.styleSheetMap.body !== undefined && this.miniWebsite.styleSheetMap.body !== null &&
            this.miniWebsite.styleSheetMap.body.favicon !== undefined && this.miniWebsite.styleSheetMap.body.favicon !== null) {
            var faviconLinks = document.getElementsByClassName("appFavicon");
            for (var i = 0, x = faviconLinks.length; i < x; i++)
                faviconLinks[i].setAttribute('href', this.miniWebsite.styleSheetMap.body.favicon);
        }
        var pageTitle = 'TimeTap Scheduling';
        if (this.schedulerPreferenceService.schedulerPreference && this.schedulerPreferenceService.schedulerPreference.labelMap && this.schedulerPreferenceService.schedulerPreference.labelMap.pageTitle && this.schedulerPreferenceService.schedulerPreference.labelMap.pageTitle !== '')
            pageTitle = this.schedulerPreferenceService.schedulerPreference.labelMap.pageTitle;
        else if (this.miniWebsite && this.miniWebsite.pageTitle && this.miniWebsite.pageTitle !== '')
            pageTitle = this.miniWebsite.pageTitle;
        pageTitle = this.tagsService.assignObjectToTags(business, pageTitle, this.tagsService.businessTagsArray);
        var metaDescription = 'Schedule an appointment online, book online';
        if (this.schedulerPreferenceService.schedulerPreference && this.schedulerPreferenceService.schedulerPreference.labelMap && this.schedulerPreferenceService.schedulerPreference.labelMap.metaDescription && this.schedulerPreferenceService.schedulerPreference.labelMap.metaDescription !== '')
            metaDescription = this.schedulerPreferenceService.schedulerPreference.labelMap.metaDescription;
        else if (this.miniWebsite && this.miniWebsite.metaDescription && this.miniWebsite.metaDescription !== '')
            metaDescription = this.miniWebsite.metaDescription;
        this.titleService.setTitle(pageTitle);
        metaDescription = this.tagsService.assignObjectToTags(business, metaDescription, this.tagsService.businessTagsArray);
        this.meta.addTag({ name: 'description', content: metaDescription });
    };
    MiniWebsiteService.prototype.setMiniWebsite = function (miniWebsite, business) {
        this.miniWebsite = miniWebsite;
        if (this.miniWebsite)
            this.configureMiniWebsite(business);
    };
    MiniWebsiteService.prototype.createErrorMiniWebsite = function (errorType) {
        var errorMiniWebsite = new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["miniWebsite"]();
        errorMiniWebsite.logoAlign = 'center';
        switch (errorType) {
            case 'UNPUBLISHED_BOOKING_SITE':
                errorMiniWebsite.pageTitle = 'Booking\'s Currently Disabled';
                break;
            case 'HANDLE_NOT_FOUND':
                errorMiniWebsite.pageTitle = 'Booking Page Not Found';
                break;
            default:
                errorMiniWebsite.pageTitle = 'Error Loading Scheduling Page';
        }
        this.styleSheetService.createStyleSheet(errorMiniWebsite, undefined);
        return errorMiniWebsite;
    };
    MiniWebsiteService.ctorParameters = function () { return [
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] },
        { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__["Title"] },
        { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__["Meta"] }
    ]; };
    MiniWebsiteService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__["Title"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__["Meta"]])
    ], MiniWebsiteService);
    return MiniWebsiteService;
}());



/***/ }),

/***/ "./src/app/modals/error-modal/error-modal.component.ts":
/*!*************************************************************!*\
  !*** ./src/app/modals/error-modal/error-modal.component.ts ***!
  \*************************************************************/
/*! exports provided: ErrorModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrorModalComponent", function() { return ErrorModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");





var ErrorModalComponent = /** @class */ (function () {
    function ErrorModalComponent(passedData, router, dialogRef, tagsService) {
        this.passedData = passedData;
        this.router = router;
        this.dialogRef = dialogRef;
        this.tagsService = tagsService;
        this.showCloseBtn = false;
        this.btnLabelProp = 'modalCloseBtnLabel';
    }
    ErrorModalComponent.prototype.ngOnInit = function () {
        this.preference = this.passedData.preference;
        this.errorType = this.passedData.errorType;
        if (this.passedData.errorData !== undefined) {
            this.errorData = this.passedData.errorData;
        }
        if (this.passedData.appt !== undefined) {
            this.appt = this.passedData.appt;
        }
        switch (this.errorType) {
            case 'maxApptsReached':
                this.errorMessage = this.tagsService.assignObjectToTags(this.preference, this.preference.labelMap.maxApptsReachedModalErrorMsg, this.tagsService.preferenceTagsArray);
                this.errorTitle = this.preference.labelMap.maxApptsReachedModalErrorTitle;
                this.btnLabelProp = 'viewApptLabel';
                break;
            case 'apptDoesNotBelongToAccount':
                this.errorMessage = this.preference.labelMap.apptDoesNotBelongToAccountErrorMsg;
                this.errorTitle = this.preference.labelMap.apptDoesNotBelongToAccountErrorTitle;
                this.showCloseBtn = true;
                break;
            case 'apptMaxRescheduleCountError':
                this.errorMessage = this.preference.labelMap.apptMaxRescheduleCountErrorMsg;
                this.errorTitle = this.preference.labelMap.apptMaxRescheduleCountErrorTitle;
                this.showCloseBtn = true;
                break;
            case 'apptReschedulePastTimeframe':
                this.errorMessage = this.tagsService.assignObjectToTags(this.preference, this.preference.labelMap.apptReschedulePastTimeframeMsg, this.tagsService.preferenceTagsArray);
                this.errorTitle = this.preference.labelMap.apptRescheduleNotAllowedTitle;
                this.showCloseBtn = true;
                break;
            case 'apptRescheduleNotAllowedByBusiness':
                this.errorMessage = this.tagsService.assignObjectToTags(this.preference, this.preference.labelMap.apptRescheduleNotAllowedByBusiness, this.tagsService.preferenceTagsArray);
                this.errorTitle = this.preference.labelMap.apptRescheduleNotAllowedTitle;
                this.showCloseBtn = true;
                break;
            case 'apptRescheduleNotInOpenStatus':
                this.errorMessage = this.tagsService.assignObjectToTags(this.preference, this.preference.labelMap.apptRescheduleNotInOpenStatus, this.tagsService.preferenceTagsArray);
                this.errorMessage = this.tagsService.assignObjectToTags(this.appt, this.errorMessage, this.tagsService.apptFieldTags);
                this.errorTitle = this.preference.labelMap.apptRescheduleNotAllowedTitle;
                this.showCloseBtn = true;
                break;
            case 'apptCancelPastTimeframe':
                this.errorMessage = this.tagsService.assignObjectToTags(this.preference, this.preference.labelMap.apptCancelPastTimeframeMsg, this.tagsService.preferenceTagsArray);
                this.errorTitle = this.preference.labelMap.cancelAppointmentModalTitle;
                this.showCloseBtn = true;
                break;
            case 'apptCancelNotInOpenStatus':
                this.errorMessage = this.tagsService.assignObjectToTags(this.appt, this.preference.labelMap.apptCancelNotInOpenStatusMsg, this.tagsService.apptFieldTags);
                this.errorTitle = this.preference.labelMap.cancelAppointmentModalTitle;
                this.showCloseBtn = true;
                break;
            case 'invitationCampaignErrors':
                if (this.errorData.noInvitation) {
                    this.errorMessage = this.tagsService.assignObjectToTags(this.preference, this.preference.labelMap.invitationCampaignErrorNoInvitationMsg, this.tagsService.preferenceTagsArray);
                    this.errorTitle = this.preference.labelMap.invitationCampaignErrorNoInvitationTitle;
                }
                else if (this.errorData.invitationCompleted) {
                    this.errorMessage = this.tagsService.assignObjectToTags(this.preference, this.preference.labelMap.invitationCampaignErrorInvitationCompletedMsg, this.tagsService.preferenceTagsArray);
                    this.errorTitle = this.preference.labelMap.invitationCampaignErrorInvitationCompletedTitle;
                }
                else if (this.errorData.invitationExpired) {
                    this.errorMessage = this.tagsService.assignObjectToTags(this.preference, this.preference.labelMap.expiredInvitationText, this.tagsService.preferenceTagsArray);
                    this.errorTitle = this.preference.labelMap.invitationCampaignErrorInvitationExpiredTitle;
                }
                this.showCloseBtn = true;
                break;
            case 'clientInfoFieldsInvalid':
                this.errorMessage = this.passedData.errorMessage;
                this.errorTitle = this.preference.labelMap.clientInfoFieldsInvalidTitle;
                this.showCloseBtn = true;
                break;
            case 'disclaimerFormFieldsInvalid':
                this.errorMessage = this.passedData.errorMessage;
                this.errorTitle = this.preference.labelMap.disclaimerFormFieldsInvalidTitle;
                this.showCloseBtn = true;
                break;
            case 'rescheduleNotAllowedClientOnHold':
                this.errorMessage = this.tagsService.assignObjectToTags(this.appt, this.preference.labelMap.rescheduleNotAllowedClientOnHold, this.tagsService.apptFieldTags);
                this.errorTitle = this.preference.labelMap.apptRescheduleNotAllowedTitle;
                this.showCloseBtn = true;
                break;
            case 'cancelNotAllowedClientOnHold':
                this.errorMessage = this.tagsService.assignObjectToTags(this.appt, this.preference.labelMap.cancelNotAllowedClientOnHold, this.tagsService.apptFieldTags);
                this.errorTitle = this.preference.labelMap.cancelAppointmentModalTitle;
                this.showCloseBtn = true;
                break;
            case 'cookiesNotAllowed':
                this.errorMessage = "It looks like you are browsing on a private browser or have disabled cookies on your browser. Please enable cookies and reload to view this scheduler.";
                this.errorTitle = "Error";
                break;
            default:
                this.errorMessage = 'Error loading data!';
                this.errorTitle = 'Error';
        }
    };
    ErrorModalComponent.prototype.viewAppts = function () {
        this.dialogRef.close();
        this.router.navigate(['my-account/appts']);
    };
    ErrorModalComponent.prototype.handleClose = function () {
        switch (this.errorType) {
            case 'maxApptsReached':
                this.viewAppts();
                break;
            default:
                this.dialogRef.close();
        }
    };
    ErrorModalComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
        { type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_3__["TagsService"] }
    ]; };
    ErrorModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-error-modal',
            template: __webpack_require__(/*! raw-loader!./error-modal.component.html */ "./node_modules/raw-loader/index.js!./src/app/modals/error-modal/error-modal.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], _tags_service__WEBPACK_IMPORTED_MODULE_3__["TagsService"]])
    ], ErrorModalComponent);
    return ErrorModalComponent;
}());



/***/ }),

/***/ "./src/app/modals/manage-credit-card/manage-credit-card.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/modals/manage-credit-card/manage-credit-card.component.ts ***!
  \***************************************************************************/
/*! exports provided: ManageCreditCardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ManageCreditCardComponent", function() { return ManageCreditCardComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../client-account/client-account.service */ "./src/app/client-account/client-account.service.ts");






var ManageCreditCardComponent = /** @class */ (function () {
    function ManageCreditCardComponent(passedData, clientAccountService, router, dialogRef, tagsService) {
        var _this = this;
        this.passedData = passedData;
        this.clientAccountService = clientAccountService;
        this.router = router;
        this.dialogRef = dialogRef;
        this.tagsService = tagsService;
        this.addCardDescription = "";
        this.deletingCard = false;
        this.errorDeletingCard = false;
        this.errorMessage = '';
        dialogRef.backdropClick().subscribe(function () {
            _this.dialogRef.close();
        });
    }
    ManageCreditCardComponent.prototype.ngOnInit = function () {
        this.preference = this.passedData.preference;
        this.client = this.passedData.client;
        this.path = this.passedData.path;
        if (this.path === 'addCardConfirmBooking') {
            this.path = 'addCard';
            this.addCardDescription = this.preference.labelMap.clientPaymentsAddCardToConfirmAppointmentDescription;
        }
        if (this.path === 'deleteCard') {
            this.card = this.passedData.card;
            this.deleteConfirmationDescription = this.tagsService.assignObjectToTags(this.card, this.preference.labelMap.clientPaymentsDeleteDescription, this.tagsService.creditCardFieldTags);
        }
    };
    ManageCreditCardComponent.prototype.hidePaymentForm = function (invoice) {
        this.cardAdded = true;
    };
    ManageCreditCardComponent.prototype.confirmDelete = function () {
        var _this = this;
        var cardId;
        var cardType;
        if (this.card.stripeInfo) {
            cardId = this.card.stripeInfo.id;
            cardType = "STRIPE";
        }
        if (this.card.squareInfo !== undefined) {
            cardId = this.card.squareInfo.id;
            cardType = "SQUARE";
        }
        this.deletingCard = true;
        this.errorDeletingCard = false;
        this.clientAccountService.deleteCard(this.client.clientId, cardId, cardType).subscribe(function (storedCardInfo) {
            _this.deletingCard = false;
            _this.client = _this.clientAccountService.storeCardInfoOnClient(_this.client, storedCardInfo);
            _this.dialogRef.close(storedCardInfo);
        }, function (error) {
            _this.deletingCard = false;
            _this.errorDeletingCard = true;
            _this.errorMessage = _this.preference.labelMap.clientPaymentsDeleteErrorMsg;
        });
    };
    ManageCreditCardComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] },
        { type: _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_5__["ClientAccountService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_4__["TagsService"] }
    ]; };
    ManageCreditCardComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-add-credit-card',
            template: __webpack_require__(/*! raw-loader!./manage-credit-card.component.html */ "./node_modules/raw-loader/index.js!./src/app/modals/manage-credit-card/manage-credit-card.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_5__["ClientAccountService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], _tags_service__WEBPACK_IMPORTED_MODULE_4__["TagsService"]])
    ], ManageCreditCardComponent);
    return ManageCreditCardComponent;
}());



/***/ }),

/***/ "./src/app/modals/repeating-appt-filter/repeating-appt-filter.component.css":
/*!**********************************************************************************!*\
  !*** ./src/app/modals/repeating-appt-filter/repeating-appt-filter.component.css ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "div.checkbox-list {\n    margin-top: 15px;\n}\nmat-form-field {\n    width: 100%;\n}\nmat-label.requiredField::after {\n    content: \" *\";\n}\n#applyFiltersBtn {\n    margin-bottom: 15px;\n}\n@media (max-width: 575.98px) {\n    .mat-checkbox-label {\n        font-size: .75rem;\n    }\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kYWxzL3JlcGVhdGluZy1hcHB0LWZpbHRlci9yZXBlYXRpbmctYXBwdC1maWx0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksV0FBVztBQUNmO0FBQ0E7SUFDSSxhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxtQkFBbUI7QUFDdkI7QUFDQTtJQUNJO1FBQ0ksaUJBQWlCO0lBQ3JCO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9tb2RhbHMvcmVwZWF0aW5nLWFwcHQtZmlsdGVyL3JlcGVhdGluZy1hcHB0LWZpbHRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZGl2LmNoZWNrYm94LWxpc3Qge1xuICAgIG1hcmdpbi10b3A6IDE1cHg7XG59XG5tYXQtZm9ybS1maWVsZCB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5tYXQtbGFiZWwucmVxdWlyZWRGaWVsZDo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiICpcIjtcbn1cbiNhcHBseUZpbHRlcnNCdG4ge1xuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNTc1Ljk4cHgpIHtcbiAgICAubWF0LWNoZWNrYm94LWxhYmVsIHtcbiAgICAgICAgZm9udC1zaXplOiAuNzVyZW07XG4gICAgfVxufVxuIl19 */"

/***/ }),

/***/ "./src/app/modals/repeating-appt-filter/repeating-appt-filter.component.ts":
/*!*********************************************************************************!*\
  !*** ./src/app/modals/repeating-appt-filter/repeating-appt-filter.component.ts ***!
  \*********************************************************************************/
/*! exports provided: RepeatingApptFilterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RepeatingApptFilterComponent", function() { return RepeatingApptFilterComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/checkbox */ "./node_modules/@angular/material/esm5/checkbox.es5.js");








var RepeatingApptFilterComponent = /** @class */ (function () {
    function RepeatingApptFilterComponent(passedData, router, dialogRef, tagsService, timeService) {
        var _this = this;
        this.passedData = passedData;
        this.router = router;
        this.dialogRef = dialogRef;
        this.tagsService = tagsService;
        this.timeService = timeService;
        this.repeatingApptForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"]({
            startDate: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"]('', _angular_forms__WEBPACK_IMPORTED_MODULE_5__["Validators"].required),
            daysOfTheWeek: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"]('')
        });
        this.needToSelectWeekdays = false;
        this.weekdays = this.timeService.getWeekdayDataObjs();
        dialogRef.backdropClick().subscribe(function () {
            _this.applyFilters('backdropClick');
        });
    }
    RepeatingApptFilterComponent.prototype.ngOnInit = function () {
        if (this.passedData.reason !== undefined && this.passedData.reason !== null) {
            this.reason = this.passedData.reason;
        }
        if (this.passedData.preference !== undefined && this.passedData.preference !== null) {
            this.preference = this.passedData.preference;
        }
        if (this.passedData.startDate !== undefined && this.passedData.startDate !== null) {
            this.repeatingApptForm.controls['startDate'].setValue(this.passedData.startDate);
            this.minDate = this.passedData.startDate;
        }
        if (this.passedData.minDate !== undefined) {
            this.minDate = this.passedData.minDate;
        }
        if (this.passedData.maxDate !== undefined) {
            this.maxDate = this.passedData.maxDate;
        }
        if (this.passedData.selectedDays !== undefined && this.passedData.selectedDays !== null && this.passedData.selectedDays.length > 0) {
            for (var i = 0, x = this.passedData.selectedDays.length; i < x; i++) {
                for (var j = 0, y = this.weekdays.length; j < y; j++) {
                    if (this.weekdays[j].dayOfWeekInt === this.passedData.selectedDays[i].dayOfWeekInt)
                        this.weekdays[j].selected = true;
                }
            }
            var checkEvent = new _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_7__["MatCheckboxChange"]();
            checkEvent.checked = true;
            for (var i = 0, x = this.weekdays.length; i < x; i++) {
                if (this.weekdays[i].selected)
                    this.setWeekdayValue(this.weekdays[i], checkEvent);
            }
        }
        this.repeatingApptFilterModalDescription = this.tagsService.assignObjectToTags(this.reason, this.preference.labelMap.repeatingApptFilterModalDescription, this.tagsService.reasonFieldTags);
        this.repeatingApptFilterModalDescription = this.tagsService.assignObjectToTags(this.reason.selectedRepeatingApptOption, this.repeatingApptFilterModalDescription, this.tagsService.repeatingApptOptionTags);
    };
    RepeatingApptFilterComponent.prototype.applyFilters = function (path) {
        if (path === 'backdropClick' && (this.repeatingApptForm.controls['daysOfTheWeek'].value === undefined ||
            this.repeatingApptForm.controls['daysOfTheWeek'].value === null ||
            this.repeatingApptForm.controls['daysOfTheWeek'].value === '')) {
            var selectedWeekdays = [];
            for (var i = 0, x = this.weekdays.length; i < x; i++) { // if they didn't select any days of the week, just go ahead and select Monday
                if (this.weekdays[i].dayOfWeekInt === 1) {
                    this.weekdays[i].selected = true;
                    selectedWeekdays.push(this.weekdays[i]);
                    break;
                }
            }
            this.repeatingApptForm.controls['daysOfTheWeek'].setValue(selectedWeekdays);
        }
        var daysHaveBeenSelected = false;
        this.needToSelectWeekdays = false;
        for (var i = 0, x = this.weekdays.length; i < x; i++) {
            if (this.weekdays[i].selected)
                daysHaveBeenSelected = true;
        }
        if (daysHaveBeenSelected) {
            this.dialogRef.close(this.repeatingApptForm);
        }
        else {
            this.needToSelectWeekdays = true;
        }
    };
    RepeatingApptFilterComponent.prototype.setWeekdayValue = function (weekday, event) {
        if (event.checked)
            weekday.selected = true;
        else
            weekday.selected = false;
        var selectedWeekdays = [];
        for (var i = 0, x = this.weekdays.length; i < x; i++) {
            if (this.weekdays[i].selected)
                selectedWeekdays.push(this.weekdays[i]);
        }
        this.repeatingApptForm.controls['daysOfTheWeek'].setValue(selectedWeekdays);
    };
    RepeatingApptFilterComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MAT_DIALOG_DATA"],] }] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialogRef"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_3__["TagsService"] },
        { type: _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_6__["TimeService"] }
    ]; };
    RepeatingApptFilterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-repeating-appt-filter',
            template: __webpack_require__(/*! raw-loader!./repeating-appt-filter.component.html */ "./node_modules/raw-loader/index.js!./src/app/modals/repeating-appt-filter/repeating-appt-filter.component.html"),
            styles: [__webpack_require__(/*! ./repeating-appt-filter.component.css */ "./src/app/modals/repeating-appt-filter/repeating-appt-filter.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"],
            _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialogRef"], _tags_service__WEBPACK_IMPORTED_MODULE_3__["TagsService"], _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_6__["TimeService"]])
    ], RepeatingApptFilterComponent);
    return RepeatingApptFilterComponent;
}());



/***/ }),

/***/ "./src/app/modals/select-add-ons/select-add-ons.component.css":
/*!********************************************************************!*\
  !*** ./src/app/modals/select-add-ons/select-add-ons.component.css ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ":host /deep/ .mobile-list.mat-list-base .mat-list-item {\n    min-height: 100px;\n    padding-top: 30px;\n}\n.mobile-list .reasonChipList {\n    margin-bottom: 15px;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kYWxzL3NlbGVjdC1hZGQtb25zL3NlbGVjdC1hZGQtb25zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxtQkFBbUI7QUFDdkIiLCJmaWxlIjoic3JjL2FwcC9tb2RhbHMvc2VsZWN0LWFkZC1vbnMvc2VsZWN0LWFkZC1vbnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IC9kZWVwLyAubW9iaWxlLWxpc3QubWF0LWxpc3QtYmFzZSAubWF0LWxpc3QtaXRlbSB7XG4gICAgbWluLWhlaWdodDogMTAwcHg7XG4gICAgcGFkZGluZy10b3A6IDMwcHg7XG59XG4ubW9iaWxlLWxpc3QgLnJlYXNvbkNoaXBMaXN0IHtcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xufVxuIl19 */"

/***/ }),

/***/ "./src/app/modals/select-add-ons/select-add-ons.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/modals/select-add-ons/select-add-ons.component.ts ***!
  \*******************************************************************/
/*! exports provided: SelectAddOnsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectAddOnsComponent", function() { return SelectAddOnsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _models_SelectAddOnsModalData_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../models/SelectAddOnsModalData.model */ "./src/models/SelectAddOnsModalData.model.ts");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _reasons_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../reasons.service */ "./src/app/reasons.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");









var SelectAddOnsComponent = /** @class */ (function () {
    function SelectAddOnsComponent(passedData, dialogRef, tagsService, schedulerPreferenceService, businessService, reasonsService, responsiveService) {
        this.passedData = passedData;
        this.dialogRef = dialogRef;
        this.tagsService = tagsService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.businessService = businessService;
        this.reasonsService = reasonsService;
        this.responsiveService = responsiveService;
        this.idProp = 'reasonId';
        this.imageProp = 'imageUrl';
        this.titleProp = 'reasonDesc';
        this.descriptionProp = 'reasonDetail';
        this.preference = schedulerPreferenceService.schedulerPreference;
        this.currency = businessService.currency;
    }
    SelectAddOnsComponent.prototype.selectAddOns = function (event, addOn) {
        addOn.selected = !addOn.selected;
    };
    SelectAddOnsComponent.prototype.dismissModal = function (addAddOns) {
        var closeModalData = this.passedData;
        if (addAddOns) {
            this.selectedAddOnReasons = [];
            for (var i = 0, x = this.availableAddOnReasons.length; i < x; i++) {
                if (this.availableAddOnReasons[i].selected)
                    this.selectedAddOnReasons.push(this.availableAddOnReasons[i]);
            }
            if (this.selectedAddOnReasons.length === 0)
                this.selectedAddOnReasons = null;
            closeModalData.selectedAddOns = this.selectedAddOnReasons;
        }
        this.dialogRef.close(closeModalData);
    };
    SelectAddOnsComponent.prototype.ngOnInit = function () {
        this.selectedReason = this.passedData.selectedReason;
        this.availableAddOnReasons = this.reasonsService.formatReasonList(this.passedData.availableAddOnsForSelectedReason);
        this.title = this.tagsService.assignObjectToTags(this.selectedReason, this.preference.labelMap.selectAddOnsTitle, this.tagsService.reasonFieldTags);
        this.description = this.tagsService.assignObjectToTags(this.selectedReason, this.preference.labelMap.selectAddOnsDescription, this.tagsService.reasonFieldTags);
        this.addAddOnsBtn = this.tagsService.assignObjectToTags(this.selectedReason, this.preference.labelMap.selectAddOnsAddAddOnsBtn, this.tagsService.reasonFieldTags);
        this.declineAddOnsBtn = this.tagsService.assignObjectToTags(this.selectedReason, this.preference.labelMap.selectAddOnsDeclineAddOnsBtn, this.tagsService.reasonFieldTags);
    };
    SelectAddOnsComponent.ctorParameters = function () { return [
        { type: _models_SelectAddOnsModalData_model__WEBPACK_IMPORTED_MODULE_3__["SelectAddOnsModalData"], decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] },
        { type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_4__["TagsService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_5__["SchedulerPreferenceService"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_6__["BusinessService"] },
        { type: _reasons_service__WEBPACK_IMPORTED_MODULE_7__["ReasonsService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_8__["ResponsiveService"] }
    ]; };
    SelectAddOnsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-select-add-ons',
            template: __webpack_require__(/*! raw-loader!./select-add-ons.component.html */ "./node_modules/raw-loader/index.js!./src/app/modals/select-add-ons/select-add-ons.component.html"),
            styles: [__webpack_require__(/*! ./select-add-ons.component.css */ "./src/app/modals/select-add-ons/select-add-ons.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_models_SelectAddOnsModalData_model__WEBPACK_IMPORTED_MODULE_3__["SelectAddOnsModalData"], _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"],
            _tags_service__WEBPACK_IMPORTED_MODULE_4__["TagsService"], _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_5__["SchedulerPreferenceService"], _business_service__WEBPACK_IMPORTED_MODULE_6__["BusinessService"],
            _reasons_service__WEBPACK_IMPORTED_MODULE_7__["ReasonsService"], _responsive_service__WEBPACK_IMPORTED_MODULE_8__["ResponsiveService"]])
    ], SelectAddOnsComponent);
    return SelectAddOnsComponent;
}());



/***/ }),

/***/ "./src/app/modals/select-package/select-package.component.css":
/*!********************************************************************!*\
  !*** ./src/app/modals/select-package/select-package.component.css ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "mat-dialog-actions button:last-child {\n    margin-left: 15px;\n}\nmat-form-field {\n    width: 100%;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kYWxzL3NlbGVjdC1wYWNrYWdlL3NlbGVjdC1wYWNrYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7QUFDckI7QUFDQTtJQUNJLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9zZWxlY3QtcGFja2FnZS9zZWxlY3QtcGFja2FnZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWRpYWxvZy1hY3Rpb25zIGJ1dHRvbjpsYXN0LWNoaWxkIHtcbiAgICBtYXJnaW4tbGVmdDogMTVweDtcbn1cbm1hdC1mb3JtLWZpZWxkIHtcbiAgICB3aWR0aDogMTAwJTtcbn1cbiJdfQ== */"

/***/ }),

/***/ "./src/app/modals/select-package/select-package.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/modals/select-package/select-package.component.ts ***!
  \*******************************************************************/
/*! exports provided: SelectPackageModalData, SelectPackageComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectPackageModalData", function() { return SelectPackageModalData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectPackageComponent", function() { return SelectPackageComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");







var SelectPackageModalData = /** @class */ (function () {
    function SelectPackageModalData() {
    }
    return SelectPackageModalData;
}());

var SelectPackageComponent = /** @class */ (function () {
    function SelectPackageComponent(passedData, businessService, responsiveService, router, dialogRef, tagsService) {
        var _this = this;
        this.passedData = passedData;
        this.businessService = businessService;
        this.responsiveService = responsiveService;
        this.router = router;
        this.dialogRef = dialogRef;
        this.tagsService = tagsService;
        this.packagesSold = [];
        this.packageSelected = false;
        this.updatingInvoice = false;
        this.errorUpdating = false;
        dialogRef.backdropClick().subscribe(function () {
            var dataToPass = { invoice: _this.invoice, packageSold: _this.selectedPackage };
            _this.dialogRef.close(dataToPass);
        });
    }
    SelectPackageComponent.prototype.confirmPackage = function () {
        var _this = this;
        this.updatingInvoice = true;
        this.errorUpdating = false;
        this.businessService.updateInvoiceLineItemWithPackage(this.invoiceItem, this.selectedPackage).subscribe(function (responseData) {
            _this.updatingInvoice = false;
            _this.invoice = responseData.invoice;
            _this.selectedPackage = responseData.packageSold;
            _this.dialogRef.close(responseData);
        }, function (error) {
            _this.updatingInvoice = false;
            _this.errorUpdating = true;
        });
    };
    SelectPackageComponent.prototype.selectPackage = function () {
        if (this.selectedPackage) {
            this.packageSelected = true;
            this.title = this.preference.labelMap.selectPackageConfirmTitle;
            this.description = this.tagsService.assignObjectToTags(this.invoiceItem, this.preference.labelMap.selectPackageConfirmDescription, this.tagsService.invoiceItemFieldTags);
            this.description = this.tagsService.assignObjectToTags(this.selectedPackage.pkg, this.description, this.tagsService.packageFieldTags);
            this.description = this.tagsService.assignObjectToTags(this.selectedPackage, this.description, this.tagsService.packageSoldFieldTags);
        }
    };
    SelectPackageComponent.prototype.organizePackagesSold = function (packagesSold) {
        for (var i = 0, x = packagesSold.length; i < x; i++) {
            if (packagesSold[i].pkg.serviceIds.indexOf(this.invoiceItem.reasonId) !== -1) {
                if (packagesSold[i].remainingQuantity === undefined || packagesSold[i].remainingQuantity === null)
                    packagesSold[i].remainingQuantity = packagesSold[i].maxQuantity - packagesSold[i].usedQuantity;
                packagesSold[i].dropdownDescription = this.tagsService.assignObjectToTags(packagesSold[i].pkg, this.preference.labelMap.selectPackageDropdownDescription, this.tagsService.packageFieldTags);
                packagesSold[i].dropdownDescription = this.tagsService.assignObjectToTags(packagesSold[i], packagesSold[i].dropdownDescription, this.tagsService.packageSoldFieldTags);
                if (packagesSold[i].client !== undefined && packagesSold[i].client !== null && packagesSold[i].client.clientId !== this.invoiceItem.clientId)
                    packagesSold[i].dropdownDescription = packagesSold[i].client.fullName + "'s " + packagesSold[i].dropdownDescription;
                this.packagesSold.push(packagesSold[i]);
            }
        }
    };
    SelectPackageComponent.prototype.ngAfterViewChecked = function () {
        this.responsiveService.checkMatOptionWidth(".selectPackageDropdown", "#selectPackagesModal");
    };
    SelectPackageComponent.prototype.ngOnInit = function () {
        this.invoice = this.passedData.invoice;
        this.preference = this.passedData.preference;
        this.invoiceItem = this.passedData.invoiceItem;
        this.organizePackagesSold(this.passedData.packagesSold);
        this.title = this.preference.labelMap.selectPackageTitle;
        this.description = this.tagsService.assignObjectToTags(this.invoice, this.preference.labelMap.selectPackageDescription, this.tagsService.invoiceFieldTags);
    };
    SelectPackageComponent.ctorParameters = function () { return [
        { type: SelectPackageModalData, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_5__["BusinessService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_6__["ResponsiveService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_4__["TagsService"] }
    ]; };
    SelectPackageComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-select-package',
            template: __webpack_require__(/*! raw-loader!./select-package.component.html */ "./node_modules/raw-loader/index.js!./src/app/modals/select-package/select-package.component.html"),
            styles: [__webpack_require__(/*! ./select-package.component.css */ "./src/app/modals/select-package/select-package.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [SelectPackageModalData, _business_service__WEBPACK_IMPORTED_MODULE_5__["BusinessService"], _responsive_service__WEBPACK_IMPORTED_MODULE_6__["ResponsiveService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], _tags_service__WEBPACK_IMPORTED_MODULE_4__["TagsService"]])
    ], SelectPackageComponent);
    return SelectPackageComponent;
}());



/***/ }),

/***/ "./src/app/modals/select-pay-amount/select-pay-amount.component.css":
/*!**************************************************************************!*\
  !*** ./src/app/modals/select-pay-amount/select-pay-amount.component.css ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGFscy9zZWxlY3QtcGF5LWFtb3VudC9zZWxlY3QtcGF5LWFtb3VudC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/modals/select-pay-amount/select-pay-amount.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/modals/select-pay-amount/select-pay-amount.component.ts ***!
  \*************************************************************************/
/*! exports provided: SelectPayAmountComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectPayAmountComponent", function() { return SelectPayAmountComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");





var SelectPayAmountComponent = /** @class */ (function () {
    function SelectPayAmountComponent(passedData, router, dialogRef, tagsService) {
        this.passedData = passedData;
        this.router = router;
        this.dialogRef = dialogRef;
        this.tagsService = tagsService;
    }
    SelectPayAmountComponent.prototype.ngOnInit = function () {
        if (this.passedData !== undefined) {
            this.invoice = this.passedData.invoice;
            this.preference = this.passedData.preference;
            this.currency = this.passedData.currency;
            this.selectPayAmountDesc = this.tagsService.assignObjectToTags(this.invoice, this.preference.labelMap.selectPayAmountDesc, this.tagsService.invoiceFieldTags, this.currency);
            this.selectPayAmountDueBtn = this.tagsService.assignObjectToTags(this.invoice, this.preference.labelMap.selectPayAmountDueBtn, this.tagsService.invoiceFieldTags, this.currency);
            this.selectPayAmountBalanceBtn = this.tagsService.assignObjectToTags(this.invoice, this.preference.labelMap.selectPayAmountBalanceBtn, this.tagsService.invoiceFieldTags, this.currency);
        }
    };
    SelectPayAmountComponent.prototype.selectAmount = function (amountType) {
        this.dialogRef.close(amountType);
    };
    SelectPayAmountComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MAT_DIALOG_DATA"],] }] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialogRef"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_3__["TagsService"] }
    ]; };
    SelectPayAmountComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-select-pay-amount',
            template: __webpack_require__(/*! raw-loader!./select-pay-amount.component.html */ "./node_modules/raw-loader/index.js!./src/app/modals/select-pay-amount/select-pay-amount.component.html"),
            styles: [__webpack_require__(/*! ./select-pay-amount.component.css */ "./src/app/modals/select-pay-amount/select-pay-amount.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialogRef"], _tags_service__WEBPACK_IMPORTED_MODULE_3__["TagsService"]])
    ], SelectPayAmountComponent);
    return SelectPayAmountComponent;
}());



/***/ }),

/***/ "./src/app/navigation/header/header.component.ts":
/*!*******************************************************!*\
  !*** ./src/app/navigation/header/header.component.ts ***!
  \*******************************************************/
/*! exports provided: HeaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderComponent", function() { return HeaderComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _waitlist_join_wait_list_join_wait_list_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../waitlist/join-wait-list/join-wait-list.service */ "./src/app/waitlist/join-wait-list/join-wait-list.service.ts");






var HeaderComponent = /** @class */ (function () {
    function HeaderComponent(responsiveService, router, route, joinWaitListService) {
        this.responsiveService = responsiveService;
        this.router = router;
        this.route = route;
        this.joinWaitListService = joinWaitListService;
        this.logoSizeDetected = false;
    }
    HeaderComponent.prototype.checkIfLogoDefined = function (counter) {
        var _this = this;
        var logoHeight = this.responsiveService.getLogoHeight();
        if (logoHeight === 0 && counter < 20) {
            setTimeout(function () {
                counter++;
                _this.checkIfLogoDefined(counter);
            }, 200);
        }
        else if (logoHeight !== 0) {
            this.logoSizeDetected = this.responsiveService.centerLoginBtns();
        }
    };
    HeaderComponent.prototype.goToLink = function (link) {
        if (link === 'waitList') {
            if (this.router.url.indexOf('/waitlist/join') !== -1)
                this.joinWaitListService.joinWaitListHeaderClicked.next();
            else
                this.router.navigate(['/waitlist/join'], { relativeTo: this.route.root });
        }
    };
    HeaderComponent.prototype.ngOnInit = function () {
        this.displayConfig = this.miniWebsite.displayConfig;
        if (this.miniWebsite.logoAlign === 'center') {
            this.checkIfLogoDefined(0);
        }
        else {
            this.logoSizeDetected = true;
        }
        var showBtns = this.responsiveService.showLoginRegisterBtnLogic(this.preference);
        this.showLoginBtn = showBtns.showLoginBtn;
    };
    HeaderComponent.prototype.ngOnDestroy = function () {
    };
    HeaderComponent.ctorParameters = function () { return [
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_3__["ResponsiveService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"] },
        { type: _waitlist_join_wait_list_join_wait_list_service__WEBPACK_IMPORTED_MODULE_5__["JoinWaitListService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["miniWebsite"])
    ], HeaderComponent.prototype, "miniWebsite", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], HeaderComponent.prototype, "schedulerLink", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], HeaderComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], HeaderComponent.prototype, "isAuthenticated", void 0);
    HeaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-header',
            template: __webpack_require__(/*! raw-loader!./header.component.html */ "./node_modules/raw-loader/index.js!./src/app/navigation/header/header.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_responsive_service__WEBPACK_IMPORTED_MODULE_3__["ResponsiveService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"],
            _waitlist_join_wait_list_join_wait_list_service__WEBPACK_IMPORTED_MODULE_5__["JoinWaitListService"]])
    ], HeaderComponent);
    return HeaderComponent;
}());



/***/ }),

/***/ "./src/app/navigation/login-register-btns/login-register-btns.component.ts":
/*!*********************************************************************************!*\
  !*** ./src/app/navigation/login-register-btns/login-register-btns.component.ts ***!
  \*********************************************************************************/
/*! exports provided: LoginRegisterBtnsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginRegisterBtnsComponent", function() { return LoginRegisterBtnsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../auth/auth.service */ "./src/app/auth/auth.service.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _auth_login_login_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../auth/login/login.component */ "./src/app/auth/login/login.component.ts");
/* harmony import */ var _auth_register_register_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../auth/register/register.component */ "./src/app/auth/register/register.component.ts");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _store_store_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../store/store.service */ "./src/app/store/store.service.ts");











var LoginRegisterBtnsComponent = /** @class */ (function () {
    function LoginRegisterBtnsComponent(businessService, authService, dialog, cdRef, router, route, responsiveService, storeService) {
        this.businessService = businessService;
        this.authService = authService;
        this.dialog = dialog;
        this.cdRef = cdRef;
        this.router = router;
        this.route = route;
        this.responsiveService = responsiveService;
        this.storeService = storeService;
        this.showLoginRegisterBtns = false;
        this.cartQuantity = 0;
    }
    LoginRegisterBtnsComponent.prototype.ngAfterViewInit = function () {
        if (this.miniWebsite.displayConfig.store) {
            this.storeService.loadCart(this.miniWebsite.businessId);
        }
    };
    LoginRegisterBtnsComponent.prototype.ngOnChanges = function (changes) {
        if (changes.preference !== undefined && changes.preference.currentValue !== undefined && changes.preference.previousValue === undefined) {
            //if(this.parentComponent === 'app-header' || (this.parentComponent !== 'app-header' && this.responsiveService.isEmbedded)){
            var showBtns = this.responsiveService.showLoginRegisterBtnLogic(this.preference);
            this.showLoginBtn = showBtns.showLoginBtn && this.businessService.business.acceptOnlineAppointments;
            this.showRegisterBtn = showBtns.showRegisterBtn && this.businessService.business.acceptOnlineAppointments;
            if (this.showLoginBtn || this.showRegisterBtn) {
                this.showLoginRegisterBtns = true;
                this.isAuthenticated = this.authService.isAuth();
            }
            //}
        }
    };
    LoginRegisterBtnsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.paramsSubscription = this.route.queryParams.subscribe(function (params) {
            var register = params["register"];
            if (register !== undefined && register !== null && register.toLowerCase() === 'true') {
                _this.register(false);
            }
        });
        this.displayConfig = this.miniWebsite.displayConfig;
        this.authSubscription = this.authService.authChange.subscribe(function (authStatus) {
            _this.isAuthenticated = authStatus;
            if (!_this.isAuthenticated && _this.router.url.indexOf('my-account') !== -1) {
                _this.router.navigate(['scheduler']);
            }
        });
        this.loginCalledSubscription = this.authService.loginCalled.subscribe(function (loginTriggeredData) {
            _this.login(loginTriggeredData.email, loginTriggeredData.description, loginTriggeredData);
        });
        this.registerCalledSubscription = this.authService.registerCalled.subscribe(function (resetPwd) {
            _this.register(resetPwd);
        });
        this.addConnectedClientSubscription = this.authService.addConnectedClientCalled.subscribe(function (loginTriggeredData) {
            _this.register(false, undefined, undefined, loginTriggeredData);
        });
        this.logoutCalledSubscription = this.authService.logoutCalled.subscribe(function (resetPwd) {
            _this.logout();
        });
        this.cartSubscription = this.storeService.cartChange.subscribe(function (cartChange) {
            _this.cartQuantity = _this.storeService.updateCart();
            _this.cdRef.detectChanges();
        });
    };
    LoginRegisterBtnsComponent.prototype.showCart = function () {
        this.router.navigate(['cart']);
    };
    LoginRegisterBtnsComponent.prototype.login = function (email, description, loginTriggeredData) {
        var _this = this;
        this.businessService.checkToggleSidenav();
        var loadMyAccount = true;
        if (loginTriggeredData && loginTriggeredData.loadMyAccount !== undefined)
            loadMyAccount = loginTriggeredData.loadMyAccount;
        var dialogRef = this.dialog.open(_auth_login_login_component__WEBPACK_IMPORTED_MODULE_5__["LoginComponent"], { maxWidth: this.responsiveService.getMaxWidthForModals(), width: this.responsiveService.getMaxWidthForModals(),
            data: { preference: this.preference, email: email, description: description, loadMyAccount: loadMyAccount } });
        dialogRef.afterClosed().subscribe(function (loginModalObj) {
            if (loginModalObj !== undefined) {
                _this.isAuthenticated = loginModalObj.isAuthenticated;
                if (loginModalObj.resetPwd || loginModalObj.needAccount) {
                    _this.register(loginModalObj.resetPwd, loginModalObj.email, loginModalObj.needAccount, loginTriggeredData);
                }
                else if (loginTriggeredData !== undefined && loginTriggeredData.callSubscriptionNext) {
                    _this.authService.loginClosed.next(loginTriggeredData);
                }
            }
        });
    };
    LoginRegisterBtnsComponent.prototype.register = function (resetPwd, email, needAccount, loginTriggeredData) {
        var _this = this;
        this.businessService.checkToggleSidenav();
        var regDialogRef = this.dialog.open(_auth_register_register_component__WEBPACK_IMPORTED_MODULE_6__["RegisterComponent"], { maxWidth: this.responsiveService.getMaxWidthForModals(), width: this.responsiveService.getMaxWidthForModals(),
            data: { preference: this.preference, resetPwd: resetPwd, email: email, needAccount: needAccount, loginRegisterPopUpObject: loginTriggeredData } });
        regDialogRef.afterClosed().subscribe(function (registerModalObj) {
            if (registerModalObj !== undefined) {
                _this.isAuthenticated = registerModalObj.isAuthenticated;
                if (registerModalObj.openLogin) {
                    _this.login(registerModalObj.email, registerModalObj.descriptionToPassToLogin);
                }
                else if (registerModalObj.isConnectClient) {
                    _this.authService.connectedClientClosed.next(registerModalObj.newClient);
                }
                else if (loginTriggeredData !== undefined && loginTriggeredData.moveData !== undefined) { //was called from scheduler movePanels method
                    _this.authService.registerClosed.next(loginTriggeredData);
                }
            }
        });
    };
    LoginRegisterBtnsComponent.prototype.logout = function () {
        var _this = this;
        this.businessService.checkToggleSidenav();
        this.authService.clientLogout()
            .subscribe(function (response) {
            _this.authService.updateToken(response);
            _this.authService.logoutSuccessfully();
        }, function (error) {
            // console.log(error);
        });
    };
    LoginRegisterBtnsComponent.prototype.ngOnDestroy = function () {
        this.authSubscription.unsubscribe();
        this.loginCalledSubscription.unsubscribe();
        this.registerCalledSubscription.unsubscribe();
        this.addConnectedClientSubscription.unsubscribe();
        this.logoutCalledSubscription.unsubscribe();
        this.cartSubscription.unsubscribe();
        this.paramsSubscription.unsubscribe();
        // this.innerWidthSubscription.unsubscribe();
    };
    LoginRegisterBtnsComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"] },
        { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__["MatDialog"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["ActivatedRoute"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_9__["ResponsiveService"] },
        { type: _store_store_service__WEBPACK_IMPORTED_MODULE_10__["StoreService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], LoginRegisterBtnsComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_4__["miniWebsite"])
    ], LoginRegisterBtnsComponent.prototype, "miniWebsite", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], LoginRegisterBtnsComponent.prototype, "parentComponent", void 0);
    LoginRegisterBtnsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'login-register-btns',
            template: __webpack_require__(/*! raw-loader!./login-register-btns.component.html */ "./node_modules/raw-loader/index.js!./src/app/navigation/login-register-btns/login-register-btns.component.html"),
            styles: ["#cartBtn {line-height: 33px}"]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"], _auth_auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__["MatDialog"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"],
            _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_8__["ActivatedRoute"], _responsive_service__WEBPACK_IMPORTED_MODULE_9__["ResponsiveService"], _store_store_service__WEBPACK_IMPORTED_MODULE_10__["StoreService"]])
    ], LoginRegisterBtnsComponent);
    return LoginRegisterBtnsComponent;
}());



/***/ }),

/***/ "./src/app/navigation/sidebar/header-sidebar.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/navigation/sidebar/header-sidebar.component.ts ***!
  \****************************************************************/
/*! exports provided: HeaderSidebarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderSidebarComponent", function() { return HeaderSidebarComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../auth/auth.service */ "./src/app/auth/auth.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _store_store_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../store/store.service */ "./src/app/store/store.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _waitlist_join_wait_list_join_wait_list_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../waitlist/join-wait-list/join-wait-list.service */ "./src/app/waitlist/join-wait-list/join-wait-list.service.ts");









var HeaderSidebarComponent = /** @class */ (function () {
    function HeaderSidebarComponent(businessService, authService, responsiveService, cdRef, storeService, router, route, joinWaitListService) {
        this.businessService = businessService;
        this.authService = authService;
        this.responsiveService = responsiveService;
        this.cdRef = cdRef;
        this.storeService = storeService;
        this.router = router;
        this.route = route;
        this.joinWaitListService = joinWaitListService;
        this.cartQuantity = 0;
    }
    HeaderSidebarComponent.prototype.ngOnChanges = function (changes) {
        if (changes.preference !== undefined && changes.preference.currentValue !== undefined && changes.preference.previousValue === undefined) {
            var showBtns = this.responsiveService.showLoginRegisterBtnLogic(this.preference);
            this.showLoginBtn = showBtns.showLoginBtn;
            this.showRegisterBtn = showBtns.showRegisterBtn;
            if (this.showLoginBtn || this.showRegisterBtn) {
                this.showLoginRegisterBtns = true;
                this.isAuthenticated = this.authService.isAuth();
            }
        }
        if (changes.miniWebsite !== undefined && changes.miniWebsite.currentValue !== undefined && changes.miniWebsite.previousValue === undefined) {
            this.displayConfig = this.miniWebsite.displayConfig;
        }
    };
    HeaderSidebarComponent.prototype.goToLink = function (link) {
        if (link === 'waitList') {
            if (this.router.url.indexOf('/waitlist/join') !== -1)
                this.joinWaitListService.joinWaitListHeaderClicked.next();
            else
                this.router.navigate(['/waitlist/join'], { relativeTo: this.route.root });
        }
    };
    HeaderSidebarComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.authSubscription = this.authService.authChange.subscribe(function (authStatus) {
            _this.isAuthenticated = authStatus;
        });
        this.cartSubscription = this.storeService.cartChange.subscribe(function (cartChange) {
            _this.cartQuantity = _this.storeService.updateCart();
            _this.cdRef.detectChanges();
        });
    };
    HeaderSidebarComponent.prototype.login = function () {
        var loginTriggeredData = new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["loginRegisterPopUpObject"]();
        loginTriggeredData.loadMyAccount = true;
        this.authService.loginCalled.next(loginTriggeredData);
    };
    HeaderSidebarComponent.prototype.register = function (resetPwd) {
        this.authService.registerCalled.next(resetPwd);
    };
    HeaderSidebarComponent.prototype.logout = function () {
        this.authService.logoutCalled.next();
    };
    HeaderSidebarComponent.prototype.ngOnDestroy = function () {
        this.authSubscription.unsubscribe();
        this.cartSubscription.unsubscribe();
    };
    HeaderSidebarComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"] },
        { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_4__["AuthService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_5__["ResponsiveService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
        { type: _store_store_service__WEBPACK_IMPORTED_MODULE_6__["StoreService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"] },
        { type: _waitlist_join_wait_list_join_wait_list_service__WEBPACK_IMPORTED_MODULE_8__["JoinWaitListService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], HeaderSidebarComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["miniWebsite"])
    ], HeaderSidebarComponent.prototype, "miniWebsite", void 0);
    HeaderSidebarComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'header-sidebar',
            template: __webpack_require__(/*! raw-loader!./header-sidebar.component.html */ "./node_modules/raw-loader/index.js!./src/app/navigation/sidebar/header-sidebar.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"], _auth_auth_service__WEBPACK_IMPORTED_MODULE_4__["AuthService"], _responsive_service__WEBPACK_IMPORTED_MODULE_5__["ResponsiveService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"],
            _store_store_service__WEBPACK_IMPORTED_MODULE_6__["StoreService"], _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_7__["ActivatedRoute"], _waitlist_join_wait_list_join_wait_list_service__WEBPACK_IMPORTED_MODULE_8__["JoinWaitListService"]])
    ], HeaderSidebarComponent);
    return HeaderSidebarComponent;
}());



/***/ }),

/***/ "./src/app/onload.service.ts":
/*!***********************************!*\
  !*** ./src/app/onload.service.ts ***!
  \***********************************/
/*! exports provided: OnloadService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OnloadService", function() { return OnloadService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _models_SchedulerBooleanMap_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../models/SchedulerBooleanMap.model */ "./src/models/SchedulerBooleanMap.model.ts");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs/internal/operators */ "./node_modules/rxjs/internal/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _api_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./api.service */ "./src/app/api.service.ts");
/* harmony import */ var _config_list_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./config-list.service */ "./src/app/config-list.service.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./business.service */ "./src/app/business.service.ts");
/* harmony import */ var _email_settings_email_settings_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./email-settings/email-settings.service */ "./src/app/email-settings/email-settings.service.ts");
/* harmony import */ var _styleSheetService__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./styleSheetService */ "./src/app/styleSheetService.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _scheduler_link_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./scheduler-link.service */ "./src/app/scheduler-link.service.ts");
/* harmony import */ var _mini_website_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./mini-website.service */ "./src/app/mini-website.service.ts");
















var OnloadService = /** @class */ (function () {
    function OnloadService(injector, http) {
        this.injector = injector;
        this.http = http;
        this.apiService = injector.get(_api_service__WEBPACK_IMPORTED_MODULE_8__["ApiService"]);
        this.configListService = injector.get(_config_list_service__WEBPACK_IMPORTED_MODULE_9__["ConfigListService"]);
        this.businessService = injector.get(_business_service__WEBPACK_IMPORTED_MODULE_10__["BusinessService"]);
        this.emailSettingsService = injector.get(_email_settings_email_settings_service__WEBPACK_IMPORTED_MODULE_11__["EmailSettingsService"]);
        this.styleSheetService = injector.get(_styleSheetService__WEBPACK_IMPORTED_MODULE_12__["StyleSheetService"]);
        this.schedulerPreferenceService = injector.get(_scheduler_preference_service__WEBPACK_IMPORTED_MODULE_13__["SchedulerPreferenceService"]);
        this.schedulerLinkService = injector.get(_scheduler_link_service__WEBPACK_IMPORTED_MODULE_14__["SchedulerLinkService"]);
        this.miniWebsiteService = injector.get(_mini_website_service__WEBPACK_IMPORTED_MODULE_15__["MiniWebsiteService"]);
    }
    OnloadService.prototype.getLandingPageObjects = function (unpublished) {
        var _this = this;
        // let getParams = new HttpParams();
        // getParams = getParams.append('key', 'value');
        // getParams = getParams.append('nextKey', 'nextValue');
        var paramsToPass = new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpParams"]();
        paramsToPass = paramsToPass.append('unpublished', JSON.stringify(unpublished));
        return this.http
            .get(this.apiService.apiUrl + 'scheduler/handle/' + sessionStorage.getItem('handle'), {
            observe: 'body',
            responseType: 'json',
            params: paramsToPass,
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["map"])(function (responseData) {
            if (responseData.preference !== null) {
                responseData.preference.allowTZChangeOriginal = lodash__WEBPACK_IMPORTED_MODULE_5__["cloneDeep"](responseData.preference.allowTZChange);
                responseData.preference.schedulerPreferenceFieldDefnListOriginal = lodash__WEBPACK_IMPORTED_MODULE_5__["cloneDeep"](responseData.preference.schedulerPreferenceFieldDefnList);
                if (responseData.preference.allowAddConnectedClient === null)
                    responseData.preference.allowAddConnectedClient = true;
                var booleanMap = new _models_SchedulerBooleanMap_model__WEBPACK_IMPORTED_MODULE_6__["SchedulerBooleanMapModel"]();
                if (!responseData.preference.booleanMap)
                    responseData.preference.booleanMap = booleanMap;
                else {
                    for (var prop in booleanMap)
                        if (!responseData.preference.booleanMap.hasOwnProperty(prop))
                            responseData.preference.booleanMap[prop] = booleanMap[prop];
                }
            }
            _this.businessService.setBusinessItems(responseData);
            if (responseData.configListLabels === null) {
                responseData.configListLabels = new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["ConfigListMap"]();
            }
            _this.configListService.setConfigList(responseData.configListLabels);
            _this.emailSettingsService.setEmailCategories(responseData.emailCategories, responseData.configListLabels);
            _this.emailSettingsService.setEmailTemplates(responseData.emailTemplates);
            _this.schedulerPreferenceService.setSchedulerPreference(responseData.preference);
            // if (this.schedulerPreferenceService.schedulerPreference.labelMap) // LHB 1/22/2021 TT-7301
            //     for (let key in this.schedulerPreference.labelMap) {
            //         for (let i = 0, x = this.tagsService.businessTagsArray.length; i < x; i++) {
            //             if (this.schedulerPreference.labelMap[key] && this.schedulerPreference.labelMap[key].indexOf(this.tagsService.businessTagsArray[i]))
            //                 this.schedulerPreference.labelMap[key] = this.tagsService.assignObjectToTags(business, this.schedulerPreference.labelMap[key], this.tagsService.businessTagsArray);
            //         }
            //     }
            _this.schedulerLinkService.setSchedulerLink(responseData.schedulerLink, responseData.business, responseData.miniWebsite);
            _this.miniWebsiteService.setMiniWebsite(responseData.miniWebsite, responseData.business);
            if (responseData.styleUrl) //LOAD OVERRIDING STYLESHEET LAST SO IT HAS HIGHEST CSS PRECEDENCE
                _this.styleSheetService.addStylesheetToHead(responseData.styleUrl);
            if (responseData.schedulerLink.styleUrl)
                _this.styleSheetService.addStylesheetToHead(responseData.schedulerLink.styleUrl);
            return responseData;
        }), 
        //USE BELOW MAP IF OBSERVE IN OPTIONS IS SET TO VALUE OF TYPE 'response'
        // map(responseData => {//MAP VIDEO 255 ON ANGULAR 8 COMPLETE GUIDE
        //     this.landingPageObjects = responseData.body;
        //     return this.landingPageObjects;
        // }),
        // catchError(errorRes => {
        //     //do something with it; generic error handling task
        //     //errorRes.newProperty = 'this is a new property';
        //     this.handleError(errorRes);
        //     return throwError(errorRes);
        // })
        Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_7__["catchError"])(this.apiService.handleError));
        //.subscribe((responseData: landingPageObjects) => {
        //})
    };
    OnloadService.ctorParameters = function () { return [
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] },
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"] }
    ]; };
    OnloadService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"], _angular_common_http__WEBPACK_IMPORTED_MODULE_3__["HttpClient"]])
    ], OnloadService);
    return OnloadService;
}());



/***/ }),

/***/ "./src/app/reasons.service.ts":
/*!************************************!*\
  !*** ./src/app/reasons.service.ts ***!
  \************************************/
/*! exports provided: ReasonsService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReasonsService", function() { return ReasonsService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/internal/operators */ "./node_modules/rxjs/internal/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _api_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./api.service */ "./src/app/api.service.ts");
/* harmony import */ var _models_Reason_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../models/Reason.model */ "./src/models/Reason.model.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _session_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./session.service */ "./src/app/session.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");











var ReasonsService = /** @class */ (function () {
    function ReasonsService(injector, http) {
        this.injector = injector;
        this.http = http;
        this.applyingCoupon = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
        this.couponStatus = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
        this.couponStatusDetail = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
        this.coupon = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
        this.apiService = injector.get(_api_service__WEBPACK_IMPORTED_MODULE_5__["ApiService"]);
        this.sessionService = injector.get(_session_service__WEBPACK_IMPORTED_MODULE_8__["SessionService"]);
        this.schedulerPreferenceService = injector.get(_scheduler_preference_service__WEBPACK_IMPORTED_MODULE_9__["SchedulerPreferenceService"]);
    }
    ReasonsService.prototype.getReasons = function (CSFilterObj, waitListOnly) {
        CSFilterObj.reasonIdList = null;
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]();
        // LHB 07/13/2020 TT-6781 added encodeURIComponent to make # symbol work on coupons
        params = params.append('couponCode', encodeURIComponent(this.sessionService.sessionObject.parmCoupon));
        if (waitListOnly)
            params = params.append('waitListOnly', String(waitListOnly));
        return this.http
            .post(this.apiService.apiUrl + 'service', CSFilterObj, { observe: "body", responseType: 'json', params: params })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            if (responseData && responseData.reasonAPIBeanList)
                for (var i = 0, x = responseData.reasonAPIBeanList.length; i < x; i++)
                    responseData.reasonAPIBeanList[i].displayName = responseData.reasonAPIBeanList[i].reasonDesc;
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.apiService.handleError));
    };
    ReasonsService.prototype.applyCouponToReasons = function (couponCode, reasons) {
        for (var i = 0, x = reasons.length; i < x; i++) {
            if (reasons[i].originalPrice !== undefined && reasons[i].originalPrice !== null) {
                reasons[i].price = reasons[i].originalPrice;
            }
        }
        var originalReasons = lodash__WEBPACK_IMPORTED_MODULE_7__["cloneDeep"](reasons);
        couponCode = encodeURIComponent(couponCode); // LHB 07/13/2020 TT-6781 added encodeURIComponent to make # symbol work on coupons
        return this.http
            .post(this.apiService.apiUrl + 'service/applyCoupon/' + couponCode, reasons, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            for (var i = 0, x = originalReasons.length; i < x; i++) {
                for (var j = 0, y = responseData.reasonAPIBeanList.length; j < y; j++) {
                    if (originalReasons[i].reasonId === responseData.reasonAPIBeanList[j].reasonId) {
                        if (originalReasons[i].price !== responseData.reasonAPIBeanList[j].price)
                            responseData.reasonAPIBeanList[j].originalPrice = originalReasons[i].price;
                        if (originalReasons[i].durationList !== null && originalReasons[i].durationList.length > 0) {
                            for (var k = 0, z = originalReasons[i].durationList.length; k < z; k++) {
                                for (var l = 0, a = responseData.reasonAPIBeanList[j].durationList.length; l < a; l++)
                                    if (originalReasons[i].durationList[k].duration === responseData.reasonAPIBeanList[j].durationList[l].duration &&
                                        originalReasons[i].durationList[k].durationName === responseData.reasonAPIBeanList[j].durationList[l].durationName &&
                                        originalReasons[i].durationList[k].internalName === responseData.reasonAPIBeanList[j].durationList[l].internalName)
                                        if (originalReasons[i].durationList[k].price !== responseData.reasonAPIBeanList[j].durationList[l].price)
                                            responseData.reasonAPIBeanList[j].durationList[l].originalPrice = originalReasons[i].durationList[k].price;
                            }
                        }
                    }
                }
            }
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.apiService.handleError));
    };
    ReasonsService.prototype.createFriendlyDurationDisplay = function (visitMinutes) {
        var returnString;
        if (visitMinutes !== null && visitMinutes !== undefined) {
            var durationHours = void 0;
            var durationHoursString = void 0;
            var durationMinutes = void 0;
            var durationMinutesString = void 0;
            var hoursLabel = void 0;
            var minutesLabel = void 0;
            if (visitMinutes % 60 !== 0) {
                durationHours = visitMinutes - (visitMinutes % 60);
                durationHours = durationHours / 60;
                durationMinutes = visitMinutes % 60;
            }
            else {
                durationHours = visitMinutes / 60;
                durationMinutes = 0;
            }
            if (durationHours === 1) {
                durationHoursString = durationHours.toString();
                hoursLabel = this.schedulerPreferenceService.schedulerPreference.labelMap.hourLabel;
            }
            else if (durationHours === 0) {
                durationHoursString = "";
                hoursLabel = "";
            }
            else {
                durationHoursString = durationHours.toString();
                hoursLabel = this.schedulerPreferenceService.schedulerPreference.labelMap.hoursLabel;
            }
            if (durationMinutes === 0) {
                durationMinutesString = "";
                minutesLabel = "";
            }
            else {
                durationMinutesString = durationMinutes.toString();
                minutesLabel = this.schedulerPreferenceService.schedulerPreference.labelMap.minutesLabel;
            }
            returnString = durationHoursString + " " + hoursLabel + " " + durationMinutesString + " " + minutesLabel;
        }
        else {
            returnString = "";
        }
        return returnString;
    };
    ReasonsService.prototype.formatReason = function (reason) {
        if (reason.durationList !== null && reason.durationList.length !== 0) {
            reason.multiDuration = true;
            for (var j = 0, y = reason.durationList.length; j < y; j++) {
                if (reason.durationList[j].duration === null || reason.durationList[j].duration === 0) {
                    reason.durationList[j].duration = 15;
                }
                reason.durationList[j].friendlyDuration = this.createFriendlyDurationDisplay(reason.durationList[j].duration);
            }
            if (reason.selectedDuration === undefined || reason.selectedDuration === null) {
                reason.selectedDuration = new _models_Reason_model__WEBPACK_IMPORTED_MODULE_6__["ReasonDuration"]();
                reason.selectedDuration.active = true;
            }
        }
        else {
            reason.multiDuration = false;
            if ((reason.visitMinutes === null || reason.visitMinutes === 0) && reason.reasonType !== _models_Reason_model__WEBPACK_IMPORTED_MODULE_6__["ReasonTypes"].ADDON) {
                reason.visitMinutes = 15;
            }
            reason.friendlyDuration = this.createFriendlyDurationDisplay(reason.visitMinutes);
        }
        if (reason.repeatingApptOptionList === null || reason.repeatingApptOptionList.length === 0) {
            reason.allowRepeating = -1;
        }
        if (reason.allowRepeating !== null && reason.allowRepeating > -1) {
            if (reason.allowRepeating === 0) {
                var singleInstanceRepeat = new _models_Reason_model__WEBPACK_IMPORTED_MODULE_6__["RepeatingApptOption"]();
                singleInstanceRepeat.numberOfAppointments = 1;
                singleInstanceRepeat.displayName = "1 Session";
                singleInstanceRepeat.price = reason.price;
                singleInstanceRepeat.deposit = reason.depositAmount;
                reason.repeatingApptOptionList.unshift(singleInstanceRepeat);
            }
            if (reason.repeatingApptOptionList.length === 1) {
                reason.selectedRepeatingApptOption = reason.repeatingApptOptionList[0];
            }
            else if (reason.selectedRepeatingApptOption === undefined || reason.selectedRepeatingApptOption === null) {
                reason.selectedRepeatingApptOption = new _models_Reason_model__WEBPACK_IMPORTED_MODULE_6__["RepeatingApptOption"]();
            }
        }
        return reason;
    };
    ReasonsService.prototype.formatReasonList = function (reasons) {
        for (var i = 0, x = reasons.length; i < x; i++)
            reasons[i] = this.formatReason(reasons[i]);
        return reasons;
    };
    ReasonsService.ctorParameters = function () { return [
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] },
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }
    ]; };
    ReasonsService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"], _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]])
    ], ReasonsService);
    return ReasonsService;
}());



/***/ }),

/***/ "./src/app/responsive.service.ts":
/*!***************************************!*\
  !*** ./src/app/responsive.service.ts ***!
  \***************************************/
/*! exports provided: ResponsiveService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResponsiveService", function() { return ResponsiveService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_3__);




var ResponsiveService = /** @class */ (function () {
    function ResponsiveService() {
        this.embeddedScheduler = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.isEmbedded = false;
        this.xsScreenBreakPoint = 575.98;
        this.smScreenBreakPoint = 767.98;
        this.mdScreenBreakPoint = 992;
        this.getNumberNoPixels = function (pixelHeight) {
            if (pixelHeight !== undefined) {
                var indexOfPx = pixelHeight.indexOf('px');
                if (indexOfPx !== -1) {
                    return pixelHeight.substring(0, indexOfPx);
                }
            }
            else {
                return '0';
            }
        };
    }
    ResponsiveService.prototype.setInnerWidth = function () {
        this.innerWidth = window.innerWidth;
        // this.innerWidthSubject.next(this.innerWidth);
        if (this.isEmbedded) {
            this.setHeightForEmbedScheduler();
        }
        if (this.innerWidth <= this.xsScreenBreakPoint) { //setting this to make references in template easier instead of always having to check if responsiveService.innerWidth <= responsiveService.xsScreenBreakPoint
            this.onMobileViewPort = true;
        }
        else {
            this.onMobileViewPort = false;
        }
        if (this.innerWidth > this.xsScreenBreakPoint && this.innerWidth <= this.smScreenBreakPoint) {
            this.onTabletViewPort = true;
        }
        else {
            this.onTabletViewPort = false;
        }
    };
    ResponsiveService.prototype.init = function () {
        this.setInnerWidth();
    };
    ResponsiveService.prototype.getLogoHeight = function () {
        return Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__('#businessLogo').css('height')));
    };
    ResponsiveService.prototype.centerLoginBtns = function () {
        var logoHeight = this.getLogoHeight();
        var topPositionForLoginBtns = (logoHeight + 50 - 15) / 2 * -1;
        jquery__WEBPACK_IMPORTED_MODULE_3__('login-register-btns').css({ top: topPositionForLoginBtns });
        return true;
    };
    ResponsiveService.prototype.adjustMatCardTitleBarHeight = function (idValue, preference, showRegisterLoginButtons) {
        var titleHeight = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__('mat-card-title.mat-card-title').css('height')));
        var heightToSet = titleHeight - 10 + "px";
        jquery__WEBPACK_IMPORTED_MODULE_3__('#' + idValue).css({ 'min-height': heightToSet });
        if (this.isEmbedded && preference !== undefined) {
            if (jquery__WEBPACK_IMPORTED_MODULE_3__('#' + idValue + ' #loginBtn').offset() !== undefined && showRegisterLoginButtons.showLoginBtn) {
                var titleOffset = jquery__WEBPACK_IMPORTED_MODULE_3__('#' + idValue + ' mat-card-title.mat-card-title h2').offset();
                var titleWidth = jquery__WEBPACK_IMPORTED_MODULE_3__('#' + idValue + ' mat-card-title.mat-card-title h2').width();
                var titleRowOffset = jquery__WEBPACK_IMPORTED_MODULE_3__('#' + idValue + ' mat-card-title.mat-card-title').offset();
                var loginBtnOffset = jquery__WEBPACK_IMPORTED_MODULE_3__('#' + idValue + ' #loginBtn').offset();
                var loginBtnHeight = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__('#' + idValue + ' #loginBtn').css('height')));
                var registerBtnWidth = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__('#' + idValue + ' #registerBtn').css('width')));
                var registerBtnOffset = jquery__WEBPACK_IMPORTED_MODULE_3__('#' + idValue + ' #registerBtn').offset();
                var schedulerBoxPaddingLeft = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__('#schedulerBox').css('padding-left')));
                var schedulerBoxPaddingTop = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__('#schedulerBox').css('padding-top')));
                var headerWidth = jquery__WEBPACK_IMPORTED_MODULE_3__('#' + idValue).css('width');
                // if (loginBtnOffset.left < 0) {
                titleOffset.left = titleOffset.left - schedulerBoxPaddingLeft + loginBtnOffset.left;
                registerBtnOffset.left = registerBtnOffset.left + schedulerBoxPaddingLeft + (loginBtnOffset.left * -1);
                loginBtnOffset.left = schedulerBoxPaddingLeft;
                //}
                var registerBtnEnd = registerBtnOffset.left + registerBtnWidth;
                if (registerBtnEnd > titleOffset.left) {
                    var initialMinHeight = jquery__WEBPACK_IMPORTED_MODULE_3__('#' + idValue).css('min-height');
                    var leftMove = titleRowOffset.left * -1 + 16;
                    if (titleRowOffset.left > titleWidth) {
                        //     leftMove = (titleRowOffset.left - titleOffset.left) * -1;
                        leftMove = leftMove + 16;
                    }
                    if (registerBtnOffset.top + loginBtnHeight > titleOffset.top) {
                        jquery__WEBPACK_IMPORTED_MODULE_3__('mat-card-title.mat-card-title').css({
                            'position': 'relative',
                            'top': loginBtnHeight + schedulerBoxPaddingTop + 'px',
                            'left': leftMove + 'px',
                            'width': headerWidth,
                            'display': 'block',
                            'margin-top': '0px'
                        });
                        jquery__WEBPACK_IMPORTED_MODULE_3__('mat-card-title.mat-card-title h2').css({ 'margin-left': '0px', 'font-size': '18px' });
                    }
                    titleHeight = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__('mat-card-title.mat-card-title').css('height')));
                    var btnRowHeight = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__('.toolbarCardHeader > mat-toolbar-row.mat-toolbar-row').css('height')));
                    heightToSet = titleHeight + btnRowHeight + schedulerBoxPaddingTop + "px";
                    jquery__WEBPACK_IMPORTED_MODULE_3__('#' + idValue).css({ 'min-height': heightToSet });
                    if (initialMinHeight !== heightToSet) {
                        this.setHeightForEmbedScheduler();
                    }
                }
            }
        }
    };
    ResponsiveService.prototype.addHorizontalScrollForTableOnMobile = function () {
        if (this.onMobileViewPort) {
            jquery__WEBPACK_IMPORTED_MODULE_3__('mat-table.data-table').css({ maxWidth: '100%', overflowX: 'scroll' });
            jquery__WEBPACK_IMPORTED_MODULE_3__('mat-header-cell').css({ flex: '0 0 20%' });
            jquery__WEBPACK_IMPORTED_MODULE_3__('mat-cell').css({ flex: '0 0 20%' });
            jquery__WEBPACK_IMPORTED_MODULE_3__('mat-header-cell.chipCell').css({ flex: '0 0 30%' });
            jquery__WEBPACK_IMPORTED_MODULE_3__('mat-cell.chipCell').css({ flex: '0 0 30%' });
        }
    };
    //Used when next and back buttons are in header of scheduler and title is really long and overlaps them
    //adjusts the margin
    ResponsiveService.prototype.adjustTitleMargin = function (titleIdValue) {
        var h2Target = '#' + titleIdValue + ' h2';
        var titleBarRowTarget = '#' + titleIdValue;
        var h2TitlePosition = jquery__WEBPACK_IMPORTED_MODULE_3__(h2Target).offset();
        var h2TitleWidth = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(h2Target).css('width')));
        if (this.isEmbedded) {
            var toggleBtnPosition = jquery__WEBPACK_IMPORTED_MODULE_3__('#toggleSideNavBtn').offset();
            var toggleBtnWidth = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__('#toggleSideNavBtn').css('width')));
            var nextBackPosition = jquery__WEBPACK_IMPORTED_MODULE_3__('.next-back-wrapper').offset();
            var nextBackWidth = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__('.next-back-wrapper').css('width')));
            var nextBackHeight = jquery__WEBPACK_IMPORTED_MODULE_3__('.next-back-wrapper').css('height');
            // console.log("toggleBtnPosition");
            // console.log(toggleBtnPosition);
            // console.log("toggleBtnPosition");
            // console.log(toggleBtnWidth);
            // console.log("nextBackPosition");
            // console.log(nextBackPosition);
            // console.log("nextBackWidth");
            // console.log(nextBackWidth);
            // console.log("nextBackHeight");
            // console.log(nextBackHeight);
            if (nextBackPosition !== undefined) {
                var endPositionOfH2 = h2TitlePosition.left + h2TitleWidth;
                if (endPositionOfH2 > nextBackPosition.left) {
                    jquery__WEBPACK_IMPORTED_MODULE_3__(h2Target).css({ 'margin-top': nextBackHeight });
                }
                else {
                    jquery__WEBPACK_IMPORTED_MODULE_3__(h2Target).css({ 'margin-top': '0px' });
                }
            }
        }
        else if (h2TitlePosition !== undefined) {
            //below is used to center title when wraps to start new line
            //If top of title is greater than bottom of next btn, we know it wrapped to next line
            //row that the title is in should thus span 100% so text is centered
            var nextBtnPosition = jquery__WEBPACK_IMPORTED_MODULE_3__('#nextBtn').offset();
            var nextBtnHeight = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__('#nextBtn').css('height')));
            if (nextBtnPosition !== undefined) {
                var nextBtnBottom = nextBtnPosition.top + nextBtnHeight;
                var difference = Math.ceil(h2TitlePosition.top - nextBtnBottom);
                if (difference === 0) {
                    jquery__WEBPACK_IMPORTED_MODULE_3__(titleBarRowTarget).css({ 'width': '100%' });
                    jquery__WEBPACK_IMPORTED_MODULE_3__(h2Target).css({ 'width': '100%' });
                }
            }
        }
    };
    ResponsiveService.prototype.toggleLocationsMapView = function (path) {
        if (path === 'hide') {
            jquery__WEBPACK_IMPORTED_MODULE_3__('agm-map').css({ 'visibility': 'hidden' });
            jquery__WEBPACK_IMPORTED_MODULE_3__('agm-map').addClass('hide-map');
        }
        else {
            jquery__WEBPACK_IMPORTED_MODULE_3__('agm-map').css({ 'visibility': 'visible' });
            jquery__WEBPACK_IMPORTED_MODULE_3__('agm-map').removeClass('hide-map');
        }
    };
    ResponsiveService.prototype.setEmbeddedValue = function (showHeaderParamValue) {
        // console.log("showHEaderParamValue in setEmbedValue " + showHeaderParamValue + " typeof " + typeof showHeaderParamValue);
        if (showHeaderParamValue === '0') {
            this.isEmbedded = true;
            this.embeddedScheduler.next(true);
        }
        else {
            this.isEmbedded = false;
            this.embeddedScheduler.next(false);
        }
    };
    ResponsiveService.prototype.getMaxWidthForModals = function (mobileWidthException) {
        var maxWidth = '40vw';
        var onOlderBrowser = 'false';
        try {
            onOlderBrowser = sessionStorage.getItem('noPromisesBrowser');
        }
        catch (e) {
        }
        if (onOlderBrowser === 'true')
            maxWidth = '300px';
        else if (this.onMobileViewPort || this.innerWidth < 900)
            maxWidth = mobileWidthException || '80vw';
        return maxWidth;
    };
    ResponsiveService.prototype.adjustMatLineItemHeight = function (itemType, idForRow, listItem, preference, imageProp) {
        var textForId = '#textFor' + idForRow;
        var h3Id = '#h3For' + idForRow;
        var pId = '#pFor' + idForRow;
        var imageId = '#imageFor' + idForRow;
        // let idsForConsole = [];
        // if(idsForConsole.indexOf(idForRow) !== -1) {
        //     console.log("/******START*****/")
        //     console.log("textForId" + textForId);
        //     console.log("h3Id" + h3Id);
        //     console.log("pId" + pId);
        //     console.log("imageId" + imageId);
        //     console.log("itemType" + itemType);
        //     console.log("listItem.showExtendedHeight START " + listItem.showExtendedHeight);
        //     console.log($(textForId).css('height'))
        //     console.log($(h3Id).css('height'))
        //     console.log($(pId).css('height'))
        //     console.log($(imageId).css('height'))
        // }
        var heightOfRowNoExtendedHeight = 200;
        if (itemType === 'staff')
            heightOfRowNoExtendedHeight = 103;
        if (jquery__WEBPACK_IMPORTED_MODULE_3__(textForId).css('height') !== undefined) {
            listItem.textFloatHeight = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(textForId).css('height')));
        }
        else if (jquery__WEBPACK_IMPORTED_MODULE_3__(h3Id).css('height') !== undefined) {
            listItem.textFloatHeight = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(h3Id).css('height')));
            // this.reasons[i].textFloatHeight = $(h3Id).offsetHeight;
            if (jquery__WEBPACK_IMPORTED_MODULE_3__(pId) !== undefined && jquery__WEBPACK_IMPORTED_MODULE_3__(pId) !== null) {
                listItem.textFloatHeight += Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(pId).css('height')));
            }
            else {
                listItem.textFloatHeight += 10;
            }
        }
        var makeLayoutChanges = false;
        // if(idsForConsole.indexOf(idForRow) !== -1) {
        //     console.log("listItem.textFloatHeight " + listItem.textFloatHeight)
        // }
        switch (itemType) {
            case 'reason':
                if (listItem.textFloatHeight > heightOfRowNoExtendedHeight)
                    makeLayoutChanges = true;
                if (listItem.multiDuration)
                    makeLayoutChanges = true;
                if ((preference.showDuration || (!preference.hidePrice && listItem.price !== null))
                    && ((listItem[imageProp] !== null && listItem[imageProp] !== '') || (listItem['reasonDesc'] !== null && listItem['reasonDesc'] !== '')))
                    makeLayoutChanges = true;
                break;
            case 'staff':
                if (listItem.textFloatHeight > heightOfRowNoExtendedHeight && listItem[imageProp] !== null && listItem[imageProp] !== '')
                    makeLayoutChanges = true;
                break;
        }
        //SHOW MAT LIST ITEM WITH EXTENDED HEIGHT
        // console.log('makeLayoutChanges ' + makeLayoutChanges);
        if (makeLayoutChanges) {
            listItem.showExtendedHeight = true;
            var rowId = '#rowFor' + idForRow;
            var itemRow = jquery__WEBPACK_IMPORTED_MODULE_3__(rowId);
            // console.log(itemRow);
            var itemRowWidth = itemRow.css('width');
            // console.log('itemRowWidth ' + itemRowWidth);
            jquery__WEBPACK_IMPORTED_MODULE_3__(rowId + ' div.extendedHeightRow').css({ 'width': itemRowWidth });
            var heightOfRow = 0;
            var heightOfChipList = 0;
            switch (itemType) {
                case 'reason':
                    heightOfRow = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(rowId + ' div.extendedHeightRow').css('height')));
                    heightOfChipList = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(rowId + ' .mat-chip-list-wrapper').css('height')));
                    heightOfRow = heightOfRow + heightOfChipList;
                    break;
                case 'staff':
                    heightOfRow = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(rowId + ' div.extendedHeightRow').css('height')));
                    var heightOfImage = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(imageId).css('height')));
                    if (heightOfImage === 0)
                        heightOfRow = heightOfRow + 100;
                    break;
            }
            // $(rowId).css({'height': heightOfRow + 'px'})
            // console.log('heightOfRow ' + heightOfRow);
            // console.log('heightOfChipList ' + heightOfChipList);
            jquery__WEBPACK_IMPORTED_MODULE_3__(rowId).css({ 'height': 'fit-content', 'padding-top': '15px' });
            if (heightOfChipList === 0) {
                var imageHeight = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(imageId).css('height')));
                if (imageHeight === 0)
                    jquery__WEBPACK_IMPORTED_MODULE_3__(rowId + ' h3').css({ 'margin-top': '22%' });
                else {
                    var h3Height = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(rowId + ' h3.mat-line').css('height')));
                    // console.log("h3Height " + h3Height);
                    var marginTop = imageHeight / 2 - h3Height / 2;
                    jquery__WEBPACK_IMPORTED_MODULE_3__(rowId + ' h3').css({ 'margin-top': marginTop + 'px' });
                }
            }
            else {
                jquery__WEBPACK_IMPORTED_MODULE_3__(rowId + ' .mat-chip-list-wrapper').css({ 'margin-left': '0px' });
            }
            // $(rowId + ' h3').css({'font-size': '18px'})
        }
        else {
            listItem.showExtendedHeight = false;
        }
        // if(idsForConsole.indexOf(idForRow) !== -1) {
        //     console.log("makeLayoutChanges " + makeLayoutChanges);
        //     console.log("listItem.showExtendedHeight END " + listItem.showExtendedHeight);
        //     console.log("/******END*****/")
        // }
    };
    ResponsiveService.prototype.setHeightsForEmbeded = function (parent, header, body, footer) {
        if (this.isEmbedded) {
            var innerHeight_1 = window.innerHeight;
            var headerHeight = 0;
            var bodyMarginHeight = 8;
            var footerHeight = 0;
            if (jquery__WEBPACK_IMPORTED_MODULE_3__(parent) !== undefined && jquery__WEBPACK_IMPORTED_MODULE_3__(parent) !== null && jquery__WEBPACK_IMPORTED_MODULE_3__(parent).css('padding-bottom') !== undefined) {
                footerHeight = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(parent).css('padding-bottom')));
                if (jquery__WEBPACK_IMPORTED_MODULE_3__(header) !== undefined && jquery__WEBPACK_IMPORTED_MODULE_3__(header) !== null) {
                    headerHeight = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(header).css('height'))) + Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(parent).css('padding-top'))) + 1;
                }
                if (jquery__WEBPACK_IMPORTED_MODULE_3__(footer).css('height') !== undefined) {
                    footerHeight = footerHeight + Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(footer).css('height')));
                }
                var currentHeightHeaderFooter = headerHeight + footerHeight;
                var backgroundColor = jquery__WEBPACK_IMPORTED_MODULE_3__(parent).css('background-color');
                var bodyHeight = innerHeight_1 - currentHeightHeaderFooter - (bodyMarginHeight * 2);
                jquery__WEBPACK_IMPORTED_MODULE_3__(body).height(bodyHeight);
                jquery__WEBPACK_IMPORTED_MODULE_3__(body).css({
                    'overflow-y': 'auto',
                    'overflow-x': 'hidden',
                    'margin-top': bodyMarginHeight + 'px',
                    'margin-bottom': bodyMarginHeight + 'px'
                });
                jquery__WEBPACK_IMPORTED_MODULE_3__(parent).css({ 'box-shadow': 'none' });
                jquery__WEBPACK_IMPORTED_MODULE_3__('#routerOutletContainer').css({ 'background-color': backgroundColor, 'padding-bottom': '0px' });
                jquery__WEBPACK_IMPORTED_MODULE_3__('body').css({ 'background-color': backgroundColor });
            }
        }
    };
    ResponsiveService.prototype.checkTimeSlotWidthForOverflow = function (idToPass, type) {
        var radioGroupId = '#' + idToPass;
        var radioGroupWidth = this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId).css('width')) - this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId).css('padding-right')) - this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId).css('padding-left'));
        var radioButtonWidth = this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId + ' .mat-radio-button').css('width'));
        if (radioButtonWidth > radioGroupWidth) {
            var classLabelDisplay = '.timeDisplayLabel';
            if (type === 'COURSE' || type === 'SERVICE_REPEATING') {
                classLabelDisplay = '.dateDisplayLabel';
            }
            //first make sure the mat chip label wraps properly
            var selectorWidth = 40;
            var timeDisplayLabelWidth = 0;
            var timeDisplayRoomNumberWidth = 0;
            // if($(radioGroupId + ' .mat-radio-container') !== undefined && $(radioGroupId + ' .mat-radio-container') !== null){
            //   selectorWidth = this.businessService.getNumberNoPixels($(radioGroupId + ' .mat-radio-container').css('width'));
            // }
            if (jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId + ' ' + classLabelDisplay).css('width') !== undefined && jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId + ' ' + classLabelDisplay).css('width') !== null) {
                timeDisplayLabelWidth = this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId + ' ' + classLabelDisplay).css('width'));
            }
            if (jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId + ' .timeDisplayRoomNumber').css('width') !== undefined && jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId + ' .timeDisplayRoomNumber').css('width') !== null) {
                timeDisplayRoomNumberWidth = this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId + ' .timeDisplayRoomNumber').css('width'));
            }
            var widthForChip = radioGroupWidth - selectorWidth - timeDisplayLabelWidth - timeDisplayRoomNumberWidth;
            var radioGroupLineHeight = this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId).css('line-height'));
            if (type === 'COURSE') {
                widthForChip = widthForChip - 10;
            }
            if (widthForChip < 100) {
                jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId + ' .mat-radio-button .seatsChipInfo').css({
                    'display': 'block',
                    'clear': 'both',
                    'width': 'fit-content',
                    'margin-left': '0px'
                });
                var fullLabelWidth = selectorWidth + timeDisplayLabelWidth + timeDisplayRoomNumberWidth;
                if (radioGroupWidth - fullLabelWidth < 0) {
                    jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId + ' span' + classLabelDisplay).css('white-space', 'normal');
                    jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId + ' span.timeDisplayRoomNumber').css('white-space', 'normal');
                }
                var radioLabelHeight = this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId + ' .mat-radio-label').css('height'));
                var positionToAdjustSelectorTo = (radioLabelHeight - radioGroupLineHeight) / 2;
                jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId + ' .mat-radio-container').css({
                    'position': 'relative',
                    'top': '-' + positionToAdjustSelectorTo + 'px'
                });
            }
            else {
                jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId + ' .mat-radio-button .seatsChipInfo').css({
                    'white-space': 'normal',
                    'max-width': widthForChip + 'px',
                    'word-break': 'break-word',
                    'height': 'auto'
                });
                //next adjust the time and room label to be inline
                var radioGroupHeight = this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId).css('height'));
                if (type === 'COURSE') {
                    radioGroupHeight = this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId + ' .mat-radio-button').css('height'));
                }
                var topPositionToAdjustLabelsTo = radioGroupHeight / 2 - radioGroupLineHeight;
                jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId + ' ' + classLabelDisplay).css({
                    'position': 'relative',
                    'top': topPositionToAdjustLabelsTo + 'px'
                });
                if (type === 'CLASS') {
                    jquery__WEBPACK_IMPORTED_MODULE_3__(radioGroupId + ' .timeDisplayRoomNumber').css({
                        'position': 'relative',
                        'top': topPositionToAdjustLabelsTo + 'px'
                    });
                }
            }
        }
    };
    ResponsiveService.prototype.setHeightForEmbedAccount = function () {
        this.setHeightsForEmbeded('.myAccountCard', '.toolbarCardHeader', '.myAccountCard > mat-card-content:not(#profileViewSelector)', '.myAccountFooter');
    };
    ResponsiveService.prototype.setHeightForEmbedScheduler = function () {
        this.setHeightsForEmbeded('#schedulerBox', '.toolbarCardHeader', '.schedulerPanelBody', '#schedulerFooter');
    };
    ResponsiveService.prototype.checkMatOptionWidth = function (dropdownClass, containerId) {
        var durationDropdownWidth = this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(dropdownClass).css('width'));
        var durationOptionsPaddingLeft = this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(dropdownClass + ' > mat-option').css('padding-left'));
        var durationOptionsPaddingRight = this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(dropdownClass + ' > mat-option').css('padding-right'));
        var schedulerContainerRowWidth = this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(containerId).css('width'));
        var schedulerContainerMinusDurationPadding = schedulerContainerRowWidth - durationOptionsPaddingRight - durationOptionsPaddingLeft;
        if (durationDropdownWidth > schedulerContainerMinusDurationPadding) {
            var minWidthValue = schedulerContainerMinusDurationPadding - durationOptionsPaddingRight - durationOptionsPaddingLeft;
            jquery__WEBPACK_IMPORTED_MODULE_3__(dropdownClass).css({ 'width': minWidthValue + 'px',
                'min-width': minWidthValue + 'px',
                'position': 'relative' });
        }
        else if (this.onMobileViewPort) {
            var minWidthValue = ((schedulerContainerMinusDurationPadding - durationDropdownWidth) / 2) + durationDropdownWidth;
            jquery__WEBPACK_IMPORTED_MODULE_3__(dropdownClass).css({
                'min-width': minWidthValue + 'px',
            });
        }
    };
    ResponsiveService.prototype.configureHorizontalSearch = function (inputIdString, btnIdString, outerBoxIdString) {
        var inputId = "#" + inputIdString;
        var btnId = "#" + btnIdString;
        var outerBoxId = "#schedulerBox";
        if (outerBoxIdString !== undefined) {
            outerBoxId = "#" + outerBoxIdString;
            if (outerBoxIdString === 'couponListItem') {
                outerBoxId = outerBoxId + ' div.mat-list-item-content';
            }
        }
        var inputWidth = jquery__WEBPACK_IMPORTED_MODULE_3__(inputId).css('width');
        var btnWidth = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(btnId).css('width')));
        var schedulerBoxWidth = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(outerBoxId).css('width'))) - Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(outerBoxId).css('padding-left'))) - Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__(outerBoxId).css('padding-right')));
        var inputWidthToSet = schedulerBoxWidth - btnWidth - 5;
        jquery__WEBPACK_IMPORTED_MODULE_3__(inputId).css({ 'width': inputWidthToSet + 'px' });
    };
    ResponsiveService.prototype.configureValidateAddressBtnForMobile = function () {
        var inputIdString = 'locationPnlVariableAddressValidateField';
        var btnIdString = 'locationPnlVariableAddressValidateBtn';
        var inputId = "#" + inputIdString;
        var btnId = "#" + btnIdString;
        if (this.onMobileViewPort) {
            jquery__WEBPACK_IMPORTED_MODULE_3__(inputId).css({ 'width': '100%' });
            jquery__WEBPACK_IMPORTED_MODULE_3__(btnId).css({ 'width': '100%', 'position': 'relative', 'top': '-15px' });
        }
        else {
            this.configureHorizontalSearch(inputIdString, btnIdString, 'variableAddressModal');
        }
    };
    ResponsiveService.prototype.setFooterToBottom = function (path) {
        var windowHeight = jquery__WEBPACK_IMPORTED_MODULE_3__(window).height();
        var documentHeight = jquery__WEBPACK_IMPORTED_MODULE_3__(document).height();
        // let appContainer = $('#appContainer').height();
        var routerOutletContainer = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__('#routerOutletContainer').css('height')));
        var routerOutletContainerMarginTop = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__('#routerOutletContainer').css('margin-top')));
        var appHeader = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__('#pageHeader').css('height')));
        var appHeaderPaddingTop = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__('#pageHeader').css('padding-top')));
        var appHeaderPaddingBottom = Number(this.getNumberNoPixels(jquery__WEBPACK_IMPORTED_MODULE_3__('#pageHeader').css('padding-bottom')));
        var contentBodyHeight = appHeader + appHeaderPaddingTop + appHeaderPaddingBottom + routerOutletContainer + routerOutletContainerMarginTop;
        var documentMinusContent = documentHeight - contentBodyHeight;
        // console.log("////START " + path)
        // console.log("windowHeight " + windowHeight);
        // console.log("documentHeight " + documentHeight);
        // // console.log("appContainer " + appContainer);
        // console.log("appHeader " + appHeader);
        // console.log("appHeaderPaddingTop " + appHeaderPaddingTop);
        // console.log("appHeaderPaddingBottom " + appHeaderPaddingBottom);
        // console.log("routerOutletContainer " + routerOutletContainer);
        // console.log("routerOutletContainerMarginTop " + routerOutletContainerMarginTop);
        // console.log("contentBodyHeight " + contentBodyHeight);
        // console.log("documentMinusContent " + documentMinusContent);
        // if(windowHeight === documentHeight && documentMinusContent > 0){
        //     $('#footer').css({'bottom': '0'})
        //     $('mat-sidenav-container').css({'height': windowHeight + 'px'});
        // } else {
        //     $('#footer').css({'bottom': 'inherit'})
        //     $('mat-sidenav-container').css({'height': 'inherit'});
        // }
    };
    ResponsiveService.prototype.showLoginRegisterBtnLogic = function (preference) {
        var showLoginBtn = false;
        var showRegisterBtn = false;
        if (preference === undefined || preference === null) {
            showLoginBtn = false;
            showRegisterBtn = false;
        }
        else if (preference.loginReq === -1) { //DON'T ALLOW CLIENTS TO LOGIN
            showLoginBtn = false;
            showRegisterBtn = false;
        }
        else if (preference.loginReq === 2) { //ALLOW ONLY PRE-REGISTERED CLIENTS TO LOGIN
            showLoginBtn = true;
            showRegisterBtn = false;
        }
        else {
            //LOGINREQ = 0 -- ALLOW CLIENTS TO LOGIN BUT DON'T DORCE
            //LOGINREQ= 1 -- MUST LOGIN TO BOOK
            showLoginBtn = true;
            showRegisterBtn = true;
        }
        return { 'showLoginBtn': showLoginBtn, 'showRegisterBtn': showRegisterBtn };
    };
    ResponsiveService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], ResponsiveService);
    return ResponsiveService;
}());



/***/ }),

/***/ "./src/app/scheduler-link.service.ts":
/*!*******************************************!*\
  !*** ./src/app/scheduler-link.service.ts ***!
  \*******************************************/
/*! exports provided: SchedulerLinkService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchedulerLinkService", function() { return SchedulerLinkService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_label_map_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common-classes/label-map.service */ "./src/app/common-classes/label-map.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _mini_website_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mini-website.service */ "./src/app/mini-website.service.ts");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./responsive.service */ "./src/app/responsive.service.ts");







var SchedulerLinkService = /** @class */ (function () {
    function SchedulerLinkService(injector) {
        this.injector = injector;
        this.labelMapService = injector.get(_common_classes_label_map_service__WEBPACK_IMPORTED_MODULE_2__["LabelMapService"]);
        this.schedulerPreferenceService = injector.get(_scheduler_preference_service__WEBPACK_IMPORTED_MODULE_3__["SchedulerPreferenceService"]);
        this.miniWebsiteService = injector.get(_mini_website_service__WEBPACK_IMPORTED_MODULE_4__["MiniWebsiteService"]);
        this.tagsService = injector.get(_tags_service__WEBPACK_IMPORTED_MODULE_5__["TagsService"]);
        this.responsiveService = injector.get(_responsive_service__WEBPACK_IMPORTED_MODULE_6__["ResponsiveService"]);
    }
    SchedulerLinkService.prototype.setSchedulerLink = function (schedulerLink, business, miniWebsite) {
        this.schedulerLink = schedulerLink;
        this.schedulerLink.labelMap = this.labelMapService.reconcileSchedulerLinkPropertiesToLabelMap(this.schedulerLink, this.schedulerLink.labelMap, this.schedulerPreferenceService.schedulerPreference.labelMap);
        //On mobile when the default scheduler loads and the text reads "Click through the screens on the right" want to make sure that that instead reads "screens above" since it shows beneath scheduler
        if (this.responsiveService.onMobileViewPort && this.schedulerLink.labelMap && this.schedulerLink.labelMap.businessInfoText && this.schedulerLink.labelMap.businessInfoText.toLowerCase().indexOf('screens on the right') !== -1)
            this.schedulerLink.labelMap.businessInfoText = this.schedulerLink.labelMap.businessInfoText.replace(new RegExp('screens on the right', 'gi'), 'screens above');
        if (this.schedulerLink.labelMap && this.schedulerPreferenceService.schedulerPreference) // LHB 1/22/2021 TT-7301
            for (var key in this.schedulerLink.labelMap) {
                for (var i = 0, x = this.tagsService.businessTagsArray.length; i < x; i++) {
                    if (this.schedulerLink.labelMap[key] && typeof this.schedulerLink.labelMap[key] === 'string' && this.schedulerLink.labelMap[key].indexOf(this.tagsService.businessTagsArray[i]))
                        this.schedulerLink.labelMap[key] = this.tagsService.assignObjectToTags(business, this.schedulerLink.labelMap[key], this.tagsService.businessTagsArray);
                }
                if (this.schedulerPreferenceService.schedulerPreference.hasOwnProperty(key))
                    this.schedulerPreferenceService.schedulerPreference[key] = this.schedulerLink.labelMap[key];
            }
        if (this.schedulerLink.labelMap && this.miniWebsiteService.miniWebsite) // LHB 12/29/2020 TT-5960
            for (var key in this.schedulerLink.labelMap)
                if (miniWebsite[key] !== undefined)
                    miniWebsite[key] = this.schedulerLink.labelMap[key];
        //LOOK AT REMAINING PROPERTIES ON SCHEDULERLINK THAT ARE NOT IN THE LABELMAP AND WRITE THOSE TO CORRESPONDING PREFERENCE PROPERTIES SO THAT SETUP ON SCHEDULER LINK TAKES PRECEDENCE OVER DEFAULT PREFERENCE
        //DO THE SAME THING FOR MINIWEBSITE DESIGN WHERE THE LOGOURL PROPERTY LIVES
        for (var key in this.schedulerLink) {
            if (this.schedulerPreferenceService.schedulerPreference.hasOwnProperty(key) && this.schedulerLink[key] !== null) {
                if (key === 'booleanMap' || key === 'numberMap') {
                    for (var prop in this.schedulerLink[key]) {
                        this.schedulerPreferenceService.schedulerPreference[key][prop] = this.schedulerLink[key][prop];
                        if (this.schedulerPreferenceService.schedulerPreference.hasOwnProperty(prop) && this.schedulerLink[key][prop] !== null)
                            this.schedulerPreferenceService.schedulerPreference[prop] = this.schedulerLink[key][prop];
                    }
                }
                else
                    this.schedulerPreferenceService.schedulerPreference[key] = this.schedulerLink[key];
            }
            else if (!this.schedulerPreferenceService.schedulerPreference.hasOwnProperty(key) && this.schedulerLink[key] !== null) { //there is a property on schedulerLink that is not on preference and should just be added to preference (like skipWelcome)
                this.schedulerPreferenceService.schedulerPreference[key] = this.schedulerLink[key];
            }
            if (miniWebsite !== null && miniWebsite.hasOwnProperty(key) && this.schedulerLink[key] !== null) {
                if (key === 'landingPageStylesJSON')
                    miniWebsite.schedulerLinkLandingPageStylesJson = this.schedulerLink[key];
                else
                    miniWebsite[key] = this.schedulerLink[key];
            }
        }
        // LHB 10/16/2020 TT-7082 loop through scheduler link's boolean map and override props on miniwebsite (later
        if (this.schedulerLink.booleanMap !== null)
            for (var prop in this.schedulerLink.booleanMap) {
                if (this.miniWebsiteService.miniWebsite && this.miniWebsiteService.miniWebsite.hasOwnProperty(prop))
                    this.miniWebsiteService.miniWebsite[prop] = this.schedulerLink.booleanMap[prop];
                if (this.schedulerPreferenceService.schedulerPreference && this.schedulerPreferenceService.schedulerPreference.hasOwnProperty(prop))
                    this.schedulerPreferenceService.schedulerPreference[prop] = this.schedulerLink.booleanMap[prop];
                if (this.schedulerPreferenceService.schedulerPreference && this.schedulerPreferenceService.schedulerPreference.booleanMap && this.schedulerPreferenceService.schedulerPreference.booleanMap.hasOwnProperty(prop))
                    this.schedulerPreferenceService.schedulerPreference.booleanMap[prop] = this.schedulerLink.booleanMap[prop];
            }
        if (this.schedulerLink.numberMap !== null)
            for (var prop in this.schedulerLink.numberMap)
                if (this.schedulerPreferenceService.schedulerPreference && this.schedulerPreferenceService.schedulerPreference.hasOwnProperty(prop))
                    this.schedulerPreferenceService.schedulerPreference[prop] = this.schedulerLink.numberMap[prop];
    };
    SchedulerLinkService.ctorParameters = function () { return [
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] }
    ]; };
    SchedulerLinkService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]])
    ], SchedulerLinkService);
    return SchedulerLinkService;
}());



/***/ }),

/***/ "./src/app/scheduler-pref-field-form/scheduler-pref-field-form.component.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/scheduler-pref-field-form/scheduler-pref-field-form.component.ts ***!
  \**********************************************************************************/
/*! exports provided: SchedulerPrefFieldFormComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchedulerPrefFieldFormComponent", function() { return SchedulerPrefFieldFormComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scheduler/client-info/client-info.service */ "./src/app/scheduler/client-info/client-info.service.ts");
/* harmony import */ var _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../client-account/client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../business.service */ "./src/app/business.service.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _form_functions_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../form-functions.service */ "./src/app/form-functions.service.ts");
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _models_Reason_model__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../models/Reason.model */ "./src/models/Reason.model.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");













var SchedulerPrefFieldFormComponent = /** @class */ (function () {
    function SchedulerPrefFieldFormComponent(clientInfoService, clientAccountService, responsiveService, timeService, cdRef, businessService, tagsService, formFunctionsService, schedulerPreferenceService) {
        this.clientInfoService = clientInfoService;
        this.clientAccountService = clientAccountService;
        this.responsiveService = responsiveService;
        this.timeService = timeService;
        this.cdRef = cdRef;
        this.businessService = businessService;
        this.tagsService = tagsService;
        this.formFunctionsService = formFunctionsService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.addConnectedClient = false;
        this.onFormLoaded = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.onFileUploading = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.formLoaded = false;
        this.applyNumericMask = function (newFieldValue, mask) {
            if (mask !== null && newFieldValue !== null) {
                var fieldValueMinusMaskDigits = '';
                for (var i = 0, x = mask.length; i < x; i++) {
                    if (i < newFieldValue.length && mask[i] !== newFieldValue[i]) {
                        fieldValueMinusMaskDigits = fieldValueMinusMaskDigits + newFieldValue[i];
                    }
                }
                newFieldValue = fieldValueMinusMaskDigits;
                newFieldValue = newFieldValue.replace(/\D/g, ''); // since right now only allow for digit masking, replace all non digits in field
                for (var i = 0, x = mask.length; i < x; i++) {
                    if (mask[i] !== '#') {
                        if (i <= newFieldValue.length)
                            newFieldValue = newFieldValue.slice(0, i) + mask[i] + newFieldValue.slice(i);
                    }
                }
            }
            return newFieldValue;
        };
    }
    SchedulerPrefFieldFormComponent.prototype.emailAddressChecks = function (field) {
        if (field.code === 'emailAddress') {
            if (this.disableEmailAddress)
                this.clientInfoForm.controls[field.schedulerPreferenceFieldDefnId].disable();
            for (var i = 0, x = this.preference.schedulerPreferenceFieldDefnList.length; i < x; i++) // LHB 10/08/2020 TT-7064
                if (this.preference.schedulerPreferenceFieldDefnList[i].code === 'confirmEmailAddress' && this.preference.schedulerPreferenceFieldDefnList[i].value !== null)
                    this.checkConfirmEmailMatchesEmail(field);
        }
    };
    SchedulerPrefFieldFormComponent.prototype.setMultiCheckboxValue = function (field, dropdownValue, event) {
        field.value = this.formFunctionsService.setMultiCheckboxValue(field.value, dropdownValue.label, event);
        this.clientInfoForm.controls[field.schedulerPreferenceFieldDefnId].setValue(field.value);
    };
    SchedulerPrefFieldFormComponent.prototype.checkRequiredCheckbox = function (field) {
        if (field.required && field.dataType === 'CHKBOX') {
            for (var prop in this.clientInfoForm.controls) {
                if (prop === field.schedulerPreferenceFieldDefnId.toString()) {
                    if (field.value) {
                        this.clientInfoForm.controls[prop].setErrors(null);
                        field.requiredObjInvalid = false;
                    }
                    else {
                        this.clientInfoForm.controls[prop].setErrors({ 'invalid': true });
                        field.requiredObjInvalid = true;
                    }
                }
            }
        }
    };
    SchedulerPrefFieldFormComponent.prototype.checkConfirmEmailMatchesEmail = function (field) {
        if (this.clientInfoForm.controls[field.schedulerPreferenceFieldDefnId])
            for (var i = 0, x = this.preference.schedulerPreferenceFieldDefnList.length; i < x; i++)
                if (this.preference.schedulerPreferenceFieldDefnList[i].code === 'emailAddress') {
                    var emailAddressValue = this.clientInfoForm.controls[this.preference.schedulerPreferenceFieldDefnList[i].schedulerPreferenceFieldDefnId].value;
                    var confirmEmailAddressValue = this.clientInfoForm.controls[field.schedulerPreferenceFieldDefnId].value;
                    if (emailAddressValue !== confirmEmailAddressValue) {
                        this.clientInfoForm.controls[field.schedulerPreferenceFieldDefnId].setErrors({ confirmEmailMismatch: true });
                        field.confirmEmailMismatch = true;
                    }
                    else {
                        this.clientInfoForm.controls[field.schedulerPreferenceFieldDefnId].setErrors({ confirmEmailMismatch: null });
                        this.clientInfoForm.controls[field.schedulerPreferenceFieldDefnId].updateValueAndValidity();
                        field.confirmEmailMismatch = false;
                    }
                }
    };
    SchedulerPrefFieldFormComponent.prototype.checkSaveRequiredObjsOnField = function (fieldInForm, field) {
        if (fieldInForm && field.dataType === 'DATE' && field.requiredObj) {
            var todayMoment = this.timeService.getMomentFromDate(new Date());
            var apptDateMoment = this.timeService.getMomentFromDate(this.earliestApptDate);
            var selectedDateMoment = this.clientInfoForm.controls[field.schedulerPreferenceFieldDefnId].value;
            var fieldValuePassesDepChecks = void 0;
            for (var i = 0, x = field.requiredObj.depChecks.length; i < x; i++) {
                if (fieldValuePassesDepChecks !== undefined && !fieldValuePassesDepChecks && field.requiredObj.depAndOr === 'AND')
                    continue;
                if (fieldValuePassesDepChecks !== undefined && fieldValuePassesDepChecks && field.requiredObj.depAndOr === 'OR')
                    continue;
                if (fieldValuePassesDepChecks !== undefined && fieldValuePassesDepChecks && field.requiredObj.depAndOr === 'NOR')
                    continue;
                var daysDiff = 0;
                if (field.requiredObj.depChecks[i].depType === 'AGE_FROM_TODAY')
                    daysDiff = this.timeService.getMomentDaysDiff(selectedDateMoment, todayMoment);
                else
                    daysDiff = this.timeService.getMomentDaysDiff(selectedDateMoment, apptDateMoment);
                switch (field.requiredObj.depChecks[i].depCondition) {
                    case 'LT':
                        fieldValuePassesDepChecks = daysDiff < (field.requiredObj.depChecks[i].depValue * -1);
                        break;
                    case 'LE':
                        fieldValuePassesDepChecks = daysDiff <= (field.requiredObj.depChecks[i].depValue * -1);
                        break;
                    case 'EQ':
                        fieldValuePassesDepChecks = daysDiff === field.requiredObj.depChecks[i].depValue;
                        break;
                    case 'GE':
                        fieldValuePassesDepChecks = daysDiff >= field.requiredObj.depChecks[i].depValue;
                        break;
                    case 'GT':
                        fieldValuePassesDepChecks = daysDiff > field.requiredObj.depChecks[i].depValue;
                        break;
                }
            }
            if (fieldValuePassesDepChecks && field.requiredObj.depAndOr === 'NOR')
                fieldValuePassesDepChecks = false;
            if (fieldInForm && !fieldValuePassesDepChecks) {
                this.clientInfoForm.controls[field.schedulerPreferenceFieldDefnId].setErrors({ 'requiredCheckInvalid': true });
                field.requiredObjInvalid = true;
            }
            else if (fieldInForm && !this.clientInfoForm.controls[field.schedulerPreferenceFieldDefnId].hasError('pattern')) {
                this.clientInfoForm.controls[field.schedulerPreferenceFieldDefnId].setErrors(null);
                field.requiredObjInvalid = false;
            }
        }
    };
    SchedulerPrefFieldFormComponent.prototype.checkSaveRequiredObjs = function () {
        for (var i = 0, x = this.fieldDefnList.length; i < x; i++) {
            var fieldInForm = false; // LHB 1/6/2021 TT-7264 using boolean to control what actions to take in method so that fields that don't show on scheduler can still be set up as dependencies
            if (this.clientInfoForm.controls[this.fieldDefnList[i].schedulerPreferenceFieldDefnId])
                fieldInForm = true;
            if (fieldInForm && this.clientInfoForm.controls[this.fieldDefnList[i].schedulerPreferenceFieldDefnId].value && this.fieldDefnList[i].dataType === 'DATE' && this.fieldDefnList[i].requiredObj)
                this.checkSaveRequiredObjsOnField(fieldInForm, this.fieldDefnList[i]);
        }
    };
    SchedulerPrefFieldFormComponent.prototype.checkRegexError = function (field) {
        var fieldInForm = false; // LHB 1/6/2021 TT-7264 using boolean to control what actions to take in method so that fields that don't show on scheduler can still be set up as dependencies
        if (this.clientInfoForm.controls[field.schedulerPreferenceFieldDefnId])
            fieldInForm = true;
        if (fieldInForm && this.clientInfoForm.controls[field.schedulerPreferenceFieldDefnId].invalid && this.clientInfoForm.controls[field.schedulerPreferenceFieldDefnId].hasError('pattern'))
            field.regexInvalid = true;
        else
            field.regexInvalid = false;
    };
    SchedulerPrefFieldFormComponent.prototype.checkDependencyFields = function (field, inputEvent) {
        var fieldInForm = false; // LHB 1/6/2021 TT-7264 using boolean to control what actions to take in method so that fields that don't show on scheduler can still be set up as dependencies
        if (this.clientInfoForm.controls[field.schedulerPreferenceFieldDefnId])
            fieldInForm = true;
        if (fieldInForm && (!inputEvent || (inputEvent.code !== 'Backspace' && inputEvent.code !== 'Delete')))
            this.clientInfoForm.controls[field.schedulerPreferenceFieldDefnId].setValue(this.applyNumericMask(this.clientInfoForm.controls[field.schedulerPreferenceFieldDefnId].value, field.mask));
        if (fieldInForm)
            field.value = this.clientInfoForm.controls[field.schedulerPreferenceFieldDefnId].value;
        var reasonId = null;
        if (this.selectedReason !== undefined)
            reasonId = this.selectedReason.reasonId;
        this.clientInfoService.checkDependencyFields(field, this.preference.schedulerPreferenceFieldDefnList, this.clientInfoForm, reasonId);
        this.emailAddressChecks(field);
        this.checkRegexError(field);
        if (field.code === 'confirmEmailAddress')
            this.checkConfirmEmailMatchesEmail(field);
        this.checkSaveRequiredObjs();
        this.checkRequiredCheckbox(field);
        if (this.clientInfoService.checkContainsConfirmEmail(this.preference.schedulerPreferenceFieldDefnList)) // LHB 3/12/2021 TT-7528
            this.checkConfirmEmailMatchesEmail(this.clientInfoService.getField(this.preference.schedulerPreferenceFieldDefnList, 'confirmEmailAddress'));
    };
    SchedulerPrefFieldFormComponent.prototype.ngOnChanges = function (changes) {
        if ((changes.clientSaving !== undefined && changes.clientSaving.previousValue === true && changes.clientSaving.currentValue === false && changes.clientSaving.firstChange === false) ||
            (changes.editing !== undefined && changes.editing.previousValue === true && changes.editing.currentValue === false && changes.editing.firstChange === false)) {
            this.cdRef.detectChanges();
        }
    };
    SchedulerPrefFieldFormComponent.prototype.organizeFieldsWithSelectedClient = function () {
        //Go through all the fields on the form that are client fields and fill with data from selectedClient
        for (var i = 0, x = this.preference.schedulerPreferenceFieldDefnList.length; i < x; i++) {
            for (var j = 0, y = this.selectedClient.fields.length; j < y; j++) {
                if (this.selectedClient.fields[j].schedulerPreferenceFieldDefnId === this.preference.schedulerPreferenceFieldDefnList[i].schedulerPreferenceFieldDefnId) {
                    this.selectedClient.fields[j].label = this.preference.schedulerPreferenceFieldDefnList[i].label; // LHB 06/30/2021 TT-7935 for applying translations to field labels on client profile view
                    this.selectedClient.fields[j].hint = this.preference.schedulerPreferenceFieldDefnList[i].hint; // LHB 07/23/2021 TT-8033 for applying translations to field hints on client profile view
                    if (this.selectedClient.fields[j].value !== null && this.selectedClient.fields[j].value !== "") {
                        if (this.preference.schedulerPreferenceFieldDefnList[i].showOnScheduler) // LHB 1/6/2021 TT-7264 separated this out so could still loop through checking dependency fields
                            for (var prop in this.clientInfoForm.controls) {
                                if (this.selectedClient.fields[j].schedulerPreferenceFieldDefnId === Number(prop) && !this.addConnectedClient && this.clientInfoForm.controls[prop] !== undefined) {
                                    this.clientInfoForm.controls[prop].setValue(this.selectedClient.fields[j].value);
                                }
                            }
                        this.preference.schedulerPreferenceFieldDefnList[i].value = this.selectedClient.fields[j].value;
                        this.checkDependencyFields(this.preference.schedulerPreferenceFieldDefnList[i], undefined);
                        if (this.preference.schedulerPreferenceFieldDefnList[i].code !== 'cellPhone') {
                            this.preference.schedulerPreferenceFieldDefnList[i].showOnScheduler = false;
                        }
                        this.preference.schedulerPreferenceFieldDefnList[i].updatedBasedOnLogin = true;
                    }
                }
            }
        }
        this.formLoaded = true;
        this.cdRef.detectChanges();
        this.onFormLoaded.emit(this.formLoaded);
    };
    SchedulerPrefFieldFormComponent.prototype.fileUploadChange = function (fileInputEvent, field) {
        var _this = this;
        field.fileUploading = true;
        var proceedWithUpload = true;
        if (field.validationRegex !== null) {
            var isValid = true;
            try {
                new RegExp(field.validationRegex);
            }
            catch (e) {
                isValid = false;
            }
            if (isValid) {
                var regexTest = new RegExp(field.validationRegex);
                proceedWithUpload = regexTest.test(fileInputEvent.target.files[0].name);
            }
        }
        if (proceedWithUpload) {
            var copiedFileName_1 = lodash__WEBPACK_IMPORTED_MODULE_6__["cloneDeep"](fileInputEvent.target.files[0].name);
            this.onFileUploading.emit(true);
            this.businessService.uploadFile(fileInputEvent.target.files[0], field.businessId)
                .subscribe(function (file) {
                field.fileUploading = false;
                field.fileUploadError = false;
                field.value = file;
                _this.onFileUploading.emit(false);
                _this.clientInfoForm.controls[field.schedulerPreferenceFieldDefnId].setValue(field.value);
                field.fileForDisplay = copiedFileName_1;
                field.fileUploadSuccess = true;
                setTimeout(function () {
                    field.fileUploadSuccess = false;
                }, 3000);
            }, function (error) {
                _this.onFileUploading.emit(false);
                field.fileUploading = false;
                field.fileUploadError = true;
                field.fileUploadErrorMsg = _this.tagsService.assignObjectToTags(_this.preference, _this.preference.labelMap.fileUploadErrorMsg, _this.tagsService.preferenceTagsArray);
                _this.removeFile(field);
            });
        }
        else {
            field.fileUploading = false;
            field.fileUploadError = true;
            field.fileUploadErrorMsg = field.validationError;
        }
    };
    SchedulerPrefFieldFormComponent.prototype.chooseFilesForUpload = function (field) {
        var htmlId = 'field' + field.schedulerPreferenceFieldDefnId;
        document.getElementById(htmlId).click();
    };
    SchedulerPrefFieldFormComponent.prototype.removeFile = function (field) {
        field.value = null;
        this.clientInfoForm.controls[field.schedulerPreferenceFieldDefnId].setValue(field.value);
        field.fileForDisplay = null;
    };
    SchedulerPrefFieldFormComponent.prototype.selectClient = function (event, client) {
        if (client.clientId !== this.selectedClient.clientId && event.isUserInput) {
            this.selectedClient = client;
            this.clientAccountService.selectedClient = this.selectedClient;
            //this.configureFieldsForDisplay();
            for (var i = 0, x = this.preference.schedulerPreferenceFieldDefnList.length; i < x; i++) {
                if (this.preference.schedulerPreferenceFieldDefnList[i].updatedBasedOnLogin) {
                    this.preference.schedulerPreferenceFieldDefnList[i].value = null;
                    this.preference.schedulerPreferenceFieldDefnList[i].showOnScheduler = true;
                    this.preference.schedulerPreferenceFieldDefnList[i].updatedBasedOnLogin = false;
                    for (var prop in this.clientInfoForm.controls) {
                        if (this.preference.schedulerPreferenceFieldDefnList[i].schedulerPreferenceFieldDefnId === Number(prop)) {
                            this.clientInfoForm.controls[prop].setValue(this.preference.schedulerPreferenceFieldDefnList[i].value);
                        }
                    }
                }
            }
            this.organizeFieldsWithSelectedClient();
        }
    };
    SchedulerPrefFieldFormComponent.prototype.ngOnInit = function () {
        if (this.clientAccountService.loggedInClient) {
            this.clientAccount = this.clientAccountService.loggedInClient;
            if (this.clientAccountService.selectedClient) {
                this.selectedClient = this.clientAccountService.selectedClient;
            }
            else {
                this.selectedClient = this.clientAccount.clientList[0];
                this.clientAccountService.setSelectedClient(this.selectedClient, this.preference.schedulerPreferenceFieldDefnList);
            }
            this.organizeFieldsWithSelectedClient();
        }
        else if (this.disableEmailAddress) { //likely on the register screen and no client is selected
            for (var i = 0, x = this.preference.schedulerPreferenceFieldDefnList.length; i < x; i++) {
                if (this.preference.schedulerPreferenceFieldDefnList[i].code === 'emailAddress') {
                    this.emailAddressChecks(this.preference.schedulerPreferenceFieldDefnList[i]);
                }
            }
            this.formLoaded = true;
            this.onFormLoaded.emit(this.formLoaded);
        }
        else {
            this.formLoaded = true;
            this.onFormLoaded.emit(this.formLoaded);
        }
    };
    SchedulerPrefFieldFormComponent.ctorParameters = function () { return [
        { type: _scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_3__["ClientInfoService"] },
        { type: _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_4__["ClientAccountService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_7__["ResponsiveService"] },
        { type: _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_10__["TimeService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_5__["BusinessService"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_8__["TagsService"] },
        { type: _form_functions_service__WEBPACK_IMPORTED_MODULE_9__["FormFunctionsService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_12__["SchedulerPreferenceService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Array)
    ], SchedulerPrefFieldFormComponent.prototype, "fieldDefnList", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"])
    ], SchedulerPrefFieldFormComponent.prototype, "clientInfoForm", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], SchedulerPrefFieldFormComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _models_Reason_model__WEBPACK_IMPORTED_MODULE_11__["Reason"])
    ], SchedulerPrefFieldFormComponent.prototype, "selectedReason", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], SchedulerPrefFieldFormComponent.prototype, "editing", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], SchedulerPrefFieldFormComponent.prototype, "selectClientOnForm", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], SchedulerPrefFieldFormComponent.prototype, "disableEmailAddress", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], SchedulerPrefFieldFormComponent.prototype, "clientSaving", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], SchedulerPrefFieldFormComponent.prototype, "addConnectedClient", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Date)
    ], SchedulerPrefFieldFormComponent.prototype, "earliestApptDate", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], SchedulerPrefFieldFormComponent.prototype, "onFormLoaded", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], SchedulerPrefFieldFormComponent.prototype, "onFileUploading", void 0);
    SchedulerPrefFieldFormComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-scheduler-pref-field-form',
            template: __webpack_require__(/*! raw-loader!./scheduler-pref-field-form.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler-pref-field-form/scheduler-pref-field-form.component.html"),
            styles: [__webpack_require__(/*! ../form-field-styles.component.css */ "./src/app/form-field-styles.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_3__["ClientInfoService"], _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_4__["ClientAccountService"], _responsive_service__WEBPACK_IMPORTED_MODULE_7__["ResponsiveService"], _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_10__["TimeService"],
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"], _business_service__WEBPACK_IMPORTED_MODULE_5__["BusinessService"], _tags_service__WEBPACK_IMPORTED_MODULE_8__["TagsService"], _form_functions_service__WEBPACK_IMPORTED_MODULE_9__["FormFunctionsService"],
            _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_12__["SchedulerPreferenceService"]])
    ], SchedulerPrefFieldFormComponent);
    return SchedulerPrefFieldFormComponent;
}());



/***/ }),

/***/ "./src/app/scheduler-pref-field-form/scheduler-pref-field-form.module.ts":
/*!*******************************************************************************!*\
  !*** ./src/app/scheduler-pref-field-form/scheduler-pref-field-form.module.ts ***!
  \*******************************************************************************/
/*! exports provided: SchedulerPrefFieldFormModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchedulerPrefFieldFormModule", function() { return SchedulerPrefFieldFormModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _scheduler_pref_field_form_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scheduler-pref-field-form.component */ "./src/app/scheduler-pref-field-form/scheduler-pref-field-form.component.ts");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../material.module */ "./src/app/material.module.ts");
/* harmony import */ var _pipes_pipes_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../pipes/pipes.module */ "./src/pipes/pipes.module.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");







var SchedulerPrefFieldFormModule = /** @class */ (function () {
    function SchedulerPrefFieldFormModule() {
    }
    SchedulerPrefFieldFormModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [_scheduler_pref_field_form_component__WEBPACK_IMPORTED_MODULE_3__["SchedulerPrefFieldFormComponent"]],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
                _material_module__WEBPACK_IMPORTED_MODULE_4__["MaterialModule"],
                _pipes_pipes_module__WEBPACK_IMPORTED_MODULE_5__["PipesModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_6__["ReactiveFormsModule"]
            ],
            exports: [_scheduler_pref_field_form_component__WEBPACK_IMPORTED_MODULE_3__["SchedulerPrefFieldFormComponent"]]
        })
    ], SchedulerPrefFieldFormModule);
    return SchedulerPrefFieldFormModule;
}());



/***/ }),

/***/ "./src/app/scheduler-preference.service.ts":
/*!*************************************************!*\
  !*** ./src/app/scheduler-preference.service.ts ***!
  \*************************************************/
/*! exports provided: SchedulerPreferenceService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchedulerPreferenceService", function() { return SchedulerPreferenceService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _config_list_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./config-list.service */ "./src/app/config-list.service.ts");
/* harmony import */ var _common_classes_label_map_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common-classes/label-map.service */ "./src/app/common-classes/label-map.service.ts");
/* harmony import */ var _scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scheduler/client-info/client-info.service */ "./src/app/scheduler/client-info/client-info.service.ts");
/* harmony import */ var _models_ParameterPassedField_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/ParameterPassedField.model */ "./src/models/ParameterPassedField.model.ts");






var SchedulerPreferenceService = /** @class */ (function () {
    function SchedulerPreferenceService(injector) {
        this.injector = injector;
        this.configListService = injector.get(_config_list_service__WEBPACK_IMPORTED_MODULE_2__["ConfigListService"]);
        this.labelMapService = injector.get(_common_classes_label_map_service__WEBPACK_IMPORTED_MODULE_3__["LabelMapService"]);
        this.clientInfoService = injector.get(_scheduler_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_4__["ClientInfoService"]);
    }
    SchedulerPreferenceService.prototype.setSchedulerPreference = function (preference) {
        this.schedulerPreference = preference;
        this.schedulerPreference.labelMap = this.labelMapService.reconcileLabels(this.schedulerPreference, this.schedulerPreference.labelMap, this.configListService.configList);
        this.schedulerPreference.schedulerPreferenceFieldDefnList = this.clientInfoService.initialConfigurationOfSchedulerFields(this.schedulerPreference.schedulerPreferenceFieldDefnList, this.schedulerPreference);
        for (var i = 0, x = this.schedulerPreference.schedulerPreferenceFieldDefnList.length; i < x; i++) {
            if (this.schedulerPreference.schedulerPreferenceFieldDefnList[i].code === 'emailAddress' &&
                this.schedulerPreference.schedulerPreferenceFieldDefnList[i].validationRegex !== null && this.schedulerPreference.schedulerPreferenceFieldDefnList[i].validationRegex !== '' &&
                this.clientInfoService.isValidRegex(this.schedulerPreference.schedulerPreferenceFieldDefnList[i].validationRegex)) {
                this.schedulerPreference.emailValidationRegex = this.schedulerPreference.schedulerPreferenceFieldDefnList[i].validationRegex;
            }
            else
                this.schedulerPreference.emailValidationRegex = this.clientInfoService.standardEmailValidationRegex;
        }
    };
    SchedulerPreferenceService.prototype.clearSchedulerPreference = function () {
        this.schedulerPreference = null;
    };
    SchedulerPreferenceService.prototype.setParametersFromExistingSessionObject = function (existingSessionObject) {
        if (existingSessionObject.customFieldMap) {
            var fields = [];
            for (var prop in existingSessionObject.customFieldMap) {
                var field = new _models_ParameterPassedField_model__WEBPACK_IMPORTED_MODULE_5__["ParameterPassedField"](prop, existingSessionObject.customFieldMap[prop]);
                fields.push(field);
            }
            if (!this.parameterPassedFields || this.parameterPassedFields.length === 0)
                this.parameterPassedFields = fields;
            else {
                for (var i = 0, x = fields.length; i < x; i++) {
                    var fieldInParameterList = false;
                    for (var j = 0, y = this.parameterPassedFields.length; j < y; j++) {
                        if (fields[i].tagName === this.parameterPassedFields[j].tagName)
                            fieldInParameterList = true;
                    }
                    if (!fieldInParameterList)
                        this.parameterPassedFields.push(fields[i]);
                }
            }
        }
    };
    SchedulerPreferenceService.prototype.setParameterPassedFields = function (params) {
        var fields = [];
        for (var prop in params) {
            if (prop.length > 2) {
                var first3Characters = prop.substring(0, 3);
                if (first3Characters === 'CF_') {
                    var fieldTag = prop.substring(3);
                    var field = new _models_ParameterPassedField_model__WEBPACK_IMPORTED_MODULE_5__["ParameterPassedField"](fieldTag, params[prop]);
                    fields.push(field);
                }
            }
        }
        this.parameterPassedFields = fields;
    };
    SchedulerPreferenceService.prototype.setValuesBasedOnParametersPassed = function (preference, formGroup) {
        if (this.parameterPassedFields && this.parameterPassedFields.length > 0)
            for (var i = 0, x = preference.schedulerPreferenceFieldDefnList.length; i < x; i++)
                for (var j = 0, y = this.parameterPassedFields.length; j < y; j++)
                    if (preference.schedulerPreferenceFieldDefnList[i].tagName === this.parameterPassedFields[j].tagName) {
                        preference.schedulerPreferenceFieldDefnList[i].value = this.parameterPassedFields[j].value;
                        for (var prop in formGroup.controls)
                            if (preference.schedulerPreferenceFieldDefnList[i].schedulerPreferenceFieldDefnId === Number(prop) && formGroup.controls[prop] !== undefined)
                                formGroup.controls[prop].setValue(this.parameterPassedFields[j].value);
                    }
    };
    SchedulerPreferenceService.prototype.checkIfFieldInParametersPassed = function (field) {
        var fieldInParametersPassed = false;
        if (this.parameterPassedFields && this.parameterPassedFields.length > 0) {
            for (var i = 0, x = this.parameterPassedFields.length; i < x; i++)
                if (this.parameterPassedFields[i].tagName === field.tagName) {
                    fieldInParametersPassed = true;
                    break;
                }
        }
        return fieldInParametersPassed;
    };
    SchedulerPreferenceService.ctorParameters = function () { return [
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] }
    ]; };
    SchedulerPreferenceService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]])
    ], SchedulerPreferenceService);
    return SchedulerPreferenceService;
}());



/***/ }),

/***/ "./src/app/scheduler/client-info/client-info.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/scheduler/client-info/client-info.component.ts ***!
  \****************************************************************/
/*! exports provided: ClientInfoComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientInfoComponent", function() { return ClientInfoComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _time_time_objects_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../time/time-objects.model */ "./src/app/scheduler/time/time-objects.model.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _client_info_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./client-info.service */ "./src/app/scheduler/client-info/client-info.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../client-account/client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _time_time_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _modals_manage_credit_card_manage_credit_card_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../modals/manage-credit-card/manage-credit-card.component */ "./src/app/modals/manage-credit-card/manage-credit-card.component.ts");
/* harmony import */ var _client_account_client_profile_client_profile_container_client_profile_container_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../client-account/client-profile/client-profile-container/client-profile-container.component */ "./src/app/client-account/client-profile/client-profile-container/client-profile-container.component.ts");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _google_analytics_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../google-analytics.service */ "./src/app/google-analytics.service.ts");
/* harmony import */ var _modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../modals/error-modal/error-modal.component */ "./src/app/modals/error-modal/error-modal.component.ts");
/* harmony import */ var _models_WaitList_model__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../models/WaitList.model */ "./src/models/WaitList.model.ts");
/* harmony import */ var _models_Appointment_model__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../models/Appointment.model */ "./src/models/Appointment.model.ts");
/* harmony import */ var _models_Reason_model__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../../models/Reason.model */ "./src/models/Reason.model.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _models_Location_model__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../models/Location.model */ "./src/models/Location.model.ts");
/* harmony import */ var _scheduler_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../scheduler.service */ "./src/app/scheduler/scheduler.service.ts");
/* harmony import */ var _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../../models/SchedulerPanel.model */ "./src/models/SchedulerPanel.model.ts");
























var ClientInfoComponent = /** @class */ (function () {
    function ClientInfoComponent(businessService, clientInfoService, tagsService, responsiveService, datePipe, clientAccountService, cdRef, timeService, dialog, googleAnalyticsService, schedulerPreferenceService, schedulerService) {
        this.businessService = businessService;
        this.clientInfoService = clientInfoService;
        this.tagsService = tagsService;
        this.responsiveService = responsiveService;
        this.datePipe = datePipe;
        this.clientAccountService = clientAccountService;
        this.cdRef = cdRef;
        this.timeService = timeService;
        this.dialog = dialog;
        this.googleAnalyticsService = googleAnalyticsService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.schedulerService = schedulerService;
        this.onMovePanels = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.clearTimePanelForm = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.waitLists = [];
        this.showBackButton = true;
        this.savingAppointment = false;
        this.errorSavingAppointment = false;
        this.bookingMultipleAppts = false;
        this.bookingWaitListSingle = true;
        this.formLoaded = false;
        this.infoPnlBookingSummary = null;
        this.errorSavingAppointmentMsg = '';
        this.requiredFieldsEmptyMsg = '';
        this.invalidAddressMsg = 'The address entered does not appear to be valid, please update the address and try again.';
        this.invalidAddressMsgExtra = '';
        this.clientNotAllowedToBook = false; // because of client status blacklisted or on hold
        this.disableSave = false;
        this.requiredFieldsEmpty = false;
        this.invalidAddress = false;
    }
    ClientInfoComponent.prototype.onFormLoaded = function (formLoaded) {
        this.formLoaded = true;
        this.cdRef.detectChanges();
    };
    ClientInfoComponent.prototype.uploadingFile = function (event) {
        this.disableSave = event;
        this.cdRef.detectChanges();
    };
    ClientInfoComponent.prototype.handleErrorSavingAppointment = function (error, bookingObject) {
        if (error.error && error.error.message && error.error.message.indexOf('You are already in this Class Session') !== -1) {
            this.errorSavingAppointmentMsg = this.tagsService.convertApptPropertiesToTags('errorSavingClassApptAlreadyEnrolled', this.preference, bookingObject);
        }
        else if (error.error && error.error.message && error.error.message === 'errorClassMaxCapacity') {
            this.errorSavingAppointmentMsg = this.tagsService.convertApptPropertiesToTags('errorSavingAppointmentClassMaxCapacity', this.preference, bookingObject);
        }
        else if (error.error && error.error.message && error.error.message === 'CARD_NOT_ADDED') {
            this.errorSavingAppointmentMsg = this.tagsService.convertApptPropertiesToTags('errorSavingAppointmentAddCard', this.preference, bookingObject);
        }
        else if ((error && error.status === 504) || (error && error.error && error.error.status === 504)) {
            this.errorSavingAppointmentMsg = this.tagsService.convertApptPropertiesToTags('errorSavingAppointmentTimeOut', this.preference, bookingObject);
        }
        else {
            this.errorSavingAppointmentMsg = this.tagsService.convertApptPropertiesToTags('errorSavingAppointment', this.preference, bookingObject);
        }
        this.savingAppointment = false;
        this.errorSavingAppointment = true;
    };
    ClientInfoComponent.prototype.assignValuesToFields = function (form, bookingObject, client) {
        // In case saving fails on first time, reset fields objects to empty arrays to refill in when reattempting save
        bookingObject.fields = [];
        client.fields = [];
        var schedulerPrefIdsFilledIn = [];
        for (var prop in form.value) {
            if (form.value[prop] !== null) {
                schedulerPrefIdsFilledIn.push(Number(prop));
            }
        }
        //Fix for TT-6372 -- if client is logged in, copy the client id from selected client and then map all field values from selected client to preference fields
        if (this.clientAccountService.loggedInClient !== undefined && this.clientAccountService.loggedInClient !== null &&
            this.clientAccountService.selectedClient !== undefined && this.clientAccountService.selectedClient !== null) {
            client.clientId = this.clientAccountService.selectedClient.clientId;
            client.createdDate = this.clientAccountService.selectedClient.createdDate;
            client.clientAccountId = this.clientAccountService.selectedClient.clientAccountId; //Setting to solve issue reported in comment for TT-6435
            client.viewClientAccountIds = this.clientAccountService.selectedClient.viewClientAccountIds;
            client.excludeEmailCategoryIdList = this.clientAccountService.selectedClient.excludeEmailCategoryIdList;
            client.excludeEmailTemplateIdList = this.clientAccountService.selectedClient.excludeEmailTemplateIdList;
            client.status = this.clientAccountService.selectedClient.status; // 04/28/2020 TT-6526 - fix for when client is logged in and trying to book
            if (this.clientAccountService.selectedClient.fields !== undefined && this.clientAccountService.selectedClient.fields !== null) {
                for (var i = 0, x = this.preference.schedulerPreferenceFieldDefnList.length; i < x; i++) {
                    for (var j = 0, y = this.clientAccountService.selectedClient.fields.length; j < y; j++) {
                        if (this.preference.schedulerPreferenceFieldDefnList[i].schedulerPreferenceFieldDefnId === this.clientAccountService.selectedClient.fields[j].schedulerPreferenceFieldDefnId) {
                            this.preference.schedulerPreferenceFieldDefnList[i].value = this.clientAccountService.selectedClient.fields[j].value;
                        }
                    }
                }
            }
        }
        for (var i = 0, x = this.preference.schedulerPreferenceFieldDefnList.length; i < x; i++) {
            if (schedulerPrefIdsFilledIn.indexOf(this.preference.schedulerPreferenceFieldDefnList[i].schedulerPreferenceFieldDefnId) !== -1) {
                var idString = this.preference.schedulerPreferenceFieldDefnList[i].schedulerPreferenceFieldDefnId.toString();
                for (var j = 0, y = this.inputValues.length; j < y; j++) {
                    if (this.inputValues[j].panel === 'clientInfo') {
                        for (var k = 0, z = this.inputValues[j].values.length; k < z; k++) {
                            if (this.inputValues[j].values[k].field === idString) {
                                this.preference.schedulerPreferenceFieldDefnList[i].value = this.inputValues[j].values[k].value;
                            }
                        }
                    }
                }
            }
            else if (this.preference.schedulerPreferenceFieldDefnList[i].mode === 'APPT' && !this.schedulerPreferenceService.checkIfFieldInParametersPassed(this.preference.schedulerPreferenceFieldDefnList[i])) // LHB 09/18/2020 TT-7008; LHB 09/22/2020 TT-7027 added if check so doesn't null out client info fields for save
                this.preference.schedulerPreferenceFieldDefnList[i].value = null;
            else if (this.preference.schedulerPreferenceFieldDefnList[i].mode === 'CLIENT' && !this.clientAccountService.loggedInClient && !this.clientAccountService.selectedClient && !this.schedulerPreferenceService.checkIfFieldInParametersPassed(this.preference.schedulerPreferenceFieldDefnList[i])) // LHB 3/5/2021 TT-7508 -- clear out client info fields if they selected some other value
                this.preference.schedulerPreferenceFieldDefnList[i].value = null;
            switch (this.preference.schedulerPreferenceFieldDefnList[i].mode) {
                case 'CLIENT':
                    client.fields.push(this.preference.schedulerPreferenceFieldDefnList[i]);
                    if (this.preference.schedulerPreferenceFieldDefnList[i].code === 'emailAddress' && this.preference.schedulerPreferenceFieldDefnList[i].value !== null)
                        client.emailAddress = this.preference.schedulerPreferenceFieldDefnList[i].value;
                    break;
                case 'APPT':
                    bookingObject.fields.push(this.preference.schedulerPreferenceFieldDefnList[i]);
                    break;
                case 'APPT_TXT_REMINDER':
                    if (this.preference.schedulerPreferenceFieldDefnList[i].code === 'sendTextReminder') {
                        if (this.preference.schedulerPreferenceFieldDefnList[i].value !== null
                            && this.preference.schedulerPreferenceFieldDefnList[i].value.toString() === 'true') {
                            //Fix for TT-6377
                            if (this.waitLists !== undefined && this.waitLists !== null && this.waitLists.length > 0) {
                                client.allowWaitListText = true;
                            }
                            for (var j = 0, y = this.preference.schedulerPreferenceFieldDefnList.length; j < y; j++) {
                                if (this.preference.schedulerPreferenceFieldDefnList[j].code === 'sendTextReminderHrs') {
                                    switch (this.preference.schedulerPreferenceFieldDefnList[j].value) {
                                        case this.preference.labelMap.infoPnlSendTextD2Hr:
                                            bookingObject.remindClientSmsHrs = 2;
                                            break;
                                        case this.preference.labelMap.infoPnlSendTextD4Hr:
                                            bookingObject.remindClientSmsHrs = 4;
                                            break;
                                        case this.preference.labelMap.infoPnlSendTextD12Hr:
                                            bookingObject.remindClientSmsHrs = 12;
                                            break;
                                        case this.preference.labelMap.infoPnlSendTextD24Hr:
                                            bookingObject.remindClientSmsHrs = 24;
                                            break;
                                        default:
                                            if (this.preference.clientReminderSMSHoursList && this.preference.clientReminderSMSHoursList.length > 0) // TT-6496 2/5/2021
                                                bookingObject.remindClientSmsHrs = this.preference.clientReminderSMSHoursList[0];
                                            else
                                                bookingObject.remindClientSmsHrs = 1;
                                    }
                                }
                            }
                        }
                        else if (this.preference.schedulerPreferenceFieldDefnList[i].value === null
                            || this.preference.schedulerPreferenceFieldDefnList[i].value.toString() === 'false') {
                            bookingObject.remindClientSmsHrs = 0;
                        }
                    }
                    break;
                case 'APPT_ADDITIONAL_GUESTS':
                    bookingObject.seats = 1 + Number(this.preference.schedulerPreferenceFieldDefnList[i].value);
                    break;
            }
        }
        return { bookingObject: bookingObject, client: client };
    };
    ClientInfoComponent.prototype.createClientObject = function () {
        //FIRST GET FIELD VALUES TO CREATE CLIENT
        var createdDateDate = new Date().getTime();
        var createdDateString = this.datePipe.transform(createdDateDate, 'yyyy-MM-dd', 'UTC');
        var timeZoneCode = new _time_time_objects_model__WEBPACK_IMPORTED_MODULE_3__["TimeZoneCode"](this.CSFilterObj.clientTimeZone, this.CSFilterObj.clientTimeZoneId);
        if (this.preference.allowTZChange !== 1) {
            timeZoneCode = new _time_time_objects_model__WEBPACK_IMPORTED_MODULE_3__["TimeZoneCode"](this.CSFilterObj.businessTimeZone, this.CSFilterObj.businessTimeZoneId);
        }
        var client = new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["Client"](null, null, null, [], sessionStorage.getItem('locale'), null, 'WebClient', createdDateDate, timeZoneCode, false);
        return client;
    };
    ClientInfoComponent.prototype.addDisplayTimesToWaitLists = function (saveWaitListTime, passedWaitListTime) {
        for (var i = 0, x = saveWaitListTime.length; i < x; i++) {
            for (var j = 0, y = passedWaitListTime.length; j < y; j++) {
                if (saveWaitListTime[i].startTime === passedWaitListTime[j].startTime)
                    saveWaitListTime[i].clientStartTimeForDisplay = passedWaitListTime[j].clientStartTimeForDisplay;
                if (saveWaitListTime[i].endTime === passedWaitListTime[j].endTime)
                    saveWaitListTime[i].clientEndTimeForDisplay = passedWaitListTime[j].clientEndTimeForDisplay;
            }
        }
    };
    ClientInfoComponent.prototype.reserveWaitList = function (direction, waitLists, updatedClient, appt, multipleAppts) {
        var _this = this;
        for (var i = 0, x = waitLists.length; i < x; i++) {
            waitLists[i].client = updatedClient;
            if (waitLists[i].fields === undefined || waitLists[i].fields === null || waitLists[i].fields.length == 0) {
                if (appt)
                    waitLists[i].fields = appt.fields;
                else if (multipleAppts)
                    waitLists[i].fields = multipleAppts.recurringAppointment.fields;
            }
            if (waitLists[i].staff && waitLists[i].staff.professionalId === null)
                waitLists[i].staff = null;
            waitLists[i].waitListTZ = this.CSFilterObj.clientTimeZone;
            if (waitLists[i].reason && waitLists[i].reason.selectedDuration) {
                // @ts-ignore
                waitLists[i].duration = waitLists[i].reason.selectedDuration.duration;
            }
            else {
                // @ts-ignore
                waitLists[i].duration = waitLists[i].reason.visitMinutes;
            }
        }
        this.businessService.createWaitList(waitLists)
            .subscribe(function (savedWaitlist) {
            _this.waitLists = savedWaitlist;
            //For TT-6286 related work; when saving waitLists, need to reconcile the display tie with the passed time if the timezone is allowed to be set to the clients timezone
            for (var i = 0, x = _this.waitLists.length; i < x; i++) {
                for (var j = 0, y = waitLists.length; j < y; j++) {
                    for (var k = 0, z = _this.waitLists[i].waitListDateList.length; k < z; k++) {
                        for (var l = 0, a = waitLists[j].waitListDateList.length; l < a; l++) {
                            if (_this.waitLists[i].waitListDateList[k].date === waitLists[j].waitListDateList[l].date) {
                                _this.addDisplayTimesToWaitLists(_this.waitLists[i].waitListDateList[k].waitListDateTimeList, waitLists[j].waitListDateList[l].waitListDateTimeList);
                            }
                        }
                    }
                }
            }
            _this.errorSavingAppointment = false;
            _this.onMovePanels.emit({ direction: direction, panel: _this.panel, appt: appt, multipleAppts: multipleAppts, waitLists: _this.waitLists });
        }, function (error) {
            //FAILED TO SAVE APPT
            _this.errorSavingAppointmentMsg = _this.tagsService.convertApptPropertiesToTags('errorSavingAppointment', _this.preference, _this.appt);
            _this.savingAppointment = false;
            _this.errorSavingAppointment = true;
        });
    };
    ClientInfoComponent.prototype.formatWaitlistForReserve = function (form, direction, waitLists) {
        var _this = this;
        var client = this.createClientObject();
        //Since all the waitlists created will have same fields and client, can just send first waitlist object to get values and then copy that to all others
        var updatedObjectsFromFieldValues = this.assignValuesToFields(form, waitLists[0], client);
        client = updatedObjectsFromFieldValues.client;
        for (var i = 0, x = waitLists.length; i < x; i++) {
            waitLists[i].fields = updatedObjectsFromFieldValues.bookingObject.fields;
        }
        //booking single reservation on waitlist
        this.businessService.createUpdateClient(client)
            .subscribe(function (updatedClient) {
            _this.reserveWaitList(direction, waitLists, updatedClient);
        }, function (error) {
            //FAILED TO SAVE CLIENT
            _this.savingAppointment = false;
            _this.errorSavingAppointment = true;
        });
    };
    ClientInfoComponent.prototype.createRepeatingAppt = function (updatedClient, direction, bookingObject) {
        var _this = this;
        if (bookingObject.reason.reasonType === 'CLASS') {
            bookingObject.classScheduleList = bookingObject.timeSlotList;
            bookingObject.timeSlotList = null;
        }
        this.businessService.createRepeatingAppt(bookingObject)
            .subscribe(function (multipleAppts) {
            //Check to make sure at least 1 of the appointments have saved
            var savedApptCount = 0;
            for (var i = 0, x = multipleAppts.appointments.length; i < x; i++) {
                if (multipleAppts.appointments[i].thankYouString !== _this.businessService.doubleBookedTimeErrorMsg) {
                    savedApptCount++;
                    break;
                }
            }
            var appointmentLabel = multipleAppts.recurringAppointment.client.fullName + " booked " + multipleAppts.appointments.length + " appointments for " + multipleAppts.recurringAppointment.reason.reasonDesc + " with " + _this.googleAnalyticsService.getStaffNameForGoogleAnalyticsPost(multipleAppts.recurringAppointment.staff, _this.preference) + " at " + _this.googleAnalyticsService.getLocationNameForGoogleAnalyticsPost(multipleAppts.recurringAppointment.location);
            if (savedApptCount > 0) {
                if (_this.waitLists.length > 0) {
                    _this.reserveWaitList(direction, _this.waitLists, updatedClient, undefined, multipleAppts);
                    _this.googleAnalyticsService.eventEmitter(appointmentLabel, "appointment", "booked_multiple_appointments", appointmentLabel, 1);
                }
                else {
                    _this.errorSavingAppointment = false;
                    _this.onMovePanels.emit({
                        direction: direction,
                        panel: _this.panel,
                        appt: null,
                        multipleAppts: multipleAppts
                    });
                    _this.googleAnalyticsService.eventEmitter(appointmentLabel, "appointment", "booked_multiple_appointments", appointmentLabel, 1);
                }
            }
            else {
                _this.errorSavingAppointment = true;
                _this.errorSavingAppointmentMsg = _this.tagsService.convertApptPropertiesToTags('errorSavingAllAppointmentsDblBooked', _this.preference, bookingObject);
                _this.savingAppointment = false;
            }
        }, function (error) {
            //FAILED TO SAVE REPEATING APPT
            _this.handleErrorSavingAppointment(error, bookingObject);
        });
    };
    ClientInfoComponent.prototype.removeApptTimeFromTimeInputValue = function (appt) {
        if (appt.thankYouString === this.businessService.doubleBookedTimeErrorMsg)
            for (var i = 0; i < this.inputValues.length; i++) {
                if (this.inputValues[i].panel === 'time') {
                    for (var j = 0, y = this.inputValues[i].values.length; j < y; j++) {
                        if (this.inputValues[i].values[j].value.startDateTimeUTC === appt.startDateTimeUTC) {
                            this.inputValues[i].values.splice(j, 1);
                            break;
                        }
                    }
                    if (this.inputValues[i].values.length === 0)
                        this.clearTimePanelForm.emit();
                }
            }
    };
    ClientInfoComponent.prototype.createOneTimeAppt = function (updatedClient, direction, bookingObject) {
        var _this = this;
        this.businessService.createAppt(bookingObject)
            .subscribe(function (updatedAppt) {
            _this.appt = updatedAppt;
            for (var prop in bookingObject) {
                if (!_this.appt.hasOwnProperty(prop)) {
                    _this.appt[prop] = bookingObject[prop];
                }
            }
            var appointmentLabel = _this.appt.client.fullName + " booked " + _this.appt.reason.reasonDesc + " with " + _this.googleAnalyticsService.getStaffNameForGoogleAnalyticsPost(_this.appt.staff, _this.preference) + " at " + _this.appt.location.locationName + " for " + _this.appt.appointmentDateTimeClient;
            if (_this.appt.thankYouString === _this.businessService.doubleBookedTimeErrorMsg) {
                _this.savingAppointment = false;
                _this.errorSavingAppointment = true;
                _this.errorSavingAppointmentMsg = _this.tagsService.convertApptPropertiesToTags('errorSavingAppointmentDblBooked', _this.preference, _this.appt);
                _this.removeApptTimeFromTimeInputValue(_this.appt);
            }
            else if (_this.waitLists.length > 0) {
                _this.reserveWaitList(direction, _this.waitLists, updatedClient, _this.appt);
                _this.googleAnalyticsService.eventEmitter(appointmentLabel, "appointment", "booked_appointment", appointmentLabel, 1);
            }
            else {
                _this.errorSavingAppointment = false;
                _this.onMovePanels.emit({ direction: direction, panel: _this.panel, appt: _this.appt });
                _this.googleAnalyticsService.eventEmitter(appointmentLabel, "appointment", "booked_appointment", appointmentLabel, 1);
            }
        }, function (error) {
            //FAILED TO SAVE APPT
            _this.handleErrorSavingAppointment(error, bookingObject);
        });
    };
    ClientInfoComponent.prototype.handleApptSave = function (updatedClient, direction, bookingObject) {
        if (bookingObject.location && bookingObject.location.wasUndefined) // LHB 1/7/2021 TT-7258
            bookingObject.location = null;
        if (this.recurringAppointment !== undefined && this.recurringAppointment !== null) {
            this.createRepeatingAppt(updatedClient, direction, bookingObject);
        }
        else {
            this.createOneTimeAppt(updatedClient, direction, bookingObject);
        }
    };
    ClientInfoComponent.prototype.showAddCardModal = function (updatedClient, direction, bookingObject) {
        var _this = this;
        var dataToPass = { client: updatedClient, preference: this.preference, path: 'addCardConfirmBooking' };
        var dialogRef = this.dialog.open(_modals_manage_credit_card_manage_credit_card_component__WEBPACK_IMPORTED_MODULE_12__["ManageCreditCardComponent"], {
            maxWidth: this.responsiveService.getMaxWidthForModals('90vw'),
            minWidth: this.responsiveService.getMaxWidthForModals('90vw'),
            data: dataToPass
        });
        dialogRef.afterClosed().subscribe(function (updatedData) {
            var updatedCardsList = sessionStorage.getItem('updatedCardsList');
            if (updatedCardsList !== undefined && updatedCardsList !== null) {
                sessionStorage.removeItem('updatedCardsList');
                var updatedCards = JSON.parse(updatedCardsList);
                // this.selectedClient = this.clientAccountService.storeCardInfoOnClient(this.selectedClient, updatedCards);
                _this.handleApptSave(updatedClient, direction, bookingObject);
            }
            else {
                var init = { error: 'CARD_NOT_ADDED' };
                var error = new _angular_common_http__WEBPACK_IMPORTED_MODULE_10__["HttpErrorResponse"](init);
                _this.handleErrorSavingAppointment(error, bookingObject);
            }
        });
    };
    ClientInfoComponent.prototype.getActiveApptCountForClient = function (updatedClient, direction, bookingObject) {
        var _this = this;
        this.businessService.getActiveApptCount(updatedClient.businessId, [updatedClient])
            .subscribe(function (clientApptCountMap) {
            for (var j = 0, y = clientApptCountMap.length; j < y; j++) {
                for (var prop in clientApptCountMap[j]) {
                    if (Number(prop) === updatedClient.clientId) {
                        updatedClient.activeApptCount = clientApptCountMap[j][prop];
                    }
                }
            }
            var allowedToBook = false;
            if (updatedClient.activeApptCount < _this.preference.maxActiveApptClient) {
                allowedToBook = true;
            }
            if (allowedToBook) {
                _this.handleApptSave(updatedClient, direction, bookingObject);
            }
            else {
                _this.clientNotAllowedToBook = true;
                _this.savingAppointment = false;
                _this.errorSavingAppointment = true;
                var dialogRef = _this.dialog.open(_modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_16__["ErrorModalComponent"], { maxWidth: _this.responsiveService.getMaxWidthForModals(), data: { preference: _this.preference, errorType: 'maxApptsReached' } });
            }
        }, function (error) {
            // console.log(error);
        });
    };
    ClientInfoComponent.prototype.createUpdateClient = function (form, direction, bookingObject) {
        var _this = this;
        this.invalidAddress = false;
        this.invalidAddressMsgExtra = '';
        var client = this.createClientObject();
        var updatedObjectsFromFieldValues = this.assignValuesToFields(form, bookingObject, client);
        client = updatedObjectsFromFieldValues.client;
        bookingObject = updatedObjectsFromFieldValues.bookingObject;
        if (bookingObject.staff !== undefined && bookingObject.staff !== null && bookingObject.staff.professionalId === null) {
            bookingObject.staff = null;
        }
        var checkCardOnFile = false;
        if ((this.businessService.defaultGateway === 'SQUARE' || this.businessService.defaultGateway === 'STRIPE' || this.businessService.defaultGateway === 'LUMAPAY') &&
            (bookingObject.reason.requirePreAuthPayment || (bookingObject.reason.requirePreAuthPayment === null && this.businessService.requirePreAuthPayment)) &&
            (bookingObject.price === null || bookingObject.price === 0)) {
            checkCardOnFile = true;
        }
        if (this.schedulerService.schedulerLinkService.schedulerLink.booleanMap != null && this.schedulerService.schedulerLinkService.schedulerLink.booleanMap.allowClientAddressValidation) {
            var fullAddress_1 = this.getFullAddress(client);
            if (fullAddress_1 !== 'incomplete') {
                if (fullAddress_1.replace(' ', '') !== '') {
                    // fullAddress is not empty, validate it
                    this.businessService.validateVariableLocationAddress(fullAddress_1)
                        .subscribe(function (addresses) {
                        if (addresses) {
                            var found = false;
                            var similarAddresses = [];
                            for (var x = 0; x < addresses.length; x++) {
                                similarAddresses.push(addresses[x]);
                                if (addresses[x].toUpperCase().includes(fullAddress_1.toUpperCase())) {
                                    found = true;
                                    similarAddresses = [];
                                    _this.callCreateUpdateClient(client, checkCardOnFile, direction, bookingObject);
                                    break;
                                }
                            }
                            if (!found) {
                                _this.savingAppointment = false;
                                _this.invalidAddress = true;
                                _this.invalidAddressMsgExtra = _this.invalidAddressMsg + '<br/>' + 'Below are some addresses that similar to the one entered.<br/><ul>';
                                for (var x = 0; x < similarAddresses.length; x++) {
                                    _this.invalidAddressMsgExtra += '<li>' + similarAddresses[x] + '</li>';
                                }
                                _this.invalidAddressMsgExtra += '</ul>';
                            }
                        }
                        else {
                            _this.savingAppointment = false;
                            _this.invalidAddress = true;
                        }
                    }, function (error) {
                    });
                }
                else {
                    this.callCreateUpdateClient(client, checkCardOnFile, direction, bookingObject);
                }
            }
            else {
                this.savingAppointment = false;
                this.invalidAddress = true;
                this.invalidAddressMsgExtra += this.invalidAddressMsg + '<br/>' + 'A complete address is required on this form.';
            }
        }
        else {
            this.callCreateUpdateClient(client, checkCardOnFile, direction, bookingObject);
        }
    };
    ClientInfoComponent.prototype.callCreateUpdateClient = function (client, checkCardOnFile, direction, bookingObject) {
        var _this = this;
        this.businessService.createUpdateClient(client, undefined, checkCardOnFile)
            .subscribe(function (updatedClient) {
            bookingObject.client = updatedClient;
            if (_this.bookingMultipleAppts) {
                bookingObject.clientId = updatedClient.clientId;
            }
            if (updatedClient.status === _this.clientAccountService.onHoldStatus) {
                //Show on hold error message
                _this.errorSavingAppointmentMsg = _this.tagsService.convertApptPropertiesToTags('clientOnHoldError', _this.preference, bookingObject);
                _this.clientNotAllowedToBook = true;
                _this.savingAppointment = false;
                _this.errorSavingAppointment = true;
            }
            else if (updatedClient.status === _this.clientAccountService.blockedStatus && _this.preference.clientBlacklistMode !== 'GOBBLE') {
                //Show black list error message
                _this.errorSavingAppointmentMsg = _this.tagsService.convertApptPropertiesToTags('clientBlacklistError', _this.preference, bookingObject);
                _this.clientNotAllowedToBook = true;
                _this.savingAppointment = false;
                _this.errorSavingAppointment = true;
            }
            else {
                if (checkCardOnFile && !updatedClient.hasCardOnFile) {
                    // show add card modal
                    updatedClient.storedCardInfo = new _client_account_client_profile_client_profile_container_client_profile_container_component__WEBPACK_IMPORTED_MODULE_13__["StoredCardInfo"]();
                    updatedClient.storedCardInfo.defaultGateway = _this.businessService.defaultGateway;
                    _this.showAddCardModal(updatedClient, direction, bookingObject);
                }
                else if (_this.preference.maxActiveApptClient !== -1) { // LHB 3/26/2021 TT-7562
                    _this.getActiveApptCountForClient(updatedClient, direction, bookingObject);
                }
                else
                    _this.handleApptSave(updatedClient, direction, bookingObject);
            }
        }, function (error) {
            //FAILED TO SAVE CLIENT
            _this.savingAppointment = false;
            _this.errorSavingAppointment = true;
        });
    };
    ClientInfoComponent.prototype.getFullAddress = function (client) {
        var fullAddress = '';
        var address1 = null;
        var address2 = '';
        var city = null;
        var state = null;
        var zip = null;
        for (var x = 0; x < client.fields.length; x++) {
            if (client.fields[x].code === 'address1' && client.fields[x].value)
                address1 = client.fields[x].value;
            if (client.fields[x].code === 'address2' && client.fields[x].value)
                address2 = client.fields[x].value;
            if (client.fields[x].code === 'city' && client.fields[x].value)
                city = client.fields[x].value;
            if (client.fields[x].code === 'state' && client.fields[x].value)
                state = client.fields[x].value;
            if (client.fields[x].code === 'zip' && client.fields[x].value)
                zip = client.fields[x].value;
        }
        if (address1 && city && state && zip)
            fullAddress = address1 + (address2 ? (' ' + address2 + ', ') : ', ') + city + ', ' + state + ' ' + zip;
        else
            fullAddress = 'incomplete';
        return fullAddress;
    };
    ClientInfoComponent.prototype.movePanels = function (direction) {
        if (direction === 'back') {
            this.onMovePanels.emit({ direction: direction, panel: this.panel });
        }
        else if (!this.clientNotAllowedToBook && !this.savingAppointment) {
            //Check to see if all required fields are filled out:
            if (!this.clientInfoService.isClientInfoFormValid(this.clientInfoForm, this.preference.schedulerPreferenceFieldDefnList)) {
                this.requiredFieldsEmpty = true;
                this.requiredFieldsEmptyMsg = this.tagsService.assignObjectToTags(this.preference, this.preference.labelMap.requiredFieldsEmptyMsg, this.tagsService.preferenceTagsArray);
                for (var prop in this.clientInfoForm.controls) {
                    this.clientInfoForm.controls[prop].markAsTouched();
                }
                var errorMessage = this.tagsService.getInvalidFormFieldErrorMsg(this.preference.schedulerPreferenceFieldDefnList, 'schedulerPreferenceFieldDefnId', this.clientInfoForm, this.preference, 'clientInfoFieldsInvalid');
                var dialogRef = this.dialog.open(_modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_16__["ErrorModalComponent"], { maxWidth: this.responsiveService.getMaxWidthForModals(),
                    data: { preference: this.preference, errorType: 'clientInfoFieldsInvalid', errorMessage: errorMessage } });
            }
            else {
                this.requiredFieldsEmpty = false;
                this.savingAppointment = true;
                var clientInfoPanelNum = this.panel.panelOrder;
                this.inputValues = this.schedulerService.arrangeInputValues(this.inputValues, this.clientInfoForm.value, clientInfoPanelNum, this.panels, this.CSFilterObj);
                for (var h = 0, w = this.inputValues.length; h < w; h++) {
                    if (this.inputValues[h].panel === 'clientInfo') {
                        for (var i = 0, x = this.preference.schedulerPreferenceFieldDefnList.length; i < x; i++) {
                            for (var j = 0, y = this.inputValues[h].values.length; j < y; j++) {
                                if (Number(this.inputValues[h].values[j].field) === this.preference.schedulerPreferenceFieldDefnList[i].schedulerPreferenceFieldDefnId) {
                                    switch (this.preference.schedulerPreferenceFieldDefnList[i].dataType) {
                                        case 'LIST_CHKBOX':
                                            if (this.preference.schedulerPreferenceFieldDefnList[i].value !== null) {
                                                this.inputValues[h].values[j].value = this.preference.schedulerPreferenceFieldDefnList[i].value;
                                            }
                                            break;
                                        case 'DATE':
                                            this.inputValues[h].values[j].value = this.datePipe.transform(this.preference.schedulerPreferenceFieldDefnList[i].value, 'yyyy-MM-dd', sessionStorage.getItem('browserTimezone'));
                                            break;
                                    }
                                }
                            }
                        }
                    }
                }
                if (this.recurringAppointment) {
                    if ((this.recurringAppointment.recurringSchedule && this.recurringAppointment.recurringSchedule.recurringScheduleId) ||
                        (this.recurringAppointment.timeSlotList && this.recurringAppointment.timeSlotList.length !== 0) ||
                        (this.recurringAppointment.classScheduleList && this.recurringAppointment.classScheduleList.length !== 0)) {
                        if (this.clientAccountService.loggedInClient !== undefined && this.preference.maxActiveApptClient !== -1) {
                            var currentActiveApptCount = this.clientAccountService.selectedClient.activeApptCount;
                            var apptsBooking = 0;
                            if (this.recurringAppointment.timeSlotList !== undefined && this.recurringAppointment.timeSlotList !== null && this.recurringAppointment.timeSlotList.length !== 0) {
                                apptsBooking = this.recurringAppointment.timeSlotList.length;
                            }
                            else if (this.recurringAppointment.classScheduleList !== undefined && this.recurringAppointment.classScheduleList !== null && this.recurringAppointment.classScheduleList.length !== 0) {
                                apptsBooking = this.recurringAppointment.classScheduleList.length;
                            }
                            if (currentActiveApptCount + apptsBooking > this.preference.maxActiveApptClient) {
                                this.savingAppointment = false;
                                var errorMsgClientTagsTranslated = this.tagsService.assignObjectToTags(this.preference, this.preference.labelMap.maxApptsReachedBookingMultipleErrorMsg, this.tagsService.clientTagsArray);
                                errorMsgClientTagsTranslated = this.tagsService.assignClientValuesToTags(errorMsgClientTagsTranslated, this.clientAccountService.selectedClient.fields, this.clientAccountService.selectedClient);
                                if (errorMsgClientTagsTranslated.indexOf('%TIME_CART_COUNT%') !== -1) {
                                    errorMsgClientTagsTranslated = errorMsgClientTagsTranslated.replace(new RegExp("%TIME_CART_COUNT%", 'g'), apptsBooking.toString());
                                }
                                if (errorMsgClientTagsTranslated.indexOf('%APPT_COUNT_TO_REMOVE%') !== -1) {
                                    var apptCountToRemove = currentActiveApptCount + apptsBooking - this.preference.maxActiveApptClient;
                                    errorMsgClientTagsTranslated = errorMsgClientTagsTranslated.replace(new RegExp("%APPT_COUNT_TO_REMOVE%", 'g'), apptCountToRemove.toString());
                                }
                                this.errorSavingAppointmentMsg = this.tagsService.assignObjectToTags(this.preference, errorMsgClientTagsTranslated, this.tagsService.preferenceTagsArray);
                                this.errorSavingAppointment = true;
                            }
                            else {
                                this.createUpdateClient(this.clientInfoForm, direction, this.recurringAppointment);
                            }
                        }
                        else {
                            this.createUpdateClient(this.clientInfoForm, direction, this.recurringAppointment);
                        }
                    }
                    else {
                        this.formatWaitlistForReserve(this.clientInfoForm, direction, this.waitLists);
                    }
                }
                else {
                    if (this.appt.waitListMode) {
                        this.formatWaitlistForReserve(this.clientInfoForm, direction, this.waitLists);
                    }
                    else {
                        if (this.clientAccountService.loggedInClient !== undefined && this.preference.maxActiveApptClient !== -1 && this.clientAccountService.selectedClient.activeApptCount >= this.preference.maxActiveApptClient) {
                            this.savingAppointment = false;
                            var errorMsgClientTagsTranslated = this.tagsService.assignClientValuesToTags(this.preference.labelMap.maxApptsReachedBookingErrorMsg, this.clientAccountService.selectedClient.fields, this.clientAccountService.selectedClient);
                            this.errorSavingAppointmentMsg = this.tagsService.assignObjectToTags(this.preference, errorMsgClientTagsTranslated, this.tagsService.preferenceTagsArray);
                            this.errorSavingAppointment = true;
                        }
                        else {
                            this.createUpdateClient(this.clientInfoForm, direction, this.appt);
                        }
                    }
                }
            }
        }
    };
    ClientInfoComponent.prototype.setAdditionalGuestsCapacity = function (selectedDateTimeObj) {
        if (selectedDateTimeObj.maxCapacity !== undefined && selectedDateTimeObj.maxCapacity !== null &&
            selectedDateTimeObj.currentCapacity !== undefined && selectedDateTimeObj.currentCapacity !== null) {
            var currentSessionAdditionalGuestCapacity = selectedDateTimeObj.maxCapacity - selectedDateTimeObj.currentCapacity - 1; //subtracting 1 for current seat that appt will take up
            if (this.additionalGuestsCapacity === undefined || this.additionalGuestsCapacity === null || currentSessionAdditionalGuestCapacity < this.additionalGuestsCapacity) {
                this.additionalGuestsCapacity = currentSessionAdditionalGuestCapacity;
            }
        }
    };
    ClientInfoComponent.prototype.addFieldsToObjects = function (object, apptTimes) {
        for (var i = 0, x = this.inputValues.length; i < x; i++) {
            switch (this.inputValues[i].panel) {
                case 'locationSuperGroups':
                    object.locationSuperGroup = this.inputValues[i].values[0].value;
                    break;
                case 'locationGroups':
                    object.locationGroup = this.inputValues[i].values[0].value;
                    break;
                case 'locations':
                    object.location = this.inputValues[i].values[0].value;
                    if (object.location.variableAddress)
                        object.address = object.location.variableAddress;
                    break;
                case 'staff':
                    object.staff = this.inputValues[i].values[0].value;
                    if (object.staff.professionalId === null)
                        object.noPrefSelected = true;
                    break;
                case 'reasonSuperGroups':
                    object.reasonSuperGroup = this.inputValues[i].values[0].value;
                    break;
                case 'reasonGroups':
                    object.reasonGroup = this.inputValues[i].values[0].value;
                    break;
                case 'reasons':
                    object.reason = this.inputValues[i].values[0].value;
                    object.price = object.reason.originalPrice || object.reason.price;
                    if (object.reason.selectedAddOns && object.reason.selectedAddOns.length > 0) {
                        object.addOnReasonIdList = [];
                        for (var k = 0, z = object.reason.selectedAddOns.length; k < z; k++)
                            if (!isNaN(object.reason.selectedAddOns[k].price) && object.reason.selectedAddOns[k].price > 0) {
                                object.price = object.price + object.reason.selectedAddOns[k].price;
                                object.addOnReasonIdList.push(object.reason.selectedAddOns[k].reasonId);
                            }
                    }
                    else
                        object.addOnReasonIdList = null;
                    if (object.reason.selectedDuration !== undefined)
                        object.reasonDesc = object.reason.selectedDuration.durationName;
                    if (object.reason.selectedRepeatingApptOption !== undefined && object.reason.selectedRepeatingApptOption !== null && object.reason.selectedRepeatingApptOption.numberOfAppointments > 1) {
                        object.adhoc = false;
                    }
                    break;
                case 'time':
                    if (apptTimes.length > 1) {
                        //create time slot array
                        object.timeSlotList = [];
                        var locationIds = [];
                        var staffIds = [];
                        for (var j = 0, y = apptTimes.length; j < y; j++) {
                            this.setAdditionalGuestsCapacity(apptTimes[j]);
                            object.timeSlotList.push(apptTimes[j]);
                            if (this.earliestApptDate === undefined || apptTimes[j].clientStartTimeDate < this.earliestApptDate) // LHB 08/08/2020 TT-4897
                                this.earliestApptDate = apptTimes[j].clientStartTimeDate;
                            if ((object.location === undefined || object.location === null) && apptTimes[j].locationId !== null && apptTimes[j].locationId !== undefined) {
                                locationIds.push(apptTimes[j].locationId);
                            }
                            if ((object.staff === undefined || object.staff === null) && apptTimes[j].professionalId !== null && apptTimes[j].professionalId !== undefined) {
                                staffIds.push(apptTimes[j].professionalId);
                            }
                            if (locationIds.length === 1)
                                object.location = { 'locationId': locationIds[0] };
                            if (staffIds.length === 1)
                                object.staff = { 'professionalId': staffIds[0] };
                        }
                    }
                    else if (apptTimes.length === 1) {
                        this.setAdditionalGuestsCapacity(apptTimes[0]);
                        if ((object.location === undefined || object.location === null) && apptTimes[0].locationId !== null && apptTimes[0].locationId !== undefined)
                            object.location = { 'locationId': apptTimes[0].locationId };
                        if (object.staff === undefined || object.staff === null && apptTimes[0].professionalId !== null && apptTimes[0].professionalId !== undefined) {
                            object.staff = { 'professionalId': apptTimes[0].professionalId };
                        }
                        this.earliestApptDate = apptTimes[0].clientStartTimeDate;
                        for (var prop in apptTimes[0]) {
                            switch (prop) {
                                case 'clientEndDate':
                                case 'clientStartDate':
                                    object[prop] = this.datePipe.transform(apptTimes[0][prop], 'yyyy-MM-dd', '');
                                    break;
                                case 'recurringScheduleId':
                                    object['recurringSchedule'] = { 'recurringScheduleId': apptTimes[0][prop] };
                                default:
                                    object[prop] = apptTimes[0][prop];
                            }
                        }
                    } //otherwise they are just booking waitlist times
                    break;
            }
        }
        // LHB 10/13/2020 TT-7072
        if (!object.location) {
            object.location = new _models_Location_model__WEBPACK_IMPORTED_MODULE_21__["Location"]();
            object.location.locationName = null;
            object.location.wasUndefined = true; // LHB 10/21/2020 TT-7092
        }
        if (!object.location.timezone &&
            (!object.locationGroup || !object.locationGroup.timezone) &&
            (!object.staff || !object.staff.timezone))
            object.location.timezone = this.CSFilterObj.businessTimeZone; // LHB 10/12/2020 TT-7072
        else if (object.location.wasUndefined)
            object.location = undefined; // LHB 10/21/2020 TT-7092
        if (this.preference.maxAdditionalGuests > 0 && (object.reason.reasonType === 'SERVICE' || object.hideGuestOption || this.additionalGuestsCapacity === 0)) {
            // GO THROUGH AND SET SHOWONSCHEDULER PROPERTY ADDITIONAL GUESTS ON FIELD DEFN LIST TO FALSE
            for (var i = 0, x = this.preference.schedulerPreferenceFieldDefnList.length; i < x; i++) {
                if (this.preference.schedulerPreferenceFieldDefnList[i].code === 'additionalGuests') {
                    this.preference.schedulerPreferenceFieldDefnList[i].showOnScheduler = false;
                }
            }
        }
        else { //Go through and update field list value for the field to only have as many options as there are seats left available in the class
            if (this.additionalGuestsCapacity > this.preference.maxAdditionalGuests) {
                this.additionalGuestsCapacity = this.preference.maxAdditionalGuests;
            }
            for (var i = 0, x = this.preference.schedulerPreferenceFieldDefnList.length; i < x; i++) {
                if (this.preference.schedulerPreferenceFieldDefnList[i].code === 'additionalGuests') {
                    this.preference.schedulerPreferenceFieldDefnList[i].fieldValues = this.clientInfoService.createAdditionalGuestsFieldValues(this.additionalGuestsCapacity);
                    this.preference.schedulerPreferenceFieldDefnList[i].dropdownValues = this.preference.schedulerPreferenceFieldDefnList[i].fieldValues.split(/\n/);
                    this.preference.schedulerPreferenceFieldDefnList[i].showOnScheduler = true;
                }
            }
        }
        return object;
    };
    ClientInfoComponent.prototype.setUpRepeatingAppt = function (apptTimes, waitListTimes) {
        this.recurringAppointment = new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["RecurringAppointment"](null, this.preference.businessId, null, null, null, null, true, [], null, null);
        this.recurringAppointment = this.addFieldsToObjects(this.recurringAppointment, apptTimes);
        this.selectedReason = this.recurringAppointment.reason;
        var startDate = null;
        var endDate = null;
        if (this.CSFilterObj.coupon !== undefined && this.CSFilterObj.coupon !== null) {
            this.recurringAppointment.coupon = this.CSFilterObj.coupon;
        }
        if (this.recurringAppointment.timeSlotList !== undefined) { // For course sets, recurringAppointments won't have a timeSlotList so need to prevent this loop
            for (var i = 0, x = this.recurringAppointment.timeSlotList.length; i < x; i++) {
                if (startDate === null) {
                    startDate = this.recurringAppointment.timeSlotList[i].clientStartDate;
                }
                else if (startDate > this.recurringAppointment.timeSlotList[i].clientStartDate) {
                    startDate = this.recurringAppointment.timeSlotList[i].clientStartDate;
                }
                if (endDate === null) {
                    endDate = this.recurringAppointment.timeSlotList[i].clientEndDate;
                }
                else if (endDate < this.recurringAppointment.timeSlotList[i].clientEndDate) {
                    endDate = this.recurringAppointment.timeSlotList[i].clientEndDate;
                }
            }
        }
        this.recurringAppointment.startDate = this.datePipe.transform(startDate, 'yyyy-MM-dd', 'UTC');
        this.recurringAppointment.endDate = this.datePipe.transform(endDate, 'yyyy-MM-dd', 'UTC');
        if (waitListTimes.length > 0) {
            this.setUpWaitList(waitListTimes, this.recurringAppointment);
        }
        if (this.appt && this.appt.location && this.appt.location.wasUndefined) // LHB 10/21/2020 TT-7092
            this.appt.location = undefined;
    };
    ClientInfoComponent.prototype.setUpWaitList = function (waitListTimes, bookingObject) {
        this.selectedReason = bookingObject.reason;
        if (bookingObject !== undefined) {
            var waitList = new _models_WaitList_model__WEBPACK_IMPORTED_MODULE_17__["WaitList"]();
            waitList.businessId = this.preference.businessId;
            waitList.status = 'OPEN';
            waitList.staff = bookingObject.staff;
            waitList.location = bookingObject.location;
            if (waitList.location.variableAddress) // LHB 04/04/2022 TT-8566
                waitList.address = waitList.location.variableAddress;
            waitList.reason = bookingObject.reason;
            waitList.fields = [];
            waitList.waitListDateList = [];
            waitList.waitListMode = true;
            var waitListDates = [];
            for (var i = 0, x = waitListTimes.length; i < x; i++) {
                var year = Number(this.timeService.getPipeYearFromDate(waitListTimes[i].clientStartTimeDate));
                var month = Number(this.timeService.getPipeMonthFromDate(waitListTimes[i].clientStartTimeDate)) - 1;
                var day = Number(this.timeService.getPipeDayFromDate(waitListTimes[i].clientStartTimeDate));
                var waitListDateTime = new _models_WaitList_model__WEBPACK_IMPORTED_MODULE_17__["WaitListDateTime"](waitListTimes[i].clientStartTime, waitListTimes[i].clientEndTime);
                if (bookingObject.reason.reasonType === 'CLASS' && !waitListTimes[i].isWaitListFirstAvail)
                    waitListDateTime.classScheduleId = waitListTimes[i].classScheduleId;
                waitListDateTime.clientStartTimeForDisplay = waitListTimes[i].clientStartTimeForDisplay;
                waitListDateTime.clientEndTimeForDisplay = waitListTimes[i].clientEndTimeForDisplay;
                if (waitListTimes[i].startDateTimeUTC) {
                    waitListDateTime.startDateTimeUTC = waitListTimes[i].startDateTimeUTC;
                    if (waitListDateTime.startDateTimeUTC instanceof Date)
                        waitListDateTime.startDateTimeUTC = waitListDateTime.startDateTimeUTC.getTime();
                }
                if (waitListTimes[i].endDateTimeUTC) {
                    waitListDateTime.endDateTimeUTC = waitListTimes[i].endDateTimeUTC;
                    if (waitListDateTime.endDateTimeUTC instanceof Date)
                        waitListDateTime.endDateTimeUTC = waitListDateTime.endDateTimeUTC.getTime();
                }
                if (!waitListTimes[i].isWaitListFirstAvail) {
                    var dateToAdd = new Date(year, month, day).getTime();
                    var dateFound = false;
                    for (var j = 0, y = waitList.waitListDateList.length; j < y; j++) {
                        if (waitList.waitListDateList[j].date === dateToAdd) {
                            waitList.waitListDateList[j].waitListDateTimeList.push(waitListDateTime);
                            dateFound = true;
                            break;
                        }
                    }
                    if (!dateFound) {
                        waitListDates.push(dateToAdd);
                        var waitListDate = new _models_WaitList_model__WEBPACK_IMPORTED_MODULE_17__["WaitListDate"](dateToAdd);
                        if (bookingObject.reason && bookingObject.reason.reasonType === _models_Reason_model__WEBPACK_IMPORTED_MODULE_19__["ReasonTypes"].COURSE)
                            waitListDate.recurringScheduleId = waitListTimes[i].recurringScheduleId;
                        waitListDate.waitListDateTimeList.push(waitListDateTime);
                        waitList.waitListDateList.push(waitListDate);
                    }
                }
                else { //Add in waitlist first available slot
                    var waitListDate = new _models_WaitList_model__WEBPACK_IMPORTED_MODULE_17__["WaitListDate"](null);
                    if (bookingObject.reason && bookingObject.reason.reasonType === _models_Reason_model__WEBPACK_IMPORTED_MODULE_19__["ReasonTypes"].COURSE)
                        waitListDate.recurringScheduleId = waitListTimes[i].recurringScheduleId;
                    waitListDate.waitListDateTimeList = [waitListDateTime];
                    waitList.waitListDateList.push(waitListDate);
                }
            }
            this.waitLists.push(waitList);
        }
        if (this.waitLists && this.waitLists.length > 0) { // LHB TT-3921 12/3/2021
            for (var i = 0, x = this.waitLists.length; i < x; i++)
                if (this.waitLists[i].reason && this.waitLists[i].reason.reasonType === _models_Reason_model__WEBPACK_IMPORTED_MODULE_19__["ReasonTypes"].COURSE && this.waitLists[i].waitListDateList && this.waitLists[i].waitListDateList.length > 0)
                    for (var j = 0, y = this.waitLists[i].waitListDateList.length; j < y; j++)
                        if (!this.waitLists[i].waitListDateList[j].waitListDateTimeList || (this.waitLists[i].waitListDateList[j].waitListDateTimeList && this.waitLists[i].waitListDateList[j].waitListDateTimeList.length > 0))
                            this.waitLists[i].waitListDateList[j].waitListDateTimeList = [];
        }
        var waitlistBookingSummary = this.tagsService.convertWaitListPropertiesToTags('infoBookingSummaryWaitList', this.preference, this.waitLists, this.waitLists[0]);
        if (this.infoPnlBookingSummary === null) {
            this.infoPnlBookingSummary = waitlistBookingSummary;
        }
        else {
            this.infoPnlBookingSummary = this.infoPnlBookingSummary + '<br><br>' + waitlistBookingSummary;
        }
        for (var i = 0, x = this.waitLists.length; i < x; i++)
            if (this.waitLists[i].location !== undefined && this.waitLists[i].location !== null && this.waitLists[i].location.wasUndefined) // LHB 10/21/2020 TT-7092
                this.waitLists[i].location = undefined;
    };
    ClientInfoComponent.prototype.setUpSingleAppt = function (apptTimes, waitListTimes) {
        this.appt = new _models_Appointment_model__WEBPACK_IMPORTED_MODULE_18__["Appointment"]();
        this.appt.businessId = this.preference.businessId;
        this.appt = this.addFieldsToObjects(this.appt, apptTimes);
        this.selectedReason = this.appt.reason;
        //ULTIMATELY THESE VALUES WILL GET SET ON THE BACKEND;
        this.appt.startDate = this.appt.clientStartDate;
        this.appt.endDate = this.appt.clientEndDate;
        this.appt.sendConfirmationToStaff = true;
        this.appt.sendConfirmationToClient = true;
        if (this.CSFilterObj.coupon !== undefined && this.CSFilterObj.coupon !== null) {
            this.appt.coupon = this.CSFilterObj.coupon;
        }
        if ((this.businessService.requireStaffConfirmation && this.appt.reason.requireStaffConfirmation === null) || this.appt.reason.requireStaffConfirmation) {
            this.appt.status = 'PENDING_CONFIRMATION';
            this.appt.subStatus = 'PENDING_CONFIRMATION';
        }
        else if (this.schedulerPreferenceService.schedulerPreference.acceptPaymentOnBooking && this.appt.price !== 0 && (this.appt.reason.requirePreAuthPayment || this.appt.reason.requirePayment)) {
            this.appt.status = 'PENDING';
            this.appt.subStatus = 'PENDING';
        }
        if (waitListTimes.length > 0 && apptTimes.length === 0)
            this.appt.waitListMode = true;
        else
            this.infoPnlBookingSummary = this.tagsService.convertApptPropertiesToTags('infoPnlBookingSummary', this.preference, this.appt);
        if (waitListTimes.length > 0)
            this.setUpWaitList(waitListTimes, this.appt);
        if (this.appt.location !== undefined && this.appt.location !== null && this.appt.location.wasUndefined) // LHB 10/21/2020 TT-7092
            this.appt.location = undefined;
    };
    ClientInfoComponent.prototype.ngOnInit = function () {
        this.responsiveService.setHeightForEmbedScheduler();
        var timesCount = 0;
        var waitListTimes = [];
        var apptTimes = [];
        var reasonTypeIsCourse = false;
        var reasonId = null;
        var reasonType = null;
        for (var i = 0, x = this.inputValues.length; i < x; i++) {
            if (this.inputValues[i].panel === "reasons") {
                for (var j = 0, y = this.inputValues[i].values.length; j < y; j++) {
                    reasonId = this.inputValues[i].values[j].value.reasonId;
                    reasonType = this.inputValues[i].values[j].value.reasonType;
                    if (this.inputValues[i].values[j].value.reasonType === 'COURSE') {
                        reasonTypeIsCourse = true;
                    }
                }
            }
            if (this.inputValues[i].panel === 'time') {
                for (var j = 0, y = this.inputValues[i].values.length; j < y; j++) {
                    timesCount++;
                    if (this.inputValues[i].values[j].value.waitListMode) {
                        waitListTimes.push(this.inputValues[i].values[j].value);
                    }
                    else {
                        apptTimes.push(this.inputValues[i].values[j].value);
                    }
                }
            }
        }
        // console.log('this.inputValues', this.inputValues);
        // console.log('apptTimes', apptTimes);
        // console.log('waitListTimes', waitListTimes);
        var waitListOnly = false;
        if ((!apptTimes || apptTimes.length === 0) && waitListTimes && waitListTimes.length > 0) // [TT-5495] LHB 04/12/2022
            waitListOnly = true;
        // this.clientInfoService.printPreferenceId(this.preference.schedulerPreferenceFieldDefnList, 27523);
        this.preference.schedulerPreferenceFieldDefnList = this.clientInfoService.initialConfigurationOfSchedulerFields(this.preference.schedulerPreferenceFieldDefnListOriginal, this.preference, this.preference.schedulerPreferenceFieldDefnList, waitListOnly);
        this.panel.formGroup = this.schedulerService.getPanelForm(_models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_23__["SchedulerPanelValues"].clientInfo, this.preference.schedulerPreferenceFieldDefnList, reasonId, reasonType);
        this.clientInfoForm = this.panel.formGroup;
        this.schedulerPreferenceService.setValuesBasedOnParametersPassed(this.preference, this.clientInfoForm);
        // this.clientInfoService.printPreferenceId(this.preference.schedulerPreferenceFieldDefnList, 27523);
        if (reasonTypeIsCourse) {
            this.setUpRepeatingAppt(apptTimes, waitListTimes);
        }
        else if (apptTimes.length > 1) {
            this.setUpRepeatingAppt(apptTimes, waitListTimes);
        }
        else {
            this.setUpSingleAppt(apptTimes, waitListTimes);
        }
    };
    ClientInfoComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"] },
        { type: _client_info_service__WEBPACK_IMPORTED_MODULE_5__["ClientInfoService"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_8__["TagsService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_11__["ResponsiveService"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_6__["DatePipe"] },
        { type: _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_7__["ClientAccountService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
        { type: _time_time_service__WEBPACK_IMPORTED_MODULE_9__["TimeService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_14__["MatDialog"] },
        { type: _google_analytics_service__WEBPACK_IMPORTED_MODULE_15__["GoogleAnalyticsService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_20__["SchedulerPreferenceService"] },
        { type: _scheduler_service__WEBPACK_IMPORTED_MODULE_22__["SchedulerService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ClientInfoComponent.prototype, "onMovePanels", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ClientInfoComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_23__["schedulerPanel"])
    ], ClientInfoComponent.prototype, "panel", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["CSFilterParameterBean"])
    ], ClientInfoComponent.prototype, "CSFilterObj", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ClientInfoComponent.prototype, "inputValues", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Array)
    ], ClientInfoComponent.prototype, "panels", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ClientInfoComponent.prototype, "directionComingFrom", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ClientInfoComponent.prototype, "clearTimePanelForm", void 0);
    ClientInfoComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'client-info-panel',
            template: __webpack_require__(/*! raw-loader!./client-info.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/client-info/client-info.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"], _client_info_service__WEBPACK_IMPORTED_MODULE_5__["ClientInfoService"], _tags_service__WEBPACK_IMPORTED_MODULE_8__["TagsService"], _responsive_service__WEBPACK_IMPORTED_MODULE_11__["ResponsiveService"],
            _angular_common__WEBPACK_IMPORTED_MODULE_6__["DatePipe"], _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_7__["ClientAccountService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"], _time_time_service__WEBPACK_IMPORTED_MODULE_9__["TimeService"],
            _angular_material_dialog__WEBPACK_IMPORTED_MODULE_14__["MatDialog"], _google_analytics_service__WEBPACK_IMPORTED_MODULE_15__["GoogleAnalyticsService"], _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_20__["SchedulerPreferenceService"],
            _scheduler_service__WEBPACK_IMPORTED_MODULE_22__["SchedulerService"]])
    ], ClientInfoComponent);
    return ClientInfoComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/client-info/client-info.module.ts":
/*!*************************************************************!*\
  !*** ./src/app/scheduler/client-info/client-info.module.ts ***!
  \*************************************************************/
/*! exports provided: ClientInfoModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientInfoModule", function() { return ClientInfoModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _common_components_footer_footer_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common-components/footer/footer.module */ "./src/app/scheduler/common-components/footer/footer.module.ts");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../material.module */ "./src/app/material.module.ts");
/* harmony import */ var _common_components_title_bar_title_bar_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common-components/title-bar/title-bar.module */ "./src/app/scheduler/common-components/title-bar/title-bar.module.ts");
/* harmony import */ var _pipes_pipes_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../pipes/pipes.module */ "./src/pipes/pipes.module.ts");
/* harmony import */ var _client_info_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./client-info.component */ "./src/app/scheduler/client-info/client-info.component.ts");
/* harmony import */ var _scheduler_pref_field_form_scheduler_pref_field_form_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../scheduler-pref-field-form/scheduler-pref-field-form.module */ "./src/app/scheduler-pref-field-form/scheduler-pref-field-form.module.ts");









var ClientInfoModule = /** @class */ (function () {
    function ClientInfoModule() {
    }
    ClientInfoModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [_client_info_component__WEBPACK_IMPORTED_MODULE_7__["ClientInfoComponent"]],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
                _common_components_footer_footer_module__WEBPACK_IMPORTED_MODULE_3__["FooterModule"],
                _material_module__WEBPACK_IMPORTED_MODULE_4__["MaterialModule"],
                _common_components_title_bar_title_bar_module__WEBPACK_IMPORTED_MODULE_5__["TitleBarModule"],
                _pipes_pipes_module__WEBPACK_IMPORTED_MODULE_6__["PipesModule"],
                _scheduler_pref_field_form_scheduler_pref_field_form_module__WEBPACK_IMPORTED_MODULE_8__["SchedulerPrefFieldFormModule"]
            ],
            exports: [_client_info_component__WEBPACK_IMPORTED_MODULE_7__["ClientInfoComponent"]]
        })
    ], ClientInfoModule);
    return ClientInfoModule;
}());



/***/ }),

/***/ "./src/app/scheduler/client-info/client-info.service.ts":
/*!**************************************************************!*\
  !*** ./src/app/scheduler/client-info/client-info.service.ts ***!
  \**************************************************************/
/*! exports provided: ClientInfoService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientInfoService", function() { return ClientInfoService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _form_functions_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../form-functions.service */ "./src/app/form-functions.service.ts");






var ClientInfoService = /** @class */ (function () {
    function ClientInfoService(responsiveService, formFunctionsService) {
        this.responsiveService = responsiveService;
        this.formFunctionsService = formFunctionsService;
        this.standardEmailValidationRegex = "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,8}$";
        this.matchingEmails = function (emailFieldId, confirmEmailFieldId) {
            return function (group) {
                var emailField = group.controls[emailFieldId];
                var confirmEmailField = group.controls[confirmEmailFieldId];
                if (emailField.value !== confirmEmailField.value) {
                    return {
                        confirmEmailMismatch: true
                    };
                }
            };
        };
    }
    ClientInfoService.prototype.createSendTextMessageReminderCustomField = function (preference, depFieldDefnId, waitListOnly) {
        var depSetValue = false;
        if (preference.booleanMap.defaultSMSRemindValue) {
            depSetValue = true;
        }
        var sendTextMessageReminderCustomField = {
            'active': true,
            'allowClientEdit': true,
            'businessId': null,
            'code': 'sendTextReminder',
            'createdDate': null,
            'createdUser': null,
            'dataType': 'CHKBOX',
            'defaultValue': null,
            'depAction': "ENABLE",
            'depAndOr': null,
            'depCondition': null,
            'depError': null,
            'depFieldDefnId': depFieldDefnId,
            'depFieldDefnIds': null,
            'depFieldDefnIdObjs': null,
            'depSetValue': depSetValue,
            'depType': "HAS_VALUE",
            'depValue': null,
            'enable': true,
            'otherFieldDepOnThisField': false,
            'extendedValue': null,
            'fieldValues': null,
            'dropdownValues': null,
            'filterByService': null,
            'hint': waitListOnly ? preference.labelMap.smsHintWaitList : preference.labelMap.smsHint,
            'inputType': null,
            'label': waitListOnly ? preference.labelMap.infoPnlSendTextCBLabelWaitList : preference.labelMap.infoPnlSendTextCBLabel,
            'labelTag': null,
            'mask': null,
            'mode': 'APPT_TXT_REMINDER',
            'modifiedDate': null,
            'modifiedUser': null,
            'oldFieldIds': null,
            'required': false,
            'schedulerPreferenceFieldDefnId': -1,
            'serviceIds': null,
            'sortOrder': null,
            'tagName': 'CUSTOM_FIELD_SENDTEXTMSGREMINDER',
            'userDefinedField': false,
            'validationError': null,
            'validationRegex': null,
            'value': null,
            'booleanValue': null,
            'valueTag': '%CUSTOM_FIELD_SENDTEXTMSGREMINDER%',
            'visible': true,
            'visibleOnScheduler': true,
            'showOnScheduler': true,
            'requiredJSON': null,
            'requiredObj': null,
            'requiredObjInvalid': false
        };
        return sendTextMessageReminderCustomField;
    };
    ClientInfoService.prototype.createSendTextMessageReminderHrsCustomField = function (preference, depFieldDefnId) {
        var fieldValues = preference.labelMap.infoPnlSendTextD1Hr + "\n" + preference.labelMap.infoPnlSendTextD2Hr + "\n" + preference.labelMap.infoPnlSendTextD4Hr + "\n" + preference.labelMap.infoPnlSendTextD12Hr + "\n" + preference.labelMap.infoPnlSendTextD24Hr;
        if (preference.clientReminderSMSHoursList) // TT-6496 2/5/2021
            if (preference.clientReminderSMSHoursList.length === 0) // no options to select, return null
                return null;
            else {
                fieldValues = '';
                for (var i = 0, x = preference.clientReminderSMSHoursList.length; i < x; i++) {
                    switch (preference.clientReminderSMSHoursList[i]) {
                        case 1:
                            fieldValues = fieldValues + preference.labelMap.infoPnlSendTextD1Hr;
                            break;
                        case 2:
                            fieldValues = fieldValues + preference.labelMap.infoPnlSendTextD2Hr;
                            break;
                        case 4:
                            fieldValues = fieldValues + preference.labelMap.infoPnlSendTextD4Hr;
                            break;
                        case 12:
                            fieldValues = fieldValues + preference.labelMap.infoPnlSendTextD12Hr;
                            break;
                        case 24:
                            fieldValues = fieldValues + preference.labelMap.infoPnlSendTextD24Hr;
                            break;
                    }
                    if (i !== preference.clientReminderSMSHoursList.length - 1) // is not the last value in the list
                        fieldValues = fieldValues + "\n";
                }
            }
        var sendTextMessageReminderCustomField = {
            'active': true,
            'allowClientEdit': true,
            'businessId': null,
            'code': 'sendTextReminderHrs',
            'createdDate': null,
            'createdUser': null,
            'dataType': 'LIST',
            'defaultValue': preference.labelMap.infoPnlSendTextD1Hr,
            'depAction': 'VISIBLE',
            'depAndOr': null,
            'depCondition': 'EQ',
            'depError': null,
            'depFieldDefnId': depFieldDefnId,
            'depFieldDefnIds': null,
            'depFieldDefnIdObjs': null,
            'depSetValue': preference.labelMap.infoPnlSendTextD1Hr,
            'depType': 'EXACT',
            'depValue': 'true',
            'enable': null,
            'otherFieldDepOnThisField': false,
            'extendedValue': null,
            'fieldValues': fieldValues,
            'dropdownValues': null,
            'filterByService': null,
            'hint': null,
            'inputType': null,
            'label': preference.labelMap.infoPnlSendTextHrsCBLabel,
            'labelTag': null,
            'mask': null,
            'mode': 'APPT_TXT_REMINDER',
            'modifiedDate': null,
            'modifiedUser': null,
            'oldFieldIds': null,
            'required': false,
            'schedulerPreferenceFieldDefnId': -2,
            'serviceIds': null,
            'sortOrder': null,
            'tagName': 'CUSTOM_FIELD_SENDTEXTMSGREMINDERHRS',
            'userDefinedField': false,
            'validationError': null,
            'validationRegex': null,
            'value': null,
            'booleanValue': null,
            'valueTag': '%CUSTOM_FIELD_SENDTEXTMSGREMINDERHRS%',
            'visible': true,
            'visibleOnScheduler': true,
            'showOnScheduler': true,
            'requiredJSON': null,
            'requiredObj': null,
            'requiredObjInvalid': false
        };
        return sendTextMessageReminderCustomField;
    };
    ClientInfoService.prototype.createAdditionalGuestsFieldValues = function (maxAdditionalGuests) {
        var fieldValues = '';
        for (var i = 0; i <= maxAdditionalGuests; i++) {
            if (i < maxAdditionalGuests) {
                fieldValues = fieldValues + i + '\n';
            }
            else {
                fieldValues = fieldValues + i;
            }
        }
        return fieldValues;
    };
    ClientInfoService.prototype.createAdditionalGuestsDropdown = function (preference) {
        var fieldValues = this.createAdditionalGuestsFieldValues(preference.maxAdditionalGuests);
        var additionalGuestsCustomField = {
            'active': true,
            'allowClientEdit': true,
            'businessId': null,
            'code': 'additionalGuests',
            'createdDate': null,
            'createdUser': null,
            'dataType': 'LIST',
            'defaultValue': '0',
            'depAction': null,
            'depAndOr': null,
            'depCondition': null,
            'depError': null,
            'depFieldDefnId': null,
            'depFieldDefnIds': null,
            'depFieldDefnIdObjs': null,
            'depSetValue': null,
            'depType': null,
            'depValue': null,
            'enable': null,
            'otherFieldDepOnThisField': false,
            'extendedValue': null,
            'fieldValues': fieldValues,
            'dropdownValues': null,
            'filterByService': null,
            'hint': null,
            'inputType': null,
            'label': preference.labelMap.additionalGuestText,
            'labelTag': null,
            'mask': null,
            'mode': 'APPT_ADDITIONAL_GUESTS',
            'modifiedDate': null,
            'modifiedUser': null,
            'oldFieldIds': null,
            'required': false,
            'schedulerPreferenceFieldDefnId': -3,
            'serviceIds': null,
            'sortOrder': null,
            'tagName': 'CUSTOM_FIELD_ADDITIONAL_GUESTS',
            'userDefinedField': false,
            'validationError': null,
            'validationRegex': null,
            'value': null,
            'booleanValue': null,
            'valueTag': '%CUSTOM_FIELD_ADDITIONAL_GUESTS%',
            'visible': true,
            'visibleOnScheduler': true,
            'showOnScheduler': true,
            'requiredJSON': null,
            'requiredObj': null,
            'requiredObjInvalid': false
        };
        return additionalGuestsCustomField;
    };
    ClientInfoService.prototype.createPasswordField = function (preference) {
        var passwordField = {
            'active': true,
            'allowClientEdit': true,
            'businessId': preference.businessId,
            'code': 'password',
            'createdDate': null,
            'createdUser': null,
            'dataType': 'TXT',
            'defaultValue': null,
            'depAction': null,
            'depAndOr': null,
            'depCondition': null,
            'depError': null,
            'depFieldDefnId': null,
            'depFieldDefnIds': null,
            'depFieldDefnIdObjs': null,
            'depSetValue': null,
            'depType': null,
            'depValue': null,
            'enable': null,
            'otherFieldDepOnThisField': null,
            'extendedValue': null,
            'fieldValues': null,
            'dropdownValues': null,
            'filterByService': null,
            'hint': null,
            'inputType': 'password',
            'label': preference.labelMap.passwordFieldLabel,
            'labelTag': null,
            'mask': null,
            'mode': null,
            'modifiedDate': null,
            'modifiedUser': null,
            'oldFieldIds': null,
            'required': true,
            'schedulerPreferenceFieldDefnId': -4,
            'serviceIds': null,
            'sortOrder': null,
            'tagName': null,
            'userDefinedField': null,
            'validationError': null,
            'validationRegex': null,
            'value': null,
            'booleanValue': null,
            'valueTag': null,
            'visible': true,
            'visibleOnScheduler': true,
            'showOnScheduler': true,
            'requiredJSON': null,
            'requiredObj': null,
            'requiredObjInvalid': false
        };
        return passwordField;
    };
    ClientInfoService.prototype.isClientInfoFormValid = function (clientInfoForm, fields) {
        var validForm = clientInfoForm.valid;
        if (validForm)
            return validForm;
        else {
            var invalidFieldCount = 0;
            for (var prop in clientInfoForm.controls) {
                if (clientInfoForm.controls[prop].invalid) {
                    for (var i = 0, x = fields.length; i < x; i++) {
                        if (prop === fields[i].schedulerPreferenceFieldDefnId.toString() && fields[i].showOnScheduler)
                            invalidFieldCount++;
                    }
                }
            }
            if (invalidFieldCount === 0)
                validForm = true;
            return validForm;
        }
    };
    ClientInfoService.prototype.reasonIdCheckForDependencyFieldsFlag = function (fieldWithCondition, reasonId) {
        if (reasonId === undefined || reasonId === null ||
            (reasonId !== undefined && (fieldWithCondition.serviceIds === null || fieldWithCondition.serviceIds.length === 0) ||
                (fieldWithCondition.serviceIds !== null && fieldWithCondition.serviceIds.length > 0 && fieldWithCondition.serviceIds.indexOf(reasonId) !== -1)) ||
            (reasonId === -1 && fieldWithCondition.value !== null && fieldWithCondition.serviceIds !== null && fieldWithCondition.serviceIds.length > 0)) { // LHB 09/14/2020 TT-6998
            return true;
        }
        else
            return false;
    };
    ClientInfoService.prototype.setClientInfoFormValue = function (clientInfoForm, fieldWithCondition, schedulerPreferenceFieldDefnList, reasonId) {
        if (clientInfoForm !== undefined) {
            var fieldName = '' + fieldWithCondition.schedulerPreferenceFieldDefnId + '';
            if (!this.reasonIdCheckForDependencyFieldsFlag(fieldWithCondition, reasonId))
                fieldWithCondition.showOnScheduler = false;
            if (fieldWithCondition.showOnScheduler) {
                if (clientInfoForm.controls[fieldWithCondition.schedulerPreferenceFieldDefnId] === undefined) {
                    var validatorsArray = this.createValidatorsArray(fieldWithCondition);
                    clientInfoForm.addControl(fieldName, new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]({
                        value: fieldWithCondition.depSetValue,
                        disabled: !fieldWithCondition.enable
                    }, validatorsArray));
                }
                else if (((clientInfoForm.controls[fieldWithCondition.schedulerPreferenceFieldDefnId].enabled && fieldWithCondition.depAction === 'ENABLE') ||
                    (clientInfoForm.controls[fieldWithCondition.schedulerPreferenceFieldDefnId].disabled && fieldWithCondition.depAction === 'DISABLE')) &&
                    (clientInfoForm.controls[fieldWithCondition.schedulerPreferenceFieldDefnId].value === undefined || clientInfoForm.controls[fieldWithCondition.schedulerPreferenceFieldDefnId].value === null)) {
                    clientInfoForm.controls[fieldWithCondition.schedulerPreferenceFieldDefnId].patchValue(fieldWithCondition.depSetValue);
                }
                else if (clientInfoForm.controls[fieldWithCondition.schedulerPreferenceFieldDefnId].value !== fieldWithCondition.value) {
                    clientInfoForm.controls[fieldWithCondition.schedulerPreferenceFieldDefnId].patchValue(fieldWithCondition.value);
                }
                if (fieldWithCondition.enable) {
                    clientInfoForm.controls[fieldWithCondition.schedulerPreferenceFieldDefnId].enable();
                }
                else {
                    clientInfoForm.controls[fieldWithCondition.schedulerPreferenceFieldDefnId].disable();
                }
                this.checkDependencyFields(fieldWithCondition, schedulerPreferenceFieldDefnList, clientInfoForm, reasonId);
            }
            else if (!fieldWithCondition.showOnScheduler && clientInfoForm.controls[fieldWithCondition.schedulerPreferenceFieldDefnId] !== undefined) {
                clientInfoForm.removeControl(fieldName);
                this.checkDependencyFields(fieldWithCondition, schedulerPreferenceFieldDefnList, clientInfoForm, reasonId);
            }
        }
    };
    ;
    ClientInfoService.prototype.dateDependentFieldEqualitySetting = function (fieldWithCondition, clientInfoForm, showOrEnable, valueToPatch) {
        switch (fieldWithCondition.depAction) {
            case 'VISIBLE':
                fieldWithCondition.showOnScheduler = showOrEnable;
                break;
            case 'HIDDEN':
                fieldWithCondition.showOnScheduler = showOrEnable;
                break;
            case 'ENABLE':
                fieldWithCondition.enable = showOrEnable;
                break;
            case 'DISABLE':
                fieldWithCondition.enable = showOrEnable;
                break;
        }
        if (valueToPatch !== null)
            fieldWithCondition.value = String(valueToPatch);
        return fieldWithCondition;
    };
    ClientInfoService.prototype.setUpDependencyFields = function (fieldWithCondition, fieldDependedOn, valueProperty, depValueArray, clientInfoForm, schedulerPreferenceFieldDefnList, reasonId) {
        // if (fieldDependedOn.schedulerPreferenceFieldDefnId === 23257 || fieldDependedOn.schedulerPreferenceFieldDefnId === 21342) {
        //     console.log('fieldWithCondition: ');
        //     console.log(fieldWithCondition)
        //     console.log('fieldDependedOn: ');
        //     console.log(fieldDependedOn)
        //     console.log('clientInfoForm: ');
        //     console.log(clientInfoForm)
        //     console.log('reasonId: ');
        //     console.log(reasonId)
        //     console.log('depValueArray: ');
        //     console.log(depValueArray)
        // }
        fieldDependedOn.otherFieldDepOnThisField = true;
        var showOrEnable = true;
        var propToToggle = 'showOnScheduler';
        if (fieldWithCondition.depAction === 'VISIBLE' || fieldWithCondition.depAction === 'ENABLE') {
            showOrEnable = true;
        }
        else if (fieldWithCondition.depAction === 'HIDDEN' || fieldWithCondition.depAction === 'DISABLE') {
            showOrEnable = false;
        }
        if (fieldWithCondition.depAction === 'ENABLE' || fieldWithCondition.depAction === 'DISABLE') {
            propToToggle = 'enable';
        }
        //Condition to Check:
        //1: if the field is not 'NOR' condition (meaning it is an any (OR) or all (AND)) then need to check that value in depValueArray is the value that the field that depends on it requires
        //2: if the field is a 'NOR' condition, then need to check that none of the values in the depValueArray match the value that the field that is depended on is set to
        var depValueConditionToCheck = false;
        if (fieldWithCondition.depAndOr === 'NOR' && depValueArray.indexOf(fieldDependedOn[valueProperty]) === -1 && fieldDependedOn[valueProperty] !== null)
            depValueConditionToCheck = true;
        else if (fieldWithCondition.depAndOr === 'OR' && depValueArray.indexOf(fieldDependedOn[valueProperty]) !== -1)
            depValueConditionToCheck = true;
        else if (fieldWithCondition.depAndOr === 'AND' && fieldWithCondition.depFieldDefnIds.length === 1 && depValueArray.indexOf(fieldDependedOn[valueProperty]) !== -1)
            depValueConditionToCheck = true;
        else if (fieldWithCondition.depAndOr === 'AND' && fieldWithCondition.depFieldDefnIds.length > 1) { // TT-7315 LHB 1/22/2021
            // find other fields in list that field with condition depends on and see what their values are:
            var validValuesCounter = 0;
            for (var i = 0, x = fieldWithCondition.depFieldDefnIdObjs.length; i < x; i++)
                for (var j = 0, y = schedulerPreferenceFieldDefnList.length; j < y; j++)
                    if (fieldWithCondition.depFieldDefnIdObjs[i].schedulerPreferenceFieldDefnId === schedulerPreferenceFieldDefnList[j].schedulerPreferenceFieldDefnId &&
                        fieldWithCondition.depFieldDefnIdObjs[i].depValueArray.indexOf(schedulerPreferenceFieldDefnList[j].value) !== -1)
                        validValuesCounter++;
            if (validValuesCounter === fieldWithCondition.depFieldDefnIds.length)
                depValueConditionToCheck = true;
        }
        else if (!fieldWithCondition.depAndOr && depValueArray.indexOf(fieldDependedOn[valueProperty]) !== -1)
            depValueConditionToCheck = true;
        // if((depValueArray.indexOf(fieldDependedOn[valueProperty]) !== -1 && fieldWithCondition.depAndOr !== 'NOR') ||
        //     (depValueArray.indexOf(fieldDependedOn[valueProperty]) === -1 && fieldWithCondition.depAndOr === 'NOR' && fieldDependedOn[valueProperty] !== null)) {
        //     depValueConditionToCheck = true;
        // }
        switch (fieldDependedOn.dataType) {
            case 'DATE':
                var currentDateObj = new Date();
                var currentYear = currentDateObj.getFullYear();
                var currentMonth = currentDateObj.getMonth();
                var currentDate = currentDateObj.getDate();
                var dateTimeMsToCompareWith = new Date(currentYear, currentMonth, currentDate, 0, 0, 0, 0).getTime();
                var dependedOnFieldNumberValue = Number(fieldDependedOn.value);
                switch (fieldWithCondition.depType) {
                    case 'AGE_FROM_TODAY':
                        //no need to change dateTimeMsToCompareWith because already properly set to the day they are booking
                        break;
                    case 'AGE_FROM_APPT_DATE':
                        //TO DO ONCE AVAILABILITY AND DATE SELECTION ARE IN PLACE: COME BACK AND CALCULATE DATETIMEMSTOCOMPAREWITH FOR THE APPOINTMENT DATE
                        break;
                }
                var msDifference = dateTimeMsToCompareWith - dependedOnFieldNumberValue;
                var secsDifference = msDifference / 1000;
                var minutesDifference = secsDifference / 60;
                var hoursDifference = minutesDifference / 60;
                var daysDifference = hoursDifference / 24;
                var depValueDays = Number(depValueArray[0]);
                //FIRST NEED TO CHECK IF VALUE OF DATE FIELD WOULD MAKE IT SO THAT THIS FIELD SHOULD HAVE WHATEVER ACTION TAKEN ON IT
                if (dependedOnFieldNumberValue === 0) { //MEANS NO DATE HAS BEEN FILLED IN YET
                    fieldWithCondition = this.dateDependentFieldEqualitySetting(fieldWithCondition, clientInfoForm, !showOrEnable, fieldWithCondition.defaultValue);
                }
                else if (daysDifference > depValueDays) {
                    //days between selected on DATE field minus either current day or date of appointment is GREATER THAN number of days set in depValue
                    switch (fieldWithCondition.depCondition) {
                        case 'GT':
                        case 'GE':
                            //SINCE CHECK IS FOR INPUT VALUE TO BE GREATER THAN OR EQUAL TO DEP DAYS VALUE, AND IN THIS CASE THE INPUT VALUE *IS* GREATER THAN DEP DAYS VALUE, THEN WHATEVER ACTION IS DEFINED *SHOULD* BE TAKE AND VALUE SHOULD GET SET
                            fieldWithCondition = this.dateDependentFieldEqualitySetting(fieldWithCondition, clientInfoForm, showOrEnable, fieldWithCondition.depSetValue);
                            break;
                        case 'EQ':
                        case 'LE':
                        case 'LT':
                            //SINCE CHECK IS FOR INPUT VALUE TO BE LESS THAN OR EQUAL TO DEP DAYS VALUE, AND IN THIS CASE THE INPUT VALUE IS GREATER THAN DEP DAYS VALUE, THEN WHATEVER ACTION IS DEFINED SHOULD *NOT* BE TAKE AND DEP VALUE SHOULD GET REMOVED
                            fieldWithCondition = this.dateDependentFieldEqualitySetting(fieldWithCondition, clientInfoForm, !showOrEnable, fieldWithCondition.defaultValue);
                            break;
                    }
                }
                else if (daysDifference === depValueDays) {
                    //days between selected on DATE field minus either current day or date of appointment is EQUAL TO the number of days set in depValue
                    switch (fieldWithCondition.depCondition) {
                        case 'GT':
                        case 'LT':
                            //SINCE CHECK IS FOR INPUT VALUE TO BE GREATER THAN OR LESS THAN DEP DAYS VALUE, AND IN THIS CASE THE INPUT VALUE IS EQUAL TO DEP DAYS VALUE, THEN WHATEVER ACTION IS DEFINED SHOULD *NOT* BE TAKE AND VALUE SHOULD GET REMOVED
                            fieldWithCondition = this.dateDependentFieldEqualitySetting(fieldWithCondition, clientInfoForm, !showOrEnable, fieldWithCondition.defaultValue);
                            break;
                        case 'GE':
                        case 'EQ':
                        case 'LE':
                            //SINCE CHECK IS FOR INPUT VALUE TO BE GREATER/LESS THAN OR EQUAL TO DEP DAYS VALUE, AND IN THIS CASE THE INPUT VALUE *IS* EQUAL TO DEP DAYS VALUE, THEN WHATEVER ACTION IS DEFINED *SHOULD* BE TAKE AND VALUE SHOULD GET SET
                            fieldWithCondition = this.dateDependentFieldEqualitySetting(fieldWithCondition, clientInfoForm, showOrEnable, fieldWithCondition.depSetValue);
                            break;
                    }
                }
                else if (daysDifference < depValueDays) {
                    //days between selected on DATE field minus either current day or date of appointment is LESS THAN number of days set in depValue
                    switch (fieldWithCondition.depCondition) {
                        case 'GT':
                        case 'GE':
                        case 'EQ':
                            //SINCE CHECK IS FOR INPUT VALUE TO BE GREATER THAN OR EQUAL TO DEP DAYS VALUE, AND IN THIS CASE THE INPUT VALUE IS LESS THAN DEP DAYS VALUE, THEN WHATEVER ACTION IS DEFINED SHOULD *NOT* BE TAKE AND VALUE SHOULD GET REMOVED
                            fieldWithCondition = this.dateDependentFieldEqualitySetting(fieldWithCondition, clientInfoForm, !showOrEnable, fieldWithCondition.defaultValue);
                            break;
                        case 'LE':
                        case 'LT':
                            //SINCE CHECK IS FOR INPUT VALUE TO BE LESS THAN OR EQUAL TO DEP DAYS VALUE, AND IN THIS CASE THE INPUT VALUE *IS* LESS THAN DEP DAYS VALUE, THEN WHATEVER ACTION IS DEFINED *SHOULD* BE TAKE AND VALUE SHOULD GET SET
                            fieldWithCondition = this.dateDependentFieldEqualitySetting(fieldWithCondition, clientInfoForm, showOrEnable, fieldWithCondition.depSetValue);
                            break;
                    }
                }
                break;
            case 'LIST':
                if (depValueConditionToCheck) {
                    fieldWithCondition[propToToggle] = showOrEnable;
                    fieldWithCondition.value = fieldWithCondition.depSetValue;
                }
                else {
                    fieldWithCondition[propToToggle] = !showOrEnable;
                }
                break;
            case 'TXT':
                if (fieldWithCondition.depType === 'HAS_VALUE' && fieldDependedOn.value !== null && fieldDependedOn.value.trim() !== "") {
                    fieldWithCondition[propToToggle] = showOrEnable;
                    if (fieldWithCondition.value === null) {
                        fieldWithCondition.value = fieldWithCondition.depSetValue;
                    }
                }
                else {
                    fieldWithCondition[propToToggle] = !showOrEnable;
                    fieldWithCondition.value = fieldWithCondition.defaultValue;
                }
                break;
            case 'CHKBOX':
                if (fieldWithCondition.depType === 'EXACT' && fieldDependedOn.value !== null && fieldDependedOn.value.toString() === fieldWithCondition.depValue) {
                    fieldWithCondition[propToToggle] = showOrEnable;
                    fieldWithCondition.value = fieldWithCondition.depSetValue;
                }
                else {
                    fieldWithCondition[propToToggle] = !showOrEnable;
                }
                break;
        }
        this.setClientInfoFormValue(clientInfoForm, fieldWithCondition, schedulerPreferenceFieldDefnList, reasonId);
    };
    ClientInfoService.prototype.checkDependencyFields = function (field, schedulerPreferenceFieldDefnList, clientInfoForm, reasonId) {
        if (field.otherFieldDepOnThisField) {
            for (var i = 0, x = schedulerPreferenceFieldDefnList.length; i < x; i++) {
                if (schedulerPreferenceFieldDefnList[i].depFieldDefnIdObjs && schedulerPreferenceFieldDefnList[i].depFieldDefnIdObjs.length !== 0) {
                    for (var j = 0, y = schedulerPreferenceFieldDefnList[i].depFieldDefnIdObjs.length; j < y; j++) {
                        if (schedulerPreferenceFieldDefnList[i].depFieldDefnIdObjs[j].schedulerPreferenceFieldDefnId === field.schedulerPreferenceFieldDefnId) {
                            this.setUpDependencyFields(schedulerPreferenceFieldDefnList[i], field, 'value', schedulerPreferenceFieldDefnList[i].depFieldDefnIdObjs[j].depValueArray, clientInfoForm, schedulerPreferenceFieldDefnList, reasonId);
                        }
                    }
                }
            }
        }
    };
    ClientInfoService.prototype.isValidRegex = function (validationRegex) {
        var isValid = true;
        try {
            new RegExp(validationRegex);
        }
        catch (e) {
            isValid = false;
        }
        return isValid;
    };
    ClientInfoService.prototype.isValidJson = function (str) {
        try {
            JSON.parse(str);
        }
        catch (e) {
            return false;
        }
        return true;
    };
    ClientInfoService.prototype.getField = function (customFields, code) {
        var field = null;
        for (var i = 0, x = customFields.length; i < x; i++)
            if (customFields[i].code === code)
                field = customFields[i];
        return field;
    };
    ClientInfoService.prototype.checkContainsConfirmEmail = function (customFields) {
        var containsConfirmEmail = false;
        for (var i = 0, x = customFields.length; i < x; i++)
            if (customFields[i].showOnScheduler && customFields[i].code === 'confirmEmailAddress')
                containsConfirmEmail = true;
        return containsConfirmEmail;
    };
    ClientInfoService.prototype.printPreferenceId = function (schedulerPreferenceFieldDefnList, id) {
        for (var i = 0, x = schedulerPreferenceFieldDefnList.length; i < x; i++)
            if (schedulerPreferenceFieldDefnList[i].schedulerPreferenceFieldDefnId === id) {
                console.log('schedulerPreferenceFieldDefnList ' + id + JSON.stringify(schedulerPreferenceFieldDefnList[i]));
            }
    };
    ClientInfoService.prototype.createValidatorsArray = function (field) {
        var validatorsArray = [];
        if (field.required) {
            validatorsArray.push(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required);
        }
        if (field.inputType === 'email') {
            var emailRegexExpression = "[^ @]*@[^ @]*";
            validatorsArray.push(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern(emailRegexExpression));
        }
        if (field.inputType === 'url') {
            var urlRegexExpression = '^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&\'\\(\\)\\*\\+,;=.]+$';
            validatorsArray.push(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern(urlRegexExpression));
        }
        if (field.validationRegex !== null && field.dataType !== "FILEUPLOAD") {
            if (this.isValidRegex(field.validationRegex)) {
                validatorsArray.push(_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern(field.validationRegex));
            }
        }
        return validatorsArray;
    };
    ClientInfoService.prototype.initialConfigurationOfSchedulerFields = function (originalFieldDefnList, preference, fieldsFromFirstBooking, waitListOnly) {
        var fieldDefnList = lodash__WEBPACK_IMPORTED_MODULE_4__["cloneDeep"](originalFieldDefnList);
        if (fieldsFromFirstBooking) { // Fix for TT-6691
            for (var i = 0, x = fieldsFromFirstBooking.length; i < x; i++) {
                if (fieldsFromFirstBooking[i].mode === 'CLIENT' && fieldsFromFirstBooking[i].value !== null) {
                    for (var j = 0, y = fieldDefnList.length; j < y; j++) {
                        if (fieldsFromFirstBooking[i].schedulerPreferenceFieldDefnId === fieldDefnList[j].schedulerPreferenceFieldDefnId) {
                            fieldDefnList[j].value = fieldsFromFirstBooking[i].value;
                        }
                    }
                }
            }
        }
        if (preference !== undefined && preference.maxAdditionalGuests > 0) {
            var additionalGuestCustomField = this.createAdditionalGuestsDropdown(preference);
            fieldDefnList.push(additionalGuestCustomField);
        }
        //first remove any of the fields that are not visible at all:
        for (var i = 0; i < fieldDefnList.length; i++) {
            if (fieldDefnList[i].visible === false) {
                fieldDefnList.splice(i, 1);
                i--;
            }
        }
        for (var i = 0; i < fieldDefnList.length; i++) { //INITIAL CUSTOM FIELD SET UP
            if (preference !== undefined && preference.askClientSMSRemind && fieldDefnList[i].code === 'cellPhone' && fieldDefnList[i].visibleOnScheduler) {
                var sendTextMessageReminderCustomField = this.createSendTextMessageReminderCustomField(preference, fieldDefnList[i].schedulerPreferenceFieldDefnId, waitListOnly);
                fieldDefnList.splice(i + 1, 0, sendTextMessageReminderCustomField);
            }
            if (preference !== undefined && fieldDefnList[i].code === 'sendTextReminder' && !waitListOnly) {
                //ADD SEND TEXT MESSAGE HOURS DROPDOWN TO FORM OBJECT
                var sendTextMessageReminderHrsCustomField = this.createSendTextMessageReminderHrsCustomField(preference, fieldDefnList[i].schedulerPreferenceFieldDefnId);
                if (sendTextMessageReminderHrsCustomField)
                    fieldDefnList.splice(i + 1, 0, sendTextMessageReminderHrsCustomField);
            }
            if (fieldDefnList[i].visible && fieldDefnList[i].visibleOnScheduler) {
                fieldDefnList[i].showOnScheduler = true;
                fieldDefnList[i].enable = true;
            }
            if (fieldDefnList[i].defaultValue && !fieldDefnList[i].value)
                fieldDefnList[i].value = fieldDefnList[i].defaultValue;
            switch (fieldDefnList[i].dataType) {
                case 'TXT':
                    switch (fieldDefnList[i].code) {
                        case 'cellPhone':
                        case 'homePhone':
                        case 'businessPhone':
                            fieldDefnList[i].inputType = 'phone';
                            break;
                        case 'emailAddress':
                            fieldDefnList[i].inputType = 'email';
                            break;
                        case 'password':
                            fieldDefnList[i].inputType = 'password';
                            break;
                        default:
                            fieldDefnList[i].inputType = 'text';
                    }
                    break;
                case 'LIST':
                    if (fieldDefnList[i].fieldValues !== null) {
                        fieldDefnList[i].dropdownValues = fieldDefnList[i].fieldValues.split(/\n/);
                    }
                    break;
                case 'LIST_CHKBOX':
                    if (fieldDefnList[i].fieldValues !== null) {
                        var dropdownValues = fieldDefnList[i].fieldValues.split(/\n/);
                        fieldDefnList[i].dropdownValues = [];
                        for (var a = 0, x = dropdownValues.length; a < x; a++) {
                            if (dropdownValues[a])
                                dropdownValues[a] = dropdownValues[a].trim();
                            var chkBoxObject = { label: dropdownValues[a], value: false };
                            fieldDefnList[i].dropdownValues.push(chkBoxObject);
                        }
                    }
                    if (fieldDefnList[i].value !== null) { //Prechecking the check boxes for the values already selected
                        var checkedValuesArray = this.formFunctionsService.getCheckedValues(fieldDefnList[i].value);
                        if (fieldDefnList[i].dropdownValues !== undefined) {
                            for (var a = 0, x = fieldDefnList[i].dropdownValues.length; a < x; a++) {
                                //GIVE EACH CHECKBOX VALUE A NAME CONVENTION FOR MODEL STORAGE
                                if (checkedValuesArray.indexOf(fieldDefnList[i].dropdownValues[a].label) !== -1) {
                                    fieldDefnList[i].dropdownValues[a].value = true;
                                }
                            }
                        }
                    }
                    break;
                case 'URL':
                    fieldDefnList[i].inputType = 'url';
                    break;
                case 'CHKBOX':
                    if (fieldDefnList[i].value !== null && typeof fieldDefnList[i].value === 'string') {
                        var fieldValue = fieldDefnList[i].value.toLowerCase();
                        if (fieldValue === 'false' || fieldValue === 'no') {
                            // @ts-ignore
                            fieldDefnList[i].value = false;
                        }
                        else {
                            // @ts-ignore
                            fieldDefnList[i].value = true;
                        }
                    }
                    break;
                case 'FILEUPLOAD':
                    fieldDefnList[i].inputType = 'file';
                    break;
                case 'DATE':
                    if (fieldDefnList[i].requiredJSON !== null && this.isValidJson(fieldDefnList[i].requiredJSON)) {
                        fieldDefnList[i].requiredObj = JSON.parse(fieldDefnList[i].requiredJSON);
                    }
                    break;
            }
            if (!fieldDefnList[i].depFieldDefnIdObjs)
                fieldDefnList[i].depFieldDefnIdObjs = [];
            if (!fieldDefnList[i].depFieldDefnIds)
                fieldDefnList[i].depFieldDefnIds = [];
            if (fieldDefnList[i].depType === 'JSON' && fieldDefnList[i].depCondition !== null) {
                var depConditionJson = JSON.parse(fieldDefnList[i].depCondition);
                if (depConditionJson.AND !== undefined) {
                    fieldDefnList[i].depAndOr = 'AND';
                }
                else if (depConditionJson.NOR !== undefined) {
                    fieldDefnList[i].depAndOr = 'NOR';
                }
                else {
                    fieldDefnList[i].depAndOr = 'OR';
                }
                var conditionsFieldDepOnArray = depConditionJson[fieldDefnList[i].depAndOr];
                for (var j = 0, y = conditionsFieldDepOnArray.length; j < y; j++) {
                    for (var prop in conditionsFieldDepOnArray[j]) {
                        var defIdNumber = Number(prop);
                        if (fieldDefnList[i].depFieldDefnIds && fieldDefnList[i].depFieldDefnIds.indexOf(defIdNumber) === -1) {
                            fieldDefnList[i].depFieldDefnIds.push(defIdNumber);
                            var depFieldDefnIdObj = { schedulerPreferenceFieldDefnId: defIdNumber, depValueArray: [conditionsFieldDepOnArray[j][prop]] };
                            fieldDefnList[i].depFieldDefnIdObjs.push(depFieldDefnIdObj);
                        }
                        else if (fieldDefnList[i].depFieldDefnIdObjs) {
                            for (var k = 0, z = fieldDefnList[i].depFieldDefnIdObjs.length; k < z; k++) {
                                if (fieldDefnList[i].depFieldDefnIdObjs[k].schedulerPreferenceFieldDefnId === defIdNumber) {
                                    fieldDefnList[i].depFieldDefnIdObjs[k].depValueArray.push(conditionsFieldDepOnArray[j][prop]);
                                }
                            }
                        }
                    }
                }
            }
            else if (fieldDefnList[i].depFieldDefnId !== null) {
                var depFieldDefnIdObj = { schedulerPreferenceFieldDefnId: fieldDefnList[i].depFieldDefnId, depValueArray: [fieldDefnList[i].depValue] };
                fieldDefnList[i].depFieldDefnIdObjs.push(depFieldDefnIdObj);
            }
            if (fieldDefnList[i].depFieldDefnIdObjs.length !== 0) {
                for (var k = 0, z = fieldDefnList[i].depFieldDefnIdObjs.length; k < z; k++) {
                    for (var j = 0, y = fieldDefnList.length; j < y; j++) {
                        if (fieldDefnList[j].schedulerPreferenceFieldDefnId === fieldDefnList[i].depFieldDefnIdObjs[k].schedulerPreferenceFieldDefnId) {
                            this.setUpDependencyFields(fieldDefnList[i], fieldDefnList[j], 'defaultValue', fieldDefnList[i].depFieldDefnIdObjs[k].depValueArray, undefined, fieldDefnList, null);
                        }
                    }
                }
            }
        }
        if (preference && preference.askClientSMSRemind && !this.responsiveService.onMobileViewPort) { //NEED TO REVERSE ORDER OF THE sendTextReminder AND sendTextReminderHrs FIELDS SO FLOAT IS PROPER ONLY ON LARGE SCREEN SIZES
            var positionOfSentTextReminder = null, positionOfSendTextReminderHrs = null;
            for (var i = 0, x = fieldDefnList.length; i < x; i++) {
                if (fieldDefnList[i].code === 'sendTextReminder') {
                    positionOfSentTextReminder = i;
                }
                else if (fieldDefnList[i].code === 'sendTextReminderHrs') {
                    positionOfSendTextReminderHrs = i;
                }
            }
            var temp = fieldDefnList[positionOfSentTextReminder];
            if (positionOfSendTextReminderHrs) {
                fieldDefnList[positionOfSentTextReminder] = fieldDefnList[positionOfSendTextReminderHrs];
                fieldDefnList[positionOfSendTextReminderHrs] = temp;
            }
            else {
                fieldDefnList[positionOfSentTextReminder] = temp;
            }
        }
        return fieldDefnList;
    };
    ClientInfoService.ctorParameters = function () { return [
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_3__["ResponsiveService"] },
        { type: _form_functions_service__WEBPACK_IMPORTED_MODULE_5__["FormFunctionsService"] }
    ]; };
    ClientInfoService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_responsive_service__WEBPACK_IMPORTED_MODULE_3__["ResponsiveService"], _form_functions_service__WEBPACK_IMPORTED_MODULE_5__["FormFunctionsService"]])
    ], ClientInfoService);
    return ClientInfoService;
}());



/***/ }),

/***/ "./src/app/scheduler/common-components/add-to-calendar/add-to-calendar.component.css":
/*!*******************************************************************************************!*\
  !*** ./src/app/scheduler/common-components/add-to-calendar/add-to-calendar.component.css ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaGVkdWxlci9jb21tb24tY29tcG9uZW50cy9hZGQtdG8tY2FsZW5kYXIvYWRkLXRvLWNhbGVuZGFyLmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/scheduler/common-components/add-to-calendar/add-to-calendar.component.ts":
/*!******************************************************************************************!*\
  !*** ./src/app/scheduler/common-components/add-to-calendar/add-to-calendar.component.ts ***!
  \******************************************************************************************/
/*! exports provided: AddToCalendarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddToCalendarComponent", function() { return AddToCalendarComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/bottom-sheet */ "./node_modules/@angular/material/esm5/bottom-sheet.es5.js");
/* harmony import */ var _time_time_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! file-saver */ "./node_modules/file-saver/dist/FileSaver.min.js");
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");








var AddToCalendarComponent = /** @class */ (function () {
    function AddToCalendarComponent(bottomSheetRef, passedData, timeService, businessService, tagsService, schedulerPreferenceService) {
        this.bottomSheetRef = bottomSheetRef;
        this.passedData = passedData;
        this.timeService = timeService;
        this.businessService = businessService;
        this.tagsService = tagsService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.appointments = [];
        this.preference = this.schedulerPreferenceService.schedulerPreference;
    }
    AddToCalendarComponent.prototype.getISODateFormat = function (date) {
        var year = this.timeService.getPipeYearFromDate(date);
        var month = this.timeService.getPipeMonthFromDate(date);
        var day = this.timeService.getPipeDayFromDate(date);
        var hour = this.timeService.getPipeHourFromDate(date);
        var minutes = this.timeService.getPipeMinutesFromDate(date);
        var milliseconds = "00";
        var dateToReturn = year + "" + month + "" + day + "T" + hour + "" + minutes + "" + milliseconds + "Z";
        return dateToReturn;
    };
    AddToCalendarComponent.prototype.getICSFile = function (appointment) {
        this.businessService.getApptICS(appointment.hashId)
            .subscribe(function (response) {
            file_saver__WEBPACK_IMPORTED_MODULE_5__["saveAs"](response, appointment.hashId);
        });
    };
    AddToCalendarComponent.prototype.selectCalendarType = function (calendarType) {
        for (var i = 0, x = this.appointments.length; i < x; i++) {
            var url = "";
            var eventTitle = this.tagsService.convertApptPropertiesToTags('addToCalendarEventTitle', this.preference, this.appointments[i]);
            eventTitle = encodeURIComponent(eventTitle);
            var startDate = this.getISODateFormat(this.appointments[i].clientStartDateTimeUTC);
            var endDate = this.getISODateFormat(this.appointments[i].clientEndDateTimeUTC);
            if ((this.appointments[i].address === undefined || this.appointments[i].address === null || this.appointments[i].address.trim() === "") &&
                this.appointments[i].location.description !== undefined && this.appointments[i].location.description !== null && this.appointments[i].location.description.trim() !== "")
                this.appointments[i].address = this.appointments[i].location.description;
            var locationText = this.tagsService.convertApptPropertiesToTags('addToCalendarEventLocation', this.preference, this.appointments[i]);
            locationText = encodeURIComponent(locationText);
            var detailsText = this.tagsService.convertApptPropertiesToTags('addToCalendarEventDescription', this.preference, this.appointments[i]);
            detailsText = encodeURIComponent(detailsText);
            switch (calendarType) {
                case 'google':
                    var dates = startDate + "/" + endDate;
                    url = "http://www.google.com/calendar/render?action=TEMPLATE&text=" + eventTitle + "&dates=" + dates + "&location=" + locationText + "&details=" + detailsText;
                    break;
                case 'ical':
                case 'ics':
                    url = null;
                    this.getICSFile(this.appointments[i]);
                    break;
                case 'outlook':
                    url = "https://outlook.live.com/owa/?path=%2Fcalendar%2Faction%2Fcompose&rru=addevent&startdt=" + startDate + "&enddt=" + endDate + "&subject=" + eventTitle + "&location=" + locationText + "&description=" + detailsText;
                    break;
                case 'yahoo':
                    url = "https://calendar.yahoo.com/?v=60&view=d&type=20&title=" + eventTitle + "&st=" + startDate + "&et=" + endDate + "&in_loc=" + locationText + "&desc=" + detailsText;
            }
            if (url !== null)
                window.open(url, "_blank");
            this.businessService.recordAuditTrailNavigation('Add to Calendar (' + calendarType + ')').subscribe(function () { });
            this.bottomSheetRef.dismiss();
        }
    };
    AddToCalendarComponent.prototype.ngOnInit = function () {
        this.appointments = this.passedData.appointments;
    };
    AddToCalendarComponent.ctorParameters = function () { return [
        { type: _angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_2__["MatBottomSheetRef"] },
        { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_2__["MAT_BOTTOM_SHEET_DATA"],] }] },
        { type: _time_time_service__WEBPACK_IMPORTED_MODULE_3__["TimeService"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_6__["TagsService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_7__["SchedulerPreferenceService"] }
    ]; };
    AddToCalendarComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'add-to-calendar',
            template: __webpack_require__(/*! raw-loader!./add-to-calendar.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/common-components/add-to-calendar/add-to-calendar.component.html"),
            styles: [__webpack_require__(/*! ./add-to-calendar.component.css */ "./src/app/scheduler/common-components/add-to-calendar/add-to-calendar.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_2__["MAT_BOTTOM_SHEET_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_2__["MatBottomSheetRef"], Object, _time_time_service__WEBPACK_IMPORTED_MODULE_3__["TimeService"], _business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"], _tags_service__WEBPACK_IMPORTED_MODULE_6__["TagsService"], _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_7__["SchedulerPreferenceService"]])
    ], AddToCalendarComponent);
    return AddToCalendarComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/common-components/coupon/coupon.component.css":
/*!*************************************************************************!*\
  !*** ./src/app/scheduler/common-components/coupon/coupon.component.css ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".errorText {\n    text-align: left;\n    font-size: 12px;\n    position: relative;\n    top: -20px;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2NoZWR1bGVyL2NvbW1vbi1jb21wb25lbnRzL2NvdXBvbi9jb3Vwb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLFVBQVU7QUFDZCIsImZpbGUiOiJzcmMvYXBwL3NjaGVkdWxlci9jb21tb24tY29tcG9uZW50cy9jb3Vwb24vY291cG9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXJyb3JUZXh0IHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAtMjBweDtcbn1cbiJdfQ== */"

/***/ }),

/***/ "./src/app/scheduler/common-components/coupon/coupon.component.ts":
/*!************************************************************************!*\
  !*** ./src/app/scheduler/common-components/coupon/coupon.component.ts ***!
  \************************************************************************/
/*! exports provided: CouponComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CouponComponent", function() { return CouponComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var rxjs_index__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/index */ "./node_modules/rxjs/index.js");
/* harmony import */ var rxjs_index__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(rxjs_index__WEBPACK_IMPORTED_MODULE_5__);






var CouponComponent = /** @class */ (function () {
    function CouponComponent(tagsService, responsiveService) {
        this.tagsService = tagsService;
        this.responsiveService = responsiveService;
        this.onSearchCoupons = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.applyingCoupon = false;
    }
    CouponComponent.prototype.searchCoupons = function (couponCode) {
        this.applyingCoupon = true;
        this.onSearchCoupons.emit(couponCode);
    };
    CouponComponent.prototype.checkEnter = function (event, couponCode) {
        if (event.key === 'Enter') {
            this.searchCoupons(couponCode);
        }
    };
    CouponComponent.prototype.ngAfterViewChecked = function () {
        this.responsiveService.configureHorizontalSearch('couponSearchField', 'couponSearchBtn', this.outerBoxIdString);
    };
    CouponComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.applyingCouponSubscription = this.subjectServiceProvider.applyingCoupon.subscribe(function (event) {
            _this.applyingCoupon = event;
        });
        this.couponSubscription = this.subjectServiceProvider.coupon.subscribe(function (event) {
            _this.coupon = event;
        });
        this.couponStatusSubscription = this.subjectServiceProvider.couponStatus.subscribe(function (event) {
            _this.couponStatus = event;
        });
        this.couponStatusDetailSubscription = this.subjectServiceProvider.couponStatusDetail.subscribe(function (event) {
            switch (event) {
                case 'NO_CODE_ENTERED':
                    _this.couponStatusDetail = _this.tagsService.assignObjectToTags(_this.coupon, _this.preference.labelMap.servicePnlCouponErrorNoCode, _this.tagsService.couponFieldTags);
                    break;
                case 'NO_COUPON_FOUND':
                case 'INVALID_COUPONCODE':
                    _this.coupon = new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["Coupon"](true, _this.preference.businessId, _this.couponCode, null, null, null, null, null);
                    _this.couponStatusDetail = _this.tagsService.assignObjectToTags(_this.coupon, _this.preference.labelMap.servicePnlCouponErrorNoCouponFound, _this.tagsService.couponFieldTags);
                    break;
                case 'EXPIRED':
                    _this.couponStatusDetail = _this.tagsService.assignObjectToTags(_this.coupon, _this.preference.labelMap.servicePnlCouponErrorExpired, _this.tagsService.couponFieldTags);
                    break;
                case 'MAX_USE_REACHED':
                    _this.couponStatusDetail = _this.tagsService.assignObjectToTags(_this.coupon, _this.preference.labelMap.servicePnlCouponErrorMaxUseReached, _this.tagsService.couponFieldTags);
                    break;
                case 'NO_REASONS_DISCOUNTED':
                    _this.couponStatusDetail = _this.tagsService.assignObjectToTags(_this.coupon, _this.preference.labelMap.servicePnlCouponErrorNoReasonsDiscounted, _this.tagsService.couponFieldTags);
                    break;
                case 'INVALID_REASONID':
                    _this.couponStatusDetail = _this.tagsService.assignObjectToTags(_this.coupon, _this.preference.labelMap.cartCouponCodeReasonSpecific, _this.tagsService.couponFieldTags);
                    break;
                default:
                    var indexForCount = event.indexOf(':');
                    var appliedReasonCount = event.substring(indexForCount + 1);
                    _this.coupon.appliedReasonCount = Number(appliedReasonCount);
                    _this.couponStatusDetail = _this.tagsService.assignObjectToTags(_this.coupon, _this.preference.labelMap.servicePnlCouponSuccess, _this.tagsService.couponFieldTags);
            }
        });
    };
    CouponComponent.prototype.ngOnDestroy = function () {
        if (this.couponSubscription)
            this.couponSubscription.unsubscribe();
        if (this.applyingCouponSubscription)
            this.applyingCouponSubscription.unsubscribe();
        if (this.couponStatusSubscription)
            this.couponStatusSubscription.unsubscribe();
        if (this.couponStatusDetailSubscription)
            this.couponStatusDetailSubscription.unsubscribe();
    };
    CouponComponent.ctorParameters = function () { return [
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_3__["TagsService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_4__["ResponsiveService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], CouponComponent.prototype, "onSearchCoupons", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], CouponComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["CSFilterParameterBean"])
    ], CouponComponent.prototype, "CSFilterObj", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Number)
    ], CouponComponent.prototype, "filterMode", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", rxjs_index__WEBPACK_IMPORTED_MODULE_5__["Subscription"])
    ], CouponComponent.prototype, "couponSubscription", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", rxjs_index__WEBPACK_IMPORTED_MODULE_5__["Subscription"])
    ], CouponComponent.prototype, "applyingCouponSubscription", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", rxjs_index__WEBPACK_IMPORTED_MODULE_5__["Subscription"])
    ], CouponComponent.prototype, "couponStatusSubscription", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", rxjs_index__WEBPACK_IMPORTED_MODULE_5__["Subscription"])
    ], CouponComponent.prototype, "couponStatusDetailSubscription", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], CouponComponent.prototype, "outerBoxIdString", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], CouponComponent.prototype, "cartCoupon", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], CouponComponent.prototype, "subjectServiceProvider", void 0);
    CouponComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'coupon-search',
            template: __webpack_require__(/*! raw-loader!./coupon.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/common-components/coupon/coupon.component.html"),
            styles: [__webpack_require__(/*! ./coupon.component.css */ "./src/app/scheduler/common-components/coupon/coupon.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_tags_service__WEBPACK_IMPORTED_MODULE_3__["TagsService"], _responsive_service__WEBPACK_IMPORTED_MODULE_4__["ResponsiveService"]])
    ], CouponComponent);
    return CouponComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/common-components/coupon/coupon.module.ts":
/*!*********************************************************************!*\
  !*** ./src/app/scheduler/common-components/coupon/coupon.module.ts ***!
  \*********************************************************************/
/*! exports provided: CouponModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CouponModule", function() { return CouponModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _coupon_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./coupon.component */ "./src/app/scheduler/common-components/coupon/coupon.component.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../material.module */ "./src/app/material.module.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../ui-elements/ui-elements.module */ "./src/app/ui-elements/ui-elements.module.ts");







var CouponModule = /** @class */ (function () {
    function CouponModule() {
    }
    CouponModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [_coupon_component__WEBPACK_IMPORTED_MODULE_2__["CouponComponent"]],
            imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"], _material_module__WEBPACK_IMPORTED_MODULE_4__["MaterialModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormsModule"], _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_6__["UIElementsModule"]],
            exports: [_coupon_component__WEBPACK_IMPORTED_MODULE_2__["CouponComponent"]]
        })
    ], CouponModule);
    return CouponModule;
}());



/***/ }),

/***/ "./src/app/scheduler/common-components/footer/footer.component.ts":
/*!************************************************************************!*\
  !*** ./src/app/scheduler/common-components/footer/footer.component.ts ***!
  \************************************************************************/
/*! exports provided: FooterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FooterComponent", function() { return FooterComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _client_info_client_info_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../client-info/client-info.service */ "./src/app/scheduler/client-info/client-info.service.ts");






var FooterComponent = /** @class */ (function () {
    function FooterComponent(cdRef, businessService, responsiveService, clientInfoService) {
        this.cdRef = cdRef;
        this.businessService = businessService;
        this.responsiveService = responsiveService;
        this.clientInfoService = clientInfoService;
        this.onMovePanels = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.onAddToCalendar = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.finalConfirmationFooter = false;
        this.showLoginRegisterBtns = false;
        this.showPoweredByTimeTap = false;
        this.showAddToCalendarBtn = false;
        this.showNextBtn = false;
    }
    FooterComponent.prototype.ngOnChanges = function (changes) {
        if (changes.pageLoaded !== undefined && changes.pageLoaded.currentValue) {
            this.showNextBtn = true;
            this.cdRef.detectChanges();
        }
    };
    FooterComponent.prototype.adjustTitleHeight = function () {
        // if(this.preference.schedButtonsTopNav && this.responsiveService.innerWidth <= this.responsiveService.xsScreenBreakPoint){//TT-6092
        //     this.responsiveService.adjustMatCardTitleBarHeight("schedulerHeaderFooter")
        // }
        //
        // this.cdRef.detectChanges();
    };
    FooterComponent.prototype.ngAfterViewChecked = function () {
        if (this.showBookAnotherButton === undefined) {
            this.showBookAnotherButton = true;
        }
        this.responsiveService.adjustTitleMargin(this.titleId);
        this.cdRef.detectChanges();
        // this.adjustTitleHeight();
    };
    FooterComponent.prototype.checkFormGroupValid = function () {
        if (this.nextBtnId === 'saveBtn') {
            return this.clientInfoService.isClientInfoFormValid(this.formGroup, this.preference.schedulerPreferenceFieldDefnList);
        }
        else
            return this.formGroup.valid;
    };
    FooterComponent.prototype.ngOnInit = function () {
        if (this.nextBtnId === 'bookAnother') {
            this.finalConfirmationFooter = true;
        }
        if (this.responsiveService.isEmbedded) {
            var showBtns = this.responsiveService.showLoginRegisterBtnLogic(this.preference);
            if (showBtns.showLoginBtn || showBtns.showRegisterBtn) {
                this.showLoginRegisterBtns = true;
            }
        }
    };
    FooterComponent.prototype.movePanels = function (direction) {
        this.onMovePanels.emit(direction);
    };
    FooterComponent.prototype.addToCalendar = function () {
        this.onAddToCalendar.emit();
    };
    FooterComponent.ctorParameters = function () { return [
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_4__["ResponsiveService"] },
        { type: _client_info_client_info_service__WEBPACK_IMPORTED_MODULE_5__["ClientInfoService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], FooterComponent.prototype, "onMovePanels", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], FooterComponent.prototype, "onAddToCalendar", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], FooterComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], FooterComponent.prototype, "showBackButton", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], FooterComponent.prototype, "showBookAnotherButton", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"])
    ], FooterComponent.prototype, "formGroup", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], FooterComponent.prototype, "titleProperty", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], FooterComponent.prototype, "titleId", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], FooterComponent.prototype, "nextBtnId", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], FooterComponent.prototype, "nextBtnLabelProp", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], FooterComponent.prototype, "disableSave", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], FooterComponent.prototype, "showPoweredByTimeTap", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], FooterComponent.prototype, "showAddToCalendarBtn", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], FooterComponent.prototype, "pageLoaded", void 0);
    FooterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'scheduler-footer',
            template: __webpack_require__(/*! raw-loader!./footer.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/common-components/footer/footer.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"], _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"], _responsive_service__WEBPACK_IMPORTED_MODULE_4__["ResponsiveService"], _client_info_client_info_service__WEBPACK_IMPORTED_MODULE_5__["ClientInfoService"]])
    ], FooterComponent);
    return FooterComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/common-components/footer/footer.module.ts":
/*!*********************************************************************!*\
  !*** ./src/app/scheduler/common-components/footer/footer.module.ts ***!
  \*********************************************************************/
/*! exports provided: FooterModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FooterModule", function() { return FooterModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _footer_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./footer.component */ "./src/app/scheduler/common-components/footer/footer.component.ts");
/* harmony import */ var _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../ui-elements/ui-elements.module */ "./src/app/ui-elements/ui-elements.module.ts");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../material.module */ "./src/app/material.module.ts");






var FooterModule = /** @class */ (function () {
    function FooterModule() {
    }
    FooterModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [_footer_component__WEBPACK_IMPORTED_MODULE_3__["FooterComponent"]],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
                _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_4__["UIElementsModule"],
                _material_module__WEBPACK_IMPORTED_MODULE_5__["MaterialModule"]
            ],
            exports: [_footer_component__WEBPACK_IMPORTED_MODULE_3__["FooterComponent"]]
        })
    ], FooterModule);
    return FooterModule;
}());



/***/ }),

/***/ "./src/app/scheduler/common-components/scheduler-banner-list-items/scheduler-banner-list-items.component.css":
/*!*******************************************************************************************************************!*\
  !*** ./src/app/scheduler/common-components/scheduler-banner-list-items/scheduler-banner-list-items.component.css ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".pillButton {\n    border-radius: 35px;\n    padding: 15px 45px;\n}\ndiv.row .col-sm-3,\ndiv.row .col-sm-6 {\n    margin: auto;\n}\ndiv.row .col-sm-3 {\n    text-align: center;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2NoZWR1bGVyL2NvbW1vbi1jb21wb25lbnRzL3NjaGVkdWxlci1iYW5uZXItbGlzdC1pdGVtcy9zY2hlZHVsZXItYmFubmVyLWxpc3QtaXRlbXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1CQUFtQjtJQUNuQixrQkFBa0I7QUFDdEI7QUFDQTs7SUFFSSxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxrQkFBa0I7QUFDdEIiLCJmaWxlIjoic3JjL2FwcC9zY2hlZHVsZXIvY29tbW9uLWNvbXBvbmVudHMvc2NoZWR1bGVyLWJhbm5lci1saXN0LWl0ZW1zL3NjaGVkdWxlci1iYW5uZXItbGlzdC1pdGVtcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBpbGxCdXR0b24ge1xuICAgIGJvcmRlci1yYWRpdXM6IDM1cHg7XG4gICAgcGFkZGluZzogMTVweCA0NXB4O1xufVxuZGl2LnJvdyAuY29sLXNtLTMsXG5kaXYucm93IC5jb2wtc20tNiB7XG4gICAgbWFyZ2luOiBhdXRvO1xufVxuZGl2LnJvdyAuY29sLXNtLTMge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbiJdfQ== */"

/***/ }),

/***/ "./src/app/scheduler/common-components/scheduler-banner-list-items/scheduler-banner-list-items.component.ts":
/*!******************************************************************************************************************!*\
  !*** ./src/app/scheduler/common-components/scheduler-banner-list-items/scheduler-banner-list-items.component.ts ***!
  \******************************************************************************************************************/
/*! exports provided: SchedulerBannerListItemsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchedulerBannerListItemsComponent", function() { return SchedulerBannerListItemsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_MainObjectTypes_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../models/MainObjectTypes.model */ "./src/models/MainObjectTypes.model.ts");
/* harmony import */ var _models_IDProps_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../models/IDProps.model */ "./src/models/IDProps.model.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../responsive.service */ "./src/app/responsive.service.ts");





var SchedulerBannerListItemsComponent = /** @class */ (function () {
    function SchedulerBannerListItemsComponent(responsiveService) {
        this.responsiveService = responsiveService;
        this.litItemType = _models_MainObjectTypes_model__WEBPACK_IMPORTED_MODULE_2__["MainObjectTypes"].REASON;
        this.onSelectItem = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    }
    SchedulerBannerListItemsComponent.prototype.selectObject = function (changeEvent, moveForward, itemSelected) {
        var selectItem = { changeEvent: changeEvent, moveForward: moveForward, itemSelected: itemSelected };
        this.onSelectItem.emit(selectItem);
    };
    SchedulerBannerListItemsComponent.prototype.ngOnInit = function () {
        if (this.litItemType === _models_MainObjectTypes_model__WEBPACK_IMPORTED_MODULE_2__["MainObjectTypes"].REASON) {
            this.idProp = _models_IDProps_model__WEBPACK_IMPORTED_MODULE_3__["IDProps"].REASON_ID;
            this.titleProp = 'reasonDesc';
            this.descriptionProp = 'reasonDetail';
            this.imageProp = 'imageUrl';
        }
    };
    SchedulerBannerListItemsComponent.ctorParameters = function () { return [
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_4__["ResponsiveService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Array)
    ], SchedulerBannerListItemsComponent.prototype, "listItems", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], SchedulerBannerListItemsComponent.prototype, "litItemType", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], SchedulerBannerListItemsComponent.prototype, "onSelectItem", void 0);
    SchedulerBannerListItemsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'scheduler-banner-list-items',
            template: __webpack_require__(/*! raw-loader!./scheduler-banner-list-items.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/common-components/scheduler-banner-list-items/scheduler-banner-list-items.component.html"),
            styles: [__webpack_require__(/*! ./scheduler-banner-list-items.component.css */ "./src/app/scheduler/common-components/scheduler-banner-list-items/scheduler-banner-list-items.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_responsive_service__WEBPACK_IMPORTED_MODULE_4__["ResponsiveService"]])
    ], SchedulerBannerListItemsComponent);
    return SchedulerBannerListItemsComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/common-components/scheduler-banner-list-items/scheduler-banner-list-items.module.ts":
/*!***************************************************************************************************************!*\
  !*** ./src/app/scheduler/common-components/scheduler-banner-list-items/scheduler-banner-list-items.module.ts ***!
  \***************************************************************************************************************/
/*! exports provided: SchedulerBannerListItemsModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchedulerBannerListItemsModule", function() { return SchedulerBannerListItemsModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _scheduler_banner_list_items_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scheduler-banner-list-items.component */ "./src/app/scheduler/common-components/scheduler-banner-list-items/scheduler-banner-list-items.component.ts");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../material.module */ "./src/app/material.module.ts");
/* harmony import */ var _pipes_pipes_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../pipes/pipes.module */ "./src/pipes/pipes.module.ts");






var SchedulerBannerListItemsModule = /** @class */ (function () {
    function SchedulerBannerListItemsModule() {
    }
    SchedulerBannerListItemsModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [_scheduler_banner_list_items_component__WEBPACK_IMPORTED_MODULE_3__["SchedulerBannerListItemsComponent"]],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
                _material_module__WEBPACK_IMPORTED_MODULE_4__["MaterialModule"],
                _pipes_pipes_module__WEBPACK_IMPORTED_MODULE_5__["PipesModule"]
            ],
            exports: [_scheduler_banner_list_items_component__WEBPACK_IMPORTED_MODULE_3__["SchedulerBannerListItemsComponent"]]
        })
    ], SchedulerBannerListItemsModule);
    return SchedulerBannerListItemsModule;
}());



/***/ }),

/***/ "./src/app/scheduler/common-components/scheduler-list-items/scheduler-list-items.component.css":
/*!*****************************************************************************************************!*\
  !*** ./src/app/scheduler/common-components/scheduler-list-items/scheduler-list-items.component.css ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ":host /deep/ .mat-list-base .mat-list-item:not(.adjustChipListHeight) {\n    height: -webkit-fit-content;\n    height: -moz-fit-content;\n    height: fit-content;\n    padding: 10px 0px;\n    min-height: 39px;\n}\nh3.mat-line {\n    font-size: inherit;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2NoZWR1bGVyL2NvbW1vbi1jb21wb25lbnRzL3NjaGVkdWxlci1saXN0LWl0ZW1zL3NjaGVkdWxlci1saXN0LWl0ZW1zLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwyQkFBbUI7SUFBbkIsd0JBQW1CO0lBQW5CLG1CQUFtQjtJQUNuQixpQkFBaUI7SUFDakIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxrQkFBa0I7QUFDdEIiLCJmaWxlIjoic3JjL2FwcC9zY2hlZHVsZXIvY29tbW9uLWNvbXBvbmVudHMvc2NoZWR1bGVyLWxpc3QtaXRlbXMvc2NoZWR1bGVyLWxpc3QtaXRlbXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IC9kZWVwLyAubWF0LWxpc3QtYmFzZSAubWF0LWxpc3QtaXRlbTpub3QoLmFkanVzdENoaXBMaXN0SGVpZ2h0KSB7XG4gICAgaGVpZ2h0OiBmaXQtY29udGVudDtcbiAgICBwYWRkaW5nOiAxMHB4IDBweDtcbiAgICBtaW4taGVpZ2h0OiAzOXB4O1xufVxuaDMubWF0LWxpbmUge1xuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcbn1cbiJdfQ== */"

/***/ }),

/***/ "./src/app/scheduler/common-components/scheduler-list-items/scheduler-list-items.component.ts":
/*!****************************************************************************************************!*\
  !*** ./src/app/scheduler/common-components/scheduler-list-items/scheduler-list-items.component.ts ***!
  \****************************************************************************************************/
/*! exports provided: SelectSchedulingObject, SchedulerListItemsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectSchedulingObject", function() { return SelectSchedulingObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchedulerListItemsComponent", function() { return SchedulerListItemsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var SelectSchedulingObject = /** @class */ (function () {
    function SelectSchedulingObject() {
    }
    return SelectSchedulingObject;
}());


var SchedulerListItemsComponent = /** @class */ (function () {
    function SchedulerListItemsComponent(responsiveService, cdRef) {
        this.responsiveService = responsiveService;
        this.cdRef = cdRef;
        this.onSelectItem = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["EventEmitter"]();
    }
    SchedulerListItemsComponent.prototype.setHeightOnItems = function () {
        if (this.responsiveService.onMobileViewPort) {
            for (var i = 0, x = this.listItems.length; i < x; i++) {
                this.responsiveService.adjustMatLineItemHeight(this.listItemType, this.listItems[i][this.idProp], this.listItems[i], this.preference, this.imageProp);
            }
            this.cdRef.detectChanges();
        }
    };
    SchedulerListItemsComponent.prototype.ngAfterViewChecked = function () {
        this.setHeightOnItems();
    };
    SchedulerListItemsComponent.prototype.ngAfterViewInit = function () {
        this.setHeightOnItems();
    };
    SchedulerListItemsComponent.prototype.ngOnInit = function () {
        var _this = this;
        setTimeout(function () {
            _this.setHeightOnItems();
        }, 200);
    };
    SchedulerListItemsComponent.prototype.selectObject = function (changeEvent, moveForward, itemSelected) {
        var selectItem = { changeEvent: changeEvent, moveForward: moveForward, itemSelected: itemSelected };
        this.onSelectItem.emit(selectItem);
    };
    SchedulerListItemsComponent.ctorParameters = function () { return [
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_1__["ResponsiveService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ChangeDetectorRef"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Array)
    ], SchedulerListItemsComponent.prototype, "listItems", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], SchedulerListItemsComponent.prototype, "listItemType", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], SchedulerListItemsComponent.prototype, "idProp", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], SchedulerListItemsComponent.prototype, "titleProp", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], SchedulerListItemsComponent.prototype, "descriptionProp", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], SchedulerListItemsComponent.prototype, "imageProp", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], SchedulerListItemsComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], SchedulerListItemsComponent.prototype, "currency", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], SchedulerListItemsComponent.prototype, "onSelectItem", void 0);
    SchedulerListItemsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: 'scheduler-list-items',
            template: __webpack_require__(/*! raw-loader!./scheduler-list-items.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/common-components/scheduler-list-items/scheduler-list-items.component.html"),
            styles: [__webpack_require__(/*! ./scheduler-list-items.component.css */ "./src/app/scheduler/common-components/scheduler-list-items/scheduler-list-items.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_responsive_service__WEBPACK_IMPORTED_MODULE_1__["ResponsiveService"], _angular_core__WEBPACK_IMPORTED_MODULE_2__["ChangeDetectorRef"]])
    ], SchedulerListItemsComponent);
    return SchedulerListItemsComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/common-components/timezone/timezone.component.ts":
/*!****************************************************************************!*\
  !*** ./src/app/scheduler/common-components/timezone/timezone.component.ts ***!
  \****************************************************************************/
/*! exports provided: TimezoneComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimezoneComponent", function() { return TimezoneComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _time_time_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _timezone_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./timezone.service */ "./src/app/scheduler/common-components/timezone/timezone.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");






var TimezoneComponent = /** @class */ (function () {
    function TimezoneComponent(timeService, timezoneService, schedulerPreferenceService) {
        this.timeService = timeService;
        this.timezoneService = timezoneService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.showBreak = true;
        this.getMonthDates = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.changingTimezones = false;
        this.loadingTimezones = false;
        this.loading = true;
        this.preference = schedulerPreferenceService.schedulerPreference;
    }
    TimezoneComponent.prototype.setTimeZoneDisplayName = function () {
        var _this = this;
        this.loading = true;
        if (this.timezoneService.timezones) {
            this.timezones = this.timezoneService.timezones;
            for (var i = 0, x = this.timezones.length; i < x; i++)
                if (this.timezones[i].timeZoneCode === this.clientTimeZone)
                    this.timeZoneNameForDisplay = this.timezones[i].timeZoneDisplayName;
            this.loading = false;
        }
        else {
            var timezonesLoadedSubscription_1 = this.timezoneService.timezonesLoaded.subscribe(function () {
                _this.setTimeZoneDisplayName();
                timezonesLoadedSubscription_1.unsubscribe();
            });
        }
    };
    TimezoneComponent.prototype.ngOnInit = function () {
        this.setTimeZoneDisplayName();
    };
    TimezoneComponent.prototype.setOriginalTimezone = function () {
        this.originalTimezone = lodash__WEBPACK_IMPORTED_MODULE_3__["cloneDeep"](this.clientTimeZone);
    };
    TimezoneComponent.prototype.toggleChangeTimezone = function () {
        this.changingTimezones = !this.changingTimezones;
        if (this.changingTimezones) {
            this.setOriginalTimezone();
        }
    };
    TimezoneComponent.prototype.setTimezone = function (event, timezone) {
        if (event.isUserInput && timezone.timeZoneCode !== this.originalTimezone) {
            this.clientTimeZone = timezone.timeZoneCode;
            this.timeService.setClientTimezone(timezone.timeZoneCode);
            this.setOriginalTimezone();
            this.timeZoneNameForDisplay = timezone.timeZoneDisplayName;
            sessionStorage.setItem("timezone", timezone.timeZoneCode);
            //Below was commented out but readding to fix TT-6273
            this.getMonthDates.emit({ path: 'timezoneChange', timezoneCode: timezone.timeZoneCode, timezoneId: timezone.timeZoneId });
        }
    };
    TimezoneComponent.ctorParameters = function () { return [
        { type: _time_time_service__WEBPACK_IMPORTED_MODULE_2__["TimeService"] },
        { type: _timezone_service__WEBPACK_IMPORTED_MODULE_4__["TimezoneService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_5__["SchedulerPreferenceService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], TimezoneComponent.prototype, "clientTimeZone", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], TimezoneComponent.prototype, "showBreak", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], TimezoneComponent.prototype, "getMonthDates", void 0);
    TimezoneComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'timezone-selector',
            template: __webpack_require__(/*! raw-loader!./timezone.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/common-components/timezone/timezone.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_time_time_service__WEBPACK_IMPORTED_MODULE_2__["TimeService"], _timezone_service__WEBPACK_IMPORTED_MODULE_4__["TimezoneService"], _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_5__["SchedulerPreferenceService"]])
    ], TimezoneComponent);
    return TimezoneComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/common-components/timezone/timezone.module.ts":
/*!*************************************************************************!*\
  !*** ./src/app/scheduler/common-components/timezone/timezone.module.ts ***!
  \*************************************************************************/
/*! exports provided: TimezoneModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimezoneModule", function() { return TimezoneModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _timezone_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./timezone.component */ "./src/app/scheduler/common-components/timezone/timezone.component.ts");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../material.module */ "./src/app/material.module.ts");





var TimezoneModule = /** @class */ (function () {
    function TimezoneModule() {
    }
    TimezoneModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [_timezone_component__WEBPACK_IMPORTED_MODULE_3__["TimezoneComponent"]],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
                _material_module__WEBPACK_IMPORTED_MODULE_4__["MaterialModule"]
            ],
            exports: [_timezone_component__WEBPACK_IMPORTED_MODULE_3__["TimezoneComponent"]]
        })
    ], TimezoneModule);
    return TimezoneModule;
}());



/***/ }),

/***/ "./src/app/scheduler/common-components/timezone/timezone.service.ts":
/*!**************************************************************************!*\
  !*** ./src/app/scheduler/common-components/timezone/timezone.service.ts ***!
  \**************************************************************************/
/*! exports provided: TimezoneService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimezoneService", function() { return TimezoneService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/internal/operators */ "./node_modules/rxjs/internal/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _api_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../api.service */ "./src/app/api.service.ts");
/* harmony import */ var _format_functions_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../format-functions.service */ "./src/app/format-functions.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _time_time_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var rxjs_index__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/index */ "./node_modules/rxjs/index.js");
/* harmony import */ var rxjs_index__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(rxjs_index__WEBPACK_IMPORTED_MODULE_11__);












var TimezoneService = /** @class */ (function () {
    function TimezoneService(titleCasePipe, injector, http) {
        this.titleCasePipe = titleCasePipe;
        this.injector = injector;
        this.http = http;
        this.timezonesLoaded = new rxjs_index__WEBPACK_IMPORTED_MODULE_11__["Subject"]();
        this.apiService = injector.get(_api_service__WEBPACK_IMPORTED_MODULE_4__["ApiService"]);
        this.formatFnsService = injector.get(_format_functions_service__WEBPACK_IMPORTED_MODULE_5__["FormatFunctionsService"]);
        this.schedulerPreferenceService = injector.get(_scheduler_preference_service__WEBPACK_IMPORTED_MODULE_8__["SchedulerPreferenceService"]);
        this.timeService = injector.get(_time_time_service__WEBPACK_IMPORTED_MODULE_9__["TimeService"]);
        this.tagsService = injector.get(_tags_service__WEBPACK_IMPORTED_MODULE_10__["TagsService"]);
    }
    TimezoneService.prototype.getTimezones = function () {
        var _this = this;
        return this.http
            .get(this.apiService.apiUrl + 'timezones', { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (responseData) {
            for (var i = 0, x = responseData.length; i < x; i++) {
                responseData[i].timeZoneDisplayName = responseData[i].timeZoneCode;
                if (responseData[i].timeZoneDisplayName.indexOf('_') !== -1)
                    responseData[i].timeZoneDisplayName = responseData[i].timeZoneDisplayName.replace(new RegExp('_', 'g'), ' ');
            }
            _this.timezones = responseData;
            _this.timezonesLoaded.next();
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(this.apiService.handleError));
    };
    TimezoneService.prototype.getTimezoneForDisplay = function (CSFilterObj) {
        return this.http.post(this.apiService.apiUrl + 'timezoneForDisplay', CSFilterObj, { responseType: 'text' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (res) {
            return res;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(this.apiService.handleError));
    };
    TimezoneService.prototype.matchClientTZ = function (businessTimezone, csFilterParameterBean, recallAfterMatchingMoment) {
        var timezoneFound = false;
        if (this.schedulerPreferenceService.schedulerPreference.allowTZChange === 1 && !recallAfterMatchingMoment) {
            csFilterParameterBean.clientTimeZone = sessionStorage.getItem("browserTimezone");
            this.timeService.setClientTimezone(csFilterParameterBean.clientTimeZone); // LHB 10/16/2020 TT-7087
        }
        for (var i = 0, x = this.timezones.length; i < x; i++) {
            if (this.timezones[i].timeZoneCode === csFilterParameterBean.clientTimeZone) {
                csFilterParameterBean.clientTimeZoneId = this.timezones[i].timeZoneId;
                if (this.schedulerPreferenceService.schedulerPreference.allowTZChange === 1) { //Check for TT-6286
                    timezoneFound = true;
                    // this.timeZoneNameForDisplay = this.timezones[i].timeZoneDisplayName;
                }
            }
            if (this.timezones[i].timeZoneCode === businessTimezone) {
                csFilterParameterBean.businessTimeZoneId = this.timezones[i].timeZoneId;
                csFilterParameterBean.businessTimeZone = this.timezones[i].timeZoneCode;
                this.timeService.setBusinessTimezone(csFilterParameterBean.businessTimeZone);
                if (this.schedulerPreferenceService.schedulerPreference.allowTZChange !== 1) {
                    timezoneFound = true;
                    // this.timeZoneNameForDisplay = this.timezones[i].timeZoneDisplayName;
                    csFilterParameterBean.clientTimeZone = csFilterParameterBean.businessTimeZone;
                    this.timeService.setClientTimezone(csFilterParameterBean.clientTimeZone); // LHB 10/16/2020 TT-7087
                }
            }
        }
        if (!timezoneFound) {
            var timezoneFromMomentConversion = this.tagsService.convertSessionTZFromMoment(csFilterParameterBean.clientTimeZone);
            if (timezoneFromMomentConversion !== csFilterParameterBean.clientTimeZone) {
                csFilterParameterBean.clientTimeZone = timezoneFromMomentConversion;
                this.timeService.setClientTimezone(csFilterParameterBean.clientTimeZone); // LHB 10/16/2020 TT-7087
                sessionStorage.setItem("timezone", timezoneFromMomentConversion);
            }
        }
        return csFilterParameterBean;
    };
    TimezoneService.ctorParameters = function () { return [
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_6__["TitleCasePipe"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] },
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_7__["HttpClient"] }
    ]; };
    TimezoneService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_6__["TitleCasePipe"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"], _angular_common_http__WEBPACK_IMPORTED_MODULE_7__["HttpClient"]])
    ], TimezoneService);
    return TimezoneService;
}());



/***/ }),

/***/ "./src/app/scheduler/common-components/title-bar/title-bar.component.ts":
/*!******************************************************************************!*\
  !*** ./src/app/scheduler/common-components/title-bar/title-bar.component.ts ***!
  \******************************************************************************/
/*! exports provided: TitleBarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TitleBarComponent", function() { return TitleBarComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _form_functions_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../form-functions.service */ "./src/app/form-functions.service.ts");





var TitleBarComponent = /** @class */ (function () {
    function TitleBarComponent(businessService, cdRef, responsiveService, formFunctionsService) {
        this.businessService = businessService;
        this.cdRef = cdRef;
        this.responsiveService = responsiveService;
        this.formFunctionsService = formFunctionsService;
        this.showPrintButton = false;
        this.showLoginRegisterBtns = false;
    }
    TitleBarComponent.prototype.ngAfterViewChecked = function () {
        // if(this.responsiveService.innerWidth <= this.responsiveService.xsScreenBreakPoint){
        //   this.responsiveService.adjustMatCardTitleBarHeight('schedulerHeader', this.titleId);
        // }
    };
    TitleBarComponent.prototype.ngOnInit = function () {
        if (this.responsiveService.isEmbedded) {
            var showBtns = this.responsiveService.showLoginRegisterBtnLogic(this.preference);
            if (showBtns.showLoginBtn || showBtns.showRegisterBtn) {
                this.showLoginRegisterBtns = true;
            }
        }
    };
    TitleBarComponent.prototype.printPage = function () {
        if (this.printId !== undefined) {
            this.formFunctionsService.printElement(document.getElementById(this.printId));
            window.print();
        }
    };
    TitleBarComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_2__["BusinessService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_3__["ResponsiveService"] },
        { type: _form_functions_service__WEBPACK_IMPORTED_MODULE_4__["FormFunctionsService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], TitleBarComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], TitleBarComponent.prototype, "titleProperty", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], TitleBarComponent.prototype, "titleId", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], TitleBarComponent.prototype, "showPrintButton", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], TitleBarComponent.prototype, "printId", void 0);
    TitleBarComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'scheduler-title-bar',
            template: __webpack_require__(/*! raw-loader!./title-bar.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/common-components/title-bar/title-bar.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_2__["BusinessService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"], _responsive_service__WEBPACK_IMPORTED_MODULE_3__["ResponsiveService"],
            _form_functions_service__WEBPACK_IMPORTED_MODULE_4__["FormFunctionsService"]])
    ], TitleBarComponent);
    return TitleBarComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/common-components/title-bar/title-bar.module.ts":
/*!***************************************************************************!*\
  !*** ./src/app/scheduler/common-components/title-bar/title-bar.module.ts ***!
  \***************************************************************************/
/*! exports provided: TitleBarModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TitleBarModule", function() { return TitleBarModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _title_bar_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./title-bar.component */ "./src/app/scheduler/common-components/title-bar/title-bar.component.ts");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../material.module */ "./src/app/material.module.ts");
/* harmony import */ var _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../ui-elements/ui-elements.module */ "./src/app/ui-elements/ui-elements.module.ts");






var TitleBarModule = /** @class */ (function () {
    function TitleBarModule() {
    }
    TitleBarModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [_title_bar_component__WEBPACK_IMPORTED_MODULE_3__["TitleBarComponent"]],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
                _material_module__WEBPACK_IMPORTED_MODULE_4__["MaterialModule"],
                _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_5__["UIElementsModule"]
            ],
            exports: [_title_bar_component__WEBPACK_IMPORTED_MODULE_3__["TitleBarComponent"]]
        })
    ], TitleBarModule);
    return TitleBarModule;
}());



/***/ }),

/***/ "./src/app/scheduler/common-components/zip-code-filter/zip-code-filter.component.ts":
/*!******************************************************************************************!*\
  !*** ./src/app/scheduler/common-components/zip-code-filter/zip-code-filter.component.ts ***!
  \******************************************************************************************/
/*! exports provided: ZipCodeFilterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZipCodeFilterComponent", function() { return ZipCodeFilterComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../responsive.service */ "./src/app/responsive.service.ts");




var ZipCodeFilterComponent = /** @class */ (function () {
    function ZipCodeFilterComponent(responsiveService) {
        this.responsiveService = responsiveService;
        this.onSearchObjects = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    }
    ZipCodeFilterComponent.prototype.ngAfterViewChecked = function () {
        this.responsiveService.configureHorizontalSearch('filterSearchField', 'filterSearchBtn');
    };
    ZipCodeFilterComponent.prototype.ngOnInit = function () {
    };
    ZipCodeFilterComponent.prototype.searchFilters = function (filterValue) {
        this.CSFilterObj.filterMode = this.filterMode;
        switch (this.filterMode) {
            case 1:
                this.CSFilterObj.filterLocation = filterValue;
                break;
            case 2:
                this.CSFilterObj.filterStaff = filterValue;
                break;
        }
        this.onSearchObjects.emit(this.CSFilterObj);
    };
    ZipCodeFilterComponent.prototype.checkEnter = function (event, filterValue) {
        if (event.key === 'Enter') {
            this.searchFilters(filterValue);
        }
    };
    ZipCodeFilterComponent.ctorParameters = function () { return [
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_3__["ResponsiveService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ZipCodeFilterComponent.prototype, "onSearchObjects", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ZipCodeFilterComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["CSFilterParameterBean"])
    ], ZipCodeFilterComponent.prototype, "CSFilterObj", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Number)
    ], ZipCodeFilterComponent.prototype, "filterMode", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], ZipCodeFilterComponent.prototype, "searching", void 0);
    ZipCodeFilterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'zip-code-filter',
            template: __webpack_require__(/*! raw-loader!./zip-code-filter.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/common-components/zip-code-filter/zip-code-filter.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_responsive_service__WEBPACK_IMPORTED_MODULE_3__["ResponsiveService"]])
    ], ZipCodeFilterComponent);
    return ZipCodeFilterComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/confirmation/confirmation.component.css":
/*!*******************************************************************!*\
  !*** ./src/app/scheduler/confirmation/confirmation.component.css ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ":host /deep/ ul {/*LHB 07/13/2020 TT-6784*/\n    list-style-position: inside;\n    -webkit-padding-start: 0px;\n            padding-inline-start: 0px;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2NoZWR1bGVyL2NvbmZpcm1hdGlvbi9jb25maXJtYXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQkFBaUIseUJBQXlCO0lBQ3RDLDJCQUEyQjtJQUMzQiwwQkFBeUI7WUFBekIseUJBQXlCO0FBQzdCIiwiZmlsZSI6InNyYy9hcHAvc2NoZWR1bGVyL2NvbmZpcm1hdGlvbi9jb25maXJtYXRpb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IC9kZWVwLyB1bCB7LypMSEIgMDcvMTMvMjAyMCBUVC02Nzg0Ki9cbiAgICBsaXN0LXN0eWxlLXBvc2l0aW9uOiBpbnNpZGU7XG4gICAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IDBweDtcbn1cbiJdfQ== */"

/***/ }),

/***/ "./src/app/scheduler/confirmation/confirmation.component.ts":
/*!******************************************************************!*\
  !*** ./src/app/scheduler/confirmation/confirmation.component.ts ***!
  \******************************************************************/
/*! exports provided: ConfirmationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConfirmationComponent", function() { return ConfirmationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _time_time_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../client-account/client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/material/bottom-sheet */ "./node_modules/@angular/material/esm5/bottom-sheet.es5.js");
/* harmony import */ var _common_components_add_to_calendar_add_to_calendar_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../common-components/add-to-calendar/add-to-calendar.component */ "./src/app/scheduler/common-components/add-to-calendar/add-to-calendar.component.ts");
/* harmony import */ var _models_Appointment_model__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../models/Appointment.model */ "./src/models/Appointment.model.ts");
/* harmony import */ var _session_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../session.service */ "./src/app/session.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../models/SchedulerPanel.model */ "./src/models/SchedulerPanel.model.ts");

















var ConfirmationComponent = /** @class */ (function () {
    function ConfirmationComponent(tagsService, timeService, responsiveService, sanitizer, router, route, clientAccountService, businessService, addToCalendarSheet, sessionService, schedulerPreferenceService) {
        this.tagsService = tagsService;
        this.timeService = timeService;
        this.responsiveService = responsiveService;
        this.sanitizer = sanitizer;
        this.router = router;
        this.route = route;
        this.clientAccountService = clientAccountService;
        this.businessService = businessService;
        this.addToCalendarSheet = addToCalendarSheet;
        this.sessionService = sessionService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.onMovePanels = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.showBackButton = false;
        this.showBookAnotherButton = true;
        this.paymentButtonTag = '%PAYMENT_BUTTON%';
        this.connectingWithPaymentPortal = false;
        this.enteringPayment = false;
        this.redirectUrl = null;
        this.redirectUrlLoaded = false;
        this.appointments = [];
        this.dblBookedAppointments = [];
        this.showAddToCalendarBtn = true;
        this.showPrintButton = false;
        this.bookAnotherProp = 'labelBookAnother';
    }
    ConfirmationComponent.prototype.movePanels = function (direction, continueShoppingUrl) {
        if (continueShoppingUrl !== null && continueShoppingUrl.trim() !== '') {
            window.location.href = continueShoppingUrl;
        }
        else {
            this.onMovePanels.emit({ direction: direction, panel: this.panel });
        }
    };
    ConfirmationComponent.prototype.addToCalendar = function () {
        var apptsToPass = [this.bookingObject];
        if (this.appointments !== undefined && this.appointments !== null && this.appointments.length > 0) {
            apptsToPass = this.appointments;
        }
        this.addToCalendarSheet.open(_common_components_add_to_calendar_add_to_calendar_component__WEBPACK_IMPORTED_MODULE_12__["AddToCalendarComponent"], { data: { appointments: apptsToPass } });
    };
    ConfirmationComponent.prototype.sanitizeRedirectUrl = function (url) {
        return this.sanitizer.bypassSecurityTrustResourceUrl(url);
    };
    ConfirmationComponent.prototype.payInvoice = function () {
        var _this = this;
        this.connectingWithPaymentPortal = true;
        if (this.clientAccountService.loggedInClient === undefined) { // LHB 05/26/2020 -- added if check around setting of client account to fix TT-6619
            var clientAccount = {
                emailAddress: this.bookingObject.client.emailAddress,
                password: null,
                active: true,
                businessId: this.bookingObject.businessId,
                clientAccountId: null,
                clientList: [this.bookingObject.client]
            };
            this.clientAccountService.setLoggedInClient(clientAccount);
        }
        this.businessService.getInvoiceById(this.bookingObject.invoiceId)
            .subscribe(function (invoice) {
            var navigationExtras = {
                relativeTo: _this.route.root,
                queryParams: {
                    paying: _this.preference.booleanMap.autoProgressToPaymentPortal
                },
                state: {
                    invoice: invoice,
                    apptHash: _this.bookingObject.hashId || null,
                    paymentRequired: _this.paymentRequired,
                    authorizeRequired: _this.authorizeRequired,
                },
                queryParamsHandling: 'merge',
            };
            _this.router.navigate(['invoices/' + invoice.invoiceHash], navigationExtras);
        });
    };
    // _clickHandler = this.payInvoice.bind(this);
    ConfirmationComponent.prototype.ngAfterViewChecked = function () {
        this.responsiveService.setHeightForEmbedScheduler();
    };
    //Call to test API to test cancellation due to non payment after waitlist accept
    // cancelNoPay(){
    //     this.businessService.cancelApptNoPay(this.bookingObject).subscribe(response => {
    //         console.log(response);
    //     })
    // }
    ConfirmationComponent.prototype.ngAfterViewInit = function () {
        if (this.showPaymentButton || this.authorizeRequired) {
            var paymentBtnAreaParentTag = jquery__WEBPACK_IMPORTED_MODULE_10__("span#paymentBtnArea").parent().get(0).tagName;
            var paymentBtnAreaParentStyle = jquery__WEBPACK_IMPORTED_MODULE_10__("span#paymentBtnArea").parent().get(0).style;
            var wrapperHtml = "<" + paymentBtnAreaParentTag + " style='" + paymentBtnAreaParentStyle.cssText + "'></" + paymentBtnAreaParentTag + ">";
            jquery__WEBPACK_IMPORTED_MODULE_10__("#paymentBtnWrapper").wrap(wrapperHtml);
        }
    };
    ConfirmationComponent.prototype.checkBookAnotherRedirect = function () {
        if (this.showBookAnotherButton && this.preference.continueShoppingUrl !== undefined && this.preference.continueShoppingUrl !== null && this.preference.continueShoppingUrl.length > 10) {
            var redirectSubstring = this.preference.continueShoppingUrl.substring(0, 9);
            if (redirectSubstring === 'redirect:') {
                var continueShoppingUrl = this.preference.continueShoppingUrl.substring(9);
                this.movePanels('next', continueShoppingUrl);
            }
        }
    };
    ConfirmationComponent.prototype.configureWaitListTextDisplay = function (waitLists, confirmationText) {
        //waitlistSuccessText
        if (!this.panelTitleProperty) { //panelTitleProperty has not been defined by appt object already
            this.panelTitleProperty = 'thanksWaitListTitle';
        }
        this.confirmationText = confirmationText + this.tagsService.convertWaitListPropertiesToTags('waitListSuccessText', this.preference, waitLists, waitLists[0]);
        this.checkBookAnotherRedirect();
    };
    ConfirmationComponent.prototype.organizeTextAroundPaymentButton = function () {
        if (!this.authorizeRequired && (this.appt && this.appt.reason && !this.appt.reason.requirePayment && this.appt.reason.requirePreAuthPayment))
            this.showPaymentButton = false;
        else
            this.showPaymentButton = true;
        this.paymentButtonLabel = this.authorizeRequired ? this.preference.labelMap.authorizeCCBtnLabel : this.preference.labelMap.payNowButtonLabel;
        //Add all text before payment button to temp variable
        var textBeforePaymentButton = '';
        var indexOfEndOfPaymentBtnTag = this.confirmationText.indexOf(this.paymentButtonTag) + this.paymentButtonTag.length;
        textBeforePaymentButton = this.confirmationText.substring(0, indexOfEndOfPaymentBtnTag);
        this.confirmationAfterPaymentButton = this.confirmationText.substring(indexOfEndOfPaymentBtnTag);
        this.confirmationText = textBeforePaymentButton;
        this.confirmationText = this.confirmationText.replace(new RegExp('%PAYMENT_BUTTON%', 'g'), '<span id="paymentBtnArea"></span>');
    };
    ConfirmationComponent.prototype.isStaffConfirmationRequired = function (bookingObject) {
        return (this.businessService.requireStaffConfirmation && bookingObject.reason.requireStaffConfirmation === null) || bookingObject.reason.requireStaffConfirmation;
    };
    ConfirmationComponent.prototype.configureConfirmationMessage = function (bookingObject, multipleAppts, msgProp, authReq, paymentReq, showBookAnother, titleProp) {
        if (titleProp === undefined)
            titleProp = msgProp + 'Title';
        this.panelTitleProperty = titleProp;
        if (multipleAppts !== undefined)
            this.confirmationText = this.tagsService.convertRepeatingApptPropertiesToTags(msgProp + 'Repeating', this.preference, multipleAppts.recurringAppointment, this.appointments);
        else
            this.confirmationText = this.tagsService.convertApptPropertiesToTags(msgProp, this.preference, bookingObject);
        this.authorizeRequired = authReq;
        this.paymentRequired = paymentReq;
        if (showBookAnother !== undefined)
            this.showBookAnotherButton = showBookAnother;
    };
    ConfirmationComponent.prototype.configureConfirmationTextDisplay = function (bookingObject, multipleAppts) {
        //First check if account accepts payment upon booking and whether or not the appointment has an invoice and price set to it
        //Did have the check to show require confirmation message first, but moved that to second per TT-6279
        if (this.schedulerPreferenceService.schedulerPreference.acceptPaymentOnBooking &&
            bookingObject.invoiceId !== null &&
            bookingObject.price !== 0) { //If the business accepts payments upon booking, the invoice id is filled in, and the price is not equal to zero (i.e. a coupon hasn't been applied to totally discount price) then show one of the payment confirmation messages
            if (bookingObject.reason.requirePreAuthPayment || (bookingObject.reason.requirePreAuthPayment === null && this.businessService.requirePreAuthPayment)) {
                //Show the thanksPaymentTitleAuthOnly and thanksInfoPaymentAuthOnly messages
                this.configureConfirmationMessage(bookingObject, multipleAppts, 'thanksInfoPaymentAuthOnly', true, false, false, 'thanksPaymentTitleAuthOnly');
            }
            else if (bookingObject.reason.requirePayment || (bookingObject.reason.requirePayment === null && this.businessService.requirePayment)) {
                if (this.isStaffConfirmationRequired(bookingObject))
                    this.configureConfirmationMessage(bookingObject, multipleAppts, 'thanksInfoPaymentRequiredStaffConfirmationRequired', false, true, false);
                else //Show the thanksPaymentTitleRequired and thanksInfoPaymentRequired messages
                    this.configureConfirmationMessage(bookingObject, multipleAppts, 'thanksInfoPaymentRequired', false, true, false, 'thanksPaymentTitleRequired');
            }
            else if (this.isStaffConfirmationRequired(bookingObject)) {
                //Show the thanksInfoPaymentStaffConfirmationRequiredTitle and thanksInfoPaymentStaffConfirmationRequired messages
                this.configureConfirmationMessage(bookingObject, multipleAppts, 'thanksInfoPaymentStaffConfirmationRequired', false, false, this.showBookAnotherButton);
            }
            else {
                //Show the thanksPaymentTitle and thanksInfoPayment messages
                this.configureConfirmationMessage(bookingObject, multipleAppts, 'thanksInfoPayment', false, false, this.showBookAnotherButton, 'thanksPaymentTitle');
            }
            if (this.confirmationText.indexOf(this.paymentButtonTag) !== -1) {
                this.organizeTextAroundPaymentButton();
            }
        }
        else if (this.isStaffConfirmationRequired(bookingObject)) { //DOES REQUIRE STAFF CONFIRMATION
            this.configureConfirmationMessage(bookingObject, multipleAppts, 'thanksInfoConfirm', false, false, this.showBookAnotherButton, this.panel.panelTitleProperty);
        }
        else if ((!this.businessService.requireStaffConfirmation && bookingObject.reason.requireStaffConfirmation === null) || bookingObject.reason.requireStaffConfirmation === false) { //DOES NOT REQUIRE STAFF CONFIRMATION
            this.configureConfirmationMessage(bookingObject, multipleAppts, 'thanksInfo', false, false, this.showBookAnotherButton, this.panel.panelTitleProperty);
        }
        if (multipleAppts !== undefined && this.dblBookedAppointments.length > 0) {
            this.confirmationText = this.confirmationText + this.tagsService.convertRepeatingApptPropertiesToTags('thanksInfoRepeatingApptsNotSaved', this.preference, multipleAppts.recurringAppointment, this.dblBookedAppointments);
        }
        if (bookingObject.client !== undefined && bookingObject.client !== null && bookingObject.client.formList !== undefined && bookingObject.client.formList !== null && bookingObject.client.formList.length > 0) {
            var formsListText = this.tagsService.convertClientFormsList(this.preference.labelMap.disclaimerFormConfirmationMessage, bookingObject.client, this.preference);
            this.confirmationText = this.confirmationText + formsListText;
        }
        if (this.waitLists !== undefined) {
            this.configureWaitListTextDisplay(this.waitLists, this.confirmationText);
        }
        else {
            this.checkBookAnotherRedirect();
        }
    };
    ConfirmationComponent.prototype.ngOnInit = function () {
        if (this.directionComingFrom === 'joinWaitList')
            this.bookAnotherProp = 'registerAnotherWaitList';
        if (this.clientAccountService.loggedInClient !== undefined && this.clientAccountService.loggedInClient !== null) {
            for (var i = 0, x = this.clientAccountService.loggedInClient.clientList.length; i < x; i++) {
                if (this.appt !== undefined && this.appt !== null && this.clientAccountService.loggedInClient.clientList[i].clientId === this.appt.client.clientId) {
                    this.clientAccountService.loggedInClient.clientList[i] = this.appt.client;
                    this.clientAccountService.selectedClient = this.clientAccountService.loggedInClient.clientList[i];
                }
                if (this.multipleAppts !== undefined && this.multipleAppts !== null && this.clientAccountService.loggedInClient.clientList[i].clientId === this.multipleAppts.recurringAppointment.client.clientId) {
                    this.clientAccountService.loggedInClient.clientList[i] = this.multipleAppts.recurringAppointment.client;
                    this.clientAccountService.selectedClient = this.clientAccountService.loggedInClient.clientList[i];
                }
            }
        }
        if (this.preference.onlyAllowBookingByInvitation)
            this.sessionService.sessionObject.invitationCompleted = true;
        if (this.preference.showBookAnother === false)
            this.showBookAnotherButton = false;
        if (this.preference.allowPrintConfirmation)
            this.showPrintButton = true;
        this.showAddToCalendarBtn = this.preference.showAddToCalendar;
        if (this.multipleAppts) {
            this.bookingObject = this.multipleAppts.recurringAppointment;
            for (var i = 0, x = this.multipleAppts.appointments.length; i < x; i++) {
                if (this.multipleAppts.appointments[i].thankYouString === this.businessService.doubleBookedTimeErrorMsg) {
                    this.dblBookedAppointments.push(this.multipleAppts.appointments[i]);
                }
                else {
                    this.appointments.push(this.multipleAppts.appointments[i]);
                }
            }
            this.configureConfirmationTextDisplay(this.multipleAppts.recurringAppointment, this.multipleAppts);
        }
        else if (this.appt) {
            this.bookingObject = this.appt;
            this.configureConfirmationTextDisplay(this.appt, undefined);
        }
        else if (this.waitLists) {
            this.bookingObject = this.waitLists;
            this.showAddToCalendarBtn = false;
            this.configureWaitListTextDisplay(this.waitLists, '');
        }
    };
    ConfirmationComponent.ctorParameters = function () { return [
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_3__["TagsService"] },
        { type: _time_time_service__WEBPACK_IMPORTED_MODULE_4__["TimeService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_9__["ResponsiveService"] },
        { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__["DomSanitizer"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_8__["ActivatedRoute"] },
        { type: _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_5__["ClientAccountService"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_6__["BusinessService"] },
        { type: _angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_11__["MatBottomSheet"] },
        { type: _session_service__WEBPACK_IMPORTED_MODULE_14__["SessionService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_15__["SchedulerPreferenceService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ConfirmationComponent.prototype, "onMovePanels", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ConfirmationComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__["schedulerPanel"])
    ], ConfirmationComponent.prototype, "panel", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["CSFilterParameterBean"])
    ], ConfirmationComponent.prototype, "CSFilterObj", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _models_Appointment_model__WEBPACK_IMPORTED_MODULE_13__["Appointment"])
    ], ConfirmationComponent.prototype, "appt", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["MultipleAppts"])
    ], ConfirmationComponent.prototype, "multipleAppts", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Array)
    ], ConfirmationComponent.prototype, "waitLists", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ConfirmationComponent.prototype, "directionComingFrom", void 0);
    ConfirmationComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'confirmation-panel',
            template: __webpack_require__(/*! raw-loader!./confirmation.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/confirmation/confirmation.component.html"),
            styles: [__webpack_require__(/*! ./confirmation.component.css */ "./src/app/scheduler/confirmation/confirmation.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_tags_service__WEBPACK_IMPORTED_MODULE_3__["TagsService"], _time_time_service__WEBPACK_IMPORTED_MODULE_4__["TimeService"], _responsive_service__WEBPACK_IMPORTED_MODULE_9__["ResponsiveService"],
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__["DomSanitizer"], _angular_router__WEBPACK_IMPORTED_MODULE_8__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_8__["ActivatedRoute"],
            _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_5__["ClientAccountService"], _business_service__WEBPACK_IMPORTED_MODULE_6__["BusinessService"], _angular_material_bottom_sheet__WEBPACK_IMPORTED_MODULE_11__["MatBottomSheet"],
            _session_service__WEBPACK_IMPORTED_MODULE_14__["SessionService"], _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_15__["SchedulerPreferenceService"]])
    ], ConfirmationComponent);
    return ConfirmationComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/confirmation/confirmation.module.ts":
/*!***************************************************************!*\
  !*** ./src/app/scheduler/confirmation/confirmation.module.ts ***!
  \***************************************************************/
/*! exports provided: ConfirmationModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConfirmationModule", function() { return ConfirmationModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _confirmation_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./confirmation.component */ "./src/app/scheduler/confirmation/confirmation.component.ts");
/* harmony import */ var _common_components_footer_footer_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common-components/footer/footer.module */ "./src/app/scheduler/common-components/footer/footer.module.ts");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../material.module */ "./src/app/material.module.ts");
/* harmony import */ var _common_components_title_bar_title_bar_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common-components/title-bar/title-bar.module */ "./src/app/scheduler/common-components/title-bar/title-bar.module.ts");
/* harmony import */ var _pipes_pipes_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../pipes/pipes.module */ "./src/pipes/pipes.module.ts");








var ConfirmationModule = /** @class */ (function () {
    function ConfirmationModule() {
    }
    ConfirmationModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [_confirmation_component__WEBPACK_IMPORTED_MODULE_3__["ConfirmationComponent"]],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
                _common_components_footer_footer_module__WEBPACK_IMPORTED_MODULE_4__["FooterModule"],
                _material_module__WEBPACK_IMPORTED_MODULE_5__["MaterialModule"],
                _common_components_title_bar_title_bar_module__WEBPACK_IMPORTED_MODULE_6__["TitleBarModule"],
                _pipes_pipes_module__WEBPACK_IMPORTED_MODULE_7__["PipesModule"]
            ],
            exports: [_confirmation_component__WEBPACK_IMPORTED_MODULE_3__["ConfirmationComponent"]]
        })
    ], ConfirmationModule);
    return ConfirmationModule;
}());



/***/ }),

/***/ "./src/app/scheduler/groups/groups.component.ts":
/*!******************************************************!*\
  !*** ./src/app/scheduler/groups/groups.component.ts ***!
  \******************************************************/
/*! exports provided: GroupsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupsComponent", function() { return GroupsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _screening_question_screening_question_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../screening-question/screening-question.component */ "./src/app/scheduler/screening-question/screening-question.component.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _models_Group_model__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../models/Group.model */ "./src/models/Group.model.ts");
/* harmony import */ var _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../models/SchedulerPanel.model */ "./src/models/SchedulerPanel.model.ts");
/* harmony import */ var _scheduler_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../scheduler.service */ "./src/app/scheduler/scheduler.service.ts");










var GroupsComponent = /** @class */ (function () {
    function GroupsComponent(businessService, dialog, responsiveService, schedulerService) {
        this.businessService = businessService;
        this.dialog = dialog;
        this.responsiveService = responsiveService;
        this.schedulerService = schedulerService;
        this.onMovePanels = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.groups = [];
        this.showBackButton = true;
        this.groupsLoaded = false;
        this.errorLoading = false;
    }
    GroupsComponent.prototype.loadGroups = function () {
        var _this = this;
        this.groupsLoaded = false;
        this.groups = [];
        this.responsiveService.setHeightForEmbedScheduler();
        switch (this.panel.panel) {
            case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_8__["SchedulerPanelValues"].locationSuperGroups:
                this.groupType = _models_Group_model__WEBPACK_IMPORTED_MODULE_7__["GroupTypes"].LOCATION_GROUP;
                break;
            case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_8__["SchedulerPanelValues"].locationGroups:
                this.groupType = _models_Group_model__WEBPACK_IMPORTED_MODULE_7__["GroupTypes"].LOCATION;
                break;
            case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_8__["SchedulerPanelValues"].reasonSuperGroups:
                this.groupType = _models_Group_model__WEBPACK_IMPORTED_MODULE_7__["GroupTypes"].SERVICE_GROUP;
                break;
            case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_8__["SchedulerPanelValues"].reasonGroups:
                this.groupType = _models_Group_model__WEBPACK_IMPORTED_MODULE_7__["GroupTypes"].SERVICE;
                break;
        }
        this.businessService.getGroups(this.groupType, this.CSFilterObj)
            .subscribe(function (groups) {
            _this.groups = groups;
            if (_this.groups.length === 1 && _this.directionComingFrom === 'next') {
                var moveForward = false;
                if (_this.preference.autoAdvanceWhenSingle) {
                    moveForward = true;
                }
                _this.selectObject(_this.groups[0], _this.preference.autoAdvanceWhenSingle, undefined);
            }
            if (_this.panel.formGroup.value.group !== null) {
                var objFound = false;
                for (var i = 0, x = _this.groups.length; i < x; i++) {
                    if (_this.groups[i].groupId === _this.panel.formGroup.value.group.groupId) {
                        _this.groups[i].selected = true;
                        objFound = true;
                    }
                }
                if (!objFound) {
                    _this.panel.formGroup = _this.schedulerService.getPanelForm(_this.panel.panel, _this.preference.schedulerPreferenceFieldDefnList);
                }
            }
            _this.groupsLoaded = true;
        }, function (error) {
            _this.groupsLoaded = false;
            _this.errorLoading = true;
        });
    };
    GroupsComponent.prototype.ngOnChanges = function (changes) {
        if (changes.panel !== undefined && changes.panel.previousValue !== undefined) { //TT-6158 -- when going from reason super groups to reason groups, need to register the change and reload groups
            this.loadGroups();
        }
    };
    GroupsComponent.prototype.ngOnInit = function () {
        this.loadGroups();
    };
    GroupsComponent.prototype.movePanels = function (direction) {
        var _this = this;
        if (this.selectedGroup !== undefined && this.selectedGroup.screeningQuestion !== undefined && this.selectedGroup.screeningQuestion !== null && direction === 'next') {
            var dialogRef = this.dialog.open(_screening_question_screening_question_component__WEBPACK_IMPORTED_MODULE_4__["ScreeningQuestionComponent"], { maxWidth: this.responsiveService.getMaxWidthForModals(),
                data: { screeningQuestion: this.selectedGroup.screeningQuestion },
                id: 'GroupScreeningQuestionDialog',
                panelClass: 'screeningQuestionDialog' });
            dialogRef.afterClosed().subscribe(function (result) {
                if (result === 'pass') {
                    _this.onMovePanels.emit({ direction: direction, panel: _this.panel });
                }
            });
        }
        else {
            this.onMovePanels.emit({ direction: direction, panel: this.panel });
        }
    };
    GroupsComponent.prototype.selectObject = function (group, moveForward, event) {
        if (!this.businessService.checkInnerHTMLForHrefClick(event)) {
            //remove selected from all other groups; this is an issue when you initially select a groups that has a screening question; you dismiss that and select another group
            //that requires a screening question and it looks like you've selected two groups
            for (var i = 0, x = this.groups.length; i < x; i++) {
                this.groups[i].selected = false;
            }
            group.selected = true;
            this.selectedGroup = group;
            this.panel.formGroup.patchValue({ group: this.selectedGroup });
            switch (this.panel.panel) {
                case 'locationSuperGroups':
                    if (this.CSFilterObj.locationSuperGroupIdList === null && moveForward) {
                        this.movePanels('next');
                    }
                    break;
                case 'locationGroups':
                    if (this.CSFilterObj.locationGroupIdList === null && moveForward) {
                        this.movePanels('next');
                    }
                    break;
                case 'reasonSuperGroups':
                    if (this.CSFilterObj.reasonSuperGroupIdList === null && moveForward) {
                        this.movePanels('next');
                    }
                    break;
                case 'reasonGroups':
                    if (this.CSFilterObj.reasonGroupIdList === null && moveForward) {
                        this.movePanels('next');
                    }
                    break;
            }
        }
    };
    GroupsComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"] },
        { type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_6__["ResponsiveService"] },
        { type: _scheduler_service__WEBPACK_IMPORTED_MODULE_9__["SchedulerService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], GroupsComponent.prototype, "onMovePanels", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], GroupsComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_8__["schedulerPanel"])
    ], GroupsComponent.prototype, "panel", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["CSFilterParameterBean"])
    ], GroupsComponent.prototype, "CSFilterObj", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], GroupsComponent.prototype, "directionComingFrom", void 0);
    GroupsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'groups-panel',
            template: __webpack_require__(/*! raw-loader!./groups.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/groups/groups.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"], _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"], _responsive_service__WEBPACK_IMPORTED_MODULE_6__["ResponsiveService"], _scheduler_service__WEBPACK_IMPORTED_MODULE_9__["SchedulerService"]])
    ], GroupsComponent);
    return GroupsComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/locations/location-map/location-map.component.ts":
/*!****************************************************************************!*\
  !*** ./src/app/scheduler/locations/location-map/location-map.component.ts ***!
  \****************************************************************************/
/*! exports provided: LocationMapComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocationMapComponent", function() { return LocationMapComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _agm_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @agm/core */ "./node_modules/@agm/core/fesm5/agm-core.js");
/* harmony import */ var _location_map_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./location-map.service */ "./src/app/scheduler/locations/location-map/location-map.service.ts");




var LocationMapComponent = /** @class */ (function () {
    function LocationMapComponent(locationMapService) {
        this.locationMapService = locationMapService;
        this.selectObject = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.centerLat = 0;
        this.centerLng = 0;
        this.zoom = this.locationMapService.zoom;
    }
    LocationMapComponent.prototype.triggerRedraw = function () {
        this.agmMap.triggerResize();
    };
    LocationMapComponent.prototype.zoomChanged = function (zoom) {
        this.locationMapService.zoom = zoom;
    };
    LocationMapComponent.prototype.setMapZoom = function (map, count) {
        var _this = this;
        if (this.mapLocations.length === 1 || count === 10) {
            //zoom is already set, don't do anything
        }
        else if (this.mapLocations.length === 0 && count <= 10) {
            setTimeout(function () {
                count++;
                _this.setMapZoom(map, count);
            }, 200);
        }
        else {
            var bounds = new google.maps.LatLngBounds();
            for (var _i = 0, _a = this.mapLocations; _i < _a.length; _i++) {
                var location_1 = _a[_i];
                bounds.extend(new google.maps.LatLng(location_1.latitude, location_1.longitude));
            }
            map.fitBounds(bounds);
        }
    };
    LocationMapComponent.prototype.setMapProps = function () {
        if (this.mapLocations) {
            this.centerLat = 0;
            this.centerLng = 0;
            for (var i = 0, x = this.mapLocations.length; i < x; i++) {
                if (this.mapLocations[i].latitude !== null && this.mapLocations[i].longitude !== null) {
                    this.centerLat = this.centerLat + this.mapLocations[i].latitude;
                    this.centerLng = this.centerLng + this.mapLocations[i].longitude;
                }
            }
            if (this.centerLat !== 0)
                this.centerLat = this.centerLat / this.mapLocations.length;
            if (this.centerLng !== 0)
                this.centerLng = this.centerLng / this.mapLocations.length;
            if (this.mapLocations.length === 1)
                this.zoom = 13;
            if (this.agmMap)
                this.setMapZoom(this.googleMap, 0);
        }
    };
    LocationMapComponent.prototype.agmMapSubscriptionFn = function (counter) {
        var _this = this;
        if (counter < 1000 && this.agmMap === undefined) {
            setTimeout(function () {
                counter = counter + 1;
                _this.agmMapSubscriptionFn(counter);
            });
        }
        else if (this.agmMap !== undefined) {
            var mapSubscription_1 = this.agmMap.mapReady.subscribe(function (map) {
                _this.googleMap = map;
                _this.setMapZoom(map, 0);
                mapSubscription_1.unsubscribe();
            });
        }
    };
    LocationMapComponent.prototype.ngAfterContentChecked = function () {
        this.agmMapSubscriptionFn(0);
    };
    LocationMapComponent.prototype.ngOnChanges = function (changes) {
        if (changes.hasOwnProperty('mapLocations') && !changes.mapLocations.firstChange)
            this.setMapProps();
    };
    LocationMapComponent.prototype.ngOnInit = function () {
        this.setMapProps();
    };
    LocationMapComponent.prototype.ngOnDestroy = function () {
        if (this.agmMap)
            this.agmMap.ngOnDestroy();
    };
    LocationMapComponent.ctorParameters = function () { return [
        { type: _location_map_service__WEBPACK_IMPORTED_MODULE_3__["LocationMapService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Array)
    ], LocationMapComponent.prototype, "mapLocations", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('AgmMap', { static: false }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _agm_core__WEBPACK_IMPORTED_MODULE_2__["AgmMap"])
    ], LocationMapComponent.prototype, "agmMap", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], LocationMapComponent.prototype, "selectObject", void 0);
    LocationMapComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-location-map',
            template: "\n    <agm-map #AgmMap id=\"map_canvas\" [zoom]=\"zoom\" [latitude]=\"centerLat\" [longitude]=\"centerLng\" (zoomChange)=\"zoomChanged($event)\">\n      <agm-marker *ngFor=\"let location of mapLocations\" [latitude]=\"location.latitude\" [longitude]=\"location.longitude\">\n        <agm-info-window>\n          <div class=\"mapInfoWindowLocationDetails\"  [innerHTML]=\"location.locationPnlMapInfoWindowContent | safeHtml\"></div>\n          <button (click)=\"selectObject.emit(location)\" mat-stroked-button\n                  buttonStyling baseStyle=\"basic\" btnClass=\"locationPnlMapSelectBtn\"\n                  class=\"btn btn-block btn-sm locationPnlMapSelectBtn agm-info-window-select\">\n            Select\n          </button>\n        </agm-info-window>\n      </agm-marker>\n    </agm-map>\n  "
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_location_map_service__WEBPACK_IMPORTED_MODULE_3__["LocationMapService"]])
    ], LocationMapComponent);
    return LocationMapComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/locations/location-map/location-map.module.ts":
/*!*************************************************************************!*\
  !*** ./src/app/scheduler/locations/location-map/location-map.module.ts ***!
  \*************************************************************************/
/*! exports provided: LocationMapModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocationMapModule", function() { return LocationMapModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _location_map_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./location-map.component */ "./src/app/scheduler/locations/location-map/location-map.component.ts");
/* harmony import */ var _agm_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @agm/core */ "./node_modules/@agm/core/fesm5/agm-core.js");
/* harmony import */ var _pipes_pipes_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../pipes/pipes.module */ "./src/pipes/pipes.module.ts");
/* harmony import */ var _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../ui-elements/ui-elements.module */ "./src/app/ui-elements/ui-elements.module.ts");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../material.module */ "./src/app/material.module.ts");








var LocationMapModule = /** @class */ (function () {
    function LocationMapModule() {
    }
    LocationMapModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [_location_map_component__WEBPACK_IMPORTED_MODULE_3__["LocationMapComponent"]],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
                _agm_core__WEBPACK_IMPORTED_MODULE_4__["AgmCoreModule"],
                _pipes_pipes_module__WEBPACK_IMPORTED_MODULE_5__["PipesModule"],
                _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_6__["UIElementsModule"],
                _material_module__WEBPACK_IMPORTED_MODULE_7__["MaterialModule"]
            ],
            exports: [_location_map_component__WEBPACK_IMPORTED_MODULE_3__["LocationMapComponent"]]
        })
    ], LocationMapModule);
    return LocationMapModule;
}());



/***/ }),

/***/ "./src/app/scheduler/locations/location-map/location-map.service.ts":
/*!**************************************************************************!*\
  !*** ./src/app/scheduler/locations/location-map/location-map.service.ts ***!
  \**************************************************************************/
/*! exports provided: LocationMapService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocationMapService", function() { return LocationMapService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var LocationMapService = /** @class */ (function () {
    function LocationMapService() {
        this.zoom = 8;
    }
    LocationMapService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], LocationMapService);
    return LocationMapService;
}());



/***/ }),

/***/ "./src/app/scheduler/locations/locations.component.ts":
/*!************************************************************!*\
  !*** ./src/app/scheduler/locations/locations.component.ts ***!
  \************************************************************/
/*! exports provided: LocationsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocationsComponent", function() { return LocationsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _variable_address_variable_address_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./variable-address/variable-address.component */ "./src/app/scheduler/locations/variable-address/variable-address.component.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../models/SchedulerPanel.model */ "./src/models/SchedulerPanel.model.ts");
/* harmony import */ var _scheduler_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../scheduler.service */ "./src/app/scheduler/scheduler.service.ts");











var LocationsComponent = /** @class */ (function () {
    function LocationsComponent(businessService, tagsService, dialog, responsiveService, schedulerPreferenceService, schedulerService) {
        this.businessService = businessService;
        this.tagsService = tagsService;
        this.dialog = dialog;
        this.responsiveService = responsiveService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.schedulerService = schedulerService;
        this.onMovePanels = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.locations = [];
        this.showBackButton = true;
        this.locationsLoaded = false;
        this.errorLoading = false;
        this.searchingLocations = false;
        this.locationPnlNoLocationsFilterSearchMsg = '';
        this.locationsHaveMapAddress = false;
    }
    LocationsComponent.prototype.renderMap = function (locations) {
        // this.preference.showLocationMap = false; LHB 6/1/2021 TT-7868 -- commented this out to fix issue; not sure why i was setting it to false in the first place
        this.locationsHaveMapAddress = false;
        var mapLocations = [];
        for (var i = 0, x = locations.length; i < x; i++) {
            if (locations[i].latitude !== null && locations[i].longitude !== null) {
                this.locationsHaveMapAddress = true;
                this.locations[i].locationPnlMapInfoWindowContent = this.tagsService.assignObjectToTags(locations[i], this.preference.labelMap.locationPnlMapInfoWindowContent, this.tagsService.locationFieldTags);
                mapLocations.push(locations[i]);
            }
        }
        this.mapLocations = mapLocations;
        this.locationsLoaded = true;
        if (this.mapLocations.length > 0)
            this.responsiveService.toggleLocationsMapView('show');
        if (this.locationMapComponent)
            this.locationMapComponent.triggerRedraw();
        this.searchingLocations = false;
    };
    LocationsComponent.prototype.getLocations = function (CSFilterObj, filterSearch) {
        var _this = this;
        this.searchingLocations = filterSearch;
        this.businessService.getLocations(CSFilterObj)
            .subscribe(function (locations) {
            _this.locations = locations;
            if (_this.locations.length === 1 && _this.preference.autoAdvanceWhenSingle && _this.directionComingFrom === 'next') {
                _this.locationsLoaded = true;
                _this.searchingLocations = false;
                // this.preference.showLocationMap = false;
                _this.selectObject(_this.locations[0], true);
            }
            else {
                if (_this.locations.length === 0 && CSFilterObj.filterLocation !== undefined && CSFilterObj.filterLocation !== null && CSFilterObj.filterLocation !== '') {
                    _this.locationPnlNoLocationsFilterSearchMsg = _this.preference.labelMap.locationPnlNoLocationsFilterSearchMsg.replace(new RegExp('%FILTER_SEARCH%', 'g'), CSFilterObj.filterLocation);
                }
                if (_this.locations.length === 1) { //TT-6233
                    _this.selectObject(_this.locations[0], false);
                }
                if (!_this.searchingLocations) {
                    _this.totalLocationsLength = locations.length;
                }
                if (_this.preference.showLocationMap) {
                    _this.renderMap(_this.locations);
                }
                else {
                    _this.locationsLoaded = true;
                    _this.searchingLocations = false;
                }
                if (_this.panel.formGroup.value.location !== null) {
                    var objFound = false;
                    for (var i = 0, x = _this.locations.length; i < x; i++) {
                        if (_this.locations[i].locationId === _this.panel.formGroup.value.location.locationId) {
                            _this.locations[i].selected = true;
                            objFound = true;
                        }
                    }
                    if (!objFound)
                        _this.panel.formGroup = _this.schedulerService.getPanelForm(_this.panel.panel, _this.preference.schedulerPreferenceFieldDefnList);
                }
            }
        }, function (error) {
            _this.locationsLoaded = false;
            _this.errorLoading = true;
            _this.searchingLocations = false;
        });
    };
    LocationsComponent.prototype.ngOnInit = function () {
        this.responsiveService.setHeightForEmbedScheduler();
        this.getLocations(this.CSFilterObj, false);
    };
    LocationsComponent.prototype.movePanels = function (direction) {
        var _this = this;
        if (direction === 'next' && this.selectedLocation !== undefined && this.selectedLocation.locationType !== undefined && this.selectedLocation.locationType !== null && this.selectedLocation.locationType === 'VARIABLE') {
            var dialogRef = this.dialog.open(_variable_address_variable_address_component__WEBPACK_IMPORTED_MODULE_6__["VariableAddressComponent"], { maxWidth: this.responsiveService.getMaxWidthForModals(), data: { selectedLocation: this.selectedLocation, preference: this.preference }, id: 'variableAddressModal' });
            dialogRef.afterClosed().subscribe(function (result) {
                if (result !== undefined && result.variableAddress !== undefined && result.variableAddress !== null && result.variableAddress !== '') {
                    _this.onMovePanels.emit({ direction: direction, panel: _this.panel });
                }
            });
        }
        else {
            this.CSFilterObj.filterLocation = null;
            this.onMovePanels.emit({ direction: direction, panel: this.panel });
        }
    };
    LocationsComponent.prototype.selectObject = function (location, moveForward, event) {
        if (!this.businessService.checkInnerHTMLForHrefClick(event)) {
            //remove selected from all other locations; this is an issue when you initially select a location that requires validate address; you dismiss that and select another location
            //and it looks like you've selected two locations
            for (var i = 0, x = this.locations.length; i < x; i++) {
                this.locations[i].selected = false;
            }
            this.selectedLocation = location;
            this.selectedLocation.selected = true;
            if (this.selectedLocation.allowTZChange !== null && this.selectedLocation.allowTZChange !== this.preference.allowTZChange) {
                this.schedulerPreferenceService.schedulerPreference.allowTZChange = this.selectedLocation.allowTZChange;
            }
            else if (this.selectedLocation.allowTZChange === null && this.preference.allowTZChange !== this.preference.allowTZChangeOriginal) {
                //Added this check in case they initially select a location that has a different allowTZChange status than the preference
                //and then toggle back and choose one that should have the default -- in same work effort as everything for TT-6286
                this.schedulerPreferenceService.schedulerPreference.allowTZChange = this.preference.allowTZChangeOriginal;
            }
            this.panel.formGroup.patchValue({ location: this.selectedLocation, preference: this.preference });
            if (moveForward) {
                this.movePanels('next');
            }
        }
    };
    LocationsComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_4__["TagsService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialog"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_7__["ResponsiveService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_8__["SchedulerPreferenceService"] },
        { type: _scheduler_service__WEBPACK_IMPORTED_MODULE_10__["SchedulerService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], LocationsComponent.prototype, "onMovePanels", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], LocationsComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_9__["schedulerPanel"])
    ], LocationsComponent.prototype, "panel", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["CSFilterParameterBean"])
    ], LocationsComponent.prototype, "CSFilterObj", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], LocationsComponent.prototype, "directionComingFrom", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('locationMapComponent', { static: false }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], LocationsComponent.prototype, "locationMapComponent", void 0);
    LocationsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'locations-panel',
            template: __webpack_require__(/*! raw-loader!./locations.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/locations/locations.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"], _tags_service__WEBPACK_IMPORTED_MODULE_4__["TagsService"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialog"], _responsive_service__WEBPACK_IMPORTED_MODULE_7__["ResponsiveService"],
            _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_8__["SchedulerPreferenceService"], _scheduler_service__WEBPACK_IMPORTED_MODULE_10__["SchedulerService"]])
    ], LocationsComponent);
    return LocationsComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/locations/variable-address/variable-address.component.ts":
/*!************************************************************************************!*\
  !*** ./src/app/scheduler/locations/variable-address/variable-address.component.ts ***!
  \************************************************************************************/
/*! exports provided: VariableAddressComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VariableAddressComponent", function() { return VariableAddressComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../responsive.service */ "./src/app/responsive.service.ts");





var VariableAddressComponent = /** @class */ (function () {
    function VariableAddressComponent(passedData, dialogRef, businessService, responsiveService) {
        this.passedData = passedData;
        this.dialogRef = dialogRef;
        this.businessService = businessService;
        this.responsiveService = responsiveService;
        this.validatingAddress = false;
        this.errorValidatingAddress = false;
        this.matchingAddresses = [];
    }
    VariableAddressComponent.prototype.ngOnInit = function () {
        this.selectedLocation = this.passedData.selectedLocation;
        this.preference = this.passedData.preference;
        if (this.passedData.address) {
            this.address = this.passedData.address;
            this.validateAddress(this.address.toString());
        }
    };
    VariableAddressComponent.prototype.ngAfterViewChecked = function () {
        this.responsiveService.configureValidateAddressBtnForMobile();
    };
    VariableAddressComponent.prototype.confirmAddress = function (address) {
        this.selectedLocation.variableAddress = address;
        this.dialogRef.close(this.selectedLocation);
    };
    VariableAddressComponent.prototype.validateAddress = function (address) {
        var _this = this;
        this.validatingAddress = true;
        this.businessService.validateVariableLocationAddress(address)
            .subscribe(function (addresses) {
            _this.validatingAddress = false;
            _this.matchingAddresses = addresses;
        }, function (error) {
            _this.validatingAddress = false;
            _this.errorValidatingAddress = true;
        });
    };
    VariableAddressComponent.prototype.checkEnter = function (event, address) {
        if (event.key === 'Enter') {
            this.validateAddress(address);
        }
    };
    VariableAddressComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] },
        { type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_4__["ResponsiveService"] }
    ]; };
    VariableAddressComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-variable-address',
            template: __webpack_require__(/*! raw-loader!./variable-address.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/locations/variable-address/variable-address.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"],
            _responsive_service__WEBPACK_IMPORTED_MODULE_4__["ResponsiveService"]])
    ], VariableAddressComponent);
    return VariableAddressComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/reasons/reason-chip-list/reason-chip-list.component.css":
/*!***********************************************************************************!*\
  !*** ./src/app/scheduler/reasons/reason-chip-list/reason-chip-list.component.css ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "div.reasonDetailsInfo {\n    display: flex;\n}\n@media (max-width: 575.98px) {\n    div.reasonDetailsInfo mat-chip-list {\n        margin-right: 10px;\n    }\n}\n:host /deep/ mat-chip-list.wrapRow .mat-chip-list-wrapper {\n    flex-wrap: wrap;\n}\n:host /deep/ mat-chip-list.wrapRow mat-chip {\n    margin-bottom: 6px !important;\n    margin-right: 6px !important;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2NoZWR1bGVyL3JlYXNvbnMvcmVhc29uLWNoaXAtbGlzdC9yZWFzb24tY2hpcC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0FBQ2pCO0FBQ0E7SUFDSTtRQUNJLGtCQUFrQjtJQUN0QjtBQUNKO0FBQ0E7SUFDSSxlQUFlO0FBQ25CO0FBQ0E7SUFDSSw2QkFBNkI7SUFDN0IsNEJBQTRCO0FBQ2hDIiwiZmlsZSI6InNyYy9hcHAvc2NoZWR1bGVyL3JlYXNvbnMvcmVhc29uLWNoaXAtbGlzdC9yZWFzb24tY2hpcC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJkaXYucmVhc29uRGV0YWlsc0luZm8ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNTc1Ljk4cHgpIHtcbiAgICBkaXYucmVhc29uRGV0YWlsc0luZm8gbWF0LWNoaXAtbGlzdCB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICB9XG59XG46aG9zdCAvZGVlcC8gbWF0LWNoaXAtbGlzdC53cmFwUm93IC5tYXQtY2hpcC1saXN0LXdyYXBwZXIge1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbn1cbjpob3N0IC9kZWVwLyBtYXQtY2hpcC1saXN0LndyYXBSb3cgbWF0LWNoaXAge1xuICAgIG1hcmdpbi1ib3R0b206IDZweCAhaW1wb3J0YW50O1xuICAgIG1hcmdpbi1yaWdodDogNnB4ICFpbXBvcnRhbnQ7XG59XG4iXX0= */"

/***/ }),

/***/ "./src/app/scheduler/reasons/reason-chip-list/reason-chip-list.component.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/scheduler/reasons/reason-chip-list/reason-chip-list.component.ts ***!
  \**********************************************************************************/
/*! exports provided: ReasonChipListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReasonChipListComponent", function() { return ReasonChipListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _models_Reason_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../models/Reason.model */ "./src/models/Reason.model.ts");




var ReasonChipListComponent = /** @class */ (function () {
    function ReasonChipListComponent(responsiveService) {
        this.responsiveService = responsiveService;
        this.selectObject = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    }
    ReasonChipListComponent.prototype.ngOnInit = function () {
    };
    ReasonChipListComponent.prototype.ngAfterViewChecked = function () {
        this.responsiveService.checkMatOptionWidth(".durationDropdown", "#schedulerContainerRow");
    };
    ReasonChipListComponent.prototype.setReasonDuration = function (event, duration, reason) {
        reason.selectedDuration = duration;
        this.selectObject.emit({ event: event, reason: reason });
    };
    ReasonChipListComponent.prototype.setRepeatingApptOption = function (event, duration, reason) {
        reason.selectedRepeatingApptOption = duration;
        this.selectObject.emit({ event: event, reason: reason });
    };
    ReasonChipListComponent.ctorParameters = function () { return [
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_2__["ResponsiveService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ReasonChipListComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _models_Reason_model__WEBPACK_IMPORTED_MODULE_3__["Reason"])
    ], ReasonChipListComponent.prototype, "reason", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ReasonChipListComponent.prototype, "currency", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], ReasonChipListComponent.prototype, "pullRight", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ReasonChipListComponent.prototype, "selectObject", void 0);
    ReasonChipListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'reason-chip-list',
            template: __webpack_require__(/*! raw-loader!./reason-chip-list.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/reasons/reason-chip-list/reason-chip-list.component.html"),
            styles: [__webpack_require__(/*! ./reason-chip-list.component.css */ "./src/app/scheduler/reasons/reason-chip-list/reason-chip-list.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_responsive_service__WEBPACK_IMPORTED_MODULE_2__["ResponsiveService"]])
    ], ReasonChipListComponent);
    return ReasonChipListComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/reasons/reasons.component.ts":
/*!********************************************************!*\
  !*** ./src/app/scheduler/reasons/reasons.component.ts ***!
  \********************************************************/
/*! exports provided: ReasonsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReasonsComponent", function() { return ReasonsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _screening_question_screening_question_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../screening-question/screening-question.component */ "./src/app/scheduler/screening-question/screening-question.component.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _reasons_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../reasons.service */ "./src/app/reasons.service.ts");
/* harmony import */ var _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../models/SchedulerPanel.model */ "./src/models/SchedulerPanel.model.ts");
/* harmony import */ var _scheduler_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../scheduler.service */ "./src/app/scheduler/scheduler.service.ts");
/* harmony import */ var _models_MainObjectTypes_model__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../models/MainObjectTypes.model */ "./src/models/MainObjectTypes.model.ts");
/* harmony import */ var _modals_select_add_ons_select_add_ons_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../modals/select-add-ons/select-add-ons.component */ "./src/app/modals/select-add-ons/select-add-ons.component.ts");
/* harmony import */ var _models_SelectAddOnsModalData_model__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../models/SelectAddOnsModalData.model */ "./src/models/SelectAddOnsModalData.model.ts");













var ReasonsComponent = /** @class */ (function () {
    function ReasonsComponent(businessService, dialog, cdRef, responsiveService, reasonsService, schedulerService) {
        this.businessService = businessService;
        this.dialog = dialog;
        this.cdRef = cdRef;
        this.responsiveService = responsiveService;
        this.reasonsService = reasonsService;
        this.schedulerService = schedulerService;
        this.onMovePanels = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.reasons = [];
        this.showBackButton = true;
        this.reasonsLoaded = false;
        this.errorLoading = false;
        this.reasonTextElementFloatHeight = 103;
        this.listItemType = _models_MainObjectTypes_model__WEBPACK_IMPORTED_MODULE_10__["MainObjectTypes"].REASON;
    }
    ReasonsComponent.prototype.organizeReasonsForDisplay = function (reasons) {
        this.reasons = this.reasonsService.formatReasonList(reasons);
        if (this.reasons.length === 1 && this.directionComingFrom === 'next') {
            if (this.CSFilterObj.reasonIdList === null) {
                if (this.preference.autoAdvanceWhenSingle && this.reasons[0].durationList === null) {
                    this.selectObject(undefined, true, this.reasons[0]);
                }
                else {
                    this.selectObject(undefined, false, this.reasons[0]);
                }
            }
        }
        else if (this.reasons.length > 0 && this.panel.formGroup.value.reason !== null) {
            var objFound = false;
            for (var i = 0, x = this.reasons.length; i < x; i++) {
                if (this.reasons[i].reasonId === this.panel.formGroup.value.reason.reasonId) {
                    this.reasons[i].selected = true;
                    this.selectedReason = this.reasons[i];
                    objFound = true;
                }
            }
            if (!objFound)
                this.panel.formGroup = this.schedulerService.getPanelForm(this.panel.panel, this.preference.schedulerPreferenceFieldDefnList);
        }
        this.reasonsService.applyingCoupon.next(false);
        this.reasonsLoaded = true;
        this.cdRef.detectChanges();
    };
    ReasonsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.responsiveService.setHeightForEmbedScheduler();
        this.currency = this.businessService.currency;
        this.reasonsService.getReasons(this.CSFilterObj)
            .subscribe(function (couponAPIReturnData) {
            _this.setReasonCouponData(couponAPIReturnData);
        }, function (error) {
            _this.reasonsLoaded = false;
            _this.errorLoading = true;
        });
    };
    ReasonsComponent.prototype.openSelectAddOns = function (direction) {
        var _this = this;
        var dataToPass = new _models_SelectAddOnsModalData_model__WEBPACK_IMPORTED_MODULE_12__["SelectAddOnsModalData"]();
        dataToPass.selectedReason = this.selectedReason;
        dataToPass.availableAddOnsForSelectedReason = this.selectedReason.addOnReasonList;
        var dialogRef = this.dialog.open(_modals_select_add_ons_select_add_ons_component__WEBPACK_IMPORTED_MODULE_11__["SelectAddOnsComponent"], {
            maxWidth: this.responsiveService.getMaxWidthForModals(),
            data: dataToPass
        });
        dialogRef.afterClosed().subscribe(function (responseData) {
            if (responseData) {
                _this.selectedReason.selectedAddOns = responseData.selectedAddOns;
                if (_this.selectedReason.screeningQuestion)
                    _this.openScreeningQuestion(direction);
                else
                    _this.onMovePanels.emit({ direction: direction, panel: _this.panel });
            }
        });
    };
    ReasonsComponent.prototype.openScreeningQuestion = function (direction) {
        var _this = this;
        var dialogRef = this.dialog.open(_screening_question_screening_question_component__WEBPACK_IMPORTED_MODULE_5__["ScreeningQuestionComponent"], { maxWidth: this.responsiveService.getMaxWidthForModals(), data: { screeningQuestion: this.selectedReason.screeningQuestion }, id: 'ReasonScreeningQuestionDialog', panelClass: 'screeningQuestionDialog' });
        dialogRef.afterClosed().subscribe(function (result) {
            if (result === 'pass') {
                _this.onMovePanels.emit({ direction: direction, panel: _this.panel });
            }
        });
    };
    ReasonsComponent.prototype.movePanels = function (direction) {
        if (this.selectedReason) {
            this.selectedReason = this.isDurationSelected(this.selectedReason);
            this.selectedReason = this.isRepeatingOptionSelected(this.selectedReason);
        }
        if (direction === 'next' && this.selectedReason && !this.selectedReason.needToSelectDuration && !this.selectedReason.needToSelectRepeatingOption) {
            if (this.selectedReason.addOnReasonList && this.selectedReason.addOnReasonList.length > 0)
                this.openSelectAddOns(direction);
            else if (this.selectedReason.screeningQuestion)
                this.openScreeningQuestion(direction);
            else
                this.onMovePanels.emit({ direction: direction, panel: this.panel });
        }
        else if (direction === 'back')
            this.onMovePanels.emit({ direction: direction, panel: this.panel });
    };
    ReasonsComponent.prototype.selectSchedulingObj = function (schedulingObject) {
        this.selectObject(schedulingObject.changeEvent, schedulingObject.moveForward, schedulingObject.itemSelected);
    };
    ReasonsComponent.prototype.isDurationSelected = function (reason) {
        if (reason.multiDuration) {
            if (reason.selectedDuration.duration !== undefined && reason.selectedDuration.duration !== null) {
                reason.visitMinutes = reason.selectedDuration.duration;
                reason.price = reason.selectedDuration.price;
                reason.originalPrice = reason.selectedDuration.originalPrice;
                reason.depositAmount = reason.selectedDuration.deposit;
                reason.needToSelectDuration = false;
            }
            else {
                reason.visitMinutes = null;
                reason.price = null;
                reason.originalPrice = null;
                reason.depositAmount = null;
                reason.needToSelectDuration = true;
            }
        }
        else {
            reason.needToSelectDuration = false;
        }
        return reason;
    };
    ReasonsComponent.prototype.isRepeatingOptionSelected = function (reason) {
        if (reason.allowRepeating !== null && reason.allowRepeating > -1) {
            if (reason.selectedRepeatingApptOption.numberOfAppointments !== undefined && reason.selectedRepeatingApptOption.numberOfAppointments !== null) {
                reason.price = reason.selectedRepeatingApptOption.price / reason.selectedRepeatingApptOption.numberOfAppointments;
                reason.depositAmount = reason.selectedRepeatingApptOption.deposit;
                reason.needToSelectRepeatingOption = false;
            }
            else {
                reason.price = null;
                reason.depositAmount = null;
                reason.needToSelectRepeatingOption = true;
            }
        }
        else {
            reason.needToSelectRepeatingOption = false;
        }
        return reason;
    };
    ReasonsComponent.prototype.selectObject = function (changeEvent, moveForward, reasonSelected) {
        if (!this.businessService.checkInnerHTMLForHrefClick(changeEvent)) {
            //remove selected from all other reasons; this is an issue when you initially select a reason that is multiple duration and it doesn't auto advance you
            //if you then select another reason it looks like you've selected two reasons
            for (var i = 0, x = this.reasons.length; i < x; i++) {
                this.reasons[i].selected = false;
            }
            var reason = reasonSelected || changeEvent.reason;
            reason.selected = true;
            this.selectedReason = reason;
            reason = this.isDurationSelected(reason);
            reason = this.isRepeatingOptionSelected(reason);
            this.panel.formGroup.controls['reason'].setValue(reason);
            if (event.defaultPrevented !== undefined) { //prevents function from getting called twice (once from child component and once from parent component)
                event.preventDefault();
            }
            if (!reason.needToSelectDuration && !reason.needToSelectRepeatingOption && moveForward) {
                this.movePanels('next');
            }
        }
    };
    ReasonsComponent.prototype.setReasonCouponData = function (couponAPIReturnData) {
        this.organizeReasonsForDisplay(couponAPIReturnData.reasonAPIBeanList);
        if (couponAPIReturnData.status) {
            this.reasonsService.coupon.next(couponAPIReturnData.coupon);
            this.reasonsService.couponStatus.next(couponAPIReturnData.status);
            this.reasonsService.couponStatusDetail.next(couponAPIReturnData.statusDetail);
            if (couponAPIReturnData.status === 'SUCCESS')
                this.CSFilterObj.coupon = couponAPIReturnData.coupon;
        }
    };
    ReasonsComponent.prototype.applyCouponToReasons = function (couponCode) {
        var _this = this;
        if (couponCode !== undefined && couponCode !== null) {
            couponCode = couponCode.trim();
        }
        if (couponCode === undefined || couponCode === null || couponCode === '') {
            this.reasonsService.couponStatus.next('ERROR');
            this.reasonsService.couponStatusDetail.next('NO_CODE_ENTERED');
            this.reasonsService.applyingCoupon.next(false);
        }
        else {
            this.reasonsService.applyingCoupon.next(true);
            /*

             */
            this.reasonsService.applyCouponToReasons(couponCode, this.reasons).subscribe(function (responseData) {
                _this.setReasonCouponData(responseData);
            }, function (error) {
                _this.reasonsService.applyingCoupon.next(false);
                _this.reasonsService.couponStatus.next("Error");
                _this.reasonsService.couponStatusDetail.next("HTTP");
            });
        }
    };
    // Complete the subject when your component is destroyed to avoid memory leaks
    ReasonsComponent.prototype.ngOnDestroy = function () {
        this.reasonsService.applyingCoupon.complete();
        this.reasonsService.couponStatus.complete();
        this.reasonsService.couponStatusDetail.complete();
        this.reasonsService.coupon.complete();
    };
    ReasonsComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"] },
        { type: _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatDialog"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_6__["ResponsiveService"] },
        { type: _reasons_service__WEBPACK_IMPORTED_MODULE_7__["ReasonsService"] },
        { type: _scheduler_service__WEBPACK_IMPORTED_MODULE_9__["SchedulerService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ReasonsComponent.prototype, "onMovePanels", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ReasonsComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_8__["schedulerPanel"])
    ], ReasonsComponent.prototype, "panel", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["CSFilterParameterBean"])
    ], ReasonsComponent.prototype, "CSFilterObj", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ReasonsComponent.prototype, "directionComingFrom", void 0);
    ReasonsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'reasons-panel',
            template: __webpack_require__(/*! raw-loader!./reasons.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/reasons/reasons.component.html"),
            styles: [__webpack_require__(/*! ../scheduler.component.css */ "./src/app/scheduler/scheduler.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"], _angular_material__WEBPACK_IMPORTED_MODULE_4__["MatDialog"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"], _responsive_service__WEBPACK_IMPORTED_MODULE_6__["ResponsiveService"],
            _reasons_service__WEBPACK_IMPORTED_MODULE_7__["ReasonsService"], _scheduler_service__WEBPACK_IMPORTED_MODULE_9__["SchedulerService"]])
    ], ReasonsComponent);
    return ReasonsComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/scheduler.component.css":
/*!***************************************************!*\
  !*** ./src/app/scheduler/scheduler.component.css ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/** Initially added for TT-6509 but removing for 6.19.0 release because last reason in the list was looking smashed against bottom and when there was only 1 reason in the list\nit looked really strange **/\n/*mat-card-content#reasonsPanel:not(.loading),*/\n/*mat-card-content#reasonsPanel:not(.errorLoading) { */\n/*    padding-bottom: 0px;*/\n/*}*/\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2NoZWR1bGVyL3NjaGVkdWxlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzJCQUMyQjtBQUMzQiwrQ0FBK0M7QUFDL0Msc0RBQXNEO0FBQ3RELDJCQUEyQjtBQUMzQixJQUFJIiwiZmlsZSI6InNyYy9hcHAvc2NoZWR1bGVyL3NjaGVkdWxlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqIEluaXRpYWxseSBhZGRlZCBmb3IgVFQtNjUwOSBidXQgcmVtb3ZpbmcgZm9yIDYuMTkuMCByZWxlYXNlIGJlY2F1c2UgbGFzdCByZWFzb24gaW4gdGhlIGxpc3Qgd2FzIGxvb2tpbmcgc21hc2hlZCBhZ2FpbnN0IGJvdHRvbSBhbmQgd2hlbiB0aGVyZSB3YXMgb25seSAxIHJlYXNvbiBpbiB0aGUgbGlzdFxuaXQgbG9va2VkIHJlYWxseSBzdHJhbmdlICoqL1xuLyptYXQtY2FyZC1jb250ZW50I3JlYXNvbnNQYW5lbDpub3QoLmxvYWRpbmcpLCovXG4vKm1hdC1jYXJkLWNvbnRlbnQjcmVhc29uc1BhbmVsOm5vdCguZXJyb3JMb2FkaW5nKSB7ICovXG4vKiAgICBwYWRkaW5nLWJvdHRvbTogMHB4OyovXG4vKn0qL1xuIl19 */"

/***/ }),

/***/ "./src/app/scheduler/scheduler.component.ts":
/*!**************************************************!*\
  !*** ./src/app/scheduler/scheduler.component.ts ***!
  \**************************************************/
/*! exports provided: SchedulerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchedulerComponent", function() { return SchedulerComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../auth/auth.service */ "./src/app/auth/auth.service.ts");
/* harmony import */ var _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../client-account/client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../modals/error-modal/error-modal.component */ "./src/app/modals/error-modal/error-modal.component.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _client_info_client_info_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./client-info/client-info.service */ "./src/app/scheduler/client-info/client-info.service.ts");
/* harmony import */ var _scheduler_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./scheduler.service */ "./src/app/scheduler/scheduler.service.ts");
/* harmony import */ var _session_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../session.service */ "./src/app/session.service.ts");
/* harmony import */ var _scheduler_link_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../scheduler-link.service */ "./src/app/scheduler-link.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _mini_website_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../mini-website.service */ "./src/app/mini-website.service.ts");
/* harmony import */ var _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../models/SchedulerPanel.model */ "./src/models/SchedulerPanel.model.ts");
/* harmony import */ var _time_time_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./time/time.service */ "./src/app/scheduler/time/time.service.ts");


















var SchedulerComponent = /** @class */ (function () {
    function SchedulerComponent(businessService, _formBuilder, dialog, responsiveService, sessionService, schedulerLinkService, schedulerPreferenceService, miniWebsiteService, timeService, authService, clientAccountService, clientInfoService, schedulerService) {
        this.businessService = businessService;
        this._formBuilder = _formBuilder;
        this.dialog = dialog;
        this.responsiveService = responsiveService;
        this.sessionService = sessionService;
        this.schedulerLinkService = schedulerLinkService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.miniWebsiteService = miniWebsiteService;
        this.timeService = timeService;
        this.authService = authService;
        this.clientAccountService = clientAccountService;
        this.clientInfoService = clientInfoService;
        this.schedulerService = schedulerService;
        this.dataLoaded = false;
        this.errorLoading = false;
        this.panels = [];
        this.inputValues = [];
        this.panelsOrdered = false;
        this.clickedFromMyAccount = false;
        this.directionComingFrom = 'next';
        this.allPanels = this.schedulerService.getAllPanels();
        this.panelValues = _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__["SchedulerPanelValues"];
        this.noAppointmentsAvailable = false;
    }
    SchedulerComponent.prototype.ngAfterViewChecked = function () {
        this.responsiveService.setHeightForEmbedScheduler();
    };
    SchedulerComponent.prototype.resetClientInfoForm = function (reasonId, reasonType) {
        for (var k = 0, z = this.panels.length; k < z; k++) {
            if (this.panels[k].panel === _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__["SchedulerPanelValues"].clientInfo) {
                // this.clientInfoService.printPreferenceId(this.preference.schedulerPreferenceFieldDefnList, 27523);
                this.panels[k].formGroup = this.schedulerService.getPanelForm(_models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__["SchedulerPanelValues"].clientInfo, this.preference.schedulerPreferenceFieldDefnList, reasonId, reasonType);
                // this.clientInfoService.printPreferenceId(this.preference.schedulerPreferenceFieldDefnList, 27523);
            }
        }
    };
    SchedulerComponent.prototype.clearTimePanelForm = function () {
        this.timePanel.formGroup = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
            'selectedDateTime': this.schedulerService.getTimeSlotFormGroup()
        });
    };
    SchedulerComponent.prototype.movePanels = function (moveData) {
        if (moveData.noAppointmentAvail)
            this.noAppointmentsAvailable = moveData.noAppointmentAvail;
        this.directionComingFrom = moveData.direction;
        for (var i = 0, x = this.panels.length; i < x; i++) {
            if (this.panels[i].panel === moveData.panel.panel) {
                if (moveData.direction === 'next' &&
                    ((moveData.panel.panel !== _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__["SchedulerPanelValues"].clientInfo && moveData.panel.formGroup.valid) ||
                        (moveData.panel.panel === _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__["SchedulerPanelValues"].clientInfo && this.clientInfoService.isClientInfoFormValid(moveData.panel.formGroup, this.preference.schedulerPreferenceFieldDefnList)))) {
                    if (this.panels[i].hasSelectedValues)
                        this.inputValues = this.schedulerService.arrangeInputValues(this.inputValues, moveData.panel.formGroup.value, i, this.panels, this.CSFilterObj);
                    if (moveData.panel.panel === _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__["SchedulerPanelValues"].reasons) { //Fix for TT-6153 -- after select service, update form on clientInfo panel based on selection
                        for (var j = 0, y = this.inputValues.length; j < y; j++) {
                            if (this.inputValues[j].panel === _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__["SchedulerPanelValues"].reasons) {
                                this.resetClientInfoForm(this.inputValues[j].values[0].value.reasonId, this.inputValues[j].values[0].value.reasonType);
                            }
                        }
                    }
                    this.appt = moveData.appt;
                    this.multipleAppts = moveData.multipleAppts;
                    this.waitLists = moveData.waitLists;
                    if (i === x - 1) { //THEY ARE ON THE LAST PANEL SO HAVE CLICKED THE BOOK ANOTHER APPT BTN
                        this.clearTimePanelForm();
                        this.preference.schedulerPreferenceFieldDefnList = this.clientInfoService.initialConfigurationOfSchedulerFields(this.preference.schedulerPreferenceFieldDefnListOriginal, this.preference, this.preference.schedulerPreferenceFieldDefnList);
                        this.resetClientInfoForm();
                        this.CSFilterObj = this.schedulerService.newCSFilterObj();
                        var panelIndexToAdvanceTo = 1;
                        if (this.preference.onlyAllowBookingByInvitation ||
                            (this.schedulerLink.skipWelcome && this.preference.maxActiveApptClient === -1) || (!this.schedulerLink.skipWelcome && this.preference.maxActiveApptClient !== -1)) {
                            panelIndexToAdvanceTo = 0;
                        }
                        else if (this.schedulerLink.skipWelcome && this.preference.maxActiveApptClient !== -1) {
                            panelIndexToAdvanceTo = -1;
                        }
                        if (this.clientAccountService.loggedInClient && this.preference.maxActiveApptClient !== -1) {
                            this.getActiveApptCountForClient(panelIndexToAdvanceTo);
                        }
                        else {
                            panelIndexToAdvanceTo = 0; // LHB 09/24/2021 TT-8182
                            this.currentPanel = this.panels[panelIndexToAdvanceTo];
                            this.inputValues = []; //TT-6010
                        }
                    }
                    else if (moveData.panel.panel === _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__["SchedulerPanelValues"].clientInfo) { //NEXT PANEL IS FINAL CONFIRMATION SO NEED TO BE SURE TO SHOW THE RIGHT ONE; BY DEFAULT IT IS THE FINALCONFIRMATION PANEL FROM ALLPANELS ARRAY
                        this.currentPanel = this.panels[i + 1];
                    }
                    else if (moveData.panel.panel === this.panels[0].panel || //They are on the first page of the scheduling flow; typically it is panel='welcome', but could have skipped welcome so need to check if it is the first panel in the list of all panels
                        (this.clickedFromMyAccount && moveData.panel.panel === this.panels[1].panel)) { // LHB 2/19/2021 TT-7417 they are on the first page of the scheduling flow after having clicked the book appt btn from the My Account view
                        this.clickedFromMyAccount = false;
                        if ((this.preference.loginReq === 1 || this.preference.loginReq === 2) && !this.isAuthenticated && !this.clientAccountService.loggedInClient) { //SCHEDULER REQUIRES LOGIN BEFORE MOVING ON SO CHECK AND IF NOT LOGGED IN SHOW LOGIN POP UP)
                            var loginTriggeredData = new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_4__["loginRegisterPopUpObject"]();
                            loginTriggeredData.moveData = moveData;
                            loginTriggeredData.index = i;
                            loginTriggeredData.loadMyAccount = false;
                            loginTriggeredData.calledFrom = 'SCHEDULER';
                            loginTriggeredData.callSubscriptionNext = true;
                            this.authService.loginCalled.next(loginTriggeredData);
                        }
                        else if (this.clientAccountService.loggedInClient && this.preference.maxActiveApptClient !== -1) {
                            this.getActiveApptCountForClient(i);
                        }
                        else {
                            this.currentPanel = this.panels[i + 1];
                        }
                    }
                    else {
                        this.currentPanel = this.panels[i + 1];
                    }
                }
                else if (moveData.direction === 'back' && moveData.panel.panelOrder > 0) {
                    this.currentPanel = this.panels[i - 1];
                }
                if (this.currentPanel.recordNavigatePanel)
                    this.businessService.recordAuditTrailNavigation(this.currentPanel.recordNavigatePanel).subscribe(function () { });
                //scroll to top of container
                var el = document.getElementById('schedulerContainerRow');
                el.scrollIntoView({ behavior: 'smooth' });
            }
        }
    };
    SchedulerComponent.prototype.getActiveApptCountForClient = function (currentPanelIndex) {
        var _this = this;
        this.businessService.getActiveApptCount(this.clientAccountService.loggedInClient.businessId, this.clientAccountService.loggedInClient.clientList)
            .subscribe(function (clientApptCountMap) {
            for (var i = 0, x = _this.clientAccountService.loggedInClient.clientList.length; i < x; i++) {
                for (var j = 0, y = clientApptCountMap.length; j < y; j++) {
                    for (var prop in clientApptCountMap[j]) {
                        if (Number(prop) === _this.clientAccountService.loggedInClient.clientList[i].clientId) {
                            _this.clientAccountService.loggedInClient.clientList[i].activeApptCount = clientApptCountMap[j][prop];
                        }
                    }
                }
            }
            var allowedToBook = false;
            for (var i = 0, x = _this.clientAccountService.loggedInClient.clientList.length; i < x; i++) {
                if (_this.clientAccountService.loggedInClient.clientList[i].activeApptCount < _this.preference.maxActiveApptClient) {
                    allowedToBook = true;
                }
            }
            if (allowedToBook) {
                _this.currentPanel = _this.panels[currentPanelIndex + 1];
            }
            else {
                _this.currentPanel = _this.panels[currentPanelIndex];
                var dialogRef = _this.dialog.open(_modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_8__["ErrorModalComponent"], { maxWidth: _this.responsiveService.getMaxWidthForModals(), data: { preference: _this.preference, errorType: 'maxApptsReached' } });
            }
            _this.dataLoaded = true;
        }, function (error) {
            // console.log(error);
        });
    };
    SchedulerComponent.prototype.orderPanels = function (appMode, skipWelcome, includeReasonGroups, includeReasonSuperGroups) {
        var panelsToShow = this.schedulerService.getPanelOrder(appMode, includeReasonGroups, includeReasonSuperGroups);
        this.panels = this.schedulerService.configurePanels(skipWelcome, panelsToShow);
        for (var i = 0, x = this.panels.length; i < x; i++) {
            switch (this.panels[i].panel) {
                case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__["SchedulerPanelValues"].welcome:
                    this.welcomePanel = this.panels[i];
                    break;
                case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__["SchedulerPanelValues"].locationSuperGroups:
                    this.locationSuperGroupPanel = this.panels[i];
                    break;
                case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__["SchedulerPanelValues"].locationGroups:
                    this.locationGroupPanel = this.panels[i];
                    break;
                case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__["SchedulerPanelValues"].locations:
                    this.locationPanel = this.panels[i];
                    break;
                case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__["SchedulerPanelValues"].staff:
                    this.staffPanel = this.panels[i];
                    break;
                case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__["SchedulerPanelValues"].reasonSuperGroups:
                    this.reasonSuperGroupPanel = this.panels[i];
                    break;
                case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__["SchedulerPanelValues"].reasonGroups:
                    this.reasonGroupPanel = this.panels[i];
                    break;
                case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__["SchedulerPanelValues"].reasons:
                    this.reasonPanel = this.panels[i];
                    break;
                case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__["SchedulerPanelValues"].time:
                    this.timePanel = this.panels[i];
                    break;
                case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__["SchedulerPanelValues"].clientInfo:
                    this.clientInfoPanel = this.panels[i];
                    break;
                case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_16__["SchedulerPanelValues"].finalConfirmation:
                    this.finalConfirmationPanel = this.panels[i];
                    break;
            }
        }
        var initialIndex = 0;
        // LHB 07/17/2020 TT-6840 -- if click book appointment from top nav or from button on client profile then load first page in scheduling flow
        if (!skipWelcome && history.state && this.preference.maxActiveApptClient === -1 &&
            ((history.state.navigationLink && history.state.navigationLink) ||
                (history.state.onProfileHome && history.state.onProfileHome))) {
            if (this.preference.maxActiveApptClient !== -1) {
                this.getActiveApptCountForClient(initialIndex);
            }
            else {
                initialIndex = 1;
                this.currentPanel = this.panels[initialIndex];
                this.dataLoaded = true;
            }
        }
        else {
            this.currentPanel = this.panels[initialIndex];
            this.dataLoaded = true;
        }
    };
    SchedulerComponent.prototype.loginRegisterClosed = function (moveData, currentPanelIndex) {
        if (this.isAuthenticated && moveData !== undefined && currentPanelIndex !== undefined) {
            if (this.preference.maxActiveApptClient === -1) {
                this.movePanels(moveData);
            }
            else {
                this.getActiveApptCountForClient(currentPanelIndex);
            }
        }
    };
    SchedulerComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isEmbedded = this.responsiveService.isEmbedded;
        if (this.businessService.business) {
            if (this.businessService.business.status !== 'ACTIVE') {
                this.dataLoaded = false;
                this.errorLoading = true;
                // this.miniWebsite = this.businessService.createErrorMiniWebsite('inactive');
                this.panels.push(this.allPanels.welcomePanel);
                this.currentPanel = this.panels[0];
            }
            else {
                // this.dataLoaded = true;
                this.errorLoading = false;
                this.schedulerLink = this.schedulerLinkService.schedulerLink;
                this.preference = this.schedulerPreferenceService.schedulerPreference;
                this.miniWebsite = this.miniWebsiteService.miniWebsite;
                this.CSFilterObj = this.schedulerService.newCSFilterObj();
                if (this.preference.onlyAllowBookingByInvitation && !this.sessionService.sessionObject.parmInvitationUUId)
                    this.preference.skipWelcome = false;
                this.orderPanels(this.preference.appMode, this.preference.skipWelcome, this.preference.showServiceGroup, this.preference.showServiceSuperGroup);
            }
        }
        else if (!this.businessService.business) {
            this.dataLoaded = false;
            this.errorLoading = true;
        }
        else {
            this.businessService.landingPageObjectLoaded.subscribe(function (didLoad) {
                _this.dataLoaded = true;
                _this.errorLoading = false;
                _this.schedulerLink = _this.schedulerLinkService.schedulerLink;
                _this.preference = _this.schedulerPreferenceService.schedulerPreference;
                _this.miniWebsite = _this.miniWebsiteService.miniWebsite;
            });
        }
        this.isAuthenticated = this.authService.isAuth();
        this.authenticationSubscription = this.authService.authChange.subscribe(function (isAuth) {
            _this.isAuthenticated = _this.authService.isAuth();
            if (isAuth === false) {
                _this.preference.schedulerPreferenceFieldDefnList = _this.clientInfoService.initialConfigurationOfSchedulerFields(_this.preference.schedulerPreferenceFieldDefnListOriginal, _this.preference);
                if (_this.preference.loginReq === 2 || _this.preference.loginReq === 1)
                    _this.currentPanel = _this.panels[0];
            }
        });
        this.loginClosedSubscription = this.authService.loginClosed.subscribe(function (loginTriggeredData) {
            _this.loginRegisterClosed(loginTriggeredData.moveData, loginTriggeredData.index);
        });
        this.registerClosedSubscription = this.authService.registerClosed.subscribe(function (loginTriggeredData) {
            _this.loginRegisterClosed(loginTriggeredData.moveData, loginTriggeredData.index);
        });
    };
    SchedulerComponent.prototype.ngOnDestroy = function () {
        if (this.authenticationSubscription)
            this.authenticationSubscription.unsubscribe();
        if (this.loginClosedSubscription)
            this.loginClosedSubscription.unsubscribe();
        if (this.registerClosedSubscription)
            this.registerClosedSubscription.unsubscribe();
    };
    SchedulerComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"] },
        { type: _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"] },
        { type: _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_9__["ResponsiveService"] },
        { type: _session_service__WEBPACK_IMPORTED_MODULE_12__["SessionService"] },
        { type: _scheduler_link_service__WEBPACK_IMPORTED_MODULE_13__["SchedulerLinkService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_14__["SchedulerPreferenceService"] },
        { type: _mini_website_service__WEBPACK_IMPORTED_MODULE_15__["MiniWebsiteService"] },
        { type: _time_time_service__WEBPACK_IMPORTED_MODULE_17__["TimeService"] },
        { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_6__["AuthService"] },
        { type: _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_7__["ClientAccountService"] },
        { type: _client_info_client_info_service__WEBPACK_IMPORTED_MODULE_10__["ClientInfoService"] },
        { type: _scheduler_service__WEBPACK_IMPORTED_MODULE_11__["SchedulerService"] }
    ]; };
    SchedulerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-scheduler',
            template: __webpack_require__(/*! raw-loader!./scheduler.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/scheduler.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"], _angular_material__WEBPACK_IMPORTED_MODULE_5__["MatDialog"], _responsive_service__WEBPACK_IMPORTED_MODULE_9__["ResponsiveService"],
            _session_service__WEBPACK_IMPORTED_MODULE_12__["SessionService"], _scheduler_link_service__WEBPACK_IMPORTED_MODULE_13__["SchedulerLinkService"], _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_14__["SchedulerPreferenceService"],
            _mini_website_service__WEBPACK_IMPORTED_MODULE_15__["MiniWebsiteService"], _time_time_service__WEBPACK_IMPORTED_MODULE_17__["TimeService"],
            _auth_auth_service__WEBPACK_IMPORTED_MODULE_6__["AuthService"], _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_7__["ClientAccountService"], _client_info_client_info_service__WEBPACK_IMPORTED_MODULE_10__["ClientInfoService"], _scheduler_service__WEBPACK_IMPORTED_MODULE_11__["SchedulerService"]])
    ], SchedulerComponent);
    return SchedulerComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/scheduler.service.ts":
/*!************************************************!*\
  !*** ./src/app/scheduler/scheduler.service.ts ***!
  \************************************************/
/*! exports provided: SchedulerService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchedulerService", function() { return SchedulerService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../models/BookingSelectionOption.model */ "./src/models/BookingSelectionOption.model.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _models_Group_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../models/Group.model */ "./src/models/Group.model.ts");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _scheduler_link_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../scheduler-link.service */ "./src/app/scheduler-link.service.ts");
/* harmony import */ var _config_list_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../config-list.service */ "./src/app/config-list.service.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../models/SchedulerPanel.model */ "./src/models/SchedulerPanel.model.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _client_info_client_info_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./client-info/client-info.service */ "./src/app/scheduler/client-info/client-info.service.ts");













var SchedulerService = /** @class */ (function () {
    function SchedulerService(injector) {
        this.injector = injector;
        this.allPanels = {
            welcomePanel: new _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["schedulerPanel"](_models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].welcome, null, true, 0, true, 'welcomeTitle', 'welcomeText', 'welcomePnlErrorLoading', false),
            locationSuperGroupPanel: new _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["schedulerPanel"](_models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].locationSuperGroups, null, true, 1, false, 'locationSuperGroupTitle', 'locationSuperGroupText', 'locationSuperGroupPnlErrorLoading', true, ['groupIdList', 'locationSuperGroupIdList'], 'groupId', 'locationSuperGroupPnlNoObjectsMsg'),
            locationGroupPanel: new _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["schedulerPanel"](_models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].locationGroups, null, true, 2, false, 'locationGroupTitle', 'locationGroupText', 'locationGroupPnlErrorLoading', true, ['groupIdList', 'locationGroupIdList'], 'groupId', 'locationGroupPnlNoObjectsMsg'),
            locationPanel: new _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["schedulerPanel"](_models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].locations, null, true, 3, false, 'locationTitle', 'locationText', 'locationPnlErrorLoading', true, ['locationIdList'], 'locationId', 'locationPnlNoObjectsMsg'),
            staffPanel: new _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["schedulerPanel"](_models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].staff, null, true, 4, false, 'staffTitle', 'staffText', 'staffPnlErrorLoading', true, ['staffIdList'], 'professionalId', 'staffPnlNoObjectsMsg'),
            reasonSuperGroupPanel: new _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["schedulerPanel"](_models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].reasonSuperGroups, null, true, 5, false, 'serviceSuperGroupTitle', 'serviceSuperGroupText', 'serviceSuperGroupPnlErrorLoading', true, ['groupIdList', 'reasonSuperGroupIdList'], 'groupId', 'serviceSuperGroupPnlNoObjectsMsg'),
            reasonGroupPanel: new _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["schedulerPanel"](_models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].reasonGroups, null, true, 6, false, 'serviceGroupTitle', 'serviceGroupText', 'serviceGroupPnlErrorLoading', true, ['groupIdList', 'reasonGroupIdList'], 'groupId', 'serviceGroupPnlNoObjectsMsg'),
            reasonPanel: new _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["schedulerPanel"](_models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].reasons, null, true, 7, false, 'serviceTitle', 'serviceText', 'servicePnlErrorLoading', true, ['reasonIdList'], 'reasonId', 'servicePnlNoObjectsMsg'),
            timePanel: new _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["schedulerPanel"](_models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].time, null, true, 8, false, 'timeTitle', 'timeText', 'timePnlErrorLoading', true),
            clientInfoPanel: new _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["schedulerPanel"](_models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].clientInfo, null, true, 9, false, 'infoTitle', 'infoText', 'infoPnlErrorLoading', true, undefined, undefined, undefined, undefined, 'your_info'),
            finalConfirmationPanel: new _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["schedulerPanel"](_models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].finalConfirmation, null, false, 10, true, 'thanksTitle', 'thanksInfo', 'thanksPnlErrorLoading', false, undefined, undefined, undefined, undefined, 'thanks')
        };
        this.getValuesFromForm = function (formValueObject) {
            var values = [];
            for (var prop in formValueObject) {
                var valueObj = { 'field': prop, 'value': formValueObject[prop] };
                values.push(valueObj);
            }
            return values;
        };
        this.businessService = injector.get(_business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"]);
        this.schedulerLinkService = injector.get(_scheduler_link_service__WEBPACK_IMPORTED_MODULE_7__["SchedulerLinkService"]);
        this.configListService = injector.get(_config_list_service__WEBPACK_IMPORTED_MODULE_8__["ConfigListService"]);
        this.schedulerPreferenceService = injector.get(_scheduler_preference_service__WEBPACK_IMPORTED_MODULE_6__["SchedulerPreferenceService"]);
        this.clientInfoService = injector.get(_client_info_client_info_service__WEBPACK_IMPORTED_MODULE_12__["ClientInfoService"]);
    }
    SchedulerService.prototype.getAllPanels = function () {
        return lodash__WEBPACK_IMPORTED_MODULE_9__["cloneDeep"](this.allPanels);
    };
    SchedulerService.prototype.newCSFilterObj = function () {
        var csFilterObj = new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_5__["CSFilterParameterBean"]().createInitial(sessionStorage.getItem('auditReferralId'), false, sessionStorage.getItem('locale'), this.businessService.business.businessId, this.schedulerLinkService.schedulerLink.schedulerLinkId, sessionStorage.getItem('timezone'));
        return csFilterObj;
    };
    SchedulerService.prototype.getPanelOrder = function (appMode, includeReasonGroups, includeReasonSuperGroups) {
        var panelsToShow = [];
        switch (appMode) {
            case 1: //location > staff > reason
                panelsToShow = ['locations', 'staff', 'reasons'];
                break;
            case 2:
                panelsToShow = ['locations', 'reasons', 'staff'];
                break;
            case 3:
                panelsToShow = ['staff', 'locations', 'reasons'];
                break;
            case 4:
                panelsToShow = ['staff', 'reasons', 'locations'];
                break;
            case 5:
                panelsToShow = ['reasons', 'staff', 'locations'];
                break;
            case 6:
                panelsToShow = ['reasons', 'locations', 'staff'];
                break;
            case 8:
                panelsToShow = ['locations', 'reasons'];
                break;
            case 10:
                panelsToShow = ['staff', 'reasons'];
                break;
            case 11:
                panelsToShow = ['reasons', 'staff'];
                break;
            case 12:
                panelsToShow = ['reasons', 'locations'];
                break;
            case 15:
                panelsToShow = ['reasons'];
                break;
            case 17:
                panelsToShow = ['locationGroups', 'locations', 'staff', 'reasons'];
                break;
            case 18:
                panelsToShow = ['locationGroups', 'staff', 'reasons'];
                break;
            case 19:
                panelsToShow = ['locationGroups', 'locations', 'reasons'];
                break;
            case 20:
                panelsToShow = ['locationGroups', 'reasons', 'staff'];
                break;
            case 21:
                panelsToShow = ['staff', 'locationGroups', 'locations', 'reasons'];
                break;
            case 22:
                panelsToShow = ['staff', 'locationGroups', 'reasons'];
                break;
            case 23:
                panelsToShow = ['staff', 'reasons', 'locationGroups', 'locations'];
                break;
            case 24:
                panelsToShow = ['staff', 'reasons', 'locationGroups'];
                break;
            case 25:
                panelsToShow = ['reasons', 'staff', 'locationGroups', 'locations'];
                break;
            case 26:
                panelsToShow = ['reasons', 'staff', 'locationGroups'];
                break;
            case 27:
                panelsToShow = ['reasons', 'locationGroups', 'locations', 'staff'];
                break;
            case 28:
                panelsToShow = ['reasons', 'locationGroups', 'staff'];
                break;
            case 29:
                panelsToShow = ['locationGroups', 'locations', 'reasons'];
                break;
            case 30:
                panelsToShow = ['locationGroups', 'reasons'];
                break;
            case 31:
                panelsToShow = ['reasons', 'locationGroups', 'locations'];
                break;
            case 32:
                panelsToShow = ['reasons', 'locationGroups'];
                break;
            case 33:
                panelsToShow = ['staff', 'reasons', 'locationSuperGroups', 'locationGroups', 'locations'];
                break;
            case 34:
                panelsToShow = ['staff', 'reasons', 'locationSuperGroups', 'locationGroups'];
                break;
            case 35:
                panelsToShow = ['reasons', 'staff', 'locationSuperGroups', 'locationGroups', 'locations'];
                break;
            case 36:
                panelsToShow = ['reasons', 'staff', 'locationSuperGroups', 'locationGroups'];
                break;
            case 37:
                panelsToShow = ['reasons', 'locationSuperGroups', 'locationGroups', 'locations', 'staff'];
                break;
            case 38:
                panelsToShow = ['reasons', 'locationSuperGroups', 'locationGroups', 'staff'];
                break;
            case 39:
                panelsToShow = ['locationSuperGroups', 'locationGroups', 'locations', 'reasons'];
                break;
            case 40:
                panelsToShow = ['locationSuperGroups', 'locationGroups', 'reasons'];
                break;
            case 41:
                panelsToShow = ['reasons', 'locationSuperGroups', 'locationGroups', 'locations'];
                break;
            case 42:
                panelsToShow = ['reasons', 'locationSuperGroups', 'locationGroups'];
                break;
        }
        if (includeReasonGroups) {
            for (var i = 0; i < panelsToShow.length; i++) {
                if (panelsToShow[i] === 'reasons') {
                    panelsToShow.splice(i, 0, 'reasonGroups');
                    break;
                }
            }
        }
        if (includeReasonSuperGroups) {
            for (var i = 0; i < panelsToShow.length; i++) {
                if (panelsToShow[i] === 'reasonGroups') {
                    panelsToShow.splice(i, 0, 'reasonSuperGroups');
                    break;
                }
            }
        }
        return panelsToShow;
    };
    SchedulerService.prototype.configurePanels = function (skipWelcome, panelsToShow) {
        var panels = [];
        if (!skipWelcome) {
            panelsToShow.unshift('welcome');
        }
        panelsToShow.push('time');
        panelsToShow.push('clientInfo');
        panelsToShow.push('finalConfirmation');
        var allPanels = this.getAllPanels();
        for (var prop in allPanels) {
            if (panelsToShow.indexOf(allPanels[prop].panel) !== -1) {
                allPanels[prop].panelOrder = panelsToShow.indexOf(allPanels[prop].panel);
                allPanels[prop].displayed = true;
            }
            else {
                allPanels[prop].displayed = false;
            }
        }
        for (var prop in allPanels) {
            if (allPanels[prop].displayed) {
                panels.push(allPanels[prop]);
            }
        }
        for (var i = 0, x = panels.length; i < x; i++)
            panels[i].formGroup = this.getPanelForm(panels[i].panel, this.schedulerPreferenceService.schedulerPreference.schedulerPreferenceFieldDefnList);
        panels.sort(function (a, b) { return (a.panelOrder > b.panelOrder) ? 1 : ((b.panelOrder > a.panelOrder) ? -1 : 0); });
        return panels;
    };
    SchedulerService.prototype.createLocationBookingOption = function () {
        var bookingSelectionOption = new _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionOption"]();
        bookingSelectionOption.label = this.configListService.configList.locationLabel;
        bookingSelectionOption.objectType = _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionObjectTypes"].LOCATION;
        return bookingSelectionOption;
    };
    SchedulerService.prototype.createStaffBookingOption = function () {
        var bookingSelectionOption = new _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionOption"]();
        bookingSelectionOption.label = this.configListService.configList.staffLabel;
        bookingSelectionOption.objectType = _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionObjectTypes"].STAFF;
        return bookingSelectionOption;
    };
    SchedulerService.prototype.createReasonBookingOption = function () {
        var bookingSelectionOption = new _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionOption"]();
        bookingSelectionOption.label = this.configListService.configList.reasonLabel;
        bookingSelectionOption.objectType = _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionObjectTypes"].REASON;
        return bookingSelectionOption;
    };
    SchedulerService.prototype.createGroupBookingOption = function (groupType) {
        var bookingSelectionOption = new _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionOption"]();
        switch (groupType) {
            case _models_Group_model__WEBPACK_IMPORTED_MODULE_4__["GroupTypes"].LOCATION_GROUP:
                bookingSelectionOption.label = this.configListService.configList.locationSuperGroupLabel;
                break;
            case _models_Group_model__WEBPACK_IMPORTED_MODULE_4__["GroupTypes"].LOCATION:
                bookingSelectionOption.label = this.configListService.configList.locationGroupLabel;
                break;
            case _models_Group_model__WEBPACK_IMPORTED_MODULE_4__["GroupTypes"].SERVICE_GROUP:
                bookingSelectionOption.label = this.schedulerPreferenceService.schedulerPreference.labelMap.serviceSuperGroupTitle;
                break;
            case _models_Group_model__WEBPACK_IMPORTED_MODULE_4__["GroupTypes"].SERVICE:
                bookingSelectionOption.label = this.configListService.configList.reasonGroupLabel;
                break;
        }
        bookingSelectionOption.objectType = _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_2__["BookingSelectionObjectTypes"].GROUP;
        bookingSelectionOption.groupType = groupType;
        return bookingSelectionOption;
    };
    SchedulerService.prototype.sortTimeList = function (timeList) {
        return timeList.sort(function (a, b) { return (a.cartDisplayStartDateTime < b.cartDisplayStartDateTime) ? -1 : 1; });
    };
    SchedulerService.prototype.arrangeInputValues = function (inputValues, formValueObject, indexNum, panels, CSFilterObj) {
        if (panels[indexNum].panel === _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].time) { //	TT-6340 display times in ascending order
            var timeList = [];
            var timeProps = [];
            for (var prop in formValueObject) {
                timeList.push(formValueObject[prop]);
                timeProps.push(prop);
            }
            timeList = this.sortTimeList(timeList);
            var tempFormValueValueObj = {};
            for (var i = 0, x = timeProps.length; i < x; i++) {
                tempFormValueValueObj[timeProps[i]] = timeList[i];
            }
            formValueObject = tempFormValueValueObj;
        }
        var values = this.getValuesFromForm(formValueObject);
        var objectInputValue = { 'panel': panels[indexNum].panel, 'values': values };
        var objectInInputValuesArray = false;
        for (var j = 0, y = inputValues.length; j < y; j++) {
            if (inputValues[j].panel === panels[indexNum].panel) {
                inputValues[j].values = objectInputValue.values;
                objectInInputValuesArray = true;
            }
        }
        if (!objectInInputValuesArray) {
            inputValues.push(objectInputValue);
        }
        if (panels[indexNum].csFilterObjProps !== undefined) {
            var CSFilterObjPropValues = [];
            for (var j = 0, y = objectInputValue.values.length; j < y; j++) {
                if (objectInputValue.values[j].value[panels[indexNum].idPropName] !== null) {
                    CSFilterObjPropValues.push(objectInputValue.values[j].value[panels[indexNum].idPropName]);
                }
            }
            if (CSFilterObjPropValues.length > 0) {
                for (var j = 0, y = panels[indexNum].csFilterObjProps.length; j < y; j++) {
                    var valuesCopy = CSFilterObjPropValues.slice();
                    if (CSFilterObj[panels[indexNum].csFilterObjProps[j]] === null) {
                        CSFilterObj[panels[indexNum].csFilterObjProps[j]] = valuesCopy;
                    }
                    else {
                        for (var k = 0, z = valuesCopy.length; k < z; k++) {
                            CSFilterObj[panels[indexNum].csFilterObjProps[j]].push(valuesCopy[k]);
                        }
                    }
                }
            }
        }
        return inputValues;
    };
    SchedulerService.prototype.getTimeSlotFormGroup = function () {
        var startTime = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].required);
        var clientStartTime = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].required);
        var clientStartTimeForDisplay = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].required);
        var startTimeDate = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].required);
        var endTime = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].required);
        var clientEndTime = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].required);
        var clientEndTimeForDisplay = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].required);
        var endTimeDate = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].required);
        var startDate = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].required);
        var endDate = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].required);
        var classScheduleId = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null);
        var recurringScheduleId = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null);
        var hideGuestOption = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null);
        var cartDisplayStartDateTime = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null);
        var cartDisplayEndDateTime = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null);
        var maxCapacity = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null);
        var currentCapacity = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null);
        var reasonId = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null);
        var professionalId = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null);
        var locationId = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null);
        var timeSlotId = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null);
        var clientTimeSlotId = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null);
        var htmlId = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null);
        var calTimeSlot = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null);
        var waitListMode = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null);
        var isWaitListFirstAvail = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null);
        var startDateTimeUTC = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null);
        var endDateTimeUTC = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null);
        return new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormGroup"]({
            'startTime': startTime,
            'clientStartTime': clientStartTime,
            'clientStartTimeForDisplay': clientStartTimeForDisplay,
            'clientStartTimeDate': startTimeDate,
            'endTime': endTime,
            'clientEndTime': clientEndTime,
            'clientEndTimeForDisplay': clientEndTimeForDisplay,
            'clientEndTimeDate': endTimeDate,
            'clientStartDate': startDate,
            'clientEndDate': endDate,
            'classScheduleId': classScheduleId,
            'recurringScheduleId': recurringScheduleId,
            'hideGuestOption': hideGuestOption,
            'cartDisplayStartDateTime': cartDisplayStartDateTime,
            'cartDisplayEndDateTime': cartDisplayEndDateTime,
            'maxCapacity': maxCapacity,
            'currentCapacity': currentCapacity,
            'reasonId': reasonId,
            'professionalId': professionalId,
            'locationId': locationId,
            'timeSlotId': timeSlotId,
            'clientTimeSlotId': clientTimeSlotId,
            'htmlId': htmlId,
            'calTimeSlot': calTimeSlot,
            'waitListMode': waitListMode,
            'isWaitListFirstAvail': isWaitListFirstAvail,
            'startDateTimeUTC': startDateTimeUTC,
            'endDateTimeUTC': endDateTimeUTC
        });
    };
    SchedulerService.prototype.getPanelForm = function (panel, fieldDefnList, reasonId, reasonType) {
        var form;
        switch (panel) {
            case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].welcome:
                form = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormGroup"]({
                    'allowedToBook': new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].requiredTrue)
                });
                break;
            case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].locationSuperGroups:
                form = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormGroup"]({ 'group': new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].required) });
                break;
            case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].locationGroups:
                form = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormGroup"]({ 'group': new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].required) });
                break;
            case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].locations:
                form = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormGroup"]({ 'location': new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].required) });
                break;
            case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].staff:
                form = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormGroup"]({ 'staff': new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].required) });
                break;
            case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].reasonSuperGroups:
                form = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormGroup"]({ 'group': new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].required) });
                break;
            case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].reasonGroups:
                form = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormGroup"]({ 'group': new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].required) });
                break;
            case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].reasons:
                form = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormGroup"]({ 'reason': new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].required) });
                break;
            case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].time:
                form = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormGroup"]({
                    'selectedDateTime': this.getTimeSlotFormGroup()
                });
                break;
            case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].clientInfo:
                var controlsObject = {};
                for (var i = 0; i < fieldDefnList.length; i++) {
                    // LHB 07/13/2020 TT-6789
                    if (fieldDefnList[i].visible && fieldDefnList[i].visibleOnScheduler && reasonType && reasonType === 'CLASS' && fieldDefnList[i].code === 'additionalGuests') {
                        fieldDefnList[i].showOnScheduler = true;
                        fieldDefnList[i].enable = true;
                    }
                    if (fieldDefnList[i].visible && fieldDefnList[i].visibleOnScheduler && reasonId &&
                        fieldDefnList[i].serviceIds && fieldDefnList[i].serviceIds.length > 0) { //Fix for TT-6153
                        // For TT-6661 06/22/2020 added in check with passing reasonId=-1 to only show reason specific custom fields assigned to CLIENT if they have a value
                        if ((reasonId === -1 && fieldDefnList[i].value) || fieldDefnList[i].serviceIds.indexOf(reasonId) !== -1) {
                            fieldDefnList[i].showOnScheduler = true;
                            fieldDefnList[i].enable = true;
                        }
                        else {
                            fieldDefnList[i].showOnScheduler = false;
                            fieldDefnList[i].enable = false;
                        }
                    }
                    else if (!reasonId && fieldDefnList[i].visible && fieldDefnList[i].visibleOnScheduler && fieldDefnList[i].serviceIds && fieldDefnList[i].serviceIds.length > 0) {
                        fieldDefnList[i].showOnScheduler = false;
                        fieldDefnList[i].enable = false;
                    }
                    if ((fieldDefnList[i].showOnScheduler && !reasonId) ||
                        (fieldDefnList[i].showOnScheduler && reasonId &&
                            (!fieldDefnList[i].serviceIds || fieldDefnList[i].serviceIds.length === 0) ||
                            (fieldDefnList[i].serviceIds && fieldDefnList[i].serviceIds.length > 0 && fieldDefnList[i].serviceIds.indexOf(reasonId) !== -1)) ||
                        (reasonId === -1 && fieldDefnList[i].value && fieldDefnList[i].serviceIds && fieldDefnList[i].serviceIds.length > 0)) {
                        var validatorsArray = this.clientInfoService.createValidatorsArray(fieldDefnList[i]);
                        controlsObject[fieldDefnList[i].schedulerPreferenceFieldDefnId] = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"]({
                            value: fieldDefnList[i].value,
                            disabled: !fieldDefnList[i].enable
                        }, validatorsArray);
                    }
                }
                form = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormGroup"](controlsObject);
                for (var i = 0, x = fieldDefnList.length; i < x; i++) { // 04/27/2020 Fix for TT-6525 when field is specific to service but condition has it hidden by default
                    this.clientInfoService.checkDependencyFields(fieldDefnList[i], fieldDefnList, form, reasonId);
                }
                break;
            case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_10__["SchedulerPanelValues"].finalConfirmation:
                form = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormGroup"]({ 'finalConfirmationMsg': new _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormControl"](null) });
                break;
        }
        return form;
    };
    SchedulerService.ctorParameters = function () { return [
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] }
    ]; };
    SchedulerService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]])
    ], SchedulerService);
    return SchedulerService;
}());



/***/ }),

/***/ "./src/app/scheduler/screening-question/screening-question.component.ts":
/*!******************************************************************************!*\
  !*** ./src/app/scheduler/screening-question/screening-question.component.ts ***!
  \******************************************************************************/
/*! exports provided: ScreeningQuestionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScreeningQuestionComponent", function() { return ScreeningQuestionComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/cdk/a11y */ "./node_modules/@angular/cdk/esm5/a11y.es5.js");




var ScreeningQuestionComponent = /** @class */ (function () {
    function ScreeningQuestionComponent(passedData, dialogRef, _focusMonitor) {
        this.passedData = passedData;
        this.dialogRef = dialogRef;
        this._focusMonitor = _focusMonitor;
        this.screeningQuestionStatus = 'indeterminate';
    }
    ScreeningQuestionComponent.prototype.ngAfterViewInit = function () {
        this._focusMonitor.stopMonitoring(document.getElementById('screeningQuestionFailBtn'));
    };
    ScreeningQuestionComponent.prototype.ngOnInit = function () {
        this.screeningQuestion = this.passedData.screeningQuestion;
    };
    ScreeningQuestionComponent.prototype.answerScreeningQuestion = function (screeningQuestionStatus) {
        this.screeningQuestionStatus = screeningQuestionStatus;
        if (this.screeningQuestionStatus === 'pass') {
            this.dialogRef.close(this.screeningQuestionStatus);
        }
    };
    ScreeningQuestionComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] },
        { type: _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] },
        { type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_3__["FocusMonitor"] }
    ]; };
    ScreeningQuestionComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-screening-question',
            template: __webpack_require__(/*! raw-loader!./screening-question.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/screening-question/screening-question.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Object, _angular_material__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"], _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_3__["FocusMonitor"]])
    ], ScreeningQuestionComponent);
    return ScreeningQuestionComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/staff/staff.component.ts":
/*!****************************************************!*\
  !*** ./src/app/scheduler/staff/staff.component.ts ***!
  \****************************************************/
/*! exports provided: StaffComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StaffComponent", function() { return StaffComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _models_Staff_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../models/Staff.model */ "./src/models/Staff.model.ts");
/* harmony import */ var _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../models/SchedulerPanel.model */ "./src/models/SchedulerPanel.model.ts");
/* harmony import */ var _scheduler_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../scheduler.service */ "./src/app/scheduler/scheduler.service.ts");








var StaffComponent = /** @class */ (function () {
    function StaffComponent(businessService, responsiveService, cdRef, schedulerService) {
        this.businessService = businessService;
        this.responsiveService = responsiveService;
        this.cdRef = cdRef;
        this.schedulerService = schedulerService;
        this.onMovePanels = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.staffs = [];
        this.showBackButton = true;
        this.staffLoaded = false;
        this.errorLoading = false;
        this.searchingStaff = false;
        this.staffPnlNoStaffFilterSearchMsg = '';
    }
    StaffComponent.prototype.getStaff = function (CSFilterObj, filterSearch) {
        var _this = this;
        this.searchingStaff = filterSearch;
        this.businessService.getStaff(CSFilterObj)
            .subscribe(function (staffs) {
            _this.staffs = staffs;
            if (_this.preference.staffNoPreference === 0 && _this.staffs.length > 1) {
                _this.noPreferenceStaff = new _models_Staff_model__WEBPACK_IMPORTED_MODULE_5__["Staff"](null, _this.preference.labelMap.labelNoPreference);
                _this.noPreferenceStaff.imageUrl = null;
                _this.noPreferenceStaff.staffProfile = null;
                _this.staffs.unshift(_this.noPreferenceStaff);
            }
            if (_this.staffs.length === 1 && _this.directionComingFrom === 'next') {
                // this.panel.formGroup.patchValue({
                //     staff: this.staffs[0]
                // });
                if (_this.CSFilterObj.staffIdList === null) {
                    _this.selectObject(_this.staffs[0], _this.preference.autoAdvanceWhenSingle);
                }
            }
            if (_this.staffs.length === 0 && CSFilterObj.filterStaff !== undefined && CSFilterObj.filterStaff !== null && CSFilterObj.filterStaff !== '') {
                _this.staffPnlNoStaffFilterSearchMsg = _this.preference.labelMap.staffPnlNoStaffFilterSearchMsg.replace(new RegExp('%FILTER_SEARCH%', 'g'), CSFilterObj.filterStaff);
            }
            if (!_this.searchingStaff) {
                _this.totalStaffLength = staffs.length;
            }
            if (_this.panel.formGroup.value.staff !== null) {
                var objFound = false;
                for (var i = 0, x = _this.staffs.length; i < x; i++) {
                    if (_this.staffs[i].professionalId === _this.panel.formGroup.value.staff.professionalId) {
                        _this.staffs[i].selected = true;
                        objFound = true;
                    }
                }
                if (!objFound) {
                    _this.panel.formGroup = _this.schedulerService.getPanelForm(_this.panel.panel, _this.preference.schedulerPreferenceFieldDefnList);
                }
            }
            _this.staffLoaded = true;
            _this.searchingStaff = false;
            _this.cdRef.detectChanges();
        }, function (error) {
            _this.staffLoaded = false;
            _this.errorLoading = true;
            _this.searchingStaff = false;
        });
    };
    StaffComponent.prototype.ngOnInit = function () {
        this.responsiveService.setHeightForEmbedScheduler();
        this.getStaff(this.CSFilterObj, false);
    };
    StaffComponent.prototype.movePanels = function (direction) {
        if (direction === 'back')
            this.CSFilterObj.filterStaff = null;
        this.onMovePanels.emit({ direction: direction, panel: this.panel });
    };
    StaffComponent.prototype.selectSchedulingObject = function (schedulingObject) {
        this.selectObject(schedulingObject.itemSelected, schedulingObject.moveForward, schedulingObject.changeEvent);
    };
    StaffComponent.prototype.selectObject = function (staff, moveForward, event) {
        if (!this.businessService.checkInnerHTMLForHrefClick(event)) {
            staff.selected = true;
            this.panel.formGroup.patchValue({ staff: staff });
            if (moveForward) {
                this.movePanels('next');
            }
        }
    };
    StaffComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_4__["ResponsiveService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
        { type: _scheduler_service__WEBPACK_IMPORTED_MODULE_7__["SchedulerService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], StaffComponent.prototype, "onMovePanels", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], StaffComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_6__["schedulerPanel"])
    ], StaffComponent.prototype, "panel", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["CSFilterParameterBean"])
    ], StaffComponent.prototype, "CSFilterObj", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], StaffComponent.prototype, "directionComingFrom", void 0);
    StaffComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'staff-panel',
            template: __webpack_require__(/*! raw-loader!./staff.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/staff/staff.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"], _responsive_service__WEBPACK_IMPORTED_MODULE_4__["ResponsiveService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"], _scheduler_service__WEBPACK_IMPORTED_MODULE_7__["SchedulerService"]])
    ], StaffComponent);
    return StaffComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/time/calendar/calendar.component.css":
/*!****************************************************************!*\
  !*** ./src/app/scheduler/time/calendar/calendar.component.css ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".disableDateClicking {\n    cursor: default;\n}\nh3#calendarMonthLabel {\n    margin-top: 6px;\n    font-size: 1.25rem;\n}\n/*.noAvailabilityOnDay > div {*/\n/*    background-color: transparent;*/\n/*    color: #000000de;*/\n/*}*/\n/*.dayHasAvailability {*/\n/*    background-color: #1C827C;*/\n/*    color: #ffffff;*/\n/*}*/\n/*.selectedDayOnCalendar {*/\n/*    background-color: #30807B;*/\n/*    color: #ffffff;*/\n/*}*/\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2NoZWR1bGVyL3RpbWUvY2FsZW5kYXIvY2FsZW5kYXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7QUFDbkI7QUFDQTtJQUNJLGVBQWU7SUFDZixrQkFBa0I7QUFDdEI7QUFDQSwrQkFBK0I7QUFDL0IscUNBQXFDO0FBQ3JDLHdCQUF3QjtBQUN4QixJQUFJO0FBQ0osd0JBQXdCO0FBQ3hCLGlDQUFpQztBQUNqQyxzQkFBc0I7QUFDdEIsSUFBSTtBQUNKLDJCQUEyQjtBQUMzQixpQ0FBaUM7QUFDakMsc0JBQXNCO0FBQ3RCLElBQUkiLCJmaWxlIjoic3JjL2FwcC9zY2hlZHVsZXIvdGltZS9jYWxlbmRhci9jYWxlbmRhci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRpc2FibGVEYXRlQ2xpY2tpbmcge1xuICAgIGN1cnNvcjogZGVmYXVsdDtcbn1cbmgzI2NhbGVuZGFyTW9udGhMYWJlbCB7XG4gICAgbWFyZ2luLXRvcDogNnB4O1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbn1cbi8qLm5vQXZhaWxhYmlsaXR5T25EYXkgPiBkaXYgeyovXG4vKiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsqL1xuLyogICAgY29sb3I6ICMwMDAwMDBkZTsqL1xuLyp9Ki9cbi8qLmRheUhhc0F2YWlsYWJpbGl0eSB7Ki9cbi8qICAgIGJhY2tncm91bmQtY29sb3I6ICMxQzgyN0M7Ki9cbi8qICAgIGNvbG9yOiAjZmZmZmZmOyovXG4vKn0qL1xuLyouc2VsZWN0ZWREYXlPbkNhbGVuZGFyIHsqL1xuLyogICAgYmFja2dyb3VuZC1jb2xvcjogIzMwODA3QjsqL1xuLyogICAgY29sb3I6ICNmZmZmZmY7Ki9cbi8qfSovXG4iXX0= */"

/***/ }),

/***/ "./src/app/scheduler/time/calendar/calendar.component.ts":
/*!***************************************************************!*\
  !*** ./src/app/scheduler/time/calendar/calendar.component.ts ***!
  \***************************************************************/
/*! exports provided: CalendarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CalendarComponent", function() { return CalendarComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _time_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _time_objects_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../time-objects.model */ "./src/app/scheduler/time/time-objects.model.ts");
/* harmony import */ var _booking_components_availability_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../booking-components/availability.service */ "./src/app/booking-components/availability.service.ts");





var CalendarComponent = /** @class */ (function () {
    function CalendarComponent(timeService, availabilityService) {
        this.timeService = timeService;
        this.availabilityService = availabilityService;
        this.onChangeMonths = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.onSetDay = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.maxBookingDate = new Date();
        this.minBookingDate = new Date();
        this.currentDate = new Date();
        this.activeYear = this.currentDate.getFullYear();
        this.activeMonth = this.currentDate.getMonth() + 1;
        this.activeDay = this.currentDate.getDate();
        this.monthDays = [];
        this.monthsData = this.timeService.getMonthsData(this.activeYear);
        this.weekdays = this.timeService.getWeekdayData();
        this.currentMonthData = this.monthsData[this.activeMonth - 1];
        this.allowGetNextMonth = false;
        this.allowGetPrevMonth = false;
    }
    CalendarComponent.prototype.setDay = function (day) {
        if (!this.disableDateClicking) {
            for (var i = 0, x = this.monthAvailability.openDays.length; i < x; i++) {
                if (this.monthAvailability.openDays[i].day === day.dayNumInMonth &&
                    (this.selectedDate.day !== this.monthAvailability.openDays[i].day ||
                        this.selectedDate.month !== this.monthAvailability.openDays[i].month ||
                        this.selectedDate.year !== this.monthAvailability.openDays[i].year)) {
                    this.onSetDay.emit({ singleDateAvailability: this.monthAvailability.openDays[i], path: 'selectedDay' });
                }
            }
        }
    };
    CalendarComponent.prototype.nextMonth = function (currentMonthData, path) {
        var nextMonthData = this.timeService.moveToNextMonth(currentMonthData, this.activeYear, this.monthsData, this.activeMonth);
        this.activeYear = nextMonthData.activeYear;
        this.activeMonth = nextMonthData.activeMonth;
        this.monthsData = nextMonthData.monthsData;
        if (this.timeService.getAllowGetMonth(this.activeYear, this.activeMonth, this.maxBookingDate, this.minBookingDate)) {
            this.currentMonthData = this.monthsData[this.activeMonth - 1];
            var dataToPass = { monthDataObj: this.currentMonthData, path: path };
            this.onChangeMonths.emit(dataToPass);
        }
    };
    CalendarComponent.prototype.previousMonth = function (currentMonthData) {
        if (currentMonthData.monthNumberIndex === 0) {
            this.activeYear = this.activeYear - 1;
            this.monthsData = this.timeService.getMonthsData(this.activeYear);
            this.activeMonth = 12;
        }
        else {
            this.activeMonth = this.activeMonth - 1;
        }
        this.currentMonthData = this.monthsData[this.activeMonth - 1];
        // this.getMonthDates('previousMonth');
        var dataToPass = { monthDataObj: this.currentMonthData, path: 'previousMonth' };
        this.onChangeMonths.emit(dataToPass);
    };
    CalendarComponent.prototype.checkIfNextAndPrevMonthsAllowed = function () {
        this.allowGetNextMonth = this.availabilityService.checkIfNextMonthAllowed(this.activeYear, this.activeMonth, this.currentMonthData, this.maxBookingDate, this.minBookingDate);
        this.allowGetPrevMonth = this.availabilityService.checkIfPrevMonthAllowed(this.activeYear, this.activeMonth, this.currentMonthData, this.maxBookingDate, this.minBookingDate);
        return this.allowGetNextMonth;
    };
    CalendarComponent.prototype.setSelectedMonthOnCalendar = function () {
        // console.log("START")
        // //@ts-ignore
        // console.log("currentMonthData " + JSON.stringify(this.currentMonthData, true, 2));
        // //@ts-ignore
        // console.log("this.monthAvailability " + JSON.stringify(this.monthAvailability, true, 2));
        // //@ts-ignore
        // console.log("this.activeMonth " + JSON.stringify(this.activeMonth, true, 2));
        if (this.monthAvailability.month !== this.activeMonth || this.monthAvailability.month !== this.currentMonthData.monthNumberFull) {
            this.activeMonth = this.monthAvailability.month;
            if (this.activeYear !== this.monthAvailability.year) {
                this.activeYear = this.monthAvailability.year;
                this.monthsData = this.timeService.getMonthsData(this.activeYear);
            }
            // //@ts-ignore
            // console.log("this.activeMonth 2 " + JSON.stringify(this.activeMonth, true, 2));
            // //@ts-ignore
            // console.log("this.monthsData[this.activeMonth - 1] " + JSON.stringify(this.monthsData[this.activeMonth - 1], true, 2));
            this.currentMonthData = this.monthsData[this.activeMonth - 1];
        }
        // //@ts-ignore
        // console.log("currentMonthData 2 " + JSON.stringify(this.currentMonthData, true, 2));
        // console.log("END")
        this.monthDays = this.timeService.getDaysOfMonth(this.activeYear, this.activeMonth, this.monthAvailability);
        // //@ts-ignore
        // console.log("monthDays " + JSON.stringify(this.monthDays, true, 2));
        this.checkIfNextAndPrevMonthsAllowed();
    };
    CalendarComponent.prototype.ngOnChanges = function (changes) {
        // console.log(changes);
        if (changes.hasOwnProperty('monthAvailability') && changes.monthAvailability.currentValue !== undefined && changes.monthAvailability.currentValue !== null) {
            this.setSelectedMonthOnCalendar();
        }
        if (changes.hasOwnProperty('selectedDate') && changes.selectedDate.currentValue !== undefined && changes.selectedDate.currentValue !== null) {
            this.activeDay = this.selectedDate.day;
        }
    };
    CalendarComponent.prototype.ngOnInit = function () {
        // no load functions
    };
    CalendarComponent.ctorParameters = function () { return [
        { type: _time_service__WEBPACK_IMPORTED_MODULE_2__["TimeService"] },
        { type: _booking_components_availability_service__WEBPACK_IMPORTED_MODULE_4__["AvailabilityService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], CalendarComponent.prototype, "onChangeMonths", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], CalendarComponent.prototype, "onSetDay", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], CalendarComponent.prototype, "monthAvailabilityLoaded", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], CalendarComponent.prototype, "errorLoading", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _time_objects_model__WEBPACK_IMPORTED_MODULE_3__["MonthAvailability"])
    ], CalendarComponent.prototype, "monthAvailability", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _time_objects_model__WEBPACK_IMPORTED_MODULE_3__["SingleDateAvailability"])
    ], CalendarComponent.prototype, "selectedDate", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Date)
    ], CalendarComponent.prototype, "maxBookingDate", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Date)
    ], CalendarComponent.prototype, "minBookingDate", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], CalendarComponent.prototype, "disableDateClicking", void 0);
    CalendarComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'time-calendar',
            template: __webpack_require__(/*! raw-loader!./calendar.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/time/calendar/calendar.component.html"),
            styles: [__webpack_require__(/*! ./calendar.component.css */ "./src/app/scheduler/time/calendar/calendar.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_time_service__WEBPACK_IMPORTED_MODULE_2__["TimeService"], _booking_components_availability_service__WEBPACK_IMPORTED_MODULE_4__["AvailabilityService"]])
    ], CalendarComponent);
    return CalendarComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/time/moment-timezones.service.ts":
/*!************************************************************!*\
  !*** ./src/app/scheduler/time/moment-timezones.service.ts ***!
  \************************************************************/
/*! exports provided: MomentTimezoneService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MomentTimezoneService", function() { return MomentTimezoneService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var MomentTimezoneService = /** @class */ (function () {
    function MomentTimezoneService() {
        this.allTimezones = {
            "version": "2019b",
            "zones": [
                "Africa/Abidjan|LMT GMT|g.8 0|01|-2ldXH.Q|48e5",
                "Africa/Accra|LMT GMT +0020|.Q 0 -k|012121212121212121212121212121212121212121212121|-26BbX.8 6tzX.8 MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE 1BAk MnE 1C0k MnE 1BAk MnE 1BAk MnE|41e5",
                "Africa/Nairobi|LMT EAT +0230 +0245|-2r.g -30 -2u -2J|01231|-1F3Cr.g 3Dzr.g okMu MFXJ|47e5",
                "Africa/Algiers|PMT WET WEST CET CEST|-9.l 0 -10 -10 -20|0121212121212121343431312123431213|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 DA0 Imo0 rd0 De0 9Xz0 1fb0 1ap0 16K0 2yo0 mEp0 hwL0 jxA0 11A0 dDd0 17b0 11B0 1cN0 2Dy0 1cN0 1fB0 1cL0|26e5",
                "Africa/Lagos|LMT WAT|-d.A -10|01|-22y0d.A|17e6",
                "Africa/Bissau|LMT -01 GMT|12.k 10 0|012|-2ldX0 2xoo0|39e4",
                "Africa/Maputo|LMT CAT|-2a.k -20|01|-2GJea.k|26e5",
                "Africa/Cairo|EET EEST|-20 -30|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1bIO0 vb0 1ip0 11z0 1iN0 1nz0 12p0 1pz0 10N0 1pz0 16p0 1jz0 s3d0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1WL0 rd0 1Rz0 wp0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1qL0 Xd0 1oL0 11d0 1oL0 11d0 1pb0 11d0 1oL0 11d0 1oL0 11d0 1ny0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 WL0 1qN0 Rb0 1wp0 On0 1zd0 Lz0 1EN0 Fb0 c10 8n0 8Nd0 gL0 e10 mn0|15e6",
                "Africa/Casablanca|LMT +00 +01|u.k 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-2gMnt.E 130Lt.E rb0 Dd0 dVb0 b6p0 TX0 EoB0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4mn0 SyN0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0|32e5",
                "Africa/Ceuta|WET WEST CET CEST|0 -10 -10 -20|010101010101010101010232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-25KN0 11z0 drd0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1y7o0 LL0 gnd0 rz0 43d0 AL0 1Nd0 XX0 1Cp0 pz0 dEp0 4VB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|85e3",
                "Africa/El_Aaiun|LMT -01 +00 +01|Q.M 10 0 -10|012323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1rDz7.c 1GVA7.c 6L0 AL0 1Nd0 XX0 1Cp0 pz0 1cBB0 AL0 1Nd0 wn0 1FB0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 28M0 e00 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 e00 28M0 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0 2600 e00 2600 gM0 2600 e00 28M0 e00 2600 gM0|20e4",
                "Africa/Johannesburg|SAST SAST SAST|-1u -20 -30|012121|-2GJdu 1Ajdu 1cL0 1cN0 1cL0|84e5",
                "Africa/Juba|LMT CAT CAST EAT|-26.s -20 -30 -30|01212121212121212121212121212121213|-1yW26.s 1zK06.s 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0",
                "Africa/Khartoum|LMT CAT CAST EAT|-2a.8 -20 -30 -30|012121212121212121212121212121212131|-1yW2a.8 1zK0a.8 16L0 1iN0 17b0 1jd0 17b0 1ip0 17z0 1i10 17X0 1hB0 18n0 1hd0 19b0 1gp0 19z0 1iN0 17b0 1ip0 17z0 1i10 18n0 1hd0 18L0 1gN0 19b0 1gp0 19z0 1iN0 17z0 1i10 17X0 yGd0 HjL0|51e5",
                "Africa/Monrovia|MMT MMT GMT|H.8 I.u 0|012|-23Lzg.Q 28G01.m|11e5",
                "Africa/Ndjamena|LMT WAT WAST|-10.c -10 -20|0121|-2le10.c 2J3c0.c Wn0|13e5",
                "Africa/Sao_Tome|LMT GMT WAT|A.J 0 -10|0121|-2le00 4i6N0 2q00",
                "Africa/Tripoli|LMT CET CEST EET|-Q.I -10 -20 -20|012121213121212121212121213123123|-21JcQ.I 1hnBQ.I vx0 4iP0 xx0 4eN0 Bb0 7ip0 U0n0 A10 1db0 1cN0 1db0 1dd0 1db0 1eN0 1bb0 1e10 1cL0 1c10 1db0 1dd0 1db0 1cN0 1db0 1q10 fAn0 1ep0 1db0 AKq0 TA0 1o00|11e5",
                "Africa/Tunis|PMT CET CEST|-9.l -10 -20|0121212121212121212121212121212121|-2nco9.l 18pa9.l 1qM0 DA0 3Tc0 11B0 1ze0 WM0 7z0 3d0 14L0 1cN0 1f90 1ar0 16J0 1gXB0 WM0 1rA0 11c0 nwo0 Ko0 1cM0 1cM0 1rA0 10M0 zuM0 10N0 1aN0 1qM0 WM0 1qM0 11A0 1o00|20e5",
                "Africa/Windhoek|+0130 SAST SAST CAT WAT|-1u -20 -30 -20 -10|01213434343434343434343434343434343434343434343434343|-2GJdu 1Ajdu 1cL0 1SqL0 9Io0 16P0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0|32e4",
                "America/Adak|NST NWT NPT BST BDT AHST HST HDT|b0 a0 a0 b0 a0 a0 a0 90|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|326",
                "America/Anchorage|AST AWT APT AHST AHDT YST AKST AKDT|a0 90 90 a0 90 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T00 8wX0 iA0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cm0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|30e4",
                "America/Port_of_Spain|LMT AST|46.4 40|01|-2kNvR.U|43e3",
                "America/Araguaina|LMT -03 -02|3c.M 30 20|0121212121212121212121212121212121212121212121212121|-2glwL.c HdKL.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 ny10 Lz0|14e4",
                "America/Argentina/Buenos_Aires|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 A4p0 uL0 1qN0 WL0",
                "America/Argentina/Catamarca|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 7B0 8zb0 uL0",
                "America/Argentina/Cordoba|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323132323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0 1qN0 WL0",
                "America/Argentina/Jujuy|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1ze0 TX0 1ld0 WK0 1wp0 TX0 A4p0 uL0",
                "America/Argentina/La_Rioja|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0",
                "America/Argentina/Mendoza|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232312121321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1u20 SL0 1vd0 Tb0 1wp0 TW0 ri10 Op0 7TX0 uL0",
                "America/Argentina/Rio_Gallegos|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rlB0 7B0 8zb0 uL0",
                "America/Argentina/Salta|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231323232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 A4p0 uL0",
                "America/Argentina/San_Juan|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323231232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Qn0 qO0 16n0 Rb0 1wp0 TX0 rld0 m10 8lb0 uL0",
                "America/Argentina/San_Luis|CMT -04 -03 -02|4g.M 40 30 20|012121212121212121212121212121212121212121232323121212321212|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 XX0 1q20 SL0 AN0 vDb0 m10 8lb0 8L0 jd0 1qN0 WL0 1qN0",
                "America/Argentina/Tucuman|CMT -04 -03 -02|4g.M 40 30 20|0121212121212121212121212121212121212121212323232313232123232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wq0 Ra0 1wp0 TX0 rlB0 4N0 8BX0 uL0 1qN0 WL0",
                "America/Argentina/Ushuaia|CMT -04 -03 -02|4g.M 40 30 20|01212121212121212121212121212121212121212123232323232321232|-20UHH.c pKnH.c Mn0 1iN0 Tb0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 1C10 LX0 1C10 LX0 1C10 LX0 1C10 Mn0 MN0 2jz0 MN0 4lX0 u10 5Lb0 1pB0 Fnz0 u10 uL0 1vd0 SL0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 zvd0 Bz0 1tB0 TX0 1wp0 Rb0 1wp0 Rb0 1wp0 TX0 rkN0 8p0 8zb0 uL0",
                "America/Curacao|LMT -0430 AST|4z.L 4u 40|012|-2kV7o.d 28KLS.d|15e4",
                "America/Asuncion|AMT -04 -03|3O.E 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-1x589.k 1DKM9.k 3CL0 3Dd0 10L0 1pB0 10n0 1pB0 10n0 1pB0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1dd0 1cL0 1dd0 1cL0 1dd0 1db0 1dd0 1cL0 1lB0 14n0 1dd0 1cL0 1fd0 WL0 1rd0 1aL0 1dB0 Xz0 1qp0 Xb0 1qN0 10L0 1rB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 WN0 1qL0 11B0 1nX0 1ip0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 TX0 1tB0 19X0 1a10 1fz0 1a10 1fz0 1cN0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0|28e5",
                "America/Atikokan|CST CDT CWT CPT EST|60 50 50 50 50|0101234|-25TQ0 1in0 Rnb0 3je0 8x30 iw0|28e2",
                "America/Bahia_Banderas|LMT MST CST PST MDT CDT|71 70 60 80 60 50|0121212131414141414141414141414141414152525252525252525252525252525252525252525252525252525252|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nW0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|84e3",
                "America/Bahia|LMT -03 -02|2y.4 30 20|01212121212121212121212121212121212121212121212121212121212121|-2glxp.U HdLp.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 l5B0 Rb0|27e5",
                "America/Barbados|LMT BMT AST ADT|3W.t 3W.t 40 30|01232323232|-1Q0I1.v jsM0 1ODC1.v IL0 1ip0 17b0 1ip0 17b0 1ld0 13b0|28e4",
                "America/Belem|LMT -03 -02|3d.U 30 20|012121212121212121212121212121|-2glwK.4 HdKK.4 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|20e5",
                "America/Belize|LMT CST -0530 CDT|5Q.M 60 5u 50|01212121212121212121212121212121212121212121212121213131|-2kBu7.c fPA7.c Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1wou Rbu 1zcu Onu 1zcu Onu 1zcu Rbu 1wou Rbu 1f0Mu qn0 lxB0 mn0|57e3",
                "America/Blanc-Sablon|AST ADT AWT APT|40 30 30 30|010230|-25TS0 1in0 UGp0 8x50 iu0|11e2",
                "America/Boa_Vista|LMT -04 -03|42.E 40 30|0121212121212121212121212121212121|-2glvV.k HdKV.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 smp0 WL0 1tB0 2L0|62e2",
                "America/Bogota|BMT -05 -04|4U.g 50 40|0121|-2eb73.I 38yo3.I 2en0|90e5",
                "America/Boise|PST PDT MST MWT MPT MDT|80 70 70 60 60 60|0101023425252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-261q0 1nX0 11B0 1nX0 8C10 JCL0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 Dd0 1Kn0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e4",
                "America/Cambridge_Bay|-00 MST MWT MPT MDDT MDT CST CDT EST|0 70 60 60 50 60 60 50 50|0123141515151515151515151515151515151515151515678651515151515151515151515151515151515151515151515151515151515151515151515151|-21Jc0 RO90 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11A0 1nX0 2K0 WQ0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e2",
                "America/Campo_Grande|LMT -04 -03|3C.s 40 30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwl.w HdLl.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|77e4",
                "America/Cancun|LMT CST EST EDT CDT|5L.4 60 50 40 50|0123232341414141414141414141414141414141412|-1UQG0 2q2o0 yLB0 1lb0 14p0 1lb0 14p0 Lz0 xB0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 Dd0|63e4",
                "America/Caracas|CMT -0430 -04|4r.E 4u 40|01212|-2kV7w.k 28KM2.k 1IwOu kqo0|29e5",
                "America/Cayenne|LMT -04 -03|3t.k 40 30|012|-2mrwu.E 2gWou.E|58e3",
                "America/Panama|CMT EST|5j.A 50|01|-2uduE.o|15e5",
                "America/Chicago|CST CDT EST CWT CPT|60 50 50 50 50|01010101010101010101010101010101010102010101010103401010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 1wp0 TX0 WN0 1qL0 1cN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 11B0 1Hz0 14p0 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|92e5",
                "America/Chihuahua|LMT MST CST CDT MDT|74.k 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|81e4",
                "America/Costa_Rica|SJMT CST CDT|5A.d 60 50|0121212121|-1Xd6n.L 2lu0n.L Db0 1Kp0 Db0 pRB0 15b0 1kp0 mL0|12e5",
                "America/Creston|MST PST|70 80|010|-29DR0 43B0|53e2",
                "America/Cuiaba|LMT -04 -03|3I.k 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwf.E HdLf.E 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 4a10 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|54e4",
                "America/Danmarkshavn|LMT -03 -02 GMT|1e.E 30 20 0|01212121212121212121212121212121213|-2a5WJ.k 2z5fJ.k 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 DC0|8",
                "America/Dawson_Creek|PST PDT PWT PPT MST|80 70 70 70 70|0102301010101010101010101010101010101010101010101010101014|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 ML0|12e3",
                "America/Dawson|YST YDT YWT YPT YDDT PST PDT|90 80 80 80 70 80 70|0101023040565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 jrA0 fNd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|13e2",
                "America/Denver|MST MDT MWT MPT|70 60 60 60|01010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 11B0 1qL0 WN0 mn0 Ord0 8x20 ix0 LCN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e5",
                "America/Detroit|LMT CST EST EWT EPT EDT|5w.b 60 50 40 40 40|012342525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2Cgir.N peqr.N 156L0 8x40 iv0 6fd0 11z0 XQp0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e5",
                "America/Edmonton|LMT MST MDT MWT MPT|7x.Q 70 60 60 60|01212121212121341212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2yd4q.8 shdq.8 1in0 17d0 hz0 2dB0 1fz0 1a10 11z0 1qN0 WL0 1qN0 11z0 IGN0 8x20 ix0 3NB0 11z0 LFB0 1cL0 3Cp0 1cL0 66N0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|10e5",
                "America/Eirunepe|LMT -05 -04|4D.s 50 40|0121212121212121212121212121212121|-2glvk.w HdLk.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0 yTd0 d5X0|31e3",
                "America/El_Salvador|LMT CST CDT|5U.M 60 50|012121|-1XiG3.c 2Fvc3.c WL0 1qN0 WL0|11e5",
                "America/Tijuana|LMT MST PST PDT PWT PPT|7M.4 70 80 70 70 70|012123245232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQE0 4PX0 8mM0 8lc0 SN0 1cL0 pHB0 83r0 zI0 5O10 1Rz0 cOO0 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 BUp0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|20e5",
                "America/Fort_Nelson|PST PDT PWT PPT MST|80 70 70 70 70|01023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010104|-25TO0 1in0 UGp0 8x10 iy0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|39e2",
                "America/Fort_Wayne|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010101023010101010101010101040454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 QI10 Db0 RB0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 5Tz0 1o10 qLb0 1cL0 1cN0 1cL0 1qhd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                "America/Fortaleza|LMT -03 -02|2y 30 20|0121212121212121212121212121212121212121|-2glxq HdLq 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 5z0 2mN0 On0|34e5",
                "America/Glace_Bay|LMT AST ADT AWT APT|3X.M 40 30 30 30|012134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsI0.c CwO0.c 1in0 UGp0 8x50 iu0 iq10 11z0 Jg10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3",
                "America/Godthab|LMT -03 -02|3q.U 30 20|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5Ux.4 2z5dx.4 19U0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e3",
                "America/Goose_Bay|NST NDT NST NDT NWT NPT AST ADT ADDT|3u.Q 2u.Q 3u 2u 2u 2u 40 30 20|010232323232323245232323232323232323232323232323232323232326767676767676767676767676767676767676767676768676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-25TSt.8 1in0 DXb0 2HbX.8 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 S10 g0u 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|76e2",
                "America/Grand_Turk|KMT EST EDT AST|57.a 50 40 40|01212121212121212121212121212121212121212121212121212121212121212121212121232121212121212121212121212121212121212121|-2l1uQ.O 2HHBQ.O 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 5Ip0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e2",
                "America/Guatemala|LMT CST CDT|62.4 60 50|0121212121|-24KhV.U 2efXV.U An0 mtd0 Nz0 ifB0 17b0 zDB0 11z0|13e5",
                "America/Guayaquil|QMT -05 -04|5e 50 40|0121|-1yVSK 2uILK rz0|27e5",
                "America/Guyana|LMT -0345 -03 -04|3Q.E 3J 30 40|0123|-2dvU7.k 2r6LQ.k Bxbf|80e4",
                "America/Halifax|LMT AST ADT AWT APT|4e.o 40 30 30 30|0121212121212121212121212121212121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsHJ.A xzzJ.A 1db0 3I30 1in0 3HX0 IL0 1E10 ML0 1yN0 Pb0 1Bd0 Mn0 1Bd0 Rz0 1w10 Xb0 1w10 LX0 1w10 Xb0 1w10 Lz0 1C10 Jz0 1E10 OL0 1yN0 Un0 1qp0 Xb0 1qp0 11X0 1w10 Lz0 1HB0 LX0 1C10 FX0 1w10 Xb0 1qp0 Xb0 1BB0 LX0 1td0 Xb0 1qp0 Xb0 Rf0 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 3Qp0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 6i10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|39e4",
                "America/Havana|HMT CST CDT|5t.A 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Meuu.o 72zu.o ML0 sld0 An0 1Nd0 Db0 1Nd0 An0 6Ep0 An0 1Nd0 An0 JDd0 Mn0 1Ap0 On0 1fd0 11X0 1qN0 WL0 1wp0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 14n0 1ld0 14L0 1kN0 15b0 1kp0 1cL0 1cN0 1fz0 1a10 1fz0 1fB0 11z0 14p0 1nX0 11B0 1nX0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 1a10 1in0 1a10 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 17c0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 11A0 6i00 Rc0 1wo0 U00 1tA0 Rc0 1wo0 U00 1wo0 U00 1zc0 U00 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0|21e5",
                "America/Hermosillo|LMT MST CST PST MDT|7n.Q 70 60 80 60|0121212131414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0|64e4",
                "America/Indiana/Knox|CST CDT CWT CPT EST|60 50 50 50 50|0101023010101010101010101010101010101040101010101010101010101010101010101010101010101010141010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 3NB0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 3Cn0 8wp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 z8o0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                "America/Indiana/Marengo|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010104545454545414545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 dyN0 11z0 6fd0 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1e6p0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                "America/Indiana/Petersburg|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010104010101010101010101010141014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 njX0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 3Fb0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 19co0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                "America/Indiana/Tell_City|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010454541010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 g0p0 11z0 1o10 11z0 1qL0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 caL0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                "America/Indiana/Vevay|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|010102304545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 kPB0 Awn0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1lnd0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                "America/Indiana/Vincennes|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010454541014545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 g0p0 11z0 1o10 11z0 1qL0 WN0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 caL0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                "America/Indiana/Winamac|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|01010230101010101010101010101010101010454541054545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 jrz0 1cL0 1cN0 1cL0 1qhd0 1o00 Rd0 1za0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                "America/Inuvik|-00 PST PDDT MST MDT|0 80 60 70 60|0121343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-FnA0 tWU0 1fA0 wPe0 2pz0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|35e2",
                "America/Iqaluit|-00 EWT EPT EST EDDT EDT CST CDT|0 40 40 50 30 40 60 50|01234353535353535353535353535353535353535353567353535353535353535353535353535353535353535353535353535353535353535353535353|-16K00 7nX0 iv0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|67e2",
                "America/Jamaica|KMT EST EDT|57.a 50 40|0121212121212121212121|-2l1uQ.O 2uM1Q.O 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0|94e4",
                "America/Juneau|PST PWT PPT PDT YDT YST AKST AKDT|80 70 70 70 80 90 90 80|01203030303030303030303030403030356767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cM0 1cM0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|33e3",
                "America/Kentucky/Louisville|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101010102301010101010101010101010101454545454545414545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 3Fd0 Nb0 LPd0 11z0 RB0 8x30 iw0 Bb0 10N0 2bB0 8in0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 xz0 gso0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1VA0 LA0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                "America/Kentucky/Monticello|CST CDT CWT CPT EST EDT|60 50 50 50 50 40|0101023010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454545454|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 SWp0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                "America/La_Paz|CMT BST -04|4w.A 3w.A 40|012|-1x37r.o 13b0|19e5",
                "America/Lima|LMT -05 -04|58.A 50 40|0121212121212121|-2tyGP.o 1bDzP.o zX0 1aN0 1cL0 1cN0 1cL0 1PrB0 zX0 1O10 zX0 6Gp0 zX0 98p0 zX0|11e6",
                "America/Los_Angeles|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 5Wp1 1VaX 3dA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e6",
                "America/Maceio|LMT -03 -02|2m.Q 30 20|012121212121212121212121212121212121212121|-2glxB.8 HdLB.8 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 dMN0 Lz0 8Q10 WL0 1tB0 5z0 2mN0 On0|93e4",
                "America/Managua|MMT CST EST CDT|5J.c 60 50 50|0121313121213131|-1quie.M 1yAMe.M 4mn0 9Up0 Dz0 1K10 Dz0 s3F0 1KH0 DB0 9In0 k8p0 19X0 1o30 11y0|22e5",
                "America/Manaus|LMT -04 -03|40.4 40 30|01212121212121212121212121212121|-2glvX.U HdKX.U 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 dPB0 On0|19e5",
                "America/Martinique|FFMT AST ADT|44.k 40 30|0121|-2mPTT.E 2LPbT.E 19X0|39e4",
                "America/Matamoros|LMT CST CDT|6E 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|45e4",
                "America/Mazatlan|LMT MST CST PST MDT|75.E 70 60 80 60|0121212131414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 otX0 gmN0 P2N0 13Vd0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|44e4",
                "America/Menominee|CST CDT CWT CPT EST|60 50 50 50 50|01010230101041010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 1o10 11z0 LCN0 1fz0 6410 9Jb0 1cM0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|85e2",
                "America/Merida|LMT CST EST CDT|5W.s 60 50 50|0121313131313131313131313131313131313131313131313131313131313131313131313131313131313131|-1UQG0 2q2o0 2hz0 wu30 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|11e5",
                "America/Metlakatla|PST PWT PPT PDT AKST AKDT|80 70 70 70 90 80|01203030303030303030303030303030304545450454545454545454545454545454545454545454|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1hU10 Rd0 1zb0 Op0 1zb0 Op0 1zb0 uM0 jB0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2",
                "America/Mexico_City|LMT MST CST CDT CWT|6A.A 70 60 50 50|012121232324232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 gEn0 TX0 3xd0 Jb0 6zB0 SL0 e5d0 17b0 1Pff0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|20e6",
                "America/Miquelon|LMT AST -03 -02|3I.E 40 30 20|012323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2mKkf.k 2LTAf.k gQ10 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|61e2",
                "America/Moncton|EST AST ADT AWT APT|50 40 30 30 30|012121212121212121212134121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2IsH0 CwN0 1in0 zAo0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1Nd0 An0 1K10 Lz0 1zB0 NX0 1u10 Wn0 S20 8x50 iu0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14n1 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 ReX 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|64e3",
                "America/Monterrey|LMT CST CDT|6F.g 60 50|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1UQG0 2FjC0 1nX0 i6p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|41e5",
                "America/Montevideo|LMT MMT -04 -03 -0330 -0230 -02 -0130|3I.P 3I.P 40 30 3u 2u 20 1u|012343434343434343434343435353636353636375363636363636363636363636363636363636363636363|-2tRUf.9 sVc0 8jcf.9 1db0 1dcu 1cLu 1dcu 1cLu ircu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu WLu 1fAu 1cLu 1o0u 11zu NAu 3jXu zXu Dq0u 19Xu pcu jz0 cm10 19X0 6tB0 1fbu 3o0u jX0 4vB0 xz0 3Cp0 mmu 1a10 IMu Db0 4c10 uL0 1Nd0 An0 1SN0 uL0 mp0 28L0 iPB0 un0 1SN0 xz0 1zd0 Lz0 1zd0 Rb0 1zd0 On0 1wp0 Rb0 s8p0 1fB0 1ip0 11z0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 14n0 1ld0 14n0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 11z0|17e5",
                "America/Toronto|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101012301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 11Wu 1nzu 1fD0 WJ0 1wr0 Nb0 1Ap0 On0 1zd0 On0 1wp0 TX0 1tB0 TX0 1tB0 TX0 1tB0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 4kM0 8x40 iv0 1o10 11z0 1nX0 11z0 1o10 11z0 1o10 1qL0 11D0 1nX0 11B0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e5",
                "America/Nassau|LMT EST EDT|59.u 50 40|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2kNuO.u 26XdO.u 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|24e4",
                "America/New_York|EST EDT EWT EPT|50 40 40 40|01010101010101010101010101010101010101010101010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 11B0 1qL0 1a10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 RB0 8x40 iv0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e6",
                "America/Nipigon|EST EDT EWT EPT|50 40 40 40|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TR0 1in0 Rnb0 3je0 8x40 iv0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|16e2",
                "America/Nome|NST NWT NPT BST BDT YST AKST AKDT|b0 a0 a0 b0 a0 90 90 80|012034343434343434343434343434343456767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767676|-17SX0 8wW0 iB0 Qlb0 52O0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cl0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|38e2",
                "America/Noronha|LMT -02 -01|29.E 20 10|0121212121212121212121212121212121212121|-2glxO.k HdKO.k 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|30e2",
                "America/North_Dakota/Beulah|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Oo0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                "America/North_Dakota/Center|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101014545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                "America/North_Dakota/New_Salem|MST MDT MWT MPT CST CDT|70 60 60 60 60 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101454545454545454545454545454545454545454545454545454545454545454545454|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14o0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                "America/Ojinaga|LMT MST CST CDT MDT|6V.E 70 60 50 60|0121212323241414141414141414141414141414141414141414141414141414141414141414141414141414141|-1UQF0 deL0 8lc0 17c0 10M0 1dd0 2zQN0 1lb0 14p0 1lb0 14q0 1lb0 14p0 1nX0 11B0 1nX0 1fB0 WL0 1fB0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 U10 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e3",
                "America/Pangnirtung|-00 AST AWT APT ADDT ADT EDT EST CST CDT|0 40 30 30 20 30 40 50 60 50|012314151515151515151515151515151515167676767689767676767676767676767676767676767676767676767676767676767676767676767676767|-1XiM0 PnG0 8x50 iu0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1o00 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11C0 1nX0 11A0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|14e2",
                "America/Paramaribo|LMT PMT PMT -0330 -03|3E.E 3E.Q 3E.A 3u 30|01234|-2nDUj.k Wqo0.c qanX.I 1yVXN.o|24e4",
                "America/Phoenix|MST MDT MWT|70 60 60|01010202010|-261r0 1nX0 11B0 1nX0 SgN0 4Al1 Ap0 1db0 SWqX 1cL0|42e5",
                "America/Port-au-Prince|PPMT EST EDT|4N 50 40|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-28RHb 2FnMb 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14q0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 i6n0 1nX0 11B0 1nX0 d430 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 3iN0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5",
                "America/Rio_Branco|LMT -05 -04|4v.c 50 40|01212121212121212121212121212121|-2glvs.M HdLs.M 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0 d5X0|31e4",
                "America/Porto_Velho|LMT -04 -03|4f.A 40 30|012121212121212121212121212121|-2glvI.o HdKI.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0|37e4",
                "America/Puerto_Rico|AST AWT APT|40 30 30|0120|-17lU0 7XT0 iu0|24e5",
                "America/Punta_Arenas|SMT -05 -04 -03|4G.K 50 40 30|0102021212121212121232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 blz0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0",
                "America/Rainy_River|CST CDT CWT CPT|60 50 50 50|010123010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TQ0 1in0 Rnb0 3je0 8x30 iw0 19yN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|842",
                "America/Rankin_Inlet|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313131313131313131313131313131313131313131313131313131313131313131|-vDc0 keu0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e2",
                "America/Recife|LMT -03 -02|2j.A 30 20|0121212121212121212121212121212121212121|-2glxE.o HdLE.o 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 nsp0 WL0 1tB0 2L0 2pB0 On0|33e5",
                "America/Regina|LMT MST MDT MWT MPT CST|6W.A 70 60 60 60 60|012121212121212121212121341212121212121212121212121215|-2AD51.o uHe1.o 1in0 s2L0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 66N0 1cL0 1cN0 19X0 1fB0 1cL0 1fB0 1cL0 1cN0 1cL0 M30 8x20 ix0 1ip0 1cL0 1ip0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 3NB0 1cL0 1cN0|19e4",
                "America/Resolute|-00 CST CDDT CDT EST|0 60 40 50 50|012131313131313131313131313131313131313131313431313131313431313131313131313131313131313131313131313131313131313131313131|-SnA0 GWS0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|229",
                "America/Santarem|LMT -04 -03|3C.M 40 30|0121212121212121212121212121212|-2glwl.c HdLl.c 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 qe10 xb0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 NBd0|21e4",
                "America/Santiago|SMT -05 -04 -03|4G.K 50 40 30|010202121212121212321232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-2q2jh.e fJAh.e 5knG.K 1Vzh.e jRAG.K 1pbh.e 11d0 1oL0 11d0 1oL0 11d0 1oL0 11d0 1pb0 11d0 nHX0 op0 9Bz0 jb0 1oN0 ko0 Qeo0 WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|62e5",
                "America/Santo_Domingo|SDMT EST EDT -0430 AST|4E 50 40 4u 40|01213131313131414|-1ttjk 1lJMk Mn0 6sp0 Lbu 1Cou yLu 1RAu wLu 1QMu xzu 1Q0u xXu 1PAu 13jB0 e00|29e5",
                "America/Sao_Paulo|LMT -03 -02|36.s 30 20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glwR.w HdKR.w 1cc0 1e10 1bX0 Ezd0 So0 1vA0 Mn0 1BB0 ML0 1BB0 zX0 pTd0 PX0 2ep0 nz0 1C10 zX0 1C10 LX0 1C10 Mn0 H210 Rb0 1tB0 IL0 1Fd0 FX0 1EN0 FX0 1HB0 Lz0 1EN0 Lz0 1C10 IL0 1HB0 Db0 1HB0 On0 1zd0 On0 1zd0 Lz0 1zd0 Rb0 1wN0 Wn0 1tB0 Rb0 1tB0 WL0 1tB0 Rb0 1zd0 On0 1HB0 FX0 1C10 Lz0 1Ip0 HX0 1zd0 On0 1HB0 IL0 1wp0 On0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1HB0 FX0|20e6",
                "America/Scoresbysund|LMT -02 -01 +00|1r.Q 20 10 0|0121323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2a5Ww.8 2z5ew.8 1a00 1cK0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|452",
                "America/Sitka|PST PWT PPT PDT YST AKST AKDT|80 70 70 70 90 90 80|01203030303030303030303030303030345656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-17T20 8x10 iy0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 co0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|90e2",
                "America/St_Johns|NST NDT NST NDT NWT NPT NDDT|3u.Q 2u.Q 3u 2u 2u 2u 1u|01010101010101010101010101010101010102323232323232324523232323232323232323232323232323232323232323232323232323232323232323232323232323232326232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-28oit.8 14L0 1nB0 1in0 1gm0 Dz0 1JB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 19X0 1fB0 1cL0 1fB0 19X0 1fB0 19X0 10O0 eKX.8 19X0 1iq0 WL0 1qN0 WL0 1qN0 WL0 1tB0 TX0 1tB0 WL0 1qN0 WL0 1qN0 7UHu itu 1tB0 WL0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1tB0 WL0 1ld0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14n1 1lb0 14p0 1nW0 11C0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4",
                "America/Swift_Current|LMT MST MDT MWT MPT CST|7b.k 70 60 60 60 60|012134121212121212121215|-2AD4M.E uHdM.E 1in0 UGp0 8x20 ix0 1o10 17b0 1ip0 11z0 1o10 11z0 1o10 11z0 isN0 1cL0 3Cp0 1cL0 1cN0 11z0 1qN0 WL0 pMp0|16e3",
                "America/Tegucigalpa|LMT CST CDT|5M.Q 60 50|01212121|-1WGGb.8 2ETcb.8 WL0 1qN0 WL0 GRd0 AL0|11e5",
                "America/Thule|LMT AST ADT|4z.8 40 30|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a5To.Q 31NBo.Q 1cL0 1cN0 1cL0 1fB0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|656",
                "America/Thunder_Bay|CST EST EWT EPT EDT|60 50 40 40 40|0123141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141414141|-2q5S0 1iaN0 8x40 iv0 XNB0 1cL0 1cN0 1fz0 1cN0 1cL0 3Cp0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4",
                "America/Vancouver|PST PDT PWT PPT|80 70 70 70|0102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-25TO0 1in0 UGp0 8x10 iy0 1o10 17b0 1ip0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5",
                "America/Whitehorse|YST YDT YWT YPT YDDT PST PDT|90 80 80 80 70 80 70|0101023040565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565656565|-25TN0 1in0 1o10 13V0 Ser0 8x00 iz0 LCL0 1fA0 3NA0 vrd0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e3",
                "America/Winnipeg|CST CDT CWT CPT|60 50 50 50|010101023010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aIi0 WL0 3ND0 1in0 Jap0 Rb0 aCN0 8x30 iw0 1tB0 11z0 1ip0 11z0 1o10 11z0 1o10 11z0 1rd0 10L0 1op0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 1cL0 1cN0 11z0 6i10 WL0 6i10 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1o00 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1o00 11A0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|66e4",
                "America/Yakutat|YST YWT YPT YDT AKST AKDT|90 80 80 80 90 80|01203030303030303030303030303030304545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-17T10 8x00 iz0 Vo10 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 cn0 10q0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|642",
                "America/Yellowknife|-00 MST MWT MPT MDDT MDT|0 70 60 60 50 60|012314151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151515151|-1pdA0 hix0 8x20 ix0 LCL0 1fA0 zgO0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|19e3",
                "Antarctica/Casey|-00 +08 +11|0 -80 -b0|01212121|-2q00 1DjS0 T90 40P0 KL0 blz0 3m10|10",
                "Antarctica/Davis|-00 +07 +05|0 -70 -50|01012121|-vyo0 iXt0 alj0 1D7v0 VB0 3Wn0 KN0|70",
                "Antarctica/DumontDUrville|-00 +10|0 -a0|0101|-U0o0 cfq0 bFm0|80",
                "Antarctica/Macquarie|AEST AEDT -00 +11|-a0 -b0 0 -b0|0102010101010101010101010101010101010101010101010101010101010101010101010101010101010101013|-29E80 19X0 4SL0 1ayy0 Lvs0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0|1",
                "Antarctica/Mawson|-00 +06 +05|0 -60 -50|012|-CEo0 2fyk0|60",
                "Pacific/Auckland|NZMT NZST NZST NZDT|-bu -cu -c0 -d0|01020202020202020202020202023232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1GCVu Lz0 1tB0 11zu 1o0u 11zu 1o0u 11zu 1o0u 14nu 1lcu 14nu 1lcu 1lbu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1nXu 11Au 1qLu WMu 1qLu 11Au 1n1bu IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|14e5",
                "Antarctica/Palmer|-00 -03 -04 -02|0 30 40 20|0121212121213121212121212121212121212121212121212121212121212121212121212121212121|-cao0 nD0 1vd0 SL0 1vd0 17z0 1cN0 1fz0 1cN0 1cL0 1cN0 asn0 Db0 jsN0 14N0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0|40",
                "Antarctica/Rothera|-00 -03|0 30|01|gOo0|130",
                "Antarctica/Syowa|-00 +03|0 -30|01|-vs00|20",
                "Antarctica/Troll|-00 +00 +02|0 0 -20|01212121212121212121212121212121212121212121212121212121212121212121|1puo0 hd0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|40",
                "Antarctica/Vostok|-00 +06|0 -60|01|-tjA0|25",
                "Europe/Oslo|CET CEST|-10 -20|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2awM0 Qm0 W6o0 5pf0 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 wJc0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1qM0 WM0 zpc0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e4",
                "Asia/Riyadh|LMT +03|-36.Q -30|01|-TvD6.Q|57e5",
                "Asia/Almaty|LMT +05 +06 +07|-57.M -50 -60 -70|012323232323232323232321232323232323232323232323232|-1Pc57.M eUo7.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|15e5",
                "Asia/Amman|LMT EET EEST|-2n.I -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1yW2n.I 1HiMn.I KL0 1oN0 11b0 1oN0 11b0 1pd0 1dz0 1cp0 11b0 1op0 11b0 fO10 1db0 1e10 1cL0 1cN0 1cL0 1cN0 1fz0 1pd0 10n0 1ld0 14n0 1hB0 15b0 1ip0 19X0 1cN0 1cL0 1cN0 17b0 1ld0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1So0 y00 1fc0 1dc0 1co0 1dc0 1cM0 1cM0 1cM0 1o00 11A0 1lc0 17c0 1cM0 1cM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 4bX0 Dd0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|25e5",
                "Asia/Anadyr|LMT +12 +13 +14 +11|-bN.U -c0 -d0 -e0 -b0|01232121212121212121214121212121212121212121212121212121212141|-1PcbN.U eUnN.U 23CL0 1db0 2q10 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|13e3",
                "Asia/Aqtau|LMT +04 +05 +06|-3l.4 -40 -50 -60|012323232323232323232123232312121212121212121212|-1Pc3l.4 eUnl.4 24PX0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|15e4",
                "Asia/Aqtobe|LMT +04 +05 +06|-3M.E -40 -50 -60|0123232323232323232321232323232323232323232323232|-1Pc3M.E eUnM.E 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0|27e4",
                "Asia/Ashgabat|LMT +04 +05 +06|-3R.w -40 -50 -60|0123232323232323232323212|-1Pc3R.w eUnR.w 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0|41e4",
                "Asia/Atyrau|LMT +03 +05 +06 +04|-3r.I -30 -50 -60 -40|01232323232323232323242323232323232324242424242|-1Pc3r.I eUor.I 24PW0 2pX0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 2sp0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0",
                "Asia/Baghdad|BMT +03 +04|-2V.A -30 -40|012121212121212121212121212121212121212121212121212121|-26BeV.A 2ACnV.A 11b0 1cp0 1dz0 1dd0 1db0 1cN0 1cp0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1de0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0 1dc0 1dc0 1cM0 1dc0 1cM0 1dc0 1cM0 1dc0|66e5",
                "Asia/Qatar|LMT +04 +03|-3q.8 -40 -30|012|-21Jfq.8 27BXq.8|96e4",
                "Asia/Baku|LMT +03 +04 +05|-3j.o -30 -40 -50|01232323232323232323232123232323232323232323232323232323232323232|-1Pc3j.o 1jUoj.o WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 9Je0 1o00 11z0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00|27e5",
                "Asia/Bangkok|BMT +07|-6G.4 -70|01|-218SG.4|15e6",
                "Asia/Barnaul|LMT +06 +07 +08|-5z -60 -70 -80|0123232323232323232323212323232321212121212121212121212121212121212|-21S5z pCnz 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 p90 LE0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0",
                "Asia/Beirut|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-21aq0 1on0 1410 1db0 19B0 1in0 1ip0 WL0 1lQp0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 q6N0 En0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1op0 11b0 dA10 17b0 1iN0 17b0 1iN0 17b0 1iN0 17b0 1vB0 SL0 1mp0 13z0 1iN0 17b0 1iN0 17b0 1jd0 12n0 1a10 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0|22e5",
                "Asia/Bishkek|LMT +05 +06 +07|-4W.o -50 -60 -70|012323232323232323232321212121212121212121212121212|-1Pc4W.o eUnW.o 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2e00 1tX0 17b0 1ip0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1cPu 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0|87e4",
                "Asia/Brunei|LMT +0730 +08|-7D.E -7u -80|012|-1KITD.E gDc9.E|42e4",
                "Asia/Kolkata|MMT IST +0630|-5l.a -5u -6u|012121|-2zOtl.a 1r2LP.a 1un0 HB0 7zX0|15e6",
                "Asia/Chita|LMT +08 +09 +10|-7x.Q -80 -90 -a0|012323232323232323232321232323232323232323232323232323232323232312|-21Q7x.Q pAnx.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3re0|33e4",
                "Asia/Choibalsan|LMT +07 +08 +10 +09|-7C -70 -80 -a0 -90|0123434343434343434343434343434343434343434343424242|-2APHC 2UkoC cKn0 1da0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 3Db0 h1f0 1cJ0 1cP0 1cJ0|38e3",
                "Asia/Shanghai|CST CDT|-80 -90|010101010101010101010101010|-1c2w0 Rz0 11d0 1wL0 A10 8HX0 1G10 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 aL0 1tU30 Rb0 1o10 11z0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0|23e6",
                "Asia/Colombo|MMT +0530 +06 +0630|-5j.w -5u -60 -6u|01231321|-2zOtj.w 1rFbN.w 1zzu 7Apu 23dz0 11zu n3cu|22e5",
                "Asia/Dhaka|HMT +0630 +0530 +06 +07|-5R.k -6u -5u -60 -70|0121343|-18LFR.k 1unn.k HB0 m6n0 2kxbu 1i00|16e6",
                "Asia/Damascus|LMT EET EEST|-2p.c -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-21Jep.c Hep.c 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1xRB0 11X0 1oN0 10L0 1pB0 11b0 1oN0 10L0 1mp0 13X0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 1pd0 11b0 1oN0 Nb0 1AN0 Nb0 bcp0 19X0 1gp0 19X0 3ld0 1xX0 Vd0 1Bz0 Sp0 1vX0 10p0 1dz0 1cN0 1cL0 1db0 1db0 1g10 1an0 1ap0 1db0 1fd0 1db0 1cN0 1db0 1dd0 1db0 1cp0 1dz0 1c10 1dX0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1db0 1cN0 1db0 1cN0 19z0 1fB0 1qL0 11B0 1on0 Wp0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0|26e5",
                "Asia/Dili|LMT +08 +09|-8m.k -80 -90|01212|-2le8m.k 1dnXm.k 1nfA0 Xld0|19e4",
                "Asia/Dubai|LMT +04|-3F.c -40|01|-21JfF.c|39e5",
                "Asia/Dushanbe|LMT +05 +06 +07|-4z.c -50 -60 -70|012323232323232323232321|-1Pc4z.c eUnz.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2hB0|76e4",
                "Asia/Famagusta|LMT EET EEST +03|-2f.M -20 -30 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212312121212121212121212121212121212121212121|-1Vc2f.M 2a3cf.M 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 15U0 2Ks0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00",
                "Asia/Gaza|EET EEST IST IDT|-20 -30 -20 -30|0101010101010101010101010101010123232323232323232323232323232320101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2q0 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 pBd0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 11z0 1o10 14o0 1lA1 SKX 1xd1 MKX 1AN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1220 1qL0 WN0 1qL0 WN0 1qL0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0|18e5",
                "Asia/Hebron|EET EEST IST IDT|-20 -30 -20 -30|010101010101010101010101010101012323232323232323232323232323232010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-1c2q0 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 pBd0 Vz0 1oN0 11b0 1oO0 10N0 1pz0 10N0 1pb0 10N0 1pb0 10N0 1pb0 10N0 1pz0 10N0 1pb0 10N0 1pb0 11d0 1oL0 dW0 hfB0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 M10 C00 17c0 1io0 17c0 1io0 17c0 1o00 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 17c0 1io0 18N0 1bz0 19z0 1gp0 1610 1iL0 12L0 1mN0 14o0 1lc0 Tb0 1xd1 MKX bB0 cn0 1cN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1220 1qL0 WN0 1qL0 WN0 1qL0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0 Wo0 1rc0 11c0 1oo0 11c0 1oo0 11c0 1oo0 11c0 1rc0|25e4",
                "Asia/Ho_Chi_Minh|LMT PLMT +07 +08 +09|-76.E -76.u -70 -80 -90|0123423232|-2yC76.E bK00.a 1h7b6.u 5lz0 18o0 3Oq0 k5b0 aW00 BAM0|90e5",
                "Asia/Hong_Kong|LMT HKT HKST HKT JST|-7A.G -80 -90 -8u -90|0123412121212121212121212121212121212121212121212121212121212121212121|-2CFH0 1taO0 Hc0 xUu 9tBu 11z0 1tDu Rc0 1wo0 11A0 1cM0 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1nX0 U10 1tz0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|73e5",
                "Asia/Hovd|LMT +06 +07 +08|-66.A -60 -70 -80|012323232323232323232323232323232323232323232323232|-2APG6.A 2Uko6.A cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|81e3",
                "Asia/Irkutsk|IMT +07 +08 +09|-6V.5 -70 -80 -90|01232323232323232323232123232323232323232323232323232323232323232|-21zGV.5 pjXV.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4",
                "Europe/Istanbul|IMT EET EEST +04 +03|-1U.U -20 -30 -40 -30|012121212121212121212121212121212121212121212121212121234343434342121212121212121212121212121212121212121212121212121212121212124|-2ogNU.U dzzU.U 11b0 8tB0 1on0 1410 1db0 19B0 1in0 3Rd0 Un0 1oN0 11b0 zSp0 CL0 mN0 1Vz0 1gN0 1pz0 5Rd0 1fz0 1yp0 ML0 1kp0 17b0 1ip0 17b0 1fB0 19X0 1jB0 18L0 1ip0 17z0 qdd0 xX0 3S10 Tz0 dA10 11z0 1o10 11z0 1qN0 11z0 1ze0 11B0 WM0 1qO0 WI0 1nX0 1rB0 10L0 11B0 1in0 17d0 1in0 2pX0 19E0 1fU0 16Q0 1iI0 16Q0 1iI0 1Vd0 pb0 3Kp0 14o0 1de0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1a00 1fA0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WO0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 Xc0 1qo0 WM0 1qM0 11A0 1o00 1200 1nA0 11A0 1tA0 U00 15w0|13e6",
                "Asia/Jakarta|BMT +0720 +0730 +09 +08 WIB|-77.c -7k -7u -90 -80 -70|01232425|-1Q0Tk luM0 mPzO 8vWu 6kpu 4PXu xhcu|31e6",
                "Asia/Jayapura|LMT +09 +0930 WIT|-9m.M -90 -9u -90|0123|-1uu9m.M sMMm.M L4nu|26e4",
                "Asia/Jerusalem|JMT IST IDT IDDT|-2k.E -20 -30 -40|012121212121321212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-26Bek.E SyMk.E 5Rb0 10r0 1px0 10N0 1pz0 16p0 1jB0 16p0 1jx0 3LB0 Em0 or0 1cn0 1dB0 16n0 10O0 1ja0 1tC0 14o0 1cM0 1a00 11A0 1Na0 An0 1MP0 AJ0 1Kp0 LC0 1oo0 Wl0 EQN0 Db0 1fB0 Rb0 bXd0 gM0 8Q00 IM0 1wM0 11z0 1C10 IL0 1s10 10n0 1o10 WL0 1zd0 On0 1ld0 11z0 1o10 14n0 1o10 14n0 1nd0 12n0 1nd0 Xz0 1q10 12n0 1hB0 1dX0 1ep0 1aL0 1eN0 17X0 1nf0 11z0 1tB0 19W0 1e10 17b0 1ep0 1gL0 18N0 1fz0 1eN0 17b0 1gq0 1gn0 19d0 1dz0 1c10 17X0 1hB0 1gn0 19d0 1dz0 1c10 17X0 1kp0 1dz0 1c10 1aL0 1eN0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0|81e4",
                "Asia/Kabul|+04 +0430|-40 -4u|01|-10Qs0|46e5",
                "Asia/Kamchatka|LMT +11 +12 +13|-ay.A -b0 -c0 -d0|012323232323232323232321232323232323232323232323232323232323212|-1SLKy.A ivXy.A 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|18e4",
                "Asia/Karachi|LMT +0530 +0630 +05 PKT PKST|-4s.c -5u -6u -50 -50 -60|012134545454|-2xoss.c 1qOKW.c 7zX0 eup0 LqMu 1fy00 1cL0 dK10 11b0 1610 1jX0|24e6",
                "Asia/Urumqi|LMT +06|-5O.k -60|01|-1GgtO.k|32e5",
                "Asia/Kathmandu|LMT +0530 +0545|-5F.g -5u -5J|012|-21JhF.g 2EGMb.g|12e5",
                "Asia/Khandyga|LMT +08 +09 +10 +11|-92.d -80 -90 -a0 -b0|0123232323232323232323212323232323232323232323232343434343434343432|-21Q92.d pAp2.d 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 qK0 yN0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|66e2",
                "Asia/Krasnoyarsk|LMT +06 +07 +08|-6b.q -60 -70 -80|01232323232323232323232123232323232323232323232323232323232323232|-21Hib.q prAb.q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|10e5",
                "Asia/Kuala_Lumpur|SMT +07 +0720 +0730 +09 +08|-6T.p -70 -7k -7u -90 -80|0123435|-2Bg6T.p 17anT.p l5XE 17bO 8Fyu 1so1u|71e5",
                "Asia/Kuching|LMT +0730 +08 +0820 +09|-7l.k -7u -80 -8k -90|0123232323232323242|-1KITl.k gDbP.k 6ynu AnE 1O0k AnE 1NAk AnE 1NAk AnE 1NAk AnE 1O0k AnE 1NAk AnE pAk 8Fz0|13e4",
                "Asia/Macau|LMT CST +09 +10 CDT|-7y.a -80 -90 -a0 -90|012323214141414141414141414141414141414141414141414141414141414141414141|-2CFHy.a 1uqKy.a PX0 1kn0 15B0 11b0 4Qq0 1oM0 11c0 1ko0 1u00 11A0 1cM0 11c0 1o00 11A0 1o00 11A0 1oo0 1400 1o00 11A0 1o00 U00 1tA0 U00 1wo0 Rc0 1wru U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 Rd0 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 17d0 1cK0 1cO0 1cK0 1cO0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 s10 1Vz0 1cN0 1cL0 1cN0 1cL0 6fd0 14n0|57e4",
                "Asia/Magadan|LMT +10 +11 +12|-a3.c -a0 -b0 -c0|012323232323232323232321232323232323232323232323232323232323232312|-1Pca3.c eUo3.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Cq0|95e3",
                "Asia/Makassar|LMT MMT +08 +09 WITA|-7V.A -7V.A -80 -90 -80|01234|-21JjV.A vfc0 myLV.A 8ML0|15e5",
                "Asia/Manila|PST PDT JST|-80 -90 -90|010201010|-1kJI0 AL0 cK10 65X0 mXB0 vX0 VK10 1db0|24e6",
                "Asia/Nicosia|LMT EET EEST|-2d.s -20 -30|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1Vc2d.s 2a3cd.s 1cL0 1qp0 Xz0 19B0 19X0 1fB0 1db0 1cp0 1cL0 1fB0 19X0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1o30 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|32e4",
                "Asia/Novokuznetsk|LMT +06 +07 +08|-5M.M -60 -70 -80|012323232323232323232321232323232323232323232323232323232323212|-1PctM.M eULM.M 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|55e4",
                "Asia/Novosibirsk|LMT +06 +07 +08|-5v.E -60 -70 -80|0123232323232323232323212323212121212121212121212121212121212121212|-21Qnv.E pAFv.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 ml0 Os0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 4eN0|15e5",
                "Asia/Omsk|LMT +05 +06 +07|-4R.u -50 -60 -70|01232323232323232323232123232323232323232323232323232323232323232|-224sR.u pMLR.u 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|12e5",
                "Asia/Oral|LMT +03 +05 +06 +04|-3p.o -30 -50 -60 -40|01232323232323232424242424242424242424242424242|-1Pc3p.o eUop.o 23CK0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 1cM0 IM0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0|27e4",
                "Asia/Pontianak|LMT PMT +0730 +09 +08 WITA WIB|-7h.k -7h.k -7u -90 -80 -80 -70|012324256|-2ua7h.k XE00 munL.k 8Rau 6kpu 4PXu xhcu Wqnu|23e4",
                "Asia/Pyongyang|LMT KST JST KST|-8n -8u -90 -90|012313|-2um8n 97XR 1lTzu 2Onc0 6BA0|29e5",
                "Asia/Qostanay|LMT +04 +05 +06|-4e.s -40 -50 -60|012323232323232323232123232323232323232323232323|-1Pc4e.s eUoe.s 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0",
                "Asia/Qyzylorda|LMT +04 +05 +06|-4l.Q -40 -50 -60|01232323232323232323232323232323232323232323232|-1Pc4l.Q eUol.Q 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 3ao0 1EM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 zQl0|73e4",
                "Asia/Rangoon|RMT +0630 +09|-6o.L -6u -90|0121|-21Jio.L SmnS.L 7j9u|48e5",
                "Asia/Sakhalin|LMT +09 +11 +12 +10|-9u.M -90 -b0 -c0 -a0|01232323232323232323232423232323232424242424242424242424242424242|-2AGVu.M 1BoMu.M 1qFa0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 2pB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|58e4",
                "Asia/Samarkand|LMT +04 +05 +06|-4r.R -40 -50 -60|01232323232323232323232|-1Pc4r.R eUor.R 23CL0 3Db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0|36e4",
                "Asia/Seoul|LMT KST JST KST KDT KDT|-8r.Q -8u -90 -90 -9u -a0|0123141414141414135353|-2um8r.Q 97XV.Q 1m1zu kKo0 2I0u OL0 1FB0 Rb0 1qN0 TX0 1tB0 TX0 1tB0 TX0 1tB0 TX0 2ap0 12FBu 11A0 1o00 11A0|23e6",
                "Asia/Srednekolymsk|LMT +10 +11 +12|-ae.Q -a0 -b0 -c0|01232323232323232323232123232323232323232323232323232323232323232|-1Pcae.Q eUoe.Q 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|35e2",
                "Asia/Taipei|CST JST CDT|-80 -90 -90|01020202020202020202020202020202020202020|-1iw80 joM0 1yo0 Tz0 1ip0 1jX0 1cN0 11b0 1oN0 11b0 1oN0 11b0 1oN0 11b0 10N0 1BX0 10p0 1pz0 10p0 1pz0 10p0 1db0 1dd0 1db0 1cN0 1db0 1cN0 1db0 1cN0 1db0 1BB0 ML0 1Bd0 ML0 uq10 1db0 1cN0 1db0 97B0 AL0|74e5",
                "Asia/Tashkent|LMT +05 +06 +07|-4B.b -50 -60 -70|012323232323232323232321|-1Pc4B.b eUnB.b 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0|23e5",
                "Asia/Tbilisi|TBMT +03 +04 +05|-2X.b -30 -40 -50|0123232323232323232323212121232323232323232323212|-1Pc2X.b 1jUnX.b WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cK0 1cL0 1cN0 1cL0 1cN0 2pz0 1cL0 1fB0 3Nz0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 An0 Os0 WM0|11e5",
                "Asia/Tehran|LMT TMT +0330 +04 +05 +0430|-3p.I -3p.I -3u -40 -50 -4u|01234325252525252525252525252525252525252525252525252525252525252525252525252525252525252525252525252|-2btDp.I 1d3c0 1huLT.I TXu 1pz0 sN0 vAu 1cL0 1dB0 1en0 pNB0 UL0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 64p0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0|14e6",
                "Asia/Thimphu|LMT +0530 +06|-5W.A -5u -60|012|-Su5W.A 1BGMs.A|79e3",
                "Asia/Tokyo|JST JDT|-90 -a0|010101010|-QJJ0 Rb0 1ld0 14n0 1zd0 On0 1zd0 On0|38e6",
                "Asia/Tomsk|LMT +06 +07 +08|-5D.P -60 -70 -80|0123232323232323232323212323232323232323232323212121212121212121212|-21NhD.P pxzD.P 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 co0 1bB0 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3Qp0|10e5",
                "Asia/Ulaanbaatar|LMT +07 +08 +09|-77.w -70 -80 -90|012323232323232323232323232323232323232323232323232|-2APH7.w 2Uko7.w cKn0 1db0 1dd0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 6hD0 11z0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 kEp0 1cJ0 1cP0 1cJ0|12e5",
                "Asia/Ust-Nera|LMT +08 +09 +12 +11 +10|-9w.S -80 -90 -c0 -b0 -a0|012343434343434343434345434343434343434343434343434343434343434345|-21Q9w.S pApw.S 23CL0 1d90 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 17V0 7zD0|65e2",
                "Asia/Vladivostok|LMT +09 +10 +11|-8L.v -90 -a0 -b0|01232323232323232323232123232323232323232323232323232323232323232|-1SJIL.v itXL.v 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|60e4",
                "Asia/Yakutsk|LMT +08 +09 +10|-8C.W -80 -90 -a0|01232323232323232323232123232323232323232323232323232323232323232|-21Q8C.W pAoC.W 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|28e4",
                "Asia/Yekaterinburg|LMT PMT +04 +05 +06|-42.x -3J.5 -40 -50 -60|012343434343434343434343234343434343434343434343434343434343434343|-2ag42.x 7mQh.s qBvJ.5 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|14e5",
                "Asia/Yerevan|LMT +03 +04 +05|-2W -30 -40 -50|0123232323232323232323212121212323232323232323232323232323232|-1Pc2W 1jUnW WCL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 2pB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 4RX0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0|13e5",
                "Atlantic/Azores|HMT -02 -01 +00 WET|1S.w 20 10 0 0|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121232323232323232323232323232323234323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-2ldW0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cL0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|25e4",
                "Atlantic/Bermuda|LMT AST ADT|4j.i 40 30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1BnRE.G 1LTbE.G 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|65e3",
                "Atlantic/Canary|LMT -01 WET WEST|11.A 10 0 -10|01232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-1UtaW.o XPAW.o 1lAK0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4",
                "Atlantic/Cape_Verde|LMT -02 -01|1y.4 20 10|01212|-2ldW0 1eEo0 7zX0 1djf0|50e4",
                "Atlantic/Faroe|LMT WET WEST|r.4 0 -10|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2uSnw.U 2Wgow.U 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|49e3",
                "Atlantic/Madeira|FMT -01 +00 +01 WET WEST|17.A 10 0 -10 0 -10|01212121212121212121212121212121212121212121232123212321232121212121212121212121212121212121212121454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2ldX0 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 qIl0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e4",
                "Atlantic/Reykjavik|LMT -01 +00 GMT|1s 10 0 0|012121212121212121212121212121212121212121212121212121212121212121213|-2uWmw mfaw 1Bd0 ML0 1LB0 Cn0 1LB0 3fX0 C10 HrX0 1cO0 LB0 1EL0 LA0 1C00 Oo0 1wo0 Rc0 1wo0 Rc0 1wo0 Rc0 1zc0 Oo0 1zc0 14o0 1lc0 14o0 1lc0 14o0 1o00 11A0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1lc0 14o0 1o00 14o0|12e4",
                "Atlantic/South_Georgia|-02|20|0||30",
                "Atlantic/Stanley|SMT -04 -03 -02|3P.o 40 30 20|012121212121212323212121212121212121212121212121212121212121212121212|-2kJw8.A 12bA8.A 19X0 1fB0 19X0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1fB0 Cn0 1Cc10 WL0 1qL0 U10 1tz0 2mN0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 U10 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1tz0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qL0 WN0 1qN0 U10 1wn0 Rd0 1wn0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1tz0 U10 1wn0 U10 1tz0 U10 1tz0 U10|21e2",
                "Australia/Sydney|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|40e5",
                "Australia/Adelaide|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 WM0 1qM0 Rc0 1zc0 U00 1tA0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|11e5",
                "Australia/Brisbane|AEST AEDT|-a0 -b0|01010101010101010|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0|20e5",
                "Australia/Broken_Hill|ACST ACDT|-9u -au|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 14o0 1o00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1tA0 WM0 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|18e3",
                "Australia/Currie|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 19X0 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|746",
                "Australia/Darwin|ACST ACDT|-9u -au|010101010|-293lt xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0|12e4",
                "Australia/Eucla|+0845 +0945|-8J -9J|0101010101010101010|-293kI xcX 10jd0 yL0 1cN0 1cL0 1gSp0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|368",
                "Australia/Hobart|AEST AEDT|-a0 -b0|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-29E80 19X0 10jd0 yL0 1cN0 1cL0 1fB0 19X0 VfB0 1cM0 1o00 Rc0 1wo0 Rc0 1wo0 U00 1wo0 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 11A0 1qM0 WM0 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1wo0 WM0 1tA0 WM0 1tA0 U00 1tA0 U00 1tA0 11A0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 11A0 1o00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|21e4",
                "Australia/Lord_Howe|AEST +1030 +1130 +11|-a0 -au -bu -b0|0121212121313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313131313|raC0 1zdu Rb0 1zd0 On0 1zd0 On0 1zd0 On0 1zd0 TXu 1qMu WLu 1tAu WLu 1tAu TXu 1tAu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu 11zu 1o0u 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 11Au 1nXu 1qMu 11zu 1o0u 11zu 1o0u 11zu 1qMu WLu 1qMu 11zu 1o0u WLu 1qMu 14nu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1fzu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu|347",
                "Australia/Lindeman|AEST AEDT|-a0 -b0|010101010101010101010|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 H1A0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0|10",
                "Australia/Melbourne|AEST AEDT|-a0 -b0|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101|-293lX xcX 10jd0 yL0 1cN0 1cL0 1fB0 19X0 17c10 LA0 1C00 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 U00 1qM0 WM0 1qM0 11A0 1tA0 U00 1tA0 U00 1tA0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 11A0 1o00 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 14o0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|39e5",
                "Australia/Perth|AWST AWDT|-80 -90|0101010101010101010|-293jX xcX 10jd0 yL0 1cN0 1cL0 1gSp0 Oo0 l5A0 Oo0 iJA0 G00 zU00 IM0 1qM0 11A0 1o00 11A0|18e5",
                "CET|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00",
                "Pacific/Easter|EMT -07 -06 -05|7h.s 70 60 50|012121212121212121212121212123232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323|-1uSgG.w 1s4IG.w WL0 1zd0 On0 1ip0 11z0 1o10 11z0 1qN0 WL0 1ld0 14n0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 2pA0 11z0 1o10 11z0 1qN0 WL0 1qN0 WL0 1qN0 1cL0 1cN0 11z0 1o10 11z0 1qN0 WL0 1fB0 19X0 1qN0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1ip0 1fz0 1fB0 11z0 1qN0 WL0 1qN0 WL0 1qN0 WL0 1qN0 11z0 1o10 11z0 1o10 11z0 1qN0 WL0 1qN0 17b0 1ip0 11z0 1o10 19X0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 46n0 Ap0 1Nb0 Ap0 1Nb0 Ap0 1zb0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0|30e2",
                "CST6CDT|CST CDT CWT CPT|60 50 50 50|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261s0 1nX0 11B0 1nX0 SgN0 8x30 iw0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                "EET|EET EEST|-20 -30|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00",
                "Europe/Dublin|DMT IST GMT BST IST|p.l -y.D 0 -10 -10|01232323232324242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242424242|-2ax9y.D Rc0 1fzy.D 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 g600 14o0 1wo0 17c0 1io0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
                "EST|EST|50|0|",
                "EST5EDT|EST EDT EWT EPT|50 40 40 40|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261t0 1nX0 11B0 1nX0 SgN0 8x40 iv0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                "Etc/GMT-0|GMT|0|0|",
                "Etc/GMT-1|+01|-10|0|",
                "Pacific/Port_Moresby|+10|-a0|0||25e4",
                "Etc/GMT-11|+11|-b0|0|",
                "Pacific/Tarawa|+12|-c0|0||29e3",
                "Etc/GMT-13|+13|-d0|0|",
                "Etc/GMT-14|+14|-e0|0|",
                "Etc/GMT-2|+02|-20|0|",
                "Etc/GMT-3|+03|-30|0|",
                "Etc/GMT-4|+04|-40|0|",
                "Etc/GMT-5|+05|-50|0|",
                "Etc/GMT-6|+06|-60|0|",
                "Indian/Christmas|+07|-70|0||21e2",
                "Etc/GMT-8|+08|-80|0|",
                "Pacific/Palau|+09|-90|0||21e3",
                "Etc/GMT+1|-01|10|0|",
                "Etc/GMT+10|-10|a0|0|",
                "Etc/GMT+11|-11|b0|0|",
                "Etc/GMT+12|-12|c0|0|",
                "Etc/GMT+3|-03|30|0|",
                "Etc/GMT+4|-04|40|0|",
                "Etc/GMT+5|-05|50|0|",
                "Etc/GMT+6|-06|60|0|",
                "Etc/GMT+7|-07|70|0|",
                "Etc/GMT+8|-08|80|0|",
                "Etc/GMT+9|-09|90|0|",
                "Etc/UTC|UTC|0|0|",
                "Europe/Amsterdam|AMT NST +0120 +0020 CEST CET|-j.w -1j.w -1k -k -20 -10|010101010101010101010101010101010101010101012323234545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545|-2aFcj.w 11b0 1iP0 11A0 1io0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1co0 1io0 1yo0 Pc0 1a00 1fA0 1Bc0 Mo0 1tc0 Uo0 1tA0 U00 1uo0 W00 1s00 VA0 1so0 Vc0 1sM0 UM0 1wo0 Rc0 1u00 Wo0 1rA0 W00 1s00 VA0 1sM0 UM0 1w00 fV0 BCX.w 1tA0 U00 1u00 Wo0 1sm0 601k WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|16e5",
                "Europe/Andorra|WET CET CEST|0 -10 -20|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-UBA0 1xIN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|79e3",
                "Europe/Astrakhan|LMT +03 +04 +05|-3c.c -30 -40 -50|012323232323232323212121212121212121212121212121212121212121212|-1Pcrc.c eUMc.c 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|10e5",
                "Europe/Athens|AMT EET EEST CEST CET|-1y.Q -20 -30 -20 -10|012123434121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2a61x.Q CNbx.Q mn0 kU10 9b0 3Es0 Xa0 1fb0 1dd0 k3X0 Nz0 SCp0 1vc0 SO0 1cM0 1a00 1ao0 1fc0 1a10 1fG0 1cg0 1dX0 1bX0 1cQ0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|35e5",
                "Europe/London|GMT BST BDST|0 -10 -20|0101010101010101010101010101010101010101010101010121212121210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1a00 1qM0 WM0 1qM0 11A0 1o00 WM0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1tA0 IM0 90o0 U00 1tA0 U00 1tA0 U00 1tA0 U00 1tA0 WM0 1qM0 WM0 1qM0 WM0 1tA0 U00 1tA0 U00 1tA0 11z0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 14o0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|10e6",
                "Europe/Belgrade|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19RC0 3IP0 WM0 1fA0 1cM0 1cM0 1rc0 Qo0 1vmo0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
                "Europe/Berlin|CET CEST CEMT|-10 -20 -30|01010101010101210101210101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 kL0 Nc0 m10 WM0 1ao0 1cp0 dX0 jz0 Dd0 1io0 17c0 1fA0 1a00 1ehA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e5",
                "Europe/Prague|CET CEST GMT|-10 -20 0|01010101010101010201010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 1cM0 1qM0 11c0 mp0 xA0 mn0 17c0 1io0 17c0 1fc0 1ao0 1bNc0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|13e5",
                "Europe/Brussels|WET CET CEST WEST|0 -10 -20 -10|0121212103030303030303030303030303030303030303030303212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ehc0 3zX0 11c0 1iO0 11A0 1o00 11A0 my0 Ic0 1qM0 Rc0 1EM0 UM0 1u00 10o0 1io0 1io0 17c0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a30 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 y00 5Wn0 WM0 1fA0 1cM0 16M0 1iM0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|21e5",
                "Europe/Bucharest|BMT EET EEST|-1I.o -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1xApI.o 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Axc0 On0 1fA0 1a10 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|19e5",
                "Europe/Budapest|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1ip0 17b0 1op0 1tb0 Q2m0 3Ne0 WM0 1fA0 1cM0 1cM0 1oJ0 1dc0 1030 1fA0 1cM0 1cM0 1cM0 1cM0 1fA0 1a00 1iM0 1fA0 8Ha0 Rb0 1wN0 Rb0 1BB0 Lz0 1C20 LB0 SNX0 1a10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5",
                "Europe/Zurich|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-19Lc0 11A0 1o00 11A0 1xG10 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e4",
                "Europe/Chisinau|CMT BMT EET EEST CEST CET MSK MSD|-1T -1I.o -20 -30 -20 -10 -30 -40|012323232323232323234545467676767676767676767323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232|-26jdT wGMa.A 20LI.o RA0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 27A0 2en0 39g0 WM0 1fA0 1cM0 V90 1t7z0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 gL0 WO0 1cM0 1cM0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11D0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|67e4",
                "Europe/Copenhagen|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 Tz0 VuO0 60q0 WM0 1fA0 1cM0 1cM0 1cM0 S00 1HA0 Nc0 1C00 Dc0 1Nc0 Ao0 1h5A0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
                "Europe/Gibraltar|GMT BST BDST CET CEST|0 -10 -20 -10 -20|010101010101010101010101010101010101010101010101012121212121010121010101010101010101034343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-2axa0 Rc0 1fA0 14M0 1fc0 1g00 1co0 1dc0 1co0 1oo0 1400 1dc0 19A0 1io0 1io0 WM0 1o00 14o0 1o00 17c0 1io0 17c0 1fA0 1a00 1lc0 17c0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1cM0 1io0 17c0 1fA0 1a00 1io0 17c0 1io0 17c0 1fA0 1a00 1io0 1qM0 Dc0 2Rz0 Dc0 1zc0 Oo0 1zc0 Rc0 1wo0 17c0 1iM0 FA0 xB0 1fA0 1a00 14o0 bb0 LA0 xB0 Rc0 1wo0 11A0 1o00 17c0 1fA0 1a00 1fA0 1cM0 1fA0 1a00 17c0 1fA0 1a00 1io0 17c0 1lc0 17c0 1fA0 10Jz0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|30e3",
                "Europe/Helsinki|HMT EET EEST|-1D.N -20 -30|0121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-1WuND.N OULD.N 1dA0 1xGq0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
                "Europe/Kaliningrad|CET CEST CET CEST MSK MSD EEST EET +03|-10 -20 -20 -30 -30 -40 -30 -20 -30|0101010101010232454545454545454546767676767676767676767676767676767676767676787|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 Am0 Lb0 1en0 op0 1pNz0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|44e4",
                "Europe/Kiev|KMT EET MSK CEST CET MSD EEST|-22.4 -20 -30 -20 -10 -40 -30|0123434252525252525252525256161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc22.4 eUo2.4 rnz0 2Hg0 WM0 1fA0 da0 1v4m0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 Db0 3220 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|34e5",
                "Europe/Kirov|LMT +03 +04 +05|-3i.M -30 -40 -50|01232323232323232321212121212121212121212121212121212121212121|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|48e4",
                "Europe/Lisbon|LMT WET WEST WEMT CET CEST|A.J 0 -10 -20 -10 -20|012121212121212121212121212121212121212121212321232123212321212121212121212121212121212121212121214121212121212121212121212121212124545454212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2le00 aPX0 Sp0 LX0 1vc0 Tc0 1uM0 SM0 1vc0 Tc0 1vc0 SM0 1vc0 6600 1co0 3E00 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 3I00 17c0 1cM0 1cM0 3Fc0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 1tA0 1cM0 1dc0 1400 gL0 IM0 s10 U00 dX0 Rc0 pd0 Rc0 gL0 Oo0 pd0 Rc0 gL0 Oo0 pd0 14o0 1cM0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 3Co0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 pvy0 1cM0 1cM0 1fA0 1cM0 1cM0 1cN0 1cL0 1cN0 1cM0 1cM0 1cM0 1cM0 1cN0 1cL0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e5",
                "Europe/Luxembourg|LMT CET CEST WET WEST WEST WET|-o.A -10 -20 0 -10 -20 -10|0121212134343434343434343434343434343434343434343434565651212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2DG0o.A t6mo.A TB0 1nX0 Up0 1o20 11A0 rW0 CM0 1qP0 R90 1EO0 UK0 1u20 10m0 1ip0 1in0 17e0 19W0 1fB0 1db0 1cp0 1in0 17d0 1fz0 1a10 1in0 1a10 1in0 17f0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Dc0 vA0 60L0 WM0 1fA0 1cM0 17c0 1io0 16M0 1C00 Uo0 1eeo0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4",
                "Europe/Madrid|WET WEST WEMT CET CEST|0 -10 -20 -10 -20|010101010101010101210343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343|-25Td0 19B0 1cL0 1dd0 b1z0 18p0 3HX0 17d0 1fz0 1a10 1io0 1a00 1in0 17d0 iIn0 Hd0 1cL0 bb0 1200 2s20 14n0 5aL0 Mp0 1vz0 17d0 1in0 17d0 1in0 17d0 1in0 17d0 6hX0 11B0 XHX0 1a10 1fz0 1a10 19X0 1cN0 1fz0 1a10 1fC0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|62e5",
                "Europe/Malta|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1co0 17c0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1co0 1cM0 1lA0 Xc0 1qq0 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1o10 11z0 1iN0 19z0 1fB0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4",
                "Europe/Minsk|MMT EET MSK CEST CET MSD EEST +03|-1O -20 -30 -20 -10 -40 -30 -30|01234343252525252525252525261616161616161616161616161616161616161617|-1Pc1O eUnO qNX0 3gQ0 WM0 1fA0 1cM0 Al0 1tsn0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 3Fc0 1cN0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0|19e5",
                "Europe/Monaco|PMT WET WEST WEMT CET CEST|-9.l 0 -10 -20 -10 -20|01212121212121212121212121212121212121212121212121232323232345454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-2nco9.l cNb9.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 2RV0 11z0 11B0 1ze0 WM0 1fA0 1cM0 1fa0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|38e3",
                "Europe/Moscow|MMT MMT MST MDST MSD MSK +05 EET EEST MSK|-2u.h -2v.j -3v.j -4v.j -40 -30 -50 -20 -30 -40|012132345464575454545454545454545458754545454545454545454545454545454545454595|-2ag2u.h 2pyW.W 1bA0 11X0 GN0 1Hb0 c4v.j ik0 3DA0 dz0 15A0 c10 2q10 iM10 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0|16e6",
                "Europe/Paris|PMT WET WEST CEST CET WEMT|-9.l 0 -10 -20 -10 -20|0121212121212121212121212121212121212121212121212123434352543434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434343434|-2nco8.l cNb8.l HA0 19A0 1iM0 11c0 1oo0 Wo0 1rc0 QM0 1EM0 UM0 1u00 10o0 1io0 1wo0 Rc0 1a00 1fA0 1cM0 1cM0 1io0 17c0 1fA0 1a00 1io0 1a00 1io0 17c0 1fA0 1a00 1io0 17c0 1cM0 1cM0 1a00 1io0 1cM0 1cM0 1a00 1fA0 1io0 17c0 1cM0 1cM0 1a00 1fA0 1io0 1qM0 Df0 Ik0 5M30 WM0 1fA0 1cM0 Vx0 hB0 1aq0 16M0 1ekn0 1cL0 1fC0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e6",
                "Europe/Riga|RMT LST EET MSK CEST CET MSD EEST|-1A.y -2A.y -20 -30 -20 -10 -40 -30|010102345454536363636363636363727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272727272|-25TzA.y 11A0 1iM0 ko0 gWm0 yDXA.y 2bX0 3fE0 WM0 1fA0 1cM0 1cM0 4m0 1sLy0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cN0 1o00 11A0 1o00 11A0 1qM0 3oo0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|64e4",
                "Europe/Rome|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2arB0 Lz0 1cN0 1db0 1410 1on0 Wp0 1qL0 17d0 1cL0 M3B0 5M20 WM0 1fA0 1cM0 16M0 1iM0 16m0 1de0 1lc0 14m0 1lc0 WO0 1qM0 GTW0 On0 1C10 LA0 1C00 LA0 1EM0 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1C00 LA0 1zc0 Oo0 1C00 LA0 1C00 LA0 1zc0 Oo0 1C00 Oo0 1zc0 Oo0 1fC0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|39e5",
                "Europe/Samara|LMT +03 +04 +05|-3k.k -30 -40 -50|0123232323232323232121232323232323232323232323232323232323212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2y10 14m0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 2sp0 WM0|12e5",
                "Europe/Saratov|LMT +03 +04 +05|-34.i -30 -40 -50|012323232323232321212121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 5810",
                "Europe/Simferopol|SMT EET MSK CEST CET MSD EEST MSK|-2g -20 -30 -20 -10 -40 -30 -40|012343432525252525252525252161616525252616161616161616161616161616161616172|-1Pc2g eUog rEn0 2qs0 WM0 1fA0 1cM0 3V0 1u0L0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 4eL0 1cL0 1cN0 1cL0 1cN0 dX0 WL0 1cN0 1cL0 1fB0 1o30 11B0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11z0 1nW0|33e4",
                "Europe/Sofia|EET CET CEST EEST|-20 -10 -20 -30|01212103030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030|-168L0 WM0 1fA0 1cM0 1cM0 1cN0 1mKH0 1dd0 1fb0 1ap0 1fb0 1a20 1fy0 1a30 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cK0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 1nX0 11E0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5",
                "Europe/Stockholm|CET CEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2azC0 TB0 2yDe0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|15e5",
                "Europe/Tallinn|TMT CET CEST EET MSK MSD EEST|-1D -10 -20 -20 -30 -40 -30|012103421212454545454545454546363636363636363636363636363636363636363636363636363636363636363636363636363636363636363636363|-26oND teD 11A0 1Ta0 4rXl KSLD 2FX0 2Jg0 WM0 1fA0 1cM0 18J0 1sTX0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o10 11A0 1qM0 5QM0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|41e4",
                "Europe/Tirane|LMT CET CEST|-1j.k -10 -20|01212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2glBj.k 14pcj.k 5LC0 WM0 4M0 1fCK0 10n0 1op0 11z0 1pd0 11z0 1qN0 WL0 1qp0 Xb0 1qp0 Xb0 1qp0 11z0 1lB0 11z0 1qN0 11z0 1iN0 16n0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|42e4",
                "Europe/Ulyanovsk|LMT +03 +04 +05 +02|-3d.A -30 -40 -50 -20|01232323232323232321214121212121212121212121212121212121212121212|-22WM0 qH90 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1fA0 2pB0 IM0 rX0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 3rd0|13e5",
                "Europe/Uzhgorod|CET CEST MSK MSD EET EEST|-10 -20 -30 -40 -20 -30|010101023232323232323232320454545454545454545454545454545454545454545454545454545454545454545454545454545454545454545454|-1cqL0 6i00 WM0 1fA0 1cM0 1ml0 1Cp0 1r3W0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1Q00 1Nf0 2pw0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e4",
                "Europe/Vienna|CET CEST|-10 -20|0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 3KM0 14o0 LA00 6i00 WM0 1fA0 1cM0 1cM0 1cM0 400 2qM0 1a00 1cM0 1cM0 1io0 17c0 1gHa0 19X0 1cP0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|18e5",
                "Europe/Vilnius|WMT KMT CET EET MSK CEST MSD EEST|-1o -1z.A -10 -20 -30 -20 -40 -30|012324525254646464646464646473737373737373737352537373737373737373737373737373737373737373737373737373737373737373737373|-293do 6ILM.o 1Ooz.A zz0 Mfd0 29W0 3is0 WM0 1fA0 1cM0 LV0 1tgL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11B0 1o00 11A0 1qM0 8io0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|54e4",
                "Europe/Volgograd|LMT +03 +04 +05|-2V.E -30 -40 -50|012323232323232321212121212121212121212121212121212121212121212|-21IqV.E psLV.E 23CL0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 2pB0 1cM0 1cM0 1cM0 1fA0 1cM0 3Co0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 8Hz0 9Jd0|10e5",
                "Europe/Warsaw|WMT CET CEST EET EEST|-1o -10 -20 -20 -30|012121234312121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121|-2ctdo 1LXo 11d0 1iO0 11A0 1o00 11A0 1on0 11A0 6zy0 HWP0 5IM0 WM0 1fA0 1cM0 1dz0 1mL0 1en0 15B0 1aq0 1nA0 11A0 1io0 17c0 1fA0 1a00 iDX0 LA0 1cM0 1cM0 1C00 Oo0 1cM0 1cM0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1C00 LA0 uso0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cN0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e5",
                "Europe/Zaporozhye|+0220 EET MSK CEST CET MSD EEST|-2k -20 -30 -20 -10 -40 -30|01234342525252525252525252526161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161|-1Pc2k eUok rdb0 2RE0 WM0 1fA0 8m0 1v9a0 1db0 1cN0 1db0 1cN0 1db0 1dd0 1cO0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cK0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cQ0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|77e4",
                "HST|HST|a0|0|",
                "Indian/Chagos|LMT +05 +06|-4N.E -50 -60|012|-2xosN.E 3AGLN.E|30e2",
                "Indian/Cocos|+0630|-6u|0||596",
                "Indian/Kerguelen|-00 +05|0 -50|01|-MG00|130",
                "Indian/Mahe|LMT +04|-3F.M -40|01|-2yO3F.M|79e3",
                "Indian/Maldives|MMT +05|-4S -50|01|-olgS|35e4",
                "Indian/Mauritius|LMT +04 +05|-3O -40 -50|012121|-2xorO 34unO 14L0 12kr0 11z0|15e4",
                "Indian/Reunion|LMT +04|-3F.Q -40|01|-2mDDF.Q|84e4",
                "Pacific/Kwajalein|+11 +10 +09 -12 +12|-b0 -a0 -90 c0 -c0|012034|-1kln0 akp0 6Up0 12ry0 Wan0|14e3",
                "MET|MET MEST|-10 -20|01010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-2aFe0 11d0 1iO0 11A0 1o00 11A0 Qrc0 6i00 WM0 1fA0 1cM0 1cM0 1cM0 16M0 1gMM0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00",
                "MST|MST|70|0|",
                "MST7MDT|MST MDT MWT MPT|70 60 60 60|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261r0 1nX0 11B0 1nX0 SgN0 8x20 ix0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                "Pacific/Chatham|+1215 +1245 +1345|-cf -cJ -dJ|012121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212121212|-WqAf 1adef IM0 1C00 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1qM0 14o0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1lc0 14o0 1lc0 14o0 1lc0 17c0 1io0 17c0 1io0 17c0 1io0 17c0 1io0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|600",
                "Pacific/Apia|LMT -1130 -11 -10 +14 +13|bq.U bu b0 a0 -e0 -d0|01232345454545454545454545454545454545454545454545454545454|-2nDMx.4 1yW03.4 2rRbu 1ff0 1a00 CI0 AQ0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1io0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|37e3",
                "Pacific/Bougainville|+10 +09 +11|-a0 -90 -b0|0102|-16Wy0 7CN0 2MQp0|18e4",
                "Pacific/Chuuk|+10 +09|-a0 -90|01010|-2ewy0 axB0 RVX0 axd0|49e3",
                "Pacific/Efate|LMT +11 +12|-bd.g -b0 -c0|0121212121212121212121|-2l9nd.g 2Szcd.g 1cL0 1oN0 10L0 1fB0 19X0 1fB0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1fB0 Lz0 1Nd0 An0|66e3",
                "Pacific/Enderbury|-12 -11 +13|c0 b0 -d0|012|nIc0 B7X0|1",
                "Pacific/Fakaofo|-11 +13|b0 -d0|01|1Gfn0|483",
                "Pacific/Fiji|LMT +12 +13|-bT.I -c0 -d0|0121212121212121212121212121212121212121212121212121212121212121|-2bUzT.I 3m8NT.I LA0 1EM0 IM0 nJc0 LA0 1o00 Rc0 1wo0 Ao0 1Nc0 Ao0 1Q00 xz0 1SN0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 1VA0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 1VA0 uM0 1SM0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 1VA0 uM0 1SM0 uM0 1VA0 s00 1VA0 s00 1VA0 s00 1VA0 s00 1VA0 uM0 1SM0 uM0|88e4",
                "Pacific/Galapagos|LMT -05 -06|5W.o 50 60|01212|-1yVS1.A 2dTz1.A gNd0 rz0|25e3",
                "Pacific/Gambier|LMT -09|8X.M 90|01|-2jof0.c|125",
                "Pacific/Guadalcanal|LMT +11|-aD.M -b0|01|-2joyD.M|11e4",
                "Pacific/Guam|GST +09 GDT ChST|-a0 -90 -b0 -a0|01020202020202020203|-18jK0 6pB0 AhB0 3QL0 g2p0 3p91 WOX rX0 1zd0 Rb0 1wp0 Rb0 5xd0 rX0 5sN0 zb1 1C0X On0 ULb0|17e4",
                "Pacific/Honolulu|HST HDT HWT HPT HST|au 9u 9u 9u a0|0102304|-1thLu 8x0 lef0 8wWu iAu 46p0|37e4",
                "Pacific/Kiritimati|-1040 -10 +14|aE a0 -e0|012|nIaE B7Xk|51e2",
                "Pacific/Kosrae|+11 +09 +10 +12|-b0 -90 -a0 -c0|01021030|-2ewz0 axC0 HBy0 akp0 axd0 WOK0 1bdz0|66e2",
                "Pacific/Majuro|+11 +09 +10 +12|-b0 -90 -a0 -c0|0102103|-2ewz0 axC0 HBy0 akp0 6RB0 12um0|28e3",
                "Pacific/Marquesas|LMT -0930|9i 9u|01|-2joeG|86e2",
                "Pacific/Pago_Pago|LMT SST|bm.M b0|01|-2nDMB.c|37e2",
                "Pacific/Nauru|LMT +1130 +09 +12|-b7.E -bu -90 -c0|01213|-1Xdn7.E QCnB.E 7mqu 1lnbu|10e3",
                "Pacific/Niue|-1120 -1130 -11|bk bu b0|012|-KfME 17y0a|12e2",
                "Pacific/Norfolk|+1112 +1130 +1230 +11|-bc -bu -cu -b0|01213|-Kgbc W01G On0 1COp0|25e4",
                "Pacific/Noumea|LMT +11 +12|-b5.M -b0 -c0|01212121|-2l9n5.M 2EqM5.M xX0 1PB0 yn0 HeP0 Ao0|98e3",
                "Pacific/Pitcairn|-0830 -08|8u 80|01|18Vku|56",
                "Pacific/Pohnpei|+11 +09 +10|-b0 -90 -a0|010210|-2ewz0 axC0 HBy0 akp0 axd0|34e3",
                "Pacific/Rarotonga|-1030 -0930 -10|au 9u a0|012121212121212121212121212|lyWu IL0 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Onu 1zcu Rbu 1zcu Onu 1zcu Onu 1zcu Onu|13e3",
                "Pacific/Tahiti|LMT -10|9W.g a0|01|-2joe1.I|18e4",
                "Pacific/Tongatapu|+1220 +13 +14|-ck -d0 -e0|0121212121|-1aB0k 2n5dk 15A0 1wo0 xz0 1Q10 xz0 zWN0 s00|75e3",
                "PST8PDT|PST PDT PWT PPT|80 70 70 70|010102301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|-261q0 1nX0 11B0 1nX0 SgN0 8x10 iy0 QwN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1cN0 1cL0 1cN0 1cL0 s10 1Vz0 LB0 1BX0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 1cN0 1fz0 1a10 1fz0 1cN0 1cL0 1cN0 1cL0 1cN0 1cL0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0",
                "WET|WET WEST|0 -10|010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010|hDB0 1a00 1fA0 1cM0 1cM0 1cM0 1fA0 1a00 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00"
            ],
            "links": [
                "Africa/Abidjan|Africa/Bamako",
                "Africa/Abidjan|Africa/Banjul",
                "Africa/Abidjan|Africa/Conakry",
                "Africa/Abidjan|Africa/Dakar",
                "Africa/Abidjan|Africa/Freetown",
                "Africa/Abidjan|Africa/Lome",
                "Africa/Abidjan|Africa/Nouakchott",
                "Africa/Abidjan|Africa/Ouagadougou",
                "Africa/Abidjan|Africa/Timbuktu",
                "Africa/Abidjan|Atlantic/St_Helena",
                "Africa/Cairo|Egypt",
                "Africa/Johannesburg|Africa/Maseru",
                "Africa/Johannesburg|Africa/Mbabane",
                "Africa/Lagos|Africa/Bangui",
                "Africa/Lagos|Africa/Brazzaville",
                "Africa/Lagos|Africa/Douala",
                "Africa/Lagos|Africa/Kinshasa",
                "Africa/Lagos|Africa/Libreville",
                "Africa/Lagos|Africa/Luanda",
                "Africa/Lagos|Africa/Malabo",
                "Africa/Lagos|Africa/Niamey",
                "Africa/Lagos|Africa/Porto-Novo",
                "Africa/Maputo|Africa/Blantyre",
                "Africa/Maputo|Africa/Bujumbura",
                "Africa/Maputo|Africa/Gaborone",
                "Africa/Maputo|Africa/Harare",
                "Africa/Maputo|Africa/Kigali",
                "Africa/Maputo|Africa/Lubumbashi",
                "Africa/Maputo|Africa/Lusaka",
                "Africa/Nairobi|Africa/Addis_Ababa",
                "Africa/Nairobi|Africa/Asmara",
                "Africa/Nairobi|Africa/Asmera",
                "Africa/Nairobi|Africa/Dar_es_Salaam",
                "Africa/Nairobi|Africa/Djibouti",
                "Africa/Nairobi|Africa/Kampala",
                "Africa/Nairobi|Africa/Mogadishu",
                "Africa/Nairobi|Indian/Antananarivo",
                "Africa/Nairobi|Indian/Comoro",
                "Africa/Nairobi|Indian/Mayotte",
                "Africa/Tripoli|Libya",
                "America/Adak|America/Atka",
                "America/Adak|US/Aleutian",
                "America/Anchorage|US/Alaska",
                "America/Argentina/Buenos_Aires|America/Buenos_Aires",
                "America/Argentina/Catamarca|America/Argentina/ComodRivadavia",
                "America/Argentina/Catamarca|America/Catamarca",
                "America/Argentina/Cordoba|America/Cordoba",
                "America/Argentina/Cordoba|America/Rosario",
                "America/Argentina/Jujuy|America/Jujuy",
                "America/Argentina/Mendoza|America/Mendoza",
                "America/Atikokan|America/Coral_Harbour",
                "America/Chicago|US/Central",
                "America/Curacao|America/Aruba",
                "America/Curacao|America/Kralendijk",
                "America/Curacao|America/Lower_Princes",
                "America/Denver|America/Shiprock",
                "America/Denver|Navajo",
                "America/Denver|US/Mountain",
                "America/Detroit|US/Michigan",
                "America/Edmonton|Canada/Mountain",
                "America/Fort_Wayne|America/Indiana/Indianapolis",
                "America/Fort_Wayne|America/Indianapolis",
                "America/Fort_Wayne|US/East-Indiana",
                "America/Halifax|Canada/Atlantic",
                "America/Havana|Cuba",
                "America/Indiana/Knox|America/Knox_IN",
                "America/Indiana/Knox|US/Indiana-Starke",
                "America/Jamaica|Jamaica",
                "America/Kentucky/Louisville|America/Louisville",
                "America/Los_Angeles|US/Pacific",
                "America/Los_Angeles|US/Pacific-New",
                "America/Manaus|Brazil/West",
                "America/Mazatlan|Mexico/BajaSur",
                "America/Mexico_City|Mexico/General",
                "America/New_York|US/Eastern",
                "America/Noronha|Brazil/DeNoronha",
                "America/Panama|America/Cayman",
                "America/Phoenix|US/Arizona",
                "America/Port_of_Spain|America/Anguilla",
                "America/Port_of_Spain|America/Antigua",
                "America/Port_of_Spain|America/Dominica",
                "America/Port_of_Spain|America/Grenada",
                "America/Port_of_Spain|America/Guadeloupe",
                "America/Port_of_Spain|America/Marigot",
                "America/Port_of_Spain|America/Montserrat",
                "America/Port_of_Spain|America/St_Barthelemy",
                "America/Port_of_Spain|America/St_Kitts",
                "America/Port_of_Spain|America/St_Lucia",
                "America/Port_of_Spain|America/St_Thomas",
                "America/Port_of_Spain|America/St_Vincent",
                "America/Port_of_Spain|America/Tortola",
                "America/Port_of_Spain|America/Virgin",
                "America/Regina|Canada/Saskatchewan",
                "America/Rio_Branco|America/Porto_Acre",
                "America/Rio_Branco|Brazil/Acre",
                "America/Santiago|Chile/Continental",
                "America/Sao_Paulo|Brazil/East",
                "America/St_Johns|Canada/Newfoundland",
                "America/Tijuana|America/Ensenada",
                "America/Tijuana|America/Santa_Isabel",
                "America/Tijuana|Mexico/BajaNorte",
                "America/Toronto|America/Montreal",
                "America/Toronto|Canada/Eastern",
                "America/Vancouver|Canada/Pacific",
                "America/Whitehorse|Canada/Yukon",
                "America/Winnipeg|Canada/Central",
                "Asia/Ashgabat|Asia/Ashkhabad",
                "Asia/Bangkok|Asia/Phnom_Penh",
                "Asia/Bangkok|Asia/Vientiane",
                "Asia/Dhaka|Asia/Dacca",
                "Asia/Dubai|Asia/Muscat",
                "Asia/Ho_Chi_Minh|Asia/Saigon",
                "Asia/Hong_Kong|Hongkong",
                "Asia/Jerusalem|Asia/Tel_Aviv",
                "Asia/Jerusalem|Israel",
                "Asia/Kathmandu|Asia/Katmandu",
                "Asia/Kolkata|Asia/Calcutta",
                "Asia/Kuala_Lumpur|Asia/Singapore",
                "Asia/Kuala_Lumpur|Singapore",
                "Asia/Macau|Asia/Macao",
                "Asia/Makassar|Asia/Ujung_Pandang",
                "Asia/Nicosia|Europe/Nicosia",
                "Asia/Qatar|Asia/Bahrain",
                "Asia/Rangoon|Asia/Yangon",
                "Asia/Riyadh|Asia/Aden",
                "Asia/Riyadh|Asia/Kuwait",
                "Asia/Seoul|ROK",
                "Asia/Shanghai|Asia/Chongqing",
                "Asia/Shanghai|Asia/Chungking",
                "Asia/Shanghai|Asia/Harbin",
                "Asia/Shanghai|PRC",
                "Asia/Taipei|ROC",
                "Asia/Tehran|Iran",
                "Asia/Thimphu|Asia/Thimbu",
                "Asia/Tokyo|Japan",
                "Asia/Ulaanbaatar|Asia/Ulan_Bator",
                "Asia/Urumqi|Asia/Kashgar",
                "Atlantic/Faroe|Atlantic/Faeroe",
                "Atlantic/Reykjavik|Iceland",
                "Atlantic/South_Georgia|Etc/GMT+2",
                "Australia/Adelaide|Australia/South",
                "Australia/Brisbane|Australia/Queensland",
                "Australia/Broken_Hill|Australia/Yancowinna",
                "Australia/Darwin|Australia/North",
                "Australia/Hobart|Australia/Tasmania",
                "Australia/Lord_Howe|Australia/LHI",
                "Australia/Melbourne|Australia/Victoria",
                "Australia/Perth|Australia/West",
                "Australia/Sydney|Australia/ACT",
                "Australia/Sydney|Australia/Canberra",
                "Australia/Sydney|Australia/NSW",
                "Etc/GMT-0|Etc/GMT",
                "Etc/GMT-0|Etc/GMT+0",
                "Etc/GMT-0|Etc/GMT0",
                "Etc/GMT-0|Etc/Greenwich",
                "Etc/GMT-0|GMT",
                "Etc/GMT-0|GMT+0",
                "Etc/GMT-0|GMT-0",
                "Etc/GMT-0|GMT0",
                "Etc/GMT-0|Greenwich",
                "Etc/UTC|Etc/UCT",
                "Etc/UTC|Etc/Universal",
                "Etc/UTC|Etc/Zulu",
                "Etc/UTC|UCT",
                "Etc/UTC|UTC",
                "Etc/UTC|Universal",
                "Etc/UTC|Zulu",
                "Europe/Belgrade|Europe/Ljubljana",
                "Europe/Belgrade|Europe/Podgorica",
                "Europe/Belgrade|Europe/Sarajevo",
                "Europe/Belgrade|Europe/Skopje",
                "Europe/Belgrade|Europe/Zagreb",
                "Europe/Chisinau|Europe/Tiraspol",
                "Europe/Dublin|Eire",
                "Europe/Helsinki|Europe/Mariehamn",
                "Europe/Istanbul|Asia/Istanbul",
                "Europe/Istanbul|Turkey",
                "Europe/Lisbon|Portugal",
                "Europe/London|Europe/Belfast",
                "Europe/London|Europe/Guernsey",
                "Europe/London|Europe/Isle_of_Man",
                "Europe/London|Europe/Jersey",
                "Europe/London|GB",
                "Europe/London|GB-Eire",
                "Europe/Moscow|W-SU",
                "Europe/Oslo|Arctic/Longyearbyen",
                "Europe/Oslo|Atlantic/Jan_Mayen",
                "Europe/Prague|Europe/Bratislava",
                "Europe/Rome|Europe/San_Marino",
                "Europe/Rome|Europe/Vatican",
                "Europe/Warsaw|Poland",
                "Europe/Zurich|Europe/Busingen",
                "Europe/Zurich|Europe/Vaduz",
                "Indian/Christmas|Etc/GMT-7",
                "Pacific/Auckland|Antarctica/McMurdo",
                "Pacific/Auckland|Antarctica/South_Pole",
                "Pacific/Auckland|NZ",
                "Pacific/Chatham|NZ-CHAT",
                "Pacific/Chuuk|Pacific/Truk",
                "Pacific/Chuuk|Pacific/Yap",
                "Pacific/Easter|Chile/EasterIsland",
                "Pacific/Guam|Pacific/Saipan",
                "Pacific/Honolulu|Pacific/Johnston",
                "Pacific/Honolulu|US/Hawaii",
                "Pacific/Kwajalein|Kwajalein",
                "Pacific/Pago_Pago|Pacific/Midway",
                "Pacific/Pago_Pago|Pacific/Samoa",
                "Pacific/Pago_Pago|US/Samoa",
                "Pacific/Palau|Etc/GMT-9",
                "Pacific/Pohnpei|Pacific/Ponape",
                "Pacific/Port_Moresby|Etc/GMT-10",
                "Pacific/Tarawa|Etc/GMT-12",
                "Pacific/Tarawa|Pacific/Funafuti",
                "Pacific/Tarawa|Pacific/Wake",
                "Pacific/Tarawa|Pacific/Wallis"
            ]
        };
    }
    MomentTimezoneService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()
    ], MomentTimezoneService);
    return MomentTimezoneService;
}());



/***/ }),

/***/ "./src/app/scheduler/time/time-cart/time-cart.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/scheduler/time/time-cart/time-cart.component.ts ***!
  \*****************************************************************/
/*! exports provided: TimeCartComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeCartComponent", function() { return TimeCartComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _scheduler_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../scheduler.service */ "./src/app/scheduler/scheduler.service.ts");




var TimeCartComponent = /** @class */ (function () {
    function TimeCartComponent(schedulerService, passedData, dialogRef) {
        var _this = this;
        this.schedulerService = schedulerService;
        this.passedData = passedData;
        this.dialogRef = dialogRef;
        this.timeListToRemove = [];
        this.locale = sessionStorage.getItem('locale');
        dialogRef.backdropClick().subscribe(function () {
            _this.dialogRef.close(_this.timeListToRemove);
        });
    }
    TimeCartComponent.prototype.organizeTimeListSets = function () {
        this.timeList = this.schedulerService.sortTimeList(this.timeList);
        this.bookingTimeList = [];
        this.waitlistTimeList = [];
        for (var i = 0, x = this.timeList.length; i < x; i++) {
            if (this.timeList[i].waitListMode) {
                this.waitlistTimeList.push(this.timeList[i]);
            }
            else {
                this.bookingTimeList.push(this.timeList[i]);
            }
        }
    };
    TimeCartComponent.prototype.ngOnInit = function () {
        this.timeList = this.passedData.timeList;
        this.organizeTimeListSets();
        this.preference = this.passedData.preference;
        this.reason = this.passedData.reason;
        this.selectedTimesCount = this.passedData.selectedTimesCount;
    };
    TimeCartComponent.prototype.removeTime = function (time) {
        for (var i = 0, x = this.timeList.length; i < x; i++) {
            if ((time.timeSlotId !== null && this.timeList[i].timeSlotId === time.timeSlotId) ||
                (time.classScheduleId !== null && this.timeList[i].classScheduleId === time.classScheduleId)) {
                this.timeListToRemove.push(this.timeList[i]);
                this.timeList.splice(i, 1);
                this.selectedTimesCount = this.timeList.length;
                this.organizeTimeListSets();
                break;
            }
        }
    };
    TimeCartComponent.prototype.closeTimePanelCart = function () {
        this.dialogRef.close(this.timeListToRemove);
    };
    TimeCartComponent.ctorParameters = function () { return [
        { type: _scheduler_service__WEBPACK_IMPORTED_MODULE_3__["SchedulerService"] },
        { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"],] }] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"] }
    ]; };
    TimeCartComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'time-cart',
            template: __webpack_require__(/*! raw-loader!./time-cart.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/time/time-cart/time-cart.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MAT_DIALOG_DATA"])),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_scheduler_service__WEBPACK_IMPORTED_MODULE_3__["SchedulerService"], Object, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__["MatDialogRef"]])
    ], TimeCartComponent);
    return TimeCartComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/time/time-objects.model.ts":
/*!******************************************************!*\
  !*** ./src/app/scheduler/time/time-objects.model.ts ***!
  \******************************************************/
/*! exports provided: TimeZoneCode, TimeLock, TimeSlotUnit, SingleTimeSlot, RepeatingAppointmentDateList, RepeatingAppointmentTimeSlots, RepeatingAppointmentAvailability, WeekDayData, RepeatingAppointmentDateSet, RepeatingAppointmentSet, SingleDateAvailability, MonthAvailability, MonthCalendarChange, SelectDayChange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeZoneCode", function() { return TimeZoneCode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeLock", function() { return TimeLock; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeSlotUnit", function() { return TimeSlotUnit; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SingleTimeSlot", function() { return SingleTimeSlot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RepeatingAppointmentDateList", function() { return RepeatingAppointmentDateList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RepeatingAppointmentTimeSlots", function() { return RepeatingAppointmentTimeSlots; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RepeatingAppointmentAvailability", function() { return RepeatingAppointmentAvailability; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WeekDayData", function() { return WeekDayData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RepeatingAppointmentDateSet", function() { return RepeatingAppointmentDateSet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RepeatingAppointmentSet", function() { return RepeatingAppointmentSet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SingleDateAvailability", function() { return SingleDateAvailability; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MonthAvailability", function() { return MonthAvailability; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MonthCalendarChange", function() { return MonthCalendarChange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectDayChange", function() { return SelectDayChange; });
/* harmony import */ var moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! moment-timezone/moment-timezone */ "./node_modules/moment-timezone/moment-timezone.js");
/* harmony import */ var moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_0__);

var TimeZoneCode = /** @class */ (function () {
    function TimeZoneCode(timeZoneCode, timeZoneId, timeZoneDisplayName) {
        this.timeZoneCode = timeZoneCode;
        this.timeZoneId = timeZoneId;
        if (timeZoneDisplayName === undefined)
            timeZoneDisplayName = timeZoneCode;
        this.timeZoneDisplayName = timeZoneDisplayName;
    }
    TimeZoneCode.ctorParameters = function () { return [
        { type: String },
        { type: Number },
        { type: String }
    ]; };
    return TimeZoneCode;
}());

var TimeLock = /** @class */ (function () {
    function TimeLock() {
    }
    return TimeLock;
}());

var TimeSlotUnit = /** @class */ (function () {
    function TimeSlotUnit() {
    }
    TimeSlotUnit.prototype.setProps = function (locationId, professionalId, reasonId, resourceId) {
        this.locationId = locationId;
        this.professionalId = professionalId;
        this.reasonId = reasonId;
        this.resourceId = resourceId;
        return this;
    };
    return TimeSlotUnit;
}());

var SingleTimeSlot = /** @class */ (function () {
    function SingleTimeSlot() {
    }
    SingleTimeSlot.prototype.loadSingleTimeSlot = function (showInTimeList, selected, timeSlotId, units, isWaitListFirstAvail, waitListMode, stringStartAndEndDate, startTime, endTime) {
        this.available = true;
        this.clientEndTime = endTime || 2400;
        this.clientStartTime = startTime || 0;
        this.deleted = false;
        this.endTime = endTime || 2400;
        this.staffEndTime = endTime || 2400;
        this.staffStartTime = startTime || 0;
        this.startTime = startTime || 0;
        this.startTimeDate = new Date();
        this.endTimeDate = new Date();
        this.startTimeDateForTimeslotDisplay = new Date();
        this.endTimeDateForTimeslotDisplay = new Date();
        this.staffStartDateTimeUTC = new Date();
        this.staffEndDateTimeUTC = new Date();
        this.showInTimeList = showInTimeList;
        this.selected = selected;
        this.timeSlotId = timeSlotId;
        this.clientTimeSlotId = timeSlotId;
        this.htmlId = timeSlotId;
        this.units = units;
        this.isWaitListFirstAvail = isWaitListFirstAvail;
        this.waitListMode = waitListMode;
        this.staffStartDate = stringStartAndEndDate;
        this.staffEndDate = stringStartAndEndDate;
        this.clientStartDate = stringStartAndEndDate;
        this.clientEndDate = stringStartAndEndDate;
        return this;
    };
    SingleTimeSlot.prototype.createTimeSlotFromWaitListDateTime = function (waitListDateTime, waitListDate, waitList, militaryTimeConversion, show24HrFormat, timeService) {
        this.endTime = waitListDateTime.endTime;
        this.startTime = Number(waitListDateTime.startTime);
        this.clientStartTime = Number(waitListDateTime.startTime);
        var waitListDateString = timeService.getStringDateFromTime(waitListDate.date);
        this.staffStartDate = waitListDateString;
        this.staffEndDate = waitListDateString;
        this.staffStartDateTimeUTC = timeService.convertStringDateToObject(waitListDateString, Number(waitListDateTime.startTime));
        this.staffEndDateTimeUTC = timeService.convertStringDateToObject(waitListDateString, waitListDateTime.endTime);
        var timeSlotUnit = new TimeSlotUnit();
        if (waitList.staff)
            timeSlotUnit.professionalId = waitList.staff.professionalId;
        if (waitList.location)
            timeSlotUnit.locationId = waitList.location.locationId;
        timeSlotUnit.reasonId = waitList.reason.reasonId;
        this.timeString = militaryTimeConversion.transform(this.startTime, show24HrFormat) + ' - ' + militaryTimeConversion.transform(this.endTime, show24HrFormat) + ' (' + waitList.waitListTZ + ')';
        this.waitListMode = true;
    };
    SingleTimeSlot.prototype.convertClassSessionToTimeSlot = function (classSession, militaryTimeConversion, show24HrFormat, waitListMode, timeService) {
        this.classScheduleId = classSession.classScheduleId;
        this.roomNumber = classSession.roomNumber;
        this.clientEndDate = classSession.date;
        this.clientEndTime = classSession.endTime;
        this.clientStartDate = classSession.date;
        this.clientStartTime = classSession.startTime;
        this.currentAvailable = classSession.currentAvailable;
        this.currentCapacity = classSession.currentCapacity;
        this.date = classSession.date;
        this.endTime = classSession.endTime;
        this.maxCapacity = classSession.maxCapacity;
        this.staffEndDate = classSession.date;
        this.staffEndTime = classSession.endTime;
        this.staffEndDateTimeUTC = classSession.endDateTimeUTC;
        this.staffStartDate = classSession.date;
        this.staffStartTime = classSession.startTime;
        this.staffStartDateTimeUTC = classSession.startDateTimeUTC;
        this.startTime = classSession.startTime;
        this.status = classSession.status;
        var timeSlotUnit = new TimeSlotUnit();
        if (classSession.staff)
            timeSlotUnit.professionalId = classSession.staff.professionalId;
        if (classSession.location)
            timeSlotUnit.locationId = classSession.location.locationId;
        if (classSession.reason)
            timeSlotUnit.reasonId = classSession.reason.reasonId;
        this.units = [timeSlotUnit];
        this.classSession = classSession;
        this.startTimeDate = classSession.startDateTimeUTC;
        this.endTimeDate = classSession.endDateTimeUTC;
        this.startTimeDateForTimeslotDisplay = timeService.getTimeFromUTCTimeInClientTimezone(this.staffStartDateTimeUTC, timeService.clientTimezone);
        this.endTimeDateForTimeslotDisplay = timeService.getTimeFromUTCTimeInClientTimezone(this.staffEndDateTimeUTC, timeService.clientTimezone);
        this.timeSlotId = String(classSession.classScheduleId);
        this.clientTimeSlotId = String(classSession.classScheduleId);
        this.htmlId = String(classSession.classScheduleId);
        this.waitListMode = waitListMode;
        this.timeString = militaryTimeConversion.transform(this.startTime, show24HrFormat) + ' - ' + militaryTimeConversion.transform(this.endTime, show24HrFormat) + ' (' + this.currentCapacity + '/' + this.maxCapacity + ' seats filled)';
    };
    SingleTimeSlot.prototype.createCustomTimeSlotFromWaitList = function (waitList, militaryTimeConversion, show24HrFormat, timeService) {
        var waitListDateString = waitList.startDate;
        if (waitListDateString instanceof Date)
            waitListDateString = timeService.getStringDateFromTime(waitList.startDate);
        this.staffStartDate = waitListDateString;
        this.staffEndDate = waitListDateString;
        this.staffStartDateTimeUTC = timeService.dateWithTimeZone(timeService.clientTimezone, waitListDateString, this.startTime);
        this.staffEndDateTimeUTC = timeService.dateWithTimeZone(timeService.clientTimezone, waitListDateString, this.endTime);
        var timeSlotUnit = new TimeSlotUnit();
        if (waitList.staff)
            timeSlotUnit.professionalId = waitList.staff.professionalId;
        if (waitList.location)
            timeSlotUnit.locationId = waitList.location.locationId;
        timeSlotUnit.reasonId = waitList.reason.reasonId;
        this.startTimeDateForTimeslotDisplay = timeService.getTimeFromUTCTimeInClientTimezone(this.staffStartDateTimeUTC, timeService.clientTimezone);
        this.endTimeDateForTimeslotDisplay = timeService.getTimeFromUTCTimeInClientTimezone(this.staffEndDateTimeUTC, timeService.clientTimezone);
        this.classScheduleId = null;
        this.endTimeDate = new Date(this.staffEndDateTimeUTC);
        this.clientEndTime = this.endTime;
        this.startTimeDate = new Date(this.staffStartDateTimeUTC);
        this.clientStartTime = this.startTime;
        this.currentCapacity = null;
        this.staffEndTime = this.endTime;
        this.clientTimeSlotId = waitListDateString;
        this.htmlId = this.clientTimeSlotId;
        this.maxCapacity = null;
        this.staffStartTime = this.startTime;
        this.timeSlotId = this.clientTimeSlotId;
        this.waitListMode = true;
        this.timeString = militaryTimeConversion.transform(this.startTime, show24HrFormat) + ' - ' + militaryTimeConversion.transform(this.endTime, show24HrFormat) + ' (' + waitList.waitListTZ + ')';
    };
    SingleTimeSlot.prototype.convertCourseSetToTimeSlot = function (courseSetObj, timeService, waitListMode) {
        var courseSet = courseSetObj.recurringClassSchedule;
        this.recurringScheduleId = courseSet.recurringScheduleId;
        this.roomNumber = null;
        this.clientEndDate = courseSet.endDate;
        this.clientStartDate = courseSet.startDate;
        this.currentCapacity = courseSet.currentCapacity;
        this.date = courseSet.startDate;
        this.endTime = courseSet.endTime;
        this.maxCapacity = courseSet.maxCapacity;
        this.staffEndDate = courseSet.endDate;
        this.staffStartDate = courseSet.startDate;
        this.status = courseSet.status;
        var timeSlotUnit = new TimeSlotUnit();
        timeSlotUnit.professionalId = courseSet.staff.professionalId;
        timeSlotUnit.locationId = courseSet.location.locationId;
        timeSlotUnit.reasonId = courseSet.reason.reasonId;
        if (courseSet.resource)
            timeSlotUnit.resourceId = courseSet.resource.resourceId;
        this.units = [timeSlotUnit];
        this.courseSet = courseSet;
        this.timeSlotId = String(courseSet.recurringScheduleId);
        this.waitListMode = waitListMode;
        var startDateDate = timeService.convertStringDateToObject(this.staffStartDate, 0);
        var endDateDate = timeService.convertStringDateToObject(this.staffEndDate, 0);
        this.timeString = courseSet.courseSetName + ', ' + timeService.getShortDateFromDate(startDateDate) + ' - ' + timeService.getShortDateFromDate(endDateDate) + ' (' + this.currentCapacity + '/' + this.maxCapacity + ' seats filled)';
    };
    return SingleTimeSlot;
}());

var RepeatingAppointmentDateList = /** @class */ (function () {
    function RepeatingAppointmentDateList() {
    }
    return RepeatingAppointmentDateList;
}());

var RepeatingAppointmentTimeSlots = /** @class */ (function () {
    function RepeatingAppointmentTimeSlots() {
    }
    return RepeatingAppointmentTimeSlots;
}());

var RepeatingAppointmentAvailability = /** @class */ (function () {
    function RepeatingAppointmentAvailability(staffId, locationId, calSlotList) {
        this.staffId = staffId;
        this.locationId = locationId;
        this.calSlotList = calSlotList;
    }
    RepeatingAppointmentAvailability.prototype.createRepeatingApptSet = function (timeService, tagsService, allowTZChange, businessTimeZone, timeZoneForMoment, showOnlyStartTime, timeFormat24Hrs) {
        timeZoneForMoment = timeService.checkToAddMomentTimezone(allowTZChange, timeZoneForMoment);
        var propForStartTimeFormatting = 'startTime';
        var propForEndTimeFormatting = 'endTime';
        var propForStartDateFormatting = 'staffStartDate';
        var propForEndDateFormatting = 'staffEndDate';
        if (allowTZChange === 1) {
            propForStartTimeFormatting = 'clientStartTime';
            propForEndTimeFormatting = 'clientEndTime';
            propForStartDateFormatting = 'clientStartDate';
            propForEndDateFormatting = 'clientEndDate';
        }
        var repeatingApptSets = [];
        for (var j = 0, y = this.calSlotList.length; j < y; j++) {
            var repeatingAppointmentSet = new RepeatingAppointmentSet();
            repeatingAppointmentSet.staffId = this.staffId;
            repeatingAppointmentSet.locationId = this.locationId;
            repeatingAppointmentSet.startDate = this.calSlotList[j].calDateList[0].staffStartDateTimeUTC;
            repeatingAppointmentSet.endDate = this.calSlotList[j].calDateList[0].staffEndDateTimeUTC;
            repeatingAppointmentSet.startTimeDateForTimeslotDisplay = null;
            repeatingAppointmentSet.endTimeDateForTimeslotDisplay = null;
            repeatingAppointmentSet.dateTimeList = [];
            var days = [];
            var startTimes = [];
            for (var k = 0, z = this.calSlotList[j].calDateList.length; k < z; k++) {
                var repeatingAppointmentDateSet = new RepeatingAppointmentDateSet();
                if (this.calSlotList[j].calDateList[k].staffStartDateTimeUTC < repeatingAppointmentSet.startDate)
                    repeatingAppointmentSet.startDate = this.calSlotList[j].calDateList[k].staffStartDateTimeUTC;
                if (this.calSlotList[j].calDateList[k].staffEndDateTimeUTC > repeatingAppointmentSet.endDate)
                    repeatingAppointmentSet.endDate = this.calSlotList[j].calDateList[k].staffEndDateTimeUTC;
                repeatingAppointmentDateSet.clientStartTime = this.calSlotList[j].clientStartTime;
                repeatingAppointmentDateSet.clientEndTime = this.calSlotList[j].clientEndTime;
                repeatingAppointmentDateSet.startTime = this.calSlotList[j].startTime;
                repeatingAppointmentDateSet.endTime = this.calSlotList[j].endTime;
                repeatingAppointmentDateSet.clientStartDate = this.calSlotList[j].calDateList[k].clientStartDate;
                repeatingAppointmentDateSet.clientEndDate = this.calSlotList[j].calDateList[k].clientEndDate;
                repeatingAppointmentDateSet.staffStartDate = this.calSlotList[j].calDateList[k].staffStartDate;
                repeatingAppointmentDateSet.staffEndDate = this.calSlotList[j].calDateList[k].staffEndDate;
                repeatingAppointmentDateSet.staffStartDateTimeUTC = this.calSlotList[j].calDateList[k].staffStartDateTimeUTC;
                repeatingAppointmentDateSet.staffEndDateTimeUTC = this.calSlotList[j].calDateList[k].staffEndDateTimeUTC;
                repeatingAppointmentDateSet.startTimeDateForTimeslotDisplay = timeService.getTimeWithMoment(repeatingAppointmentDateSet[propForStartTimeFormatting], repeatingAppointmentDateSet[propForStartDateFormatting], allowTZChange, undefined);
                repeatingAppointmentDateSet.endTimeDateForTimeslotDisplay = timeService.getTimeWithMoment(repeatingAppointmentDateSet[propForEndTimeFormatting], repeatingAppointmentDateSet[propForEndDateFormatting], allowTZChange, undefined);
                if (repeatingAppointmentSet.startTimeDateForTimeslotDisplay === null || repeatingAppointmentDateSet.startTimeDateForTimeslotDisplay < repeatingAppointmentSet.startTimeDateForTimeslotDisplay)
                    repeatingAppointmentSet.startTimeDateForTimeslotDisplay = repeatingAppointmentDateSet.startTimeDateForTimeslotDisplay;
                if (repeatingAppointmentSet.endTimeDateForTimeslotDisplay === null || repeatingAppointmentDateSet.endTimeDateForTimeslotDisplay < repeatingAppointmentSet.endTimeDateForTimeslotDisplay)
                    repeatingAppointmentSet.endTimeDateForTimeslotDisplay = repeatingAppointmentDateSet.endTimeDateForTimeslotDisplay;
                repeatingAppointmentDateSet.startTimeDate = timeService.getTimeWithMoment(repeatingAppointmentDateSet.startTime, repeatingAppointmentDateSet.staffStartDate, 0, businessTimeZone);
                repeatingAppointmentDateSet.endTimeDate = timeService.getTimeWithMoment(repeatingAppointmentDateSet.endTime, repeatingAppointmentDateSet.staffEndDate, 0, businessTimeZone);
                var day = timeService.getPipeDayOfWeekFromDate(repeatingAppointmentDateSet.startTimeDateForTimeslotDisplay);
                if (days.indexOf(day) === -1)
                    days.push(day);
                if (startTimes.indexOf(repeatingAppointmentDateSet.clientStartTime) === -1)
                    startTimes.push(repeatingAppointmentDateSet.clientStartTime);
                repeatingAppointmentSet.dateTimeList.push(repeatingAppointmentDateSet);
            }
            var displayLabel = '';
            var daysString = '';
            if (days.length === 1) {
                displayLabel = days[0];
                daysString = days[0];
            }
            else {
                for (var k = 0, z = days.length; k < z; k++) {
                    if (k === 0) {
                        displayLabel = days[k];
                    }
                    else if (k < z - 1) { // is not the last item in the list
                        displayLabel = displayLabel + "," + days[k];
                    }
                    else if (k === z - 1) { // is the last item in the list
                        displayLabel = displayLabel + " & " + days[k];
                    }
                    daysString = daysString + days[k];
                }
            }
            var startTimesString = '';
            for (var k = 0, z = startTimes.length; k < z; k++) {
                startTimesString = startTimesString + startTimes[k];
            }
            var startFormat = 'HH:mm';
            var endFormat = 'HH:mm';
            if (!timeFormat24Hrs) {
                startFormat = 'LT';
                endFormat = 'LT';
            }
            var startTimeDisplay = moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_0__(repeatingAppointmentSet.startTimeDateForTimeslotDisplay).tz(timeZoneForMoment).format(startFormat);
            var endTimeDisplay = moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_0__(repeatingAppointmentSet.endTimeDateForTimeslotDisplay).tz(timeZoneForMoment).format(endFormat);
            repeatingAppointmentSet.displayLabel = displayLabel + ": " + timeService.getShortDateFromDate(repeatingAppointmentSet.startDate) + " - " + timeService.getShortDateFromDate(repeatingAppointmentSet.endDate) + " at " + startTimeDisplay;
            if (!showOnlyStartTime)
                repeatingAppointmentSet.displayLabel = repeatingAppointmentSet.displayLabel + " - " + endTimeDisplay;
            repeatingAppointmentSet.setId = daysString + "_" + startTimesString + "_" + timeService.getStringDateFromTime(repeatingAppointmentSet.startDate) + "_" + timeService.getStringDateFromTime(repeatingAppointmentSet.endDate);
            repeatingApptSets.push(repeatingAppointmentSet);
        }
        return repeatingApptSets;
    };
    RepeatingAppointmentAvailability.ctorParameters = function () { return [
        { type: Number },
        { type: Number },
        { type: Array }
    ]; };
    return RepeatingAppointmentAvailability;
}());

var WeekDayData = /** @class */ (function () {
    function WeekDayData() {
    }
    return WeekDayData;
}());

var RepeatingAppointmentDateSet = /** @class */ (function () {
    function RepeatingAppointmentDateSet() {
    }
    RepeatingAppointmentDateSet.prototype.convertRepeatingDateSetToSingleTimeSlot = function (repeatingAppointmentSet, reason) {
        var unit = new TimeSlotUnit().setProps(repeatingAppointmentSet.locationId, repeatingAppointmentSet.staffId, reason.reasonId, null);
        var singleTimeSlot = new SingleTimeSlot().loadSingleTimeSlot(true, true, repeatingAppointmentSet.setId, [unit], false, false, this.staffStartDate, this.startTime, this.endTime);
        singleTimeSlot.startTimeDate = this.startTimeDate;
        singleTimeSlot.endTimeDate = this.endTimeDate;
        singleTimeSlot.startTimeDateForTimeslotDisplay = this.startTimeDateForTimeslotDisplay;
        singleTimeSlot.endTimeDateForTimeslotDisplay = this.endTimeDateForTimeslotDisplay;
        singleTimeSlot.staffStartDateTimeUTC = this.staffStartDateTimeUTC;
        singleTimeSlot.staffEndDateTimeUTC = this.staffEndDateTimeUTC;
        singleTimeSlot.clientStartDate = this.clientStartDate;
        singleTimeSlot.clientEndDate = this.clientEndDate;
        singleTimeSlot.endDate = this.staffEndDate;
        singleTimeSlot.locationId = repeatingAppointmentSet.locationId;
        singleTimeSlot.professionalId = repeatingAppointmentSet.staffId;
        return singleTimeSlot;
    };
    return RepeatingAppointmentDateSet;
}());

var RepeatingAppointmentSet = /** @class */ (function () {
    function RepeatingAppointmentSet() {
    }
    return RepeatingAppointmentSet;
}());

var SingleDateAvailability = /** @class */ (function () {
    function SingleDateAvailability(day, month, year, date) {
        this.day = day;
        this.year = year;
        this.month = month;
        if (date)
            this.date = date;
        else
            this.date = new Date(year, month, day);
    }
    SingleDateAvailability.ctorParameters = function () { return [
        { type: Number },
        { type: Number },
        { type: Number },
        { type: Date }
    ]; };
    return SingleDateAvailability;
}());

var MonthAvailability = /** @class */ (function () {
    function MonthAvailability() {
    }
    return MonthAvailability;
}());

var MonthCalendarChange = /** @class */ (function () {
    function MonthCalendarChange() {
    }
    return MonthCalendarChange;
}());

var SelectDayChange = /** @class */ (function () {
    function SelectDayChange() {
    }
    return SelectDayChange;
}());



/***/ }),

/***/ "./src/app/scheduler/time/time-slot-display/time-slot-display.component.ts":
/*!*********************************************************************************!*\
  !*** ./src/app/scheduler/time/time-slot-display/time-slot-display.component.ts ***!
  \*********************************************************************************/
/*! exports provided: TimeSlotDisplayComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeSlotDisplayComponent", function() { return TimeSlotDisplayComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! moment-timezone/moment-timezone */ "./node_modules/moment-timezone/moment-timezone.js");
/* harmony import */ var moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _time_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _models_Reason_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../models/Reason.model */ "./src/models/Reason.model.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");







var TimeSlotDisplayComponent = /** @class */ (function () {
    function TimeSlotDisplayComponent(cdRef, timeService, responsiveService, schedulerPreferenceService) {
        this.cdRef = cdRef;
        this.timeService = timeService;
        this.responsiveService = responsiveService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.seatsLabelSelected = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"](); // [TT-8571] LHB 04/12/2022
        this.isClassOrCourse = false;
        this.locale = sessionStorage.getItem('locale');
        this.preference = schedulerPreferenceService.schedulerPreference;
    }
    TimeSlotDisplayComponent.prototype.configureTimeDisplay = function () {
        this.timeZoneForMoment = this.timeService.checkToAddMomentTimezone(this.preference.allowTZChange, this.timeZoneCode);
        var startDateInTimezone = moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_2__(this.time[this.startTimeProperty]).tz(this.timeZoneForMoment).format('YYYY-MM-DD');
        var endDateInTimezone = moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_2__(this.time[this.endTimeProperty]).tz(this.timeZoneForMoment).format('YYYY-MM-DD');
        var additionalStartFormat = '';
        var additionalEndFormat = '';
        if (this.selectedDate !== undefined && this.selectedDate !== startDateInTimezone) {
            additionalStartFormat = 'l ';
        }
        if (endDateInTimezone !== startDateInTimezone) {
            additionalEndFormat = 'l ';
        }
        var startFormat = 'HH:mm';
        var endFormat = 'HH:mm';
        if (!this.preference.classCalendar && this.reason.reasonType === 'CLASS') {
            startFormat = 'llll';
            if (endDateInTimezone !== startDateInTimezone) {
                endFormat = 'llll';
            }
            else {
                endFormat = 'LT';
            }
            if (this.preference.timeFormat24Hrs) {
                startFormat = 'ddd, ll - HH:mm';
                if (endDateInTimezone !== startDateInTimezone) {
                    endFormat = 'ddd, ll - HH:mm';
                }
            }
        }
        else if (!this.preference.timeFormat24Hrs) {
            startFormat = additionalStartFormat + 'LT';
            endFormat = additionalEndFormat + 'LT';
        }
        else {
            startFormat = additionalStartFormat + startFormat;
            endFormat = additionalEndFormat + endFormat;
        }
        if (this.preference.booleanMap.timePnlShowTimezones) {
            startFormat = startFormat + ' z';
            endFormat = endFormat + ' z';
        }
        this.startTimeDisplay = moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_2__(this.time[this.startTimeProperty]).tz(this.timeZoneForMoment).format(startFormat);
        this.endTimeDisplay = moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_2__(this.time[this.endTimeProperty]).tz(this.timeZoneForMoment).format(endFormat);
        // let classScheduleIdsForConsole = [4435891];
        // let timeSlotIdsForConsole = ['2020-10-21:1845-1945','2020-10-21:1345-1445'];
        // if(timeSlotIdsForConsole.indexOf(this.time.timeSlotId) !== -1 || classScheduleIdsForConsole.indexOf(this.time.classScheduleId) !== -1) {
        //   console.log("/**************START****************/");
        //   console.log("this.startTimeDisplay " + JSON.stringify(this.startTimeDisplay));
        //   console.log("this.timeZoneCode " + this.timeZoneCode);
        //   console.log("this.time.timeSlotId " + JSON.stringify(this.time.timeSlotId));
        //   console.log("this.time.timeString " + JSON.stringify(this.time.timeString));
        //   console.log("this.time[this.startTimeProperty] " + JSON.stringify(this.time[this.startTimeProperty]));
        //   console.log("this.time[this.endTimeProperty] " + JSON.stringify(this.time[this.endTimeProperty]));
        //   console.log("this.timeZoneForMoment " + JSON.stringify(this.timeZoneForMoment));
        //   console.log("startDateInTimezone " + JSON.stringify(startDateInTimezone));
        //   console.log("endDateInTimezone " + JSON.stringify(endDateInTimezone));
        //   console.log("this.selectedDate " + JSON.stringify(this.selectedDate));
        //   console.log("/**************END****************/");
        // }
        this.cdRef.detectChanges();
    };
    TimeSlotDisplayComponent.prototype.ngOnInit = function () {
        if (this.reason.reasonType === 'CLASS' || this.reason.reasonType === 'COURSE') {
            this.isClassOrCourse = true;
        }
        else {
            this.isClassOrCourse = false;
        }
        this.configureTimeDisplay();
    };
    TimeSlotDisplayComponent.prototype.ngOnChanges = function (changes) {
        if (changes.timeZoneCode !== undefined && changes.timeZoneCode.previousValue !== null && changes.timeZoneCode.previousValue !== changes.timeZoneCode.currentValue) {
            this.configureTimeDisplay();
        }
    };
    TimeSlotDisplayComponent.prototype.ngAfterViewChecked = function () {
        if (this.reason.reasonType === 'CLASS') {
            this.responsiveService.checkTimeSlotWidthForOverflow(this.time.classScheduleId, 'CLASS');
        }
        this.cdRef.detectChanges();
    };
    TimeSlotDisplayComponent.ctorParameters = function () { return [
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
        { type: _time_service__WEBPACK_IMPORTED_MODULE_4__["TimeService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_3__["ResponsiveService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_6__["SchedulerPreferenceService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], TimeSlotDisplayComponent.prototype, "time", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], TimeSlotDisplayComponent.prototype, "startTimeProperty", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], TimeSlotDisplayComponent.prototype, "endTimeProperty", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _models_Reason_model__WEBPACK_IMPORTED_MODULE_5__["Reason"])
    ], TimeSlotDisplayComponent.prototype, "reason", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], TimeSlotDisplayComponent.prototype, "selectedDate", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], TimeSlotDisplayComponent.prototype, "timeZoneCode", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], TimeSlotDisplayComponent.prototype, "seatsLabelSelected", void 0);
    TimeSlotDisplayComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'time-slot-display',
            template: __webpack_require__(/*! raw-loader!./time-slot-display.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/time/time-slot-display/time-slot-display.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"], _time_service__WEBPACK_IMPORTED_MODULE_4__["TimeService"], _responsive_service__WEBPACK_IMPORTED_MODULE_3__["ResponsiveService"],
            _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_6__["SchedulerPreferenceService"]])
    ], TimeSlotDisplayComponent);
    return TimeSlotDisplayComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/time/time-slot-display/time-slot-display.module.ts":
/*!******************************************************************************!*\
  !*** ./src/app/scheduler/time/time-slot-display/time-slot-display.module.ts ***!
  \******************************************************************************/
/*! exports provided: TimeSlotDisplayModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeSlotDisplayModule", function() { return TimeSlotDisplayModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _time_slot_display_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./time-slot-display.component */ "./src/app/scheduler/time/time-slot-display/time-slot-display.component.ts");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../material.module */ "./src/app/material.module.ts");
/* harmony import */ var _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../ui-elements/ui-elements.module */ "./src/app/ui-elements/ui-elements.module.ts");






var TimeSlotDisplayModule = /** @class */ (function () {
    function TimeSlotDisplayModule() {
    }
    TimeSlotDisplayModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [_time_slot_display_component__WEBPACK_IMPORTED_MODULE_3__["TimeSlotDisplayComponent"]],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
                _material_module__WEBPACK_IMPORTED_MODULE_4__["MaterialModule"],
                _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_5__["UIElementsModule"]
            ],
            exports: [_time_slot_display_component__WEBPACK_IMPORTED_MODULE_3__["TimeSlotDisplayComponent"]]
        })
    ], TimeSlotDisplayModule);
    return TimeSlotDisplayModule;
}());



/***/ }),

/***/ "./src/app/scheduler/time/time.component.css":
/*!***************************************************!*\
  !*** ./src/app/scheduler/time/time.component.css ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#changeRepeatingApptFilters {\n    margin-left: 15px;\n}\ndiv.calendar-label {\n    font-weight: 700;\n    padding-bottom: 15px;\n}\nlabel#repeatingApptFilterLabel {\n    font-weight: 500;\n}\n.showSetCalendarToggle {\n    list-style: none;\n}\n:host /deep/ div.selectedSetDescription #calendarBox {\n    margin-bottom: 1rem;\n}\ndiv.time-list {\n    margin-left: 0px;\n}\n.mt-15 {\n    margin-top: 15px;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2NoZWR1bGVyL3RpbWUvdGltZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxnQkFBZ0I7SUFDaEIsb0JBQW9CO0FBQ3hCO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL3NjaGVkdWxlci90aW1lL3RpbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNjaGFuZ2VSZXBlYXRpbmdBcHB0RmlsdGVycyB7XG4gICAgbWFyZ2luLWxlZnQ6IDE1cHg7XG59XG5kaXYuY2FsZW5kYXItbGFiZWwge1xuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgcGFkZGluZy1ib3R0b206IDE1cHg7XG59XG5sYWJlbCNyZXBlYXRpbmdBcHB0RmlsdGVyTGFiZWwge1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG4uc2hvd1NldENhbGVuZGFyVG9nZ2xlIHtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xufVxuOmhvc3QgL2RlZXAvIGRpdi5zZWxlY3RlZFNldERlc2NyaXB0aW9uICNjYWxlbmRhckJveCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbn1cbmRpdi50aW1lLWxpc3Qge1xuICAgIG1hcmdpbi1sZWZ0OiAwcHg7XG59XG4ubXQtMTUge1xuICAgIG1hcmdpbi10b3A6IDE1cHg7XG59XG4iXX0= */"

/***/ }),

/***/ "./src/app/scheduler/time/time.component.ts":
/*!**************************************************!*\
  !*** ./src/app/scheduler/time/time.component.ts ***!
  \**************************************************/
/*! exports provided: TimeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeComponent", function() { return TimeComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _time_objects_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./time-objects.model */ "./src/app/scheduler/time/time-objects.model.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _time_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/checkbox */ "./node_modules/@angular/material/esm5/checkbox.es5.js");
/* harmony import */ var _time_cart_time_cart_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./time-cart/time-cart.component */ "./src/app/scheduler/time/time-cart/time-cart.component.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _modals_repeating_appt_filter_repeating_appt_filter_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../modals/repeating-appt-filter/repeating-appt-filter.component */ "./src/app/modals/repeating-appt-filter/repeating-appt-filter.component.ts");
/* harmony import */ var _booking_components_availability_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../booking-components/availability.service */ "./src/app/booking-components/availability.service.ts");
/* harmony import */ var _models_Appointment_model__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../models/Appointment.model */ "./src/models/Appointment.model.ts");
/* harmony import */ var _models_Location_model__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../models/Location.model */ "./src/models/Location.model.ts");
/* harmony import */ var _models_DateAvailability_model__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../models/DateAvailability.model */ "./src/models/DateAvailability.model.ts");
/* harmony import */ var _models_Staff_model__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../models/Staff.model */ "./src/models/Staff.model.ts");
/* harmony import */ var _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../models/SchedulerPanel.model */ "./src/models/SchedulerPanel.model.ts");
/* harmony import */ var _scheduler_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../scheduler.service */ "./src/app/scheduler/scheduler.service.ts");
/* harmony import */ var _models_SelectedDateTimeObj_model__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../models/SelectedDateTimeObj.model */ "./src/models/SelectedDateTimeObj.model.ts");
/* harmony import */ var _common_components_timezone_timezone_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../common-components/timezone/timezone.service */ "./src/app/scheduler/common-components/timezone/timezone.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! moment-timezone/moment-timezone */ "./node_modules/moment-timezone/moment-timezone.js");
/* harmony import */ var moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_23__);
























var TimeComponent = /** @class */ (function () {
    function TimeComponent(businessService, timeService, tagsService, schedulerService, dialog, cdRef, responsiveService, availabilityService, timezoneService, datePipe) {
        this.businessService = businessService;
        this.timeService = timeService;
        this.tagsService = tagsService;
        this.schedulerService = schedulerService;
        this.dialog = dialog;
        this.cdRef = cdRef;
        this.responsiveService = responsiveService;
        this.availabilityService = availabilityService;
        this.timezoneService = timezoneService;
        this.datePipe = datePipe;
        this.onMovePanels = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.showBackButton = true;
        this.currentDate = new Date();
        this.availabilityLoaded = false;
        this.dayAvailabilityLoaded = false;
        this.dayHasAvailability = false;
        this.monthAvailabilityLoaded = false;
        this.monthHasAvailability = false;
        this.courseHasAvailability = false;
        this.noAppointmentsAvailable = false;
        this.waitListNotifyFirstAvail = false;
        this.showClassCalendar = true;
        this.reasonDuration = 0;
        this.errorLoading = false;
        this.timezones = [];
        this.timeZoneNameForDisplay = null;
        this.timeManuallySelected = false;
        this.timeFormControlNameBase = 'selectedDateTime';
        this.waitListText = null;
        this.repeatingApptSelectedStartDate = this.timeService.repeatingApptSelectedStartDate;
        this.repeatingApptSelectedDays = this.timeService.repeatingApptSelectedDays;
        this.repeatingApptSets = [];
        this.showRepeatingServiceBooking = false;
        this.showMobileSetCalendar = false;
    }
    TimeComponent.prototype.ngAfterViewChecked = function () {
        if (this.selectedReason.reasonType === 'COURSE' && this.courseSets !== undefined) {
            for (var i = 0, x = this.courseSets.length; i < x; i++) {
                this.responsiveService.checkTimeSlotWidthForOverflow(this.courseSets[i].recurringClassSchedule.recurringScheduleId, 'COURSE');
            }
        }
        else if (this.showRepeatingServiceBooking && this.repeatingApptSets !== undefined) {
            for (var i = 0, x = this.repeatingApptSets.length; i < x; i++) {
                this.responsiveService.checkTimeSlotWidthForOverflow(this.repeatingApptSets[i].setId, 'SERVICE_REPEATING');
            }
        }
    };
    TimeComponent.prototype.setWaitListFirstAvailable = function () {
        this.waitListNotifyFirstAvail = !this.waitListNotifyFirstAvail;
        var firstAvailTime = this.availabilityService.createFirstAvailableTimeSlot(this.selectedReason, this.selectedStaff, this.selectedLocation);
        var event = new _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_9__["MatCheckboxChange"]();
        if (this.waitListNotifyFirstAvail) {
            event.checked = true;
            this.setDayTime(firstAvailTime, 'onSelection', event);
        }
        else {
            event.checked = false;
            firstAvailTime.selected = false;
            this.setDayTime(firstAvailTime, 'onSelection', event);
        }
    };
    TimeComponent.prototype.showSelectedTimes = function () {
        var _this = this;
        var timeList = [];
        for (var prop in this.timeForm.value) {
            timeList.push(this.timeForm.value[prop]);
        }
        var dialogRef = this.dialog.open(_time_cart_time_cart_component__WEBPACK_IMPORTED_MODULE_10__["TimeCartComponent"], { maxWidth: this.responsiveService.getMaxWidthForModals(), data: { timeList: timeList, preference: this.preference, reason: this.selectedReason, selectedTimesCount: this.selectedTimesCount } });
        dialogRef.afterClosed().subscribe(function (timeSlotRemovalList) {
            if (timeSlotRemovalList !== undefined && timeSlotRemovalList !== null && timeSlotRemovalList.length !== 0) {
                for (var i = 0, x = timeSlotRemovalList.length; i < x; i++) {
                    var timeLockToRemove = _this.getTimeLockFromSelectedDateObj(timeSlotRemovalList[i]);
                    _this.removeSelectedTimesFromTimeForm(timeSlotRemovalList[i], true, null, timeLockToRemove);
                    if (timeSlotRemovalList[i].isWaitListFirstAvail) {
                        _this.waitListNotifyFirstAvail = false;
                    }
                }
                if (_this.selectedReason.reasonType === 'CLASS') {
                    _this.setSelectedTimes(_this.classSessions);
                }
                if (_this.selectedReason.reasonType === 'SERVICE') {
                    _this.setSelectedTimes(_this.dateAvailability.timeSlots);
                }
            }
        });
    };
    TimeComponent.prototype.addRemoveTimeLocks = function (timeLockToAdd, timeLockToRemove) {
        if (timeLockToAdd !== undefined && timeLockToAdd !== null && timeLockToAdd.staffStartDate !== null) {
            this.availabilityService.addTimeLock(timeLockToAdd).subscribe(function (added) {
                // time lock added
                var timeLockAdded = added;
            });
        }
        if (timeLockToRemove !== undefined && timeLockToRemove !== null && timeLockToRemove.staffStartDate !== null) {
            this.availabilityService.removeTimeLock(timeLockToRemove).subscribe(function (removed) {
                // time lock removed
                var timeLockRemoved = removed;
            });
        }
    };
    TimeComponent.prototype.setBtnLabel = function (timeLockToAdd, timeLockToRemove) {
        this.selectedTimesCount = 0;
        for (var prop in this.timeForm.value) {
            if (this.timeForm.value[prop].clientStartTime !== undefined && this.timeForm.value[prop].clientStartTime !== null) {
                this.selectedTimesCount++;
            }
        }
        this.timePnlSelectedTimesBtnLabel = this.preference.labelMap.timePnlSelectedTimesBtnLabel;
        this.timePnlSelectedTimesBtnLabel = this.timePnlSelectedTimesBtnLabel.replace(new RegExp('%SELECTED_TIMES_COUNT%', 'g'), String(this.selectedTimesCount));
        this.addRemoveTimeLocks(timeLockToAdd, timeLockToRemove);
    };
    TimeComponent.prototype.setSelectedTimes = function (times) {
        for (var i = 0, x = times.length; i < x; i++) {
            times[i].selected = false;
            for (var prop in this.timeForm.controls) {
                // @ts-ignore
                if (this.selectedReason.reasonType === 'CLASS' && this.timeForm.controls[prop].controls['classScheduleId'].value === times[i].classScheduleId &&
                    this.timeForm.controls[prop].value['waitListMode'] === times[i].waitListMode) {
                    times[i].selected = true;
                    break;
                }
                if (this.selectedReason.reasonType === 'SERVICE' && this.timeForm.controls[prop].value['timeSlotId'] === times[i].timeSlotId &&
                    this.timeForm.controls[prop].value['clientTimeSlotId'] === times[i].clientTimeSlotId &&
                    this.timeForm.controls[prop].value['htmlId'] === times[i].htmlId &&
                    this.timeForm.controls[prop].value['waitListMode'] === times[i].waitListMode) {
                    times[i].selected = true;
                    break;
                }
            }
        }
    };
    TimeComponent.prototype.removeSelectedTimesFromTimeForm = function (selectedTime, updateBtnLabel, timeLockToAdd, timeLockToRemove) {
        this.timeService.removeSelectedTimesFromTimeForm(this.timeForm, selectedTime, this.selectedReason.reasonType);
        // for(let prop in this.timeForm.controls) {
        //     // @ts-ignore
        //     if(this.selectedReason.reasonType === ReasonTypes.CLASS && this.timeForm.controls[prop].controls['classScheduleId'].value === selectedTime.classScheduleId){
        //         this.timeForm.removeControl(prop);
        //         break;
        //     }
        //
        //     // @ts-ignore
        //     if(this.selectedReason.reasonType === ReasonTypes.SERVICE && this.timeForm.controls[prop].controls['timeSlotId'].value === selectedTime.timeSlotId && this.timeForm.controls[prop].controls['clientTimeSlotId'].value === selectedTime.clientTimeSlotId && this.timeForm.controls[prop].controls['htmlId'].value === selectedTime.htmlId){
        //         this.timeForm.removeControl(prop);
        //         break;
        //     }
        //
        //     // @ts-ignore
        //     if(this.selectedReason.reasonType === ReasonTypes.COURSE && this.timeForm.controls[prop].controls['recurringScheduleId'].value === selectedTime.recurringScheduleId){
        //         this.timeForm.removeControl(prop);
        //         break;
        //     }
        //
        // }
        // let count = 0;
        // for(let prop in this.timeForm.controls){
        //     let formGroup = this.timeForm.controls[prop];
        //     this.timeForm.removeControl(prop);
        //     if(count == 0){
        //         this.timeForm.addControl('selectedDateTime', formGroup);
        //     } else {
        //         let formControlName = 'selectedDateTime' + count;
        //         this.timeForm.addControl(formControlName, formGroup);
        //
        //     }
        //     count++;
        // }
        //if select, deselect, then reselect one time slot when calendar loads (TT-6015) then the cart will not update when it gets reselected because the timeform's initial selectedDateTime is removed
        //thus, check to see if timeform value is empty and if so add the default selectedDateTime to it
        if (this.timeForm.controls['selectedDateTime'] === undefined) {
            this.timeForm.addControl('selectedDateTime', this.schedulerService.getTimeSlotFormGroup());
        }
        if (updateBtnLabel) {
            this.setBtnLabel(timeLockToAdd, timeLockToRemove);
        }
    };
    TimeComponent.prototype.checkAddRemoveMultipleTimes = function (event, selectedDateTimeObj, timeLockToAdd, timeLockToRemove) {
        var _this = this;
        // @ts-ignore
        if (event.checked) {
            // @ts-ignore
            if (this.timeForm.controls['selectedDateTime'].controls.clientStartTime.value === null) {
                this.timeForm.controls['selectedDateTime'].setValue(selectedDateTimeObj);
            }
            else {
                var count = 0;
                for (var prop in this.timeForm.controls) {
                    count++;
                }
                var formControlName = 'selectedDateTime' + count;
                this.timeForm.addControl(formControlName, this.schedulerService.getTimeSlotFormGroup());
                this.timeForm.controls[formControlName].setValue(selectedDateTimeObj);
                //if the selectedDateTimeObj getting added is waitlist first available,
                // then need to look through list of times that have already been selected and remove any other waitlist values
                if (selectedDateTimeObj.isWaitListFirstAvail) {
                    var timeArray = [];
                    for (var prop in this.timeForm.controls) {
                        timeArray.push(this.timeForm.controls[prop].value);
                    }
                    timeArray.forEach(function (control) {
                        // @ts-ignore
                        // @ts-ignore
                        if (control['waitListMode'] &&
                            // @ts-ignore
                            !control['isWaitListFirstAvail']) {
                            for (var prop in _this.timeForm.value) {
                                if (_this.timeForm.value[prop] !== undefined && control['timeSlotId'] === _this.timeForm.value[prop].timeSlotId &&
                                    control['clientTimeSlotId'] === _this.timeForm.value[prop].clientTimeSlotId &&
                                    control['htmlId'] === _this.timeForm.value[prop].htmlId) {
                                    _this.removeSelectedTimesFromTimeForm(_this.timeForm.value[prop], false, timeLockToAdd, timeLockToRemove);
                                }
                            }
                            //update times on UI so checkboxes are not checked
                            if (_this.dateAvailability && _this.dateAvailability.timeSlots && _this.dateAvailability.timeSlots.length > 0) {
                                for (var i = 0, x = _this.dateAvailability.timeSlots.length; i < x; i++) {
                                    if (_this.dateAvailability.timeSlots[i].timeSlotId === control['timeSlotId'] &&
                                        _this.dateAvailability.timeSlots[i].clientTimeSlotId === control['clientTimeSlotId'] &&
                                        _this.dateAvailability.timeSlots[i].htmlId === control['htmlId']) {
                                        _this.dateAvailability.timeSlots[i].selected = false;
                                    }
                                }
                            }
                            else if (_this.classSessions && _this.classSessions.length > 0) {
                                for (var i = 0, x = _this.classSessions.length; i < x; i++)
                                    if (_this.classSessions[i].classScheduleId === control['classScheduleId'])
                                        _this.classSessions[i].selected = false;
                            }
                            else if (_this.courseSets && _this.courseSets.length > 0) {
                                _this.selectedSet = null;
                                // for(let i = 0, x = this.courseSets.length; i < x; i++)
                                //     if(this.courseSets[i].recurringClassSchedule.recurringScheduleId === control['recurringScheduleId'])
                                //         this.selectedSet = null;
                            }
                        }
                    });
                    this.setBtnLabel(timeLockToAdd, timeLockToRemove);
                }
            }
            this.setBtnLabel(timeLockToAdd, timeLockToRemove);
        }
        else {
            this.removeSelectedTimesFromTimeForm(selectedDateTimeObj, true, timeLockToAdd, timeLockToRemove);
        }
    };
    TimeComponent.prototype.getTimeLockFromSelectedDateObj = function (selectedDateTimeObj) {
        var timeLockToReturn = new _time_objects_model__WEBPACK_IMPORTED_MODULE_3__["TimeLock"]();
        timeLockToReturn.auditReferralId = sessionStorage.getItem('auditReferralId');
        timeLockToReturn.staffStartDate = selectedDateTimeObj.clientStartDate;
        timeLockToReturn.staffEndDate = selectedDateTimeObj.clientEndDate;
        timeLockToReturn.staffStartTime = selectedDateTimeObj.startTime;
        timeLockToReturn.staffEndTime = selectedDateTimeObj.endTime;
        if (selectedDateTimeObj.classScheduleId !== undefined && selectedDateTimeObj.classScheduleId !== null)
            timeLockToReturn.classScheduleId = selectedDateTimeObj.classScheduleId;
        if (selectedDateTimeObj.calTimeSlot != null)
            timeLockToReturn.units = selectedDateTimeObj.calTimeSlot.units;
        return timeLockToReturn;
    };
    TimeComponent.prototype.setDayTime = function (time, path, event) {
        if (path === 'onSelection')
            this.timeManuallySelected = true;
        var selectedDateTimeObj = new _models_SelectedDateTimeObj_model__WEBPACK_IMPORTED_MODULE_20__["SelectedDateTimeObj"]().createFromSingleTimeSlot(time, this.selectedReason, this.selectedStaff, this.selectedLocation, this.preference.labelMap.labelNoPreference);
        var timeLockToAdd = this.getTimeLockFromSelectedDateObj(selectedDateTimeObj);
        if (this.directionComingFrom !== 'reschedule' && (this.selectedReason.bookMultipleAppts || this.showRepeatingServiceBooking || (this.selectedReason.allowWaitList && this.availabilityService.waitListMode))) {
            this.checkAddRemoveMultipleTimes(event, selectedDateTimeObj, timeLockToAdd);
        }
        else {
            //If the client is currently booking a service that is waitlistable and they select waitlist times before selecting any booking dates and times, then we need to move the waitlist times to the selectedDateTime2+ controls and store the selectedTime in the selectedDateTime control
            if (this.timeForm.controls['selectedDateTime'].value.waitListMode && path === 'onSelection') {
                var timeFormControlsHolder = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"]({});
                for (var prop in this.timeForm.controls) {
                    var controlToAdd = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](this.timeForm.controls[prop].value, this.timeForm.controls[prop].validator, this.timeForm.controls[prop].asyncValidator);
                    timeFormControlsHolder.addControl(prop, controlToAdd);
                }
                for (var prop in timeFormControlsHolder.controls) {
                    var propNumString = prop.substring(this.timeFormControlNameBase.length);
                    var propNum = 0;
                    if (propNumString === '') {
                        propNum = 1;
                    }
                    else {
                        propNum = Number(propNumString) + 1;
                    }
                    var timeFormPropName = this.timeFormControlNameBase + propNum;
                    if (this.timeForm.controls[timeFormPropName] === undefined) {
                        this.timeForm.addControl(timeFormPropName, timeFormControlsHolder.controls[prop]);
                    }
                    else {
                        this.timeForm.controls[timeFormPropName].setValue(timeFormControlsHolder.controls[prop].value);
                    }
                }
                if (path === 'onSelection') {
                    this.selectedTime = time;
                    var timeLockToRemove = this.getTimeLockFromSelectedDateObj(this.timeForm.controls['selectedDateTime'].value);
                    this.timeForm.controls['selectedDateTime'].setValue(selectedDateTimeObj);
                    this.setBtnLabel(timeLockToAdd, timeLockToRemove);
                }
            }
            else if ((!this.selectedReason.allowWaitList || this.directionComingFrom === 'reschedule') || path === 'onSelection' || path === 'onGetDateAvailabilitySelectedTime') {
                this.selectedTime = time;
                var timeLockToRemove = this.getTimeLockFromSelectedDateObj(this.timeForm.controls['selectedDateTime'].value);
                this.timeForm.controls['selectedDateTime'].setValue(selectedDateTimeObj);
                if (path === 'onSelection' || path === 'onGetDateAvailabilitySelectedTime')
                    this.setBtnLabel(timeLockToAdd, timeLockToRemove);
                else
                    this.addRemoveTimeLocks(timeLockToAdd, timeLockToRemove);
            }
            else if (this.selectedReason.allowWaitList && path !== 'onSelection') {
                this.setBtnLabel(timeLockToAdd);
            }
        }
    };
    TimeComponent.prototype.setClassSession = function (session, path, event) {
        if (path === 'onSelection')
            this.timeManuallySelected = true;
        var startDate = this.timeService.getStringDateFromTime(new Date(session.startDateTime));
        var endDate = this.timeService.getStringDateFromTime(new Date(session.endDateTime));
        var sessionWaitlistMode = false;
        if (session.currentCapacity >= session.maxCapacity)
            sessionWaitlistMode = true;
        var selectedDateTimeObj = new _models_SelectedDateTimeObj_model__WEBPACK_IMPORTED_MODULE_20__["SelectedDateTimeObj"]();
        selectedDateTimeObj.createFromClassSession(session, startDate, endDate, this.selectedReason, this.selectedStaff, this.selectedLocation, sessionWaitlistMode);
        var timeLockToAdd = this.getTimeLockFromSelectedDateObj(selectedDateTimeObj);
        if (this.selectedReason.bookMultipleAppts && this.selectedReason.reasonType !== 'COURSE' && this.directionComingFrom !== 'reschedule') {
            this.checkAddRemoveMultipleTimes(event, selectedDateTimeObj, timeLockToAdd);
        }
        else {
            this.selectedSession = session;
            var timeLockToRemove = this.getTimeLockFromSelectedDateObj(this.timeForm.controls['selectedDateTime'].value);
            this.timeForm.controls['selectedDateTime'].setValue(selectedDateTimeObj);
            this.setBtnLabel(timeLockToAdd, timeLockToRemove);
        }
    };
    TimeComponent.prototype.setSelectedSet = function (courseSet, path) {
        var timeZoneForMoment = this.timeService.checkToAddMomentTimezone(-1, (this.CSFilterObj.clientTimeZone ? this.CSFilterObj.clientTimeZone : this.timeService.businessTimezone));
        this.selectedSet = courseSet;
        this.selectedSet.monthAvailability = [];
        var months = [];
        for (var i = 0, x = this.selectedSet.classSessions.length; i < x; i++) {
            var startDate = moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_23__["utc"](this.selectedSet.classSessions[i].startDateTimeUTC).tz(timeZoneForMoment).format('M/DD/YY');
            months = this.checkForMonthInAvailabilityArray(months, startDate, this.selectedSet.monthAvailability);
        }
        this.selectedSet = this.setMinMaxDatesOnSelectedSet(this.selectedSet);
        this.setClassSession(courseSet.classSessions[0], path);
    };
    TimeComponent.prototype.addRepeatingApptSetDataToMonthAvailability = function (monthAvailability, startTimeDate) {
        var timezone = this.timeService.getApptTimezone(this.appt.location, this.appt.locationGroup, this.appt.staff);
        var singleDateAvailbility = new _time_objects_model__WEBPACK_IMPORTED_MODULE_3__["SingleDateAvailability"](Number(this.timeService.getPipeDayFromDate(startTimeDate, timezone)), Number(this.timeService.getPipeMonthFromDate(startTimeDate, timezone)), Number(this.timeService.getPipeYearFromDate(startTimeDate, timezone)));
        monthAvailability.openDays.push(singleDateAvailbility);
    };
    TimeComponent.prototype.findMatchingMonth = function (monthNum, startTimeDate, monthAvailability) {
        for (var j = 0, y = monthAvailability.length; j < y; j++) {
            if (monthAvailability[j].month === monthNum) {
                this.addRepeatingApptSetDataToMonthAvailability(monthAvailability[j], startTimeDate);
            }
        }
    };
    TimeComponent.prototype.checkForMonthInAvailabilityArray = function (months, startTimeDate, monthAvailabilityList) {
        var monthNum = Number(this.timeService.getPipeMonthFromDate(startTimeDate));
        if (months.indexOf(monthNum) === -1) {
            months.push(monthNum);
            var monthAvailability = new _time_objects_model__WEBPACK_IMPORTED_MODULE_3__["MonthAvailability"]();
            monthAvailability.month = Number(this.timeService.getPipeMonthFromDate(startTimeDate));
            monthAvailability.year = Number(this.timeService.getPipeYearFromDate(startTimeDate));
            monthAvailability.openDays = [];
            monthAvailabilityList.push(monthAvailability);
            this.findMatchingMonth(monthNum, startTimeDate, monthAvailabilityList);
        }
        else {
            this.findMatchingMonth(monthNum, startTimeDate, monthAvailabilityList);
        }
        return months;
    };
    TimeComponent.prototype.setSelectedMonthOnSet = function (monthAvailabilityList, monthNumberFull, monthYear) {
        for (var i = 0, x = monthAvailabilityList.length; i < x; i++) {
            if (monthAvailabilityList[i].month === monthNumberFull && monthAvailabilityList[i].year === monthYear) {
                this.selectedDate = monthAvailabilityList[i].openDays[0];
                return monthAvailabilityList[i];
            }
        }
    };
    TimeComponent.prototype.moveMonthsSelectedRepeatingSet = function (monthCalendarChange) {
        event.stopPropagation();
        if (this.selectedReason.reasonType === 'COURSE') {
            this.selectedSet.selectedMonthAvailability = this.setSelectedMonthOnSet(this.selectedSet.monthAvailability, monthCalendarChange.monthDataObj.monthNumberFull, monthCalendarChange.monthDataObj.currentYear);
        }
        else {
            this.selectedRepeatingApptSet.selectedMonthAvailability = this.setSelectedMonthOnSet(this.selectedRepeatingApptSet.monthAvailability, monthCalendarChange.monthDataObj.monthNumberFull, monthCalendarChange.monthDataObj.currentYear);
        }
    };
    TimeComponent.prototype.setMinMaxDatesOnSelectedSet = function (selectedSet) {
        selectedSet.selectedMonthAvailability = selectedSet.monthAvailability[0];
        selectedSet.minBookingDate = selectedSet.monthAvailability[0].openDays[0].date;
        var lastMonthAvailabilityIndex = selectedSet.monthAvailability.length - 1;
        var lastOpenDaysIndex = selectedSet.monthAvailability[lastMonthAvailabilityIndex].openDays.length - 1;
        selectedSet.maxBookingDate = selectedSet.monthAvailability[lastMonthAvailabilityIndex].openDays[lastOpenDaysIndex].date;
        this.selectedDate = selectedSet.selectedMonthAvailability.openDays[0];
        return selectedSet;
    };
    TimeComponent.prototype.setSelectedRepeatingSet = function (repeatingAppointmentSet, path) {
        this.clearTimeForm();
        this.selectedRepeatingApptSet = repeatingAppointmentSet;
        this.selectedRepeatingApptSet.monthAvailability = [];
        var months = [];
        for (var i = 0, x = this.selectedRepeatingApptSet.dateTimeList.length; i < x; i++) {
            months = this.checkForMonthInAvailabilityArray(months, this.selectedRepeatingApptSet.dateTimeList[i].startTimeDateForTimeslotDisplay, this.selectedRepeatingApptSet.monthAvailability);
        }
        this.selectedRepeatingApptSet = this.setMinMaxDatesOnSelectedSet(this.selectedRepeatingApptSet);
        var event = new _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_9__["MatCheckboxChange"]();
        event.checked = true;
        for (var i = 0, x = this.selectedRepeatingApptSet.dateTimeList.length; i < x; i++) {
            var singleTimeSlot = this.selectedRepeatingApptSet.dateTimeList[i].convertRepeatingDateSetToSingleTimeSlot(repeatingAppointmentSet, this.selectedReason);
            this.setDayTime(singleTimeSlot, path, event);
        }
    };
    TimeComponent.prototype.organizeClassSessions = function (classSessions) {
        this.classSessions = classSessions;
        for (var i = 0, x = this.classSessions.length; i < x; i++) {
            if (this.classSessions[i].currentCapacity === this.classSessions[i].maxCapacity)
                classSessions[i].waitListMode = true;
            else
                classSessions[i].waitListMode = false;
            classSessions[i].stringDate = this.timeService.getStringDateFromTime(classSessions[i].date);
        }
        if (this.classSessions !== null && this.classSessions.length !== 0) {
            if (this.selectedReason.bookMultipleAppts) {
                this.setSelectedTimes(this.classSessions);
            }
            else if (this.preference.booleanMap.timePnlAutoSelectTime) {
                this.setClassSession(this.classSessions[0], 'onGetDateAvailability');
            }
            this.availabilityLoaded = true;
            this.dayAvailabilityLoaded = true;
            this.dayHasAvailability = true;
        }
        else {
            this.availabilityLoaded = true;
            this.dayAvailabilityLoaded = true;
            this.dayHasAvailability = false;
        }
    };
    TimeComponent.prototype.getDateAvailability = function (selectedDate, path) {
        var _this = this;
        this.dayAvailabilityLoaded = false;
        this.selectedDate = selectedDate;
        if (this.selectedReason.reasonType === 'SERVICE') {
            this.availabilityService.getDateAvailabilityServices(this.CSFilterObj, selectedDate, this.reasonDuration)
                .subscribe(function (dateAvailability) {
                _this.dateAvailability = dateAvailability;
                //For TT-6286, when they are allowing timezone to change then ned to reference the clientStartTime
                //otherwise, just need to reference startTime
                if (_this.dateAvailability.timeSlots !== null && _this.dateAvailability.timeSlots.length !== 0) {
                    if (_this.directionComingFrom !== 'reschedule' && (_this.selectedReason.bookMultipleAppts || (_this.selectedReason.allowWaitList && _this.availabilityService.waitListMode))) {
                        _this.setSelectedTimes(_this.dateAvailability.timeSlots);
                    }
                    else {
                        var timeFound = false;
                        if (_this.selectedTime !== undefined && _this.selectedTime !== null && (path === 'waitListToggle' || path === 'onloadSelectedTime')) {
                            for (var i = 0, x = _this.dateAvailability.timeSlots.length; i < x; i++) {
                                if (_this.dateAvailability.timeSlots[i].timeSlotId === _this.selectedTime.timeSlotId &&
                                    _this.dateAvailability.timeSlots[i].clientTimeSlotId === _this.selectedTime.clientTimeSlotId &&
                                    _this.dateAvailability.timeSlots[i].htmlId === _this.selectedTime.htmlId) {
                                    _this.setDayTime(_this.dateAvailability.timeSlots[i], 'onGetDateAvailabilitySelectedTime');
                                    timeFound = true;
                                    break;
                                }
                            }
                        }
                        if (!timeFound && _this.preference.booleanMap.timePnlAutoSelectTime) {
                            _this.setDayTime(_this.dateAvailability.timeSlots[0], 'onGetDateAvailabilityDefaultTime');
                        }
                    }
                    _this.availabilityLoaded = true;
                    _this.dayAvailabilityLoaded = true;
                    _this.dayHasAvailability = true;
                }
                else {
                    _this.availabilityLoaded = true;
                    _this.dayAvailabilityLoaded = true;
                    _this.dayHasAvailability = false;
                }
            }, function (error) {
                _this.availabilityLoaded = true;
                _this.dayAvailabilityLoaded = false;
                _this.errorLoading = true;
            });
        }
        else if (this.selectedReason.reasonType === 'CLASS') {
            this.availabilityService.getDateAvailabilityClasses(this.CSFilterObj, selectedDate.year, selectedDate.month, selectedDate.day)
                .subscribe(function (classSessions) {
                _this.organizeClassSessions(classSessions);
            }, function (error) {
                _this.availabilityLoaded = false;
                _this.dayAvailabilityLoaded = false;
                _this.errorLoading = true;
            });
        }
    };
    TimeComponent.prototype.onSetDay = function (selectDayChange) {
        this.getDateAvailability(selectDayChange.singleDateAvailability, selectDayChange.path);
    };
    TimeComponent.prototype.organizeMonthDates = function (monthAvailability, path) {
        // this.monthDays = this.timeService.getDaysOfMonth(this.activeYear, this.activeMonth, monthAvailability); // moved to calendar component
        this.monthAvailabilityLoaded = true;
        if (monthAvailability.openDays && monthAvailability.openDays.length > 0) {
            if (this.currentMonthData.monthNumberFull !== monthAvailability.month) { // LHB 10/24/2021 TT-8225
                var monthsData = this.timeService.getMonthsData(monthAvailability.year);
                for (var i = 0, x = monthsData.length; i < x; i++)
                    if (monthsData[i].monthNumberFull === monthAvailability.month) {
                        this.currentMonthData = monthsData[i];
                        break;
                    }
            }
            this.monthHasAvailability = true;
            var dateFound = false;
            if (this.selectedDate !== undefined && path === 'timezoneChange') {
                for (var i = 0, x = monthAvailability.openDays.length; i < x; i++) {
                    if (monthAvailability.openDays[i].date === this.selectedDate.date) {
                        this.getDateAvailability(monthAvailability.openDays[i], path);
                        dateFound = true;
                    }
                }
            }
            if (this.selectedTime !== undefined && this.selectedTime !== null && (path === 'waitListToggle' || path === 'onloadSelectedTime')) {
                var selectedDay = null;
                if (this.selectedTime.startTimeDate !== undefined && this.selectedTime.startTimeDate !== null) {
                    selectedDay = Number(this.timeService.getPipeDayFromDate(this.selectedTime.startTimeDate));
                }
                // @ts-ignore
                if (this.selectedTime.clientStartTimeDate !== undefined) {
                    // @ts-ignore
                    selectedDay = Number(this.timeService.getPipeDayFromDate(this.selectedTime.clientStartTimeDate));
                }
                for (var i = 0, x = this.monthAvailability.openDays.length; i < x; i++) {
                    if (monthAvailability.openDays[i].day === selectedDay) {
                        this.getDateAvailability(monthAvailability.openDays[i], path);
                        dateFound = true;
                    }
                }
            }
            if (!dateFound) {
                this.getDateAvailability(monthAvailability.openDays[0], path);
            }
        }
        else { //No open days in selected month
            this.monthHasAvailability = false;
            this.dayAvailabilityLoaded = true;
            this.availabilityLoaded = true;
            if (this.selectedReason.reasonType === 'SERVICE') {
                if (this.dateAvailability === undefined) {
                    this.dateAvailability = new _models_DateAvailability_model__WEBPACK_IMPORTED_MODULE_16__["DateAvailability"](false, this.timeService.getStringDateFromTime(new Date()), []);
                    if (path === 'onload' && !this.selectedReason.allowWaitList) {
                        this.noAppointmentsAvailable = true;
                        this.cdRef.detectChanges();
                        this.movePanels('back');
                    }
                }
                else {
                    this.dateAvailability.timeSlots = [];
                }
            }
            if (this.selectedReason.reasonType === 'CLASS') {
                this.classSessions = [];
            }
        }
    };
    TimeComponent.prototype.timeZoneChanged = function (timezoneChangeEvent) {
        this.CSFilterObj.clientTimeZone = timezoneChangeEvent.timezoneCode;
        this.CSFilterObj.clientTimeZoneId = timezoneChangeEvent.timezoneId;
        this.getMonthDates(timezoneChangeEvent.path, this.currentMonthData.currentYear, this.currentMonthData.monthNumberFull);
    };
    TimeComponent.prototype.getMonthDates = function (path, activeYear, activeMonth) {
        var _this = this;
        var findBestMonth = false;
        if (path === 'onload' || path === 'waitListToggle') {
            findBestMonth = true;
        }
        if ((path === 'waitListToggle' || path === 'onloadSelectedTime' || path === 'timezoneChange') && this.selectedTime !== undefined && this.selectedTime !== null) {
            if (this.selectedTime.startTimeDate !== undefined && this.selectedTime.startTimeDate !== null) {
                activeYear = Number(this.timeService.getPipeYearFromDate(this.selectedTime.startTimeDate));
                activeMonth = Number(this.timeService.getPipeMonthFromDate(this.selectedTime.startTimeDate));
            }
            // @ts-ignore
            if (this.selectedTime.clientStartTimeDate !== undefined) {
                // @ts-ignore
                activeYear = Number(this.timeService.getPipeYearFromDate(this.selectedTime.clientStartTimeDate));
                // @ts-ignore
                activeMonth = Number(this.timeService.getPipeMonthFromDate(this.selectedTime.clientStartTimeDate));
            }
        }
        if (this.timeService.getAllowGetMonth(activeYear, activeMonth, this.availabilityService.maxBookingDate, this.availabilityService.minBookingDate)) {
            this.monthAvailabilityLoaded = false;
            this.dayAvailabilityLoaded = false;
            if (this.selectedReason.reasonType === 'SERVICE') {
                this.availabilityService.getMonthDatesServices(this.CSFilterObj, activeYear, activeMonth, findBestMonth, this.reasonDuration)
                    .subscribe(function (monthAvailability) {
                    _this.monthAvailability = monthAvailability;
                    _this.organizeMonthDates(_this.monthAvailability, path);
                }, function (error) {
                    _this.availabilityLoaded = false;
                    _this.dayAvailabilityLoaded = false;
                    _this.monthAvailabilityLoaded = false;
                    _this.errorLoading = true;
                });
            }
            else if (this.selectedReason.reasonType === 'CLASS') {
                if (this.preference.classCalendar) {
                    this.availabilityService.getMonthDatesClasses(this.CSFilterObj, activeYear, activeMonth, findBestMonth)
                        .subscribe(function (monthAvailability) {
                        _this.monthAvailability = monthAvailability;
                        _this.organizeMonthDates(_this.monthAvailability, path);
                    }, function (error) {
                        _this.availabilityLoaded = false;
                        _this.dayAvailabilityLoaded = false;
                        _this.monthAvailabilityLoaded = false;
                        _this.errorLoading = true;
                    });
                }
                else {
                    this.availabilityService.getAvailabilityClassesNoCalendar(this.CSFilterObj)
                        .subscribe(function (classSessions) {
                        _this.monthAvailabilityLoaded = true;
                        if (classSessions.length > 0) {
                            _this.monthHasAvailability = true;
                        }
                        _this.organizeClassSessions(classSessions);
                    }, function (error) {
                        _this.availabilityLoaded = false;
                        _this.dayAvailabilityLoaded = false;
                        _this.monthAvailabilityLoaded = false;
                        _this.errorLoading = true;
                    });
                }
            }
            else if (this.selectedReason.reasonType === 'COURSE') {
                this.courseSets = [];
                var timeZoneForMoment_1 = this.timeService.checkToAddMomentTimezone(-1, (this.CSFilterObj.clientTimeZone ? this.CSFilterObj.clientTimeZone : this.timeService.businessTimezone));
                this.availabilityService.getCourseSets(this.CSFilterObj)
                    .subscribe(function (courseSets) {
                    if (courseSets.length > 0) {
                        for (var i = 0, x = courseSets.length; i < x; i++) {
                            for (var j = 0, y = courseSets[i].classSessions.length; j < y; j++) {
                                if (courseSets[i].recurringClassSchedule.startDateTimeUTC === undefined || courseSets[i].recurringClassSchedule.startDateTimeUTC === null ||
                                    courseSets[i].recurringClassSchedule.startDateTimeUTC > courseSets[i].classSessions[j].startDateTimeUTC) {
                                    courseSets[i].recurringClassSchedule.startDateTimeUTC = courseSets[i].classSessions[j].startDateTimeUTC;
                                }
                                if (courseSets[i].recurringClassSchedule.endDateTimeUTC === undefined || courseSets[i].recurringClassSchedule.endDateTimeUTC === null ||
                                    courseSets[i].recurringClassSchedule.endDateTimeUTC < courseSets[i].classSessions[j].endDateTimeUTC) {
                                    courseSets[i].recurringClassSchedule.endDateTimeUTC = courseSets[i].classSessions[j].endDateTimeUTC;
                                }
                                // LHB 02/04/2022 TT-8458 -- swapped out computation of string date to use datePipe transform method
                                // courseSets[i].classSessions[j].stringDate = this.timeService.getStringDateFromTime(courseSets[i].classSessions[j].date);
                                courseSets[i].classSessions[j].startTimeZonedDisplay = moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_23__["utc"](courseSets[i].classSessions[j].startDateTimeUTC).tz(timeZoneForMoment_1).format('M/DD/YY');
                                courseSets[i].classSessions[j].stringDate = moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_23__["utc"](courseSets[i].classSessions[j].startDateTimeUTC).tz(timeZoneForMoment_1).format('YYYY-MM-DD');
                            }
                            courseSets[i].recurringClassSchedule.startDateZonedDisplay = moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_23__["utc"](courseSets[i].recurringClassSchedule.startDateTimeUTC).tz(timeZoneForMoment_1).format('M/DD/YY');
                            courseSets[i].recurringClassSchedule.endDateZonedDisplay = moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_23__["utc"](courseSets[i].recurringClassSchedule.endDateTimeUTC).tz(timeZoneForMoment_1).format('M/DD/YY');
                        }
                        _this.courseSets = courseSets;
                        _this.courseHasAvailability = true;
                        _this.noAppointmentsAvailable = false;
                        _this.setSelectedSet(_this.courseSets[0], 'onload');
                    }
                    else {
                        _this.courseSets = [];
                        _this.courseHasAvailability = false;
                        _this.timePnlNoCourseSetsAvailable = _this.tagsService.convertApptPropertiesToTags('timePnlNoCourseSetsAvailable', _this.preference, _this.appt);
                        if (!_this.selectedReason.allowWaitList) {
                            _this.noAppointmentsAvailable = true;
                        }
                    }
                    _this.availabilityLoaded = true;
                    _this.dayAvailabilityLoaded = true;
                    _this.monthAvailabilityLoaded = true;
                }, function (error) {
                    _this.availabilityLoaded = false;
                    _this.dayAvailabilityLoaded = false;
                    _this.monthAvailabilityLoaded = false;
                    _this.errorLoading = true;
                });
            }
        }
        else if (path === 'onload') {
            var nextMonthData = this.timeService.moveToNextMonth(this.currentMonthData, activeYear, undefined, activeMonth);
            this.getMonthDates(path, nextMonthData.activeYear, nextMonthData.activeMonth);
        }
    };
    TimeComponent.prototype.onGetMonthlyAvailability = function (monthCalendarChange) {
        this.currentMonthData = monthCalendarChange.monthDataObj;
        this.getMonthDates(monthCalendarChange.path, monthCalendarChange.monthDataObj.currentYear, monthCalendarChange.monthDataObj.monthNumberFull);
    };
    TimeComponent.prototype.toggleWaitListMode = function () {
        this.availabilityService.waitListMode = !this.availabilityService.waitListMode;
        if (!this.selectedReason.bookMultipleAppts && !this.timeManuallySelected) {
            this.clearTimeForm();
        }
        this.selectedSet = null;
        this.setBtnLabel(null);
        if (this.availabilityService.waitListMode) {
            this.panel.panelTitleProperty = 'timePnlWaitlistTitle';
            this.waitListText = this.tagsService.convertApptPropertiesToTags('waitListTextExitWaitListMode', this.preference, this.appt);
            this.timePnlHeaderText = this.tagsService.convertApptPropertiesToTags('timePnlWaitlistText', this.preference, this.appt);
        }
        else {
            this.panel.panelTitleProperty = 'timeTitle';
            this.waitListText = this.tagsService.convertApptPropertiesToTags('waitListText', this.preference, this.appt);
            this.timePnlHeaderText = this.tagsService.convertApptPropertiesToTags('timeText', this.preference, this.appt);
        }
        if (this.preference.waitListFirstAvailable && this.selectedReason.reasonType === 'SERVICE') {
            for (var prop in this.timeForm.controls) {
                if (this.timeForm.controls[prop].value['timeSlotId'] === 'waitListFirstAvail') {
                    this.waitListNotifyFirstAvail = true;
                }
            }
        }
        this.loadMonthDatesForGetMonthAvailCall('waitListToggle');
    };
    TimeComponent.prototype.getRepeatingApptTimes = function (selectedDays, selectedStartDate, timezoneChangeEvent) {
        var _this = this;
        if (timezoneChangeEvent) {
            this.CSFilterObj.clientTimeZone = timezoneChangeEvent.timezoneCode;
            this.CSFilterObj.clientTimeZoneId = timezoneChangeEvent.timezoneId;
        }
        this.monthAvailabilityLoaded = false;
        this.dayAvailabilityLoaded = false;
        var selectedWeekdayNums = [];
        if (selectedDays !== undefined && selectedDays !== null) {
            for (var i = 0, x = selectedDays.length; i < x; i++) {
                if (selectedDays[i].selected)
                    selectedWeekdayNums.push(selectedDays[i].dayOfWeekInt);
            }
        }
        var selectedStartDateString = this.timeService.getStringDateFromTime(selectedStartDate);
        this.availabilityService.getRecurringAvailabilityServices(this.CSFilterObj, this.selectedReason.selectedRepeatingApptOption.numberOfAppointments, selectedStartDateString, selectedWeekdayNums)
            .subscribe(function (repeatingApptAvail) {
            _this.repeatingApptSets = [];
            if (repeatingApptAvail !== null) {
                for (var i = 0, x = repeatingApptAvail.length; i < x; i++) {
                    var repeatingApptAvailability = new _time_objects_model__WEBPACK_IMPORTED_MODULE_3__["RepeatingAppointmentAvailability"](repeatingApptAvail[i].staffId, repeatingApptAvail[i].locationId, repeatingApptAvail[i].calSlotList);
                    var repeatingApptSetsForStaff = repeatingApptAvailability.createRepeatingApptSet(_this.timeService, _this.tagsService, _this.preference.allowTZChange, _this.CSFilterObj.businessTimeZone, _this.CSFilterObj.clientTimeZone, _this.preference.showOnlyStartTime, _this.preference.timeFormat24Hrs);
                    for (var j = 0, y = repeatingApptSetsForStaff.length; j < y; j++)
                        _this.repeatingApptSets.push(repeatingApptSetsForStaff[j]);
                }
                _this.setSelectedRepeatingSet(_this.repeatingApptSets[0], 'onload');
                _this.availabilityLoaded = true;
                _this.monthAvailabilityLoaded = true;
                _this.dayAvailabilityLoaded = true;
                _this.dayHasAvailability = true;
            }
            else {
                _this.availabilityLoaded = true;
                _this.monthAvailabilityLoaded = true;
                _this.dayAvailabilityLoaded = true;
                _this.dayHasAvailability = false;
            }
        });
    };
    TimeComponent.prototype.handleRepeatingApptDialogClose = function () {
        this.repeatingApptSelectedDays = this.timeService.repeatingApptSelectedDays;
        this.repeatingApptSelectedStartDate = this.timeService.repeatingApptSelectedStartDate;
        var filterLabel = "Showing options on ";
        var daysSelectedLabel = '';
        if (this.repeatingApptSelectedDays.length === 1) {
            daysSelectedLabel = this.repeatingApptSelectedDays[0].dayOfWeekName;
        }
        else {
            for (var k = 0, z = this.repeatingApptSelectedDays.length; k < z; k++) {
                if (k === 0) {
                    daysSelectedLabel = this.repeatingApptSelectedDays[k].dayOfWeekName;
                }
                else if (k < z - 1) { // is not the last item in the list
                    daysSelectedLabel = daysSelectedLabel + "," + this.repeatingApptSelectedDays[k].dayOfWeekName;
                }
                else if (k === z - 1) { // is the last item in the list
                    daysSelectedLabel = daysSelectedLabel + " & " + this.repeatingApptSelectedDays[k].dayOfWeekName;
                }
            }
        }
        this.repeatingAppointmentFilterSummary = filterLabel + daysSelectedLabel + " starting after " + this.timeService.getShortDateFromDate(this.repeatingApptSelectedStartDate);
        this.getRepeatingApptTimes(this.repeatingApptSelectedDays, this.repeatingApptSelectedStartDate);
    };
    TimeComponent.prototype.showRepeatingApptFiltersModal = function (path) {
        var _this = this;
        if (path === 'onload' && this.timeService.repeatingApptSelectedDays.length > 0) { // have already been here and selected options; just show those
            this.handleRepeatingApptDialogClose();
        }
        else {
            var dialogRef = this.dialog.open(_modals_repeating_appt_filter_repeating_appt_filter_component__WEBPACK_IMPORTED_MODULE_12__["RepeatingApptFilterComponent"], { maxWidth: this.responsiveService.getMaxWidthForModals(),
                data: { reason: this.selectedReason, preference: this.preference, startDate: this.repeatingApptSelectedStartDate, selectedDays: this.repeatingApptSelectedDays, minDate: this.availabilityService.minBookingDate, maxDate: this.availabilityService.maxBookingDate }
            });
            dialogRef.afterClosed().subscribe(function (repeatingApptForm) {
                if (repeatingApptForm !== undefined) {
                    _this.timeService.repeatingApptSelectedDays = repeatingApptForm.controls['daysOfTheWeek'].value;
                    _this.timeService.repeatingApptSelectedStartDate = repeatingApptForm.controls['startDate'].value;
                }
                _this.handleRepeatingApptDialogClose();
            });
        }
    };
    TimeComponent.prototype.loadMonthDatesForGetMonthAvailCall = function (path) {
        if (this.currentMonthData === undefined || this.currentMonthData === null) { // likely is getting called from onload so should set up initial current month data
            var monthsData = this.timeService.getMonthsData(new Date().getFullYear());
            this.currentMonthData = monthsData[new Date().getMonth()];
        }
        this.getMonthDates(path, this.currentMonthData.currentYear, this.currentMonthData.monthNumberFull);
    };
    TimeComponent.prototype.handleTZMatch = function () {
        if (this.selectedReason.selectedRepeatingApptOption !== undefined && this.selectedReason.selectedRepeatingApptOption !== null && this.selectedReason.selectedRepeatingApptOption.numberOfAppointments > 1) {
            this.showRepeatingServiceBooking = true;
            this.showRepeatingApptFiltersModal('onload');
        }
        else if (this.selectedTime !== undefined) {
            //means they have toggled back into the Time screen and they've already selected a time so should load that date and have that time selected
            this.timeManuallySelected = true;
            this.loadMonthDatesForGetMonthAvailCall('onloadSelectedTime');
        }
        else {
            this.loadMonthDatesForGetMonthAvailCall('onload');
        }
    };
    TimeComponent.prototype.matchClientTZ = function (businessTimezone, recallAfterMatchingMoment) {
        this.CSFilterObj = this.timezoneService.matchClientTZ(businessTimezone, this.CSFilterObj, recallAfterMatchingMoment);
        this.handleTZMatch();
    };
    TimeComponent.prototype.getTimezoneForDisplay = function () {
        var _this = this;
        this.timezoneService.getTimezoneForDisplay(this.CSFilterObj)
            .subscribe(function (timezone) {
            _this.appt.apptTZ = timezone;
            _this.matchClientTZ(timezone);
        });
    };
    TimeComponent.prototype.clearTimeForm = function () {
        this.panel.formGroup = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"]({
            'selectedDateTime': this.schedulerService.getTimeSlotFormGroup()
        });
        this.timeForm = this.panel.formGroup;
    };
    TimeComponent.prototype.ngOnInit = function () {
        this.responsiveService.setHeightForEmbedScheduler();
        this.appt = new _models_Appointment_model__WEBPACK_IMPORTED_MODULE_14__["Appointment"]().createNew();
        this.availabilityService.waitListMode = false;
        for (var i = 0, x = this.inputValues.length; i < x; i++) {
            switch (this.inputValues[i].panel) {
                case 'locationGroups':
                    this.appt.locationGroup = this.inputValues[i].values[0].value;
                    break;
                case 'locations':
                    this.appt.location = this.inputValues[i].values[0].value;
                    for (var j = 0, y = this.inputValues[i].values.length; j < y; j++) {
                        this.selectedLocation = this.inputValues[i].values[j].value;
                        if (this.selectedLocation.variableAddress !== undefined) {
                            this.CSFilterObj.address = this.selectedLocation.variableAddress;
                        }
                        else {
                            this.CSFilterObj.address = this.selectedLocation.description;
                        }
                    }
                    break;
                case 'staff':
                    this.appt.staff = this.inputValues[i].values[0].value;
                    for (var j = 0, y = this.inputValues[i].values.length; j < y; j++) {
                        this.selectedStaff = this.inputValues[i].values[j].value;
                    }
                    break;
                case 'reasonGroups':
                    this.appt.reasonGroup = this.inputValues[i].values[0].value;
                    break;
                case 'reasons':
                    this.appt.reason = this.inputValues[i].values[0].value;
                    for (var j = 0, y = this.inputValues[i].values.length; j < y; j++) {
                        this.selectedReason = this.inputValues[i].values[j].value;
                        this.reasonDuration = this.reasonDuration + this.inputValues[i].values[j].value.visitMinutes;
                        if (this.selectedReason.reasonType === 'SERVICE') {
                            if (this.inputValues[i].values[j].value.selectedAddOns && this.inputValues[i].values[j].value.selectedAddOns.length > 0) {
                                for (var k = 0, z = this.inputValues[i].values[j].value.selectedAddOns.length; k < z; k++)
                                    if (!isNaN(this.inputValues[i].values[j].value.selectedAddOns[k].visitMinutes) && this.inputValues[i].values[j].value.selectedAddOns[k].visitMinutes > 0)
                                        this.reasonDuration = this.reasonDuration + this.inputValues[i].values[j].value.selectedAddOns[k].visitMinutes;
                            }
                        }
                    }
                    if (this.selectedReason.selectedDuration !== undefined)
                        this.appt.reasonDesc = this.selectedReason.selectedDuration.durationName;
                    break;
                case 'time':
                    if (!this.selectedReason.bookMultipleAppts && !this.inputValues[i].values[0].value.waitListMode) {
                        this.selectedTime = this.inputValues[i].values[0].value;
                    }
                    else if (this.selectedReason.bookMultipleAppts || this.inputValues[i].values[0].value.waitListMode) {
                        //toggle back into screen after already having selected multiple appointments
                        //need to add flag check here so that in togglewaitlist mode it doesn't clear form
                        //example: go through scheduler, pick 2 waitlist times and no booking times; go to client info, click back; toggle waitlist mode
                        //without this flag it would clear the selected times from cart
                        this.timeManuallySelected = true;
                    }
                    break;
            }
        }
        if (this.selectedStaff === undefined) {
            this.selectedStaff = new _models_Staff_model__WEBPACK_IMPORTED_MODULE_17__["Staff"](null, null);
            this.selectedStaff.selected = true;
        }
        if (this.selectedLocation === undefined) {
            this.selectedLocation = new _models_Location_model__WEBPACK_IMPORTED_MODULE_15__["Location"]();
            this.selectedLocation.locationId = null;
            this.selectedLocation.locationName = null;
            this.selectedLocation.allowTZChange = this.preference.allowTZChange;
        }
        if (this.selectedReason.bookMultipleAppts && this.selectedReason.requireStaffConfirmation) { //TT-6054
            this.selectedReason.bookMultipleAppts = false;
        }
        // @ts-ignore
        if (this.panel.formGroup.controls[this.timeFormControlNameBase].controls['reasonId'].value === this.selectedReason.reasonId &&
            //@ts-ignore
            this.panel.formGroup.controls[this.timeFormControlNameBase].controls['professionalId'].value === this.selectedStaff.professionalId &&
            //@ts-ignore
            this.panel.formGroup.controls[this.timeFormControlNameBase].controls['locationId'].value === this.selectedLocation.locationId) {
            this.timeForm = this.panel.formGroup;
        }
        else {
            this.clearTimeForm();
        }
        if (this.selectedReason.allowWaitList)
            this.waitListText = this.tagsService.convertApptPropertiesToTags('waitListText', this.preference, this.appt);
        this.availabilityService.setMinMaxBookingDates(this.selectedReason);
        this.timeService.repeatingApptSelectedStartDate = this.availabilityService.minBookingDate;
        this.repeatingApptSelectedStartDate = this.timeService.repeatingApptSelectedStartDate;
        if (this.directionComingFrom === 'reschedule') {
            this.timePnlBookingSummary = this.tagsService.convertApptPropertiesToTags('timePnlRescheduleBookingSummary', this.preference, this.appt);
        }
        else {
            this.timePnlBookingSummary = this.tagsService.convertApptPropertiesToTags('timePnlBookingSummary', this.preference, this.appt);
        }
        this.panel.panelTitleProperty = 'timeTitle';
        this.timePnlHeaderText = this.tagsService.convertApptPropertiesToTags('timeText', this.preference, this.appt);
        if (this.selectedReason.reasonType !== 'CLASS' || (this.selectedReason.reasonType === 'CLASS' && this.preference.classCalendar)) {
            this.showClassCalendar = true;
        }
        else {
            this.showClassCalendar = false;
        }
        this.getTimezoneForDisplay();
        if (this.selectedReason.bookMultipleAppts) {
            this.setBtnLabel(null);
        }
    };
    TimeComponent.prototype.movePanels = function (direction) {
        // console.log(this.panel);
        if (direction === 'back' && this.showRepeatingServiceBooking)
            this.clearTimeForm();
        this.onMovePanels.emit({ direction: direction, panel: this.panel, noAppointmentAvail: this.noAppointmentsAvailable });
    };
    TimeComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"] },
        { type: _time_service__WEBPACK_IMPORTED_MODULE_6__["TimeService"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_7__["TagsService"] },
        { type: _scheduler_service__WEBPACK_IMPORTED_MODULE_19__["SchedulerService"] },
        { type: _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_11__["ResponsiveService"] },
        { type: _booking_components_availability_service__WEBPACK_IMPORTED_MODULE_13__["AvailabilityService"] },
        { type: _common_components_timezone_timezone_service__WEBPACK_IMPORTED_MODULE_21__["TimezoneService"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_22__["DatePipe"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], TimeComponent.prototype, "onMovePanels", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], TimeComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_18__["schedulerPanel"])
    ], TimeComponent.prototype, "panel", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_2__["CSFilterParameterBean"])
    ], TimeComponent.prototype, "CSFilterObj", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], TimeComponent.prototype, "directionComingFrom", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Array)
    ], TimeComponent.prototype, "inputValues", void 0);
    TimeComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'time-panel',
            template: __webpack_require__(/*! raw-loader!./time.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/time/time.component.html"),
            styles: [__webpack_require__(/*! ./time.component.css */ "./src/app/scheduler/time/time.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"], _time_service__WEBPACK_IMPORTED_MODULE_6__["TimeService"], _tags_service__WEBPACK_IMPORTED_MODULE_7__["TagsService"], _scheduler_service__WEBPACK_IMPORTED_MODULE_19__["SchedulerService"],
            _angular_material__WEBPACK_IMPORTED_MODULE_8__["MatDialog"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"], _responsive_service__WEBPACK_IMPORTED_MODULE_11__["ResponsiveService"], _booking_components_availability_service__WEBPACK_IMPORTED_MODULE_13__["AvailabilityService"],
            _common_components_timezone_timezone_service__WEBPACK_IMPORTED_MODULE_21__["TimezoneService"], _angular_common__WEBPACK_IMPORTED_MODULE_22__["DatePipe"]])
    ], TimeComponent);
    return TimeComponent;
}());



/***/ }),

/***/ "./src/app/scheduler/time/time.service.ts":
/*!************************************************!*\
  !*** ./src/app/scheduler/time/time.service.ts ***!
  \************************************************/
/*! exports provided: TimeService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeService", function() { return TimeService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var moment_moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment_moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment_moment__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment-timezone/moment-timezone */ "./node_modules/moment-timezone/moment-timezone.js");
/* harmony import */ var moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _time_objects_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./time-objects.model */ "./src/app/scheduler/time/time-objects.model.ts");
/* harmony import */ var _moment_timezones_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./moment-timezones.service */ "./src/app/scheduler/time/moment-timezones.service.ts");
/* harmony import */ var _models_Appointment_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../models/Appointment.model */ "./src/models/Appointment.model.ts");
/* harmony import */ var _models_WaitList_model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../models/WaitList.model */ "./src/models/WaitList.model.ts");
/* harmony import */ var _format_functions_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../format-functions.service */ "./src/app/format-functions.service.ts");
/* harmony import */ var _config_list_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../config-list.service */ "./src/app/config-list.service.ts");
/* harmony import */ var _models_Reason_model__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../models/Reason.model */ "./src/models/Reason.model.ts");
/* harmony import */ var _models_ClassSession_model__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../models/ClassSession.model */ "./src/models/ClassSession.model.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");















var TimeService = /** @class */ (function () {
    function TimeService(datePipe, momentTimezoneService, injector) {
        this.datePipe = datePipe;
        this.momentTimezoneService = momentTimezoneService;
        this.injector = injector;
        this.oneHrMs = 1000 * 60 * 60;
        this.oneDayMs = this.oneHrMs * 24;
        this.repeatingApptSelectedStartDate = new Date();
        this.repeatingApptSelectedDays = [];
        this.convertStringDateToObject = function (date, time) {
            if (date instanceof Date)
                date = this.getStringDateFromTime(date);
            date = String(date);
            var startDateYear = Number(date.substring(0, 4)), startDateMonth = Number(date.substring(5, this.getMonthDayIndexForStringDate(date).monthIndexEnd)) - 1, startDateDay = Number(date.substring(this.getMonthDayIndexForStringDate(date).dayIndex)), hoursAndMinutes = this.getHoursAndMinutes(time), hour = hoursAndMinutes.hour, minutes = hoursAndMinutes.minutes;
            var dateToReturn = new Date(startDateYear, startDateMonth, startDateDay, hour, minutes);
            return dateToReturn;
        };
        this.convertStringDateToUTCObject = function (date, time) {
            var startDateYear = Number(date.substring(0, 4)), startDateMonth = Number(date.substring(5, this.getMonthDayIndexForStringDate(date).monthIndexEnd)) - 1, startDateDay = Number(date.substring(this.getMonthDayIndexForStringDate(date).dayIndex)), hoursAndMinutes = this.getHoursAndMinutes(time), hour = hoursAndMinutes.hour, minutes = hoursAndMinutes.minutes;
            return Date.UTC(startDateYear, startDateMonth, startDateDay, hour, minutes);
        };
        try {
            this.locale = sessionStorage.getItem('locale');
        }
        catch (e) {
            this.locale = 'en-US';
        }
        moment_moment__WEBPACK_IMPORTED_MODULE_4__["locale"](this.locale);
        this.formatFnsService = injector.get(_format_functions_service__WEBPACK_IMPORTED_MODULE_10__["FormatFunctionsService"]);
        this.configListService = injector.get(_config_list_service__WEBPACK_IMPORTED_MODULE_11__["ConfigListService"]);
        this.schedulerPreferenceService = injector.get(_scheduler_preference_service__WEBPACK_IMPORTED_MODULE_14__["SchedulerPreferenceService"]);
    }
    TimeService.prototype.setBusinessTimezone = function (businessTimezone) {
        this.businessTimezone = businessTimezone;
    };
    TimeService.prototype.setClientTimezone = function (clientTimezone) {
        this.clientTimezone = clientTimezone;
    };
    TimeService.prototype.getMomentFromDate = function (dateForMoment) {
        return moment_moment__WEBPACK_IMPORTED_MODULE_4__(dateForMoment);
    };
    TimeService.prototype.checkToAddMomentTimezone = function (allowTZChange, timeZoneForMoment) {
        timeZoneForMoment = this.checkForValidMomentTimezone(timeZoneForMoment);
        // let browserTimezone = sessionStorage.getItem("browserTimezone")
        if (moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5__["tz"].zone(timeZoneForMoment) === null) {
            var foundTimezone = false;
            for (var i = 0, x = this.momentTimezoneService.allTimezones.zones.length; i < x; i++) {
                if (this.momentTimezoneService.allTimezones.zones[i].indexOf(timeZoneForMoment) !== -1) {
                    foundTimezone = true;
                    moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5__["tz"].add(this.momentTimezoneService.allTimezones.zones[i]);
                }
            }
        }
        return timeZoneForMoment;
    };
    TimeService.prototype.checkToAddMomentTimezoneDefaultSchedulerPreference = function (timeZoneForMoment) {
        return this.checkToAddMomentTimezone(this.schedulerPreferenceService.schedulerPreference.allowTZChange, timeZoneForMoment);
    };
    TimeService.prototype.checkForValidMomentTimezone = function (timeZoneCode) {
        var timeZoneForMoment = timeZoneCode || sessionStorage.getItem("browserTimezone");
        for (var i = 0, x = this.momentTimezoneService.allTimezones.links.length; i < x; i++) {
            if (this.momentTimezoneService.allTimezones.links[i].indexOf(timeZoneForMoment) !== -1) {
                var indexOfPipe = this.momentTimezoneService.allTimezones.links[i].indexOf("|");
                timeZoneForMoment = this.momentTimezoneService.allTimezones.links[i].substring(0, indexOfPipe);
            }
        }
        return timeZoneForMoment;
    };
    /**
     * Added in method below in order to convert appointment returned from backend into clients timezone for display properly
     * 05/05/2020 - TT-6552
     */
    TimeService.prototype.getTimeWithMomentForClientConvertedTimezone = function (selectedTime, selectedDate, timeZoneForMoment, allowTZChange) {
        if (allowTZChange === undefined || allowTZChange === null)
            allowTZChange = 0;
        timeZoneForMoment = this.checkToAddMomentTimezone(allowTZChange, timeZoneForMoment);
        var hoursAndMinutes = this.getHoursAndMinutes(selectedTime);
        var minutes = hoursAndMinutes.minutes.toString();
        if (minutes == "0")
            minutes = "00";
        var dateTime = selectedDate + " " + hoursAndMinutes.hour + ":" + minutes;
        var dateToReturn = moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5__["tz"](dateTime, timeZoneForMoment);
        return dateToReturn;
    };
    TimeService.prototype.getTimeWithMoment = function (selectedTime, selectedDate, allowTZChange, timeZoneForMoment, time) {
        timeZoneForMoment = this.checkToAddMomentTimezone(allowTZChange, timeZoneForMoment);
        var dateTime = this.convertStringDateToObject(selectedDate, selectedTime);
        return moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5__(dateTime).tz(timeZoneForMoment);
    };
    TimeService.prototype.getTimeFromUTCTimeInClientTimezone = function (utcTime, timeZoneForMoment) {
        timeZoneForMoment = this.checkToAddMomentTimezone(0, timeZoneForMoment);
        var dataToReturn = moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5__["utc"](utcTime).tz(timeZoneForMoment).format();
        return dataToReturn;
    };
    TimeService.prototype.getUTCDateFromMoment = function (moment) {
        var utcMoment = moment.utc();
        return new Date(utcMoment.format());
    };
    TimeService.prototype.getMomentDaysDiff = function (firstDate, secondDate) {
        // console.log("firstDate");
        // console.log(firstDate);
        // console.log("secondDate");
        // console.log(secondDate);
        if (typeof firstDate === 'string')
            firstDate = moment_moment__WEBPACK_IMPORTED_MODULE_4__(this.convertStringDateToObject(firstDate, 0));
        var difference = firstDate.diff(secondDate);
        // console.log("difference");
        // console.log(difference);
        var duration = moment_moment__WEBPACK_IMPORTED_MODULE_4__["duration"](difference);
        // console.log("duration");
        // console.log(duration);
        var daysDiff = duration.asDays();
        return Math.ceil(daysDiff);
    };
    TimeService.prototype.getWeekdayDataObjs = function (translationWidthType) {
        var weekdayDataObjs = [];
        if (translationWidthType === undefined)
            translationWidthType = "Wide";
        var weekdays = this.getWeekdayData(translationWidthType);
        var firstDayOfWeek = moment_moment__WEBPACK_IMPORTED_MODULE_4__().localeData().firstDayOfWeek();
        for (var i = firstDayOfWeek, x = weekdays.length; i < x; i++) {
            var weekDayDataObj = new _time_objects_model__WEBPACK_IMPORTED_MODULE_6__["WeekDayData"]();
            weekDayDataObj.dayOfWeekInt = i;
            weekDayDataObj.dayOfWeekName = weekdays[i];
            weekDayDataObj.selected = false;
            weekdayDataObjs.push(weekDayDataObj);
        }
        for (var i = 0; i < firstDayOfWeek; i++) {
            var weekDayDataObj = new _time_objects_model__WEBPACK_IMPORTED_MODULE_6__["WeekDayData"]();
            weekDayDataObj.dayOfWeekInt = i;
            weekDayDataObj.dayOfWeekName = weekdays[i];
            weekDayDataObj.selected = false;
            weekdayDataObjs.push(weekDayDataObj);
        }
        return weekdayDataObjs;
    };
    TimeService.prototype.getWeekdayData = function (translationWidthType) {
        if (translationWidthType === undefined)
            translationWidthType = "Abbreviated";
        var formStyle = _angular_common__WEBPACK_IMPORTED_MODULE_1__["FormStyle"]["Format"];
        var translationWidth = _angular_common__WEBPACK_IMPORTED_MODULE_1__["TranslationWidth"][translationWidthType];
        var weekdays = Object(_angular_common__WEBPACK_IMPORTED_MODULE_1__["getLocaleDayNames"])(this.locale, formStyle, translationWidth);
        // let firstDayOfWeek = getLocaleFirstDayOfWeek(this.locale);
        var firstDayOfWeek = moment_moment__WEBPACK_IMPORTED_MODULE_4__().localeData().firstDayOfWeek();
        var weekdaysForLocale = [];
        for (var i = firstDayOfWeek, x = weekdays.length; i < x; i++) {
            weekdaysForLocale.push(weekdays[i]);
        }
        for (var i = 0; i < firstDayOfWeek; i++) {
            weekdaysForLocale.push(weekdays[i]);
        }
        return weekdaysForLocale;
    };
    TimeService.prototype.getSelectedWeekdays = function (repeatingAppt, weekdays) {
        var weekdaysToReturn = [];
        for (var i = 0, x = weekdays.length; i < x; i++) {
            switch (weekdays[i].dayOfWeekInt) {
                case 0:
                    if (repeatingAppt.sun)
                        weekdays[i].selected = true;
                    else
                        weekdays[i].selected = false;
                    break;
                case 1:
                    if (repeatingAppt.mon)
                        weekdays[i].selected = true;
                    else
                        weekdays[i].selected = false;
                    break;
                case 2:
                    if (repeatingAppt.tue)
                        weekdays[i].selected = true;
                    else
                        weekdays[i].selected = false;
                    break;
                case 3:
                    if (repeatingAppt.wed)
                        weekdays[i].selected = true;
                    else
                        weekdays[i].selected = false;
                    break;
                case 4:
                    if (repeatingAppt.thu)
                        weekdays[i].selected = true;
                    else
                        weekdays[i].selected = false;
                    break;
                case 5:
                    if (repeatingAppt.fri)
                        weekdays[i].selected = true;
                    else
                        weekdays[i].selected = false;
                    break;
                case 6:
                    if (repeatingAppt.sat)
                        weekdays[i].selected = true;
                    else
                        weekdays[i].selected = false;
                    break;
            }
        }
        for (var i = 0, x = weekdays.length; i < x; i++) {
            if (weekdays[i].selected)
                weekdaysToReturn.push(weekdays[i]);
        }
        return weekdaysToReturn;
    };
    TimeService.prototype.getTimeString = function (time) {
        var timeString = time.toString();
        var hour = '';
        var minutes = '';
        if (timeString.length === 3) {
            hour = timeString.substring(0, 1);
            minutes = timeString.substring(1, 3);
        }
        else if (timeString.length === 1) {
            hour = "00";
            minutes = "0" + timeString;
        }
        else if (timeString.length === 2) {
            //if it's 2, then it's going to be 12 am
            hour = "00";
            minutes = timeString;
        }
        else {
            hour = timeString.substring(0, 2);
            minutes = timeString.substring(2, 4);
        }
        if (hour !== "00") {
            hour = parseInt(hour).toString();
        }
        return { 'hourNum': Number(hour), 'minuteNum': Number(minutes) };
    };
    TimeService.prototype.getPipeYearFromDate = function (date, timezone) {
        if (timezone == undefined || timezone == null)
            timezone = 'UTC';
        return this.datePipe.transform(date, 'yyyy', timezone, this.locale);
    };
    TimeService.prototype.getMonthAbbrWithDatePipe = function (date, useUTC) {
        if (useUTC)
            return this.datePipe.transform(date, 'MMM', 'UTC', this.locale);
        else
            return this.datePipe.transform(date, 'MMM', undefined, this.locale);
    };
    TimeService.prototype.getPipeMonthFromDate = function (date, timezone) {
        if (timezone == undefined || timezone == null)
            timezone = 'UTC';
        return this.datePipe.transform(date, 'MM', timezone, this.locale);
    };
    TimeService.prototype.getPipeDayFromDate = function (date, timezone) {
        if (timezone == undefined || timezone == null)
            timezone = 'UTC';
        return this.datePipe.transform(date, 'dd', timezone, this.locale);
    };
    TimeService.prototype.getPipeHourFromDate = function (date) {
        return this.datePipe.transform(date, 'HH', 'UTC', this.locale);
    };
    TimeService.prototype.getPipeMinutesFromDate = function (date) {
        return this.datePipe.transform(date, 'mm', 'UTC', this.locale);
    };
    TimeService.prototype.getPipeDayOfWeekFromDate = function (date) {
        return this.datePipe.transform(date, 'EEEE', 'UTC', this.locale);
    };
    TimeService.prototype.getShortDateFromDate = function (date, timezone) {
        if (!timezone)
            timezone = 'UTC';
        return this.datePipe.transform(date, 'shortDate', timezone, this.locale);
    };
    TimeService.prototype.getShortDateFromDateNoConversion = function (date) {
        return date.getMonth() + 1 + '/' + date.getDate() + '/' + date.getFullYear();
    };
    TimeService.prototype.getShortTimeWithDatePipe = function (date, useUTC) {
        if (useUTC)
            return this.datePipe.transform(date, 'shortTime', 'UTC', this.locale);
        else
            return this.datePipe.transform(date, 'shortTime', undefined, this.locale);
    };
    TimeService.prototype.getStringDateFromTime = function (date) {
        return this.getPipeYearFromDate(date) + '-' + this.getPipeMonthFromDate(date) + '-' + this.getPipeDayFromDate(date);
    };
    TimeService.prototype.getStringDateFromMSUTCTime = function (date) {
        return this.datePipe.transform(date, 'yyyy-MM-dd', 'UTC', this.locale);
    };
    TimeService.prototype.getMilitaryHoursWithDatePipe = function (date, useUTC) {
        if (useUTC)
            return this.datePipe.transform(date, 'H', 'UTC', this.locale);
        else
            return this.datePipe.transform(date, 'H', undefined, this.locale);
    };
    TimeService.prototype.getMinutesWithDatePipe = function (date, useUTC) {
        if (useUTC)
            return this.datePipe.transform(date, 'mm', 'UTC', this.locale);
        else
            return this.datePipe.transform(date, 'mm', undefined, this.locale);
    };
    TimeService.prototype.moveToNextMonth = function (currentMonthData, activeYear, monthsData, activeMonth) {
        if (currentMonthData.monthNumberIndex === 11) {
            activeYear = activeYear + 1;
            monthsData = this.getMonthsData(activeYear);
            activeMonth = 1;
        }
        else {
            activeMonth = activeMonth + 1;
        }
        return { activeYear: activeYear, activeMonth: activeMonth, monthsData: monthsData };
    };
    TimeService.prototype.calculateDateOfMonth = function (currentYear, monthNumber, dayNumber) {
        var objectToReturn = { startDayOfWeek: '', startDayOfWeekNum: 0 };
        var firstDateOfMonth = new Date(currentYear, monthNumber, dayNumber);
        objectToReturn.startDayOfWeek = this.datePipe.transform(firstDateOfMonth, 'EEE', 'UTC');
        objectToReturn.startDayOfWeekNum = firstDateOfMonth.getDay();
        return objectToReturn;
    };
    TimeService.prototype.getMonthsData = function (currentYear) {
        var monthsData = [
            new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_3__["MonthDataObj"]('January', 'jan', 31, 1, 0, currentYear, '', 0, new Date(currentYear, 0)),
            new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_3__["MonthDataObj"]('February', 'feb', 28, 2, 1, currentYear, '', 0, new Date(currentYear, 1)),
            new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_3__["MonthDataObj"]('March', 'mar', 31, 3, 2, currentYear, '', 0, new Date(currentYear, 2)),
            new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_3__["MonthDataObj"]('April', 'apr', 30, 4, 3, currentYear, '', 0, new Date(currentYear, 3)),
            new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_3__["MonthDataObj"]('May', 'may', 31, 5, 4, currentYear, '', 0, new Date(currentYear, 4)),
            new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_3__["MonthDataObj"]('June', 'jun', 30, 6, 5, currentYear, '', 0, new Date(currentYear, 5)),
            new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_3__["MonthDataObj"]('July', 'jul', 31, 7, 6, currentYear, '', 0, new Date(currentYear, 6)),
            new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_3__["MonthDataObj"]('August', 'aug', 31, 8, 7, currentYear, '', 0, new Date(currentYear, 7)),
            new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_3__["MonthDataObj"]('September', 'sept', 30, 9, 8, currentYear, '', 0, new Date(currentYear, 8)),
            new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_3__["MonthDataObj"]('October', 'oct', 31, 10, 9, currentYear, '', 0, new Date(currentYear, 9)),
            new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_3__["MonthDataObj"]('November', 'nov', 30, 11, 10, currentYear, '', 0, new Date(currentYear, 10)),
            new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_3__["MonthDataObj"]('December', 'dec', 31, 12, 11, currentYear, '', 0, new Date(currentYear, 11))
        ];
        var changeFebruaryDays = currentYear % 4;
        if (changeFebruaryDays % 4 === 0) {
            monthsData[1].daysInMonth = 29;
        }
        //GET THE START DATE OF EACH MONTH
        for (var i = 0, x = monthsData.length; i < x; i++) {
            var startDateObject = this.calculateDateOfMonth(currentYear, monthsData[i].monthNumberIndex, 1);
            monthsData[i].startDayOfWeek = startDateObject.startDayOfWeek;
            monthsData[i].startDayOfWeekNum = startDateObject.startDayOfWeekNum;
        }
        return monthsData;
    };
    TimeService.prototype.getDaysOfMonth = function (currentYear, savedMonth, availability) {
        var monthStartDay = new Date(currentYear, savedMonth - 1, 1);
        var monthStart = new Date(currentYear, savedMonth - 1, 1).getTime();
        var monthEnd = new Date(currentYear, savedMonth, 1).getTime();
        var monthLength = (monthEnd - monthStart) / (1000 * 60 * 60 * 24);
        monthLength = Math.round(monthLength);
        var days = [];
        var startWkDay = monthStartDay.getDay();
        // let firstDayOfWeek = getLocaleFirstDayOfWeek(this.locale);
        var firstDayOfWeek = moment_moment__WEBPACK_IMPORTED_MODULE_4__().localeData().firstDayOfWeek();
        if (firstDayOfWeek > startWkDay) {
            var difference = 7 - firstDayOfWeek; //has to always equal 7 for days of the week; using 7 here since instead of finding the index, we are finding the difference to get the index; $rootScope.firstDayOfWeek is what we use for the locale's first day of week, to display calendar on correct day
            startWkDay = monthStartDay.getDay() + difference;
        }
        else if (firstDayOfWeek < startWkDay) {
            var difference = startWkDay - firstDayOfWeek;
            startWkDay = difference;
        }
        else if (firstDayOfWeek === 1 && startWkDay === 1) {
            startWkDay = 0;
        }
        for (var a = 0; a < monthLength + startWkDay; a++) {
            if (a >= startWkDay) {
                days[a] = { dayNumInMonth: (a - startWkDay) + 1, available: undefined, isDayInMonth: true };
                if (days[a].dayNumInMonth.toString().length === 1) { //append 0 to single digit days to make width uniform
                    var dayNumInMonth = "0" + days[a].dayNumInMonth.toString();
                    days[a].dayNumInMonth = Number(dayNumInMonth);
                }
            }
            else {
                days[a] = { dayNumInMonth: 0, available: undefined, isDayInMonth: false };
            } //end if
        } //end for
        for (var c = 0; c < days.length; c++) {
            for (var d = 0; d < availability.openDays.length; d++) {
                if (availability.openDays[d].day === days[c].dayNumInMonth) {
                    days[c].available = true;
                }
            }
            ;
        }
        ;
        return days;
    };
    TimeService.prototype.getHoursAndMinutes = function (time) {
        if (time !== undefined && time !== null) {
            var returnString = time.toString();
            var hour = void 0;
            var minutes = void 0;
            if (returnString.length === 3) {
                hour = returnString.substring(0, 1);
                minutes = returnString.substring(1, 3);
            }
            else if (returnString.length === 1) {
                hour = "00";
                minutes = "0" + returnString;
            }
            else if (returnString.length === 2) {
                //if it's 2, then it's going to be 12 am
                hour = "00";
                minutes = returnString;
            }
            else {
                hour = returnString.substring(0, 2);
                minutes = returnString.substring(2, 4);
            }
            if (hour !== "00") {
                hour = parseInt(hour).toString();
            }
            return { hour: Number(hour), minutes: Number(minutes) };
        }
    };
    TimeService.prototype.getMonthDayIndexForStringDate = function (date) {
        var returnObject = { monthIndexEnd: 7, dayIndex: 8 };
        if (date.length <= 9) { // so it's 2020-7-22 instead of 2020-07-22
            returnObject.monthIndexEnd = 6;
            returnObject.dayIndex = 7;
        }
        return returnObject;
    };
    TimeService.prototype.dateWithTimeZone = function (timeZone, dateToConvert, time) {
        if (dateToConvert instanceof Date)
            dateToConvert = this.getStringDateFromTime(dateToConvert);
        dateToConvert = String(dateToConvert);
        var year = Number(dateToConvert.substring(0, 4)), month = Number(dateToConvert.substring(5, this.getMonthDayIndexForStringDate(dateToConvert).monthIndexEnd)) - 1, day = Number(dateToConvert.substring(this.getMonthDayIndexForStringDate(dateToConvert).dayIndex)), hoursAndMinutes = this.getHoursAndMinutes(time), hour = hoursAndMinutes.hour, minute = hoursAndMinutes.minutes;
        var date = new Date(Date.UTC(year, month, day, hour, minute, 0));
        var utcDate = new Date(date.toLocaleString('en-US', { timeZone: "UTC" }));
        var tzDate = new Date(date.toLocaleString('en-US', { timeZone: timeZone }));
        var offset = utcDate.getTime() - tzDate.getTime();
        date.setTime(date.getTime() + offset);
        return date;
    };
    ;
    /**
     * Check to get timezone that would have been applied to the appointment in hierarchial order
     */
    TimeService.prototype.getApptTimezone = function (location, locationGroup, staff) {
        // if location timezone is filled in, then use that
        if (location !== undefined && location !== null && location.timezone !== undefined && location.timezone !== null)
            return location.timezone;
        else if (locationGroup !== undefined && locationGroup !== null && locationGroup.timeZoneCode !== undefined && locationGroup.timeZoneCode !== null)
            return locationGroup.timeZoneCode.timeZoneCode;
        else if (staff !== undefined && staff !== null && staff.timezone !== undefined && staff.timezone !== null)
            return staff.timezone;
        else
            return this.businessTimezone;
    };
    TimeService.prototype.getAllowGetMonth = function (year, month, maxBookingDate, minBookingDate) {
        var allowGetMonth = false;
        var startDateMonthMs = new Date(year, month - 1).getTime();
        var endDateMonthMs = new Date(year, month).getTime();
        var isStartDateLessThanMaxBookingDate = startDateMonthMs <= maxBookingDate.getTime();
        var isEndDateGreaterThanMinBookingDate = endDateMonthMs >= minBookingDate.getTime();
        if (isStartDateLessThanMaxBookingDate && isEndDateGreaterThanMinBookingDate) {
            allowGetMonth = true;
        }
        return allowGetMonth;
    };
    TimeService.prototype.getDateTimeValue = function (apptData, timezone, dateTimeUTCProp, dateProp, timeProp, fallBackDateTimeUTCProp) {
        if (apptData[dateTimeUTCProp] !== undefined && apptData[dateTimeUTCProp] !== null) {
            return this.getTimeFromUTCTimeInClientTimezone(apptData[dateTimeUTCProp], timezone);
        }
        else if (fallBackDateTimeUTCProp !== undefined && apptData[fallBackDateTimeUTCProp] !== undefined && apptData[fallBackDateTimeUTCProp] !== null)
            return this.getTimeFromUTCTimeInClientTimezone(apptData[fallBackDateTimeUTCProp], timezone);
        else if (apptData[dateProp] !== undefined && apptData[dateProp] !== null) {
            if (apptData[timeProp] === undefined || apptData[timeProp] === null)
                apptData[timeProp] = 0;
            if (typeof apptData[dateProp] === 'string')
                return this.convertStringDateToObject(apptData[dateProp], apptData[timeProp]);
            else
                return this.getTimeWithMomentForClientConvertedTimezone(apptData[timeProp], apptData[dateProp], timezone);
        }
    };
    TimeService.prototype.getApptDateTimeDisplayPropertiesWithTimezone = function (apptData, allowTZChange) {
        var timezone = this.getApptTimezone(apptData.location, apptData.locationGroup, apptData.staff);
        if (allowTZChange === 1) { // LHB 10/16/2020 TT-7087
            if (this.clientTimezone)
                timezone = this.clientTimezone;
            if (apptData.client && apptData.client.timeZoneCode)
                timezone = apptData.client.timeZoneCode.timeZoneCode;
        }
        apptData.staffStartTimeDate = this.getDateTimeValue(apptData, timezone, 'startDateTimeUTC', 'startDate', 'startTime');
        apptData.staffEndTimeDate = this.getDateTimeValue(apptData, timezone, 'endDateTimeUTC', 'endDate', 'endTime');
        apptData.clientStartTimeDate = this.getDateTimeValue(apptData, timezone, 'clientStartDateTimeUTC', 'clientStartDate', 'clientStartTime', 'startDateTimeUTC');
        apptData.clientEndTimeDate = this.getDateTimeValue(apptData, timezone, 'clientEndDateTimeUTC', 'clientEndDate', 'clientEndTime', 'endDateTimeUTC');
        return apptData;
    };
    TimeService.prototype.getHoursAndMinutesFromTime = function (time) {
        var returnObject = { hours: 8, mins: 0 };
        if (time !== undefined && time !== null) {
            var timeString = time.toString();
            var hours = 0;
            var mins = 0;
            if (timeString.length === 1)
                mins = 0 + Number(timeString);
            else if (timeString.length === 2)
                mins = Number(timeString);
            else if (timeString.length === 3) { // TIME IS BEFORE 10AM AND THUS 3 DIGITS IN LENGTH
                hours = Number(timeString.charAt(0));
                mins = Number(timeString.slice(1, 3));
            }
            else if (timeString.length === 4) { // I.E. "1100"
                hours = Number(timeString.slice(0, 2));
                mins = Number(timeString.slice(2, 4));
            }
            else if (timeString.length === 5) { // I.E. "11:00"
                hours = Number(timeString.substring(0, 2));
                mins = Number(timeString.substring(3, 5));
            }
            else if (timeString.length === 7 || timeString.length === 8) { // I.E. "9:00 AM" (7) or "12:00 PM" (8)
                var amPm = timeString.substring(6);
                if (timeString.length === 7) {
                    hours = Number(timeString.substring(0, 1));
                    mins = Number(timeString.substring(2, 4));
                }
                else if (timeString.length === 8) {
                    hours = Number(timeString.substring(0, 2));
                    mins = Number(timeString.substring(3, 5));
                }
                if (amPm === 'PM')
                    hours = hours + 12;
            }
            returnObject = { hours: hours, mins: mins };
        }
        return returnObject;
    };
    TimeService.prototype.roundApptTimesToHourForSave = function (time, path) {
        var timeObject = this.getHoursAndMinutesFromTime(time);
        var hours = timeObject.hours;
        var minutes = timeObject.mins;
        if (minutes === 0 && path === 'subtracting') {
            minutes = 60;
            if (hours === 0)
                hours = 24;
            hours = hours - 1;
        }
        else if (minutes === 60) {
            minutes = 0;
            hours = hours + 1;
        }
        if (path !== 'subtracting' && hours === 24)
            hours = 0;
        var minutesString = String(minutes);
        if (minutesString.length === 1)
            minutesString = 0 + '' + minutes;
        var timeToReturn = hours + '' + minutesString;
        if (timeToReturn === '2360' || timeToReturn === '2400')
            timeToReturn = '0';
        return Number(timeToReturn);
    };
    TimeService.prototype.calculateEndTime = function (minutes, startTime, roundDirection) {
        var minutesToAdd = minutes % 60;
        var hoursToAdd;
        if (minutesToAdd !== 0) // MEANS SERVICE IS NOT AN EVEN HOUR
            if (Math.abs(minutes) > 60) {
                hoursToAdd = Math.floor(Math.abs(minutes) / 60);
                if (minutes < 0)
                    hoursToAdd = hoursToAdd * -1;
            }
            else
                hoursToAdd = 0;
        else
            hoursToAdd = minutes / 60;
        if (minutesToAdd < 0) // IF NEEDING TO SUBTRACT TIME, ROUND START TIME THAT IS ON HOUR (LIKE 0800) BACK TO TOP OF LAST HUNDRED INCREMENT (SO 0760)
            startTime = this.roundApptTimesToHourForSave(startTime);
        var endTime = startTime + hoursToAdd * 100 + minutesToAdd;
        if (endTime >= 60 && endTime <= 99) // FIX FOR TT-3473
            endTime = endTime + 40;
        if (endTime === 2400)
            endTime = 0;
        return this.roundBackToHour(endTime, roundDirection);
    };
    TimeService.prototype.roundBackToHour = function (time, roundDirection) {
        // NOTICED AN ERROR WHERE IF A SERVICE IS 30 MINUTES IN DURATION AND A 30 MINUTE BUFFER, IF CHANGED START TIME FROM 12:25 PM TO 12:30 PM, THE END TIME WAS GETTING SET TO 1260; THUS NEED TO CHECK AND THEN ROUND THE HOUR UP
        var timeString = time.toString();
        var minutes;
        if (timeString.length === 3) // TIME IS BEFORE 10:00am
            minutes = timeString.slice(1);
        else if (timeString.length === 4) // TIME IS AFTER 10:00AM
            minutes = timeString.slice(2);
        minutes = Number(minutes);
        if (minutes >= 60) // IF IT DID GET ROUNDED OVER 60, THEN ADD 100 TO IT TO GO TO NEXT HOUR AND SUBTRACT THE 60 TO GET THE RIGHT MINUTES
            switch (roundDirection) {
                case 'roundUp':
                    time = time + 100 - 60;
                    break;
                case 'roundDown':
                    time = time - 40;
                    break;
            }
        if (time > 2400)
            time = time - (2400 * Math.floor(time / 2400));
        return time;
    };
    TimeService.prototype.getTimeZoneForEventObjectLabel = function (event) {
        var objectLabel = '';
        if (event.location && event.location.timezone)
            objectLabel = this.configListService.getTitleCaseLabel('locationLabel') + '\'s timezone';
        else if ((event instanceof _models_Appointment_model__WEBPACK_IMPORTED_MODULE_8__["Appointment"] || event instanceof _models_ClassSession_model__WEBPACK_IMPORTED_MODULE_13__["ClassSession"]) && event.location && !event.location.timezone &&
            event.locationGroup && event.locationGroup.groupId && event.locationGroup.timeZoneCode)
            objectLabel = this.configListService.getTitleCaseLabel('locationGroupLabel') + '\'s timezone';
        else if (event.location && !event.location.timezone &&
            (event instanceof _models_WaitList_model__WEBPACK_IMPORTED_MODULE_9__["WaitList"] || ((event instanceof _models_Appointment_model__WEBPACK_IMPORTED_MODULE_8__["Appointment"] || event instanceof _models_ClassSession_model__WEBPACK_IMPORTED_MODULE_13__["ClassSession"]) && (!event.locationGroup || !event.locationGroup.groupId || !event.locationGroup.timeZoneCode)))
            && (event.staff && event.staff.timezone))
            objectLabel = this.configListService.getTitleCaseLabel('staffLabel') + '\'s timezone';
        else
            objectLabel = 'Business\'s timezone';
        return objectLabel;
    };
    TimeService.prototype.getTimeZoneLabel = function (event) {
        var timeZone = this.businessTimezone;
        if (event.location && event.location.timezone) // IF LOCATION HAS TIMEZONE, SHOW THAT
            timeZone = event.location.timezone;
        else if ((event instanceof _models_Appointment_model__WEBPACK_IMPORTED_MODULE_8__["Appointment"] || event instanceof _models_ClassSession_model__WEBPACK_IMPORTED_MODULE_13__["ClassSession"]) && event.location && !event.location.timezone &&
            event.locationGroup && event.locationGroup.groupId && event.locationGroup.timeZoneCode) // IF LOCATION DOESN'T HAVE TIMEZONE BUT LOCATION GROUP HAS TIMEZONE THEN SHOW THAT
            timeZone = event.locationGroup.timeZoneCode.timeZoneDisplayName;
        else if (event.location && !event.location.timezone &&
            (event instanceof _models_WaitList_model__WEBPACK_IMPORTED_MODULE_9__["WaitList"] || ((event instanceof _models_Appointment_model__WEBPACK_IMPORTED_MODULE_8__["Appointment"] || event instanceof _models_ClassSession_model__WEBPACK_IMPORTED_MODULE_13__["ClassSession"]) && (!event.locationGroup || !event.locationGroup.groupId || !event.locationGroup.timeZoneCode)))
            && (event.staff && event.staff.timezone)) // IF LOCATION NOR LOCATION GROUP HAVE TIMEZONE BUT STAFF DOES, SHOW STAFF'S TIMEZONE
            timeZone = event.staff.timezone;
        else
            timeZone = this.businessTimezone;
        return timeZone;
    };
    TimeService.prototype.getDisplayNameForTimezone = function (timezone) {
        var timeZoneDisplayName = timezone.timeZoneCode;
        if (timeZoneDisplayName && timeZoneDisplayName.indexOf('_') !== -1)
            timeZoneDisplayName = this.formatFnsService.removeUnderscoresInLabels(timeZoneDisplayName);
        return timeZoneDisplayName;
    };
    TimeService.prototype.getTimezoneForEvent = function (event) {
        var _this = this;
        if (!event || !this.businessTimezone) {
            setTimeout(function () {
                _this.getTimezoneForEvent(event);
            }, 500);
        }
        else {
            var objectLabel = this.getTimeZoneForEventObjectLabel(event);
            var timezoneLabel = this.getTimeZoneLabel(event);
            if (timezoneLabel && timezoneLabel.indexOf('_') !== -1)
                timezoneLabel = this.formatFnsService.removeUnderscoresInLabels(timezoneLabel);
            if (event instanceof _models_Appointment_model__WEBPACK_IMPORTED_MODULE_8__["Appointment"])
                event.apptTZ = timezoneLabel;
            else if (event instanceof _models_ClassSession_model__WEBPACK_IMPORTED_MODULE_13__["ClassSession"])
                event.classTZ = timezoneLabel;
            else if (event instanceof _models_WaitList_model__WEBPACK_IMPORTED_MODULE_9__["WaitList"])
                event.waitListTZ = timezoneLabel;
            return objectLabel + ' (' + timezoneLabel + ') ';
        }
    };
    TimeService.prototype.configureTimeDisplay = function (timeZoneCode, time, startTimeProperty, endTimeProperty, preference, reason, selectedDate) {
        var startTimeDateForTimeslotDisplay = this.getTimeFromUTCTimeInClientTimezone(time[startTimeProperty], timeZoneCode);
        var endTimeDateForTimeslotDisplay = this.getTimeFromUTCTimeInClientTimezone(time[endTimeProperty], timeZoneCode);
        var timeZoneForMoment = this.checkToAddMomentTimezone(0, timeZoneCode);
        var startDateInTimezone = moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5__(startTimeDateForTimeslotDisplay).tz(timeZoneForMoment).format('YYYY-MM-DD');
        var endDateInTimezone = moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5__(endTimeDateForTimeslotDisplay).tz(timeZoneForMoment).format('YYYY-MM-DD');
        var additionalStartFormat = '';
        var additionalEndFormat = '';
        if (selectedDate !== undefined && selectedDate !== startDateInTimezone)
            additionalStartFormat = 'l ';
        if (endDateInTimezone !== startDateInTimezone)
            additionalEndFormat = 'l ';
        var startFormat = 'HH:mm';
        var endFormat = 'HH:mm';
        if (!preference.classCalendar && reason.reasonType === 'CLASS') {
            startFormat = 'llll';
            if (endDateInTimezone !== startDateInTimezone)
                endFormat = 'llll';
            else
                endFormat = 'LT';
            if (preference.timeFormat24Hrs) {
                startFormat = 'ddd, ll - HH:mm';
                if (endDateInTimezone !== startDateInTimezone) {
                    endFormat = 'ddd, ll - HH:mm';
                }
            }
        }
        else if (!preference.timeFormat24Hrs) {
            startFormat = additionalStartFormat + 'LT';
            endFormat = additionalEndFormat + 'LT';
        }
        else {
            startFormat = additionalStartFormat + startFormat;
            endFormat = additionalEndFormat + endFormat;
        }
        var startTimeDisplay = moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5__(startTimeDateForTimeslotDisplay).tz(timeZoneForMoment).format(startFormat);
        var endTimeDisplay = moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5__(endTimeDateForTimeslotDisplay).tz(timeZoneForMoment).format(endFormat);
        var timeStringDisplay = startTimeDisplay + ' - ' + endTimeDisplay;
        return timeStringDisplay;
    };
    TimeService.prototype.datesEqual = function (date1, date2) {
        var stringDate1 = this.getStringDateFromTime(date1);
        var stringDate2 = this.getStringDateFromTime(date2);
        return stringDate1 === stringDate2;
    };
    TimeService.prototype.checkStartTimeBeforeEndTime = function (startDate, endDate, startTime, endTime, propertySetting, isRepeating, minutes) {
        if (!minutes)
            minutes = 5;
        var timeToReturn;
        switch (propertySetting) {
            case 'endTime':
                timeToReturn = endTime;
                break;
            case 'startTime':
                timeToReturn = startTime;
        }
        var datesEqual = this.datesEqual(startDate, endDate);
        // console.log('*****START checkStartTimeBeforeEndTime******');
        // console.log('propertySetting ' + propertySetting);
        // console.log('startDate ' + JSON.stringify(startDate));
        // console.log('endDate ' + JSON.stringify(endDate));
        // console.log('startTime ' + startTime);
        // console.log('endTime ' + endTime);
        // console.log('dates equal ' + datesEqual);
        var minimumEndTime = this.calculateEndTime(minutes, startTime, 'roundUp'); // TT-7947 so that time is always at least the minimun amount for service
        if ((isRepeating && endTime <= startTime) || (!isRepeating && datesEqual && ((endTime <= startTime) || (endTime < minimumEndTime))))
            switch (propertySetting) {
                case 'endTime':
                    timeToReturn = this.calculateEndTime(minutes, startTime, 'roundUp');
                    break;
                case 'startTime':
                    timeToReturn = this.calculateEndTime(-1 * minutes, endTime, 'roundDown');
                    break;
            }
        // console.log('timeToReturn ' + timeToReturn);
        // console.log('*****END checkStartTimeBeforeEndTime******');
        return timeToReturn;
    };
    TimeService.prototype.removeSelectedTimesFromTimeForm = function (timeForm, selectedTime, reasonType) {
        for (var prop in timeForm.controls) {
            // @ts-ignore
            if (reasonType === _models_Reason_model__WEBPACK_IMPORTED_MODULE_12__["ReasonTypes"].CLASS && timeForm.controls[prop].controls['classScheduleId'].value === selectedTime.classScheduleId) {
                timeForm.removeControl(prop);
                break;
            }
            // @ts-ignore
            if (reasonType === _models_Reason_model__WEBPACK_IMPORTED_MODULE_12__["ReasonTypes"].SERVICE && timeForm.controls[prop].controls['timeSlotId'].value === selectedTime.timeSlotId && timeForm.controls[prop].controls['clientTimeSlotId'].value === selectedTime.clientTimeSlotId && timeForm.controls[prop].controls['htmlId'].value === selectedTime.htmlId) {
                timeForm.removeControl(prop);
                break;
            }
            // @ts-ignore
            if (reasonType === _models_Reason_model__WEBPACK_IMPORTED_MODULE_12__["ReasonTypes"].COURSE && timeForm.controls[prop].controls['recurringScheduleId'].value === selectedTime.recurringScheduleId) {
                timeForm.removeControl(prop);
                break;
            }
        }
        var count = 0;
        for (var prop in timeForm.controls) {
            var formGroup = timeForm.controls[prop];
            timeForm.removeControl(prop);
            if (count == 0) {
                timeForm.addControl('selectedDateTime', formGroup);
            }
            else {
                var formControlName = 'selectedDateTime' + count;
                timeForm.addControl(formControlName, formGroup);
            }
            count++;
        }
    };
    TimeService.ctorParameters = function () { return [
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_1__["DatePipe"] },
        { type: _moment_timezones_service__WEBPACK_IMPORTED_MODULE_7__["MomentTimezoneService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injector"] }
    ]; };
    TimeService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DatePipe"], _moment_timezones_service__WEBPACK_IMPORTED_MODULE_7__["MomentTimezoneService"], _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injector"]])
    ], TimeService);
    return TimeService;
}());



/***/ }),

/***/ "./src/app/scheduler/welcome/welcome.component.ts":
/*!********************************************************!*\
  !*** ./src/app/scheduler/welcome/welcome.component.ts ***!
  \********************************************************/
/*! exports provided: WelcomeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WelcomeComponent", function() { return WelcomeComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../modals/error-modal/error-modal.component */ "./src/app/modals/error-modal/error-modal.component.ts");
/* harmony import */ var _session_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../session.service */ "./src/app/session.service.ts");
/* harmony import */ var _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../models/SchedulerPanel.model */ "./src/models/SchedulerPanel.model.ts");








var WelcomeComponent = /** @class */ (function () {
    function WelcomeComponent(businessService, responsiveService, dialog, sessionService) {
        this.businessService = businessService;
        this.responsiveService = responsiveService;
        this.dialog = dialog;
        this.sessionService = sessionService;
        this.onMovePanels = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.showBackButton = false;
        this.showPoweredByTimeTap = false;
    }
    WelcomeComponent.prototype.configureErrorsForInvitation = function (counter) {
        var _this = this;
        if (counter < 10 && !this.sessionService.sessionObject.parmInvitationUUId) {
            setTimeout(function () {
                counter++;
                _this.configureErrorsForInvitation(counter);
            }, 200);
        }
        else {
            var errors = { 'noInvitation': true, 'invitationExpired': true, 'invitationCompleted': true };
            if (this.sessionService.sessionObject.parmInvitationUUId &&
                this.sessionService.sessionObject.parmInvitationUUId !== "") {
                errors.noInvitation = false;
                if (!this.sessionService.sessionObject.invitationExpired)
                    errors.invitationExpired = false;
                if (!this.sessionService.sessionObject.invitationCompleted)
                    errors.invitationCompleted = false;
                // console.log("errors " + JSON.stringify(errors));
                if (errors.invitationExpired || errors.invitationCompleted) {
                    this.panel.formGroup.controls['allowedToBook'].setValue(false);
                    var dialogRef = this.dialog.open(_modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_5__["ErrorModalComponent"], {
                        maxWidth: this.responsiveService.getMaxWidthForModals(),
                        data: { preference: this.preference, errorType: 'invitationCampaignErrors', errorData: errors }
                    });
                }
                else {
                    this.panel.formGroup.controls['allowedToBook'].setValue(true);
                }
            }
            else {
                this.panel.formGroup.controls['allowedToBook'].setValue(false);
                this.panel.formGroup.controls['allowedToBook'].setErrors({ 'noInvitationId': true });
                var dialogRef = this.dialog.open(_modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_5__["ErrorModalComponent"], {
                    maxWidth: this.responsiveService.getMaxWidthForModals(),
                    data: { preference: this.preference, errorType: 'invitationCampaignErrors', errorData: errors }
                });
            }
        }
    };
    WelcomeComponent.prototype.ngOnInit = function () {
        if (this.preference !== undefined && this.preference.onlyAllowBookingByInvitation) {
            this.configureErrorsForInvitation(0);
        }
        else if (this.panel !== undefined) {
            this.panel.formGroup.controls['allowedToBook'].setValue(true);
        }
        if (this.responsiveService.isEmbedded) {
            this.showPoweredByTimeTap = true;
        }
        this.responsiveService.setHeightForEmbedScheduler();
    };
    WelcomeComponent.prototype.movePanels = function (direction) {
        this.onMovePanels.emit({ direction: direction, panel: this.panel });
    };
    WelcomeComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_2__["BusinessService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_3__["ResponsiveService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialog"] },
        { type: _session_service__WEBPACK_IMPORTED_MODULE_6__["SessionService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], WelcomeComponent.prototype, "onMovePanels", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], WelcomeComponent.prototype, "preference", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_7__["schedulerPanel"])
    ], WelcomeComponent.prototype, "panel", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], WelcomeComponent.prototype, "errorLoading", void 0);
    WelcomeComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'welcome-panel',
            template: __webpack_require__(/*! raw-loader!./welcome.component.html */ "./node_modules/raw-loader/index.js!./src/app/scheduler/welcome/welcome.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_2__["BusinessService"], _responsive_service__WEBPACK_IMPORTED_MODULE_3__["ResponsiveService"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialog"], _session_service__WEBPACK_IMPORTED_MODULE_6__["SessionService"]])
    ], WelcomeComponent);
    return WelcomeComponent;
}());



/***/ }),

/***/ "./src/app/session.service.ts":
/*!************************************!*\
  !*** ./src/app/session.service.ts ***!
  \************************************/
/*! exports provided: SessionService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SessionService", function() { return SessionService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/internal/operators */ "./node_modules/rxjs/internal/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _api_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./api.service */ "./src/app/api.service.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _scheduler_common_components_timezone_timezone_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scheduler/common-components/timezone/timezone.service */ "./src/app/scheduler/common-components/timezone/timezone.service.ts");







var SessionService = /** @class */ (function () {
    function SessionService(injector, http) {
        this.injector = injector;
        this.http = http;
        this.apiService = injector.get(_api_service__WEBPACK_IMPORTED_MODULE_4__["ApiService"]);
        this.timezoneService = injector.get(_scheduler_common_components_timezone_timezone_service__WEBPACK_IMPORTED_MODULE_6__["TimezoneService"]);
    }
    SessionService.prototype.checkValidSession = function (sessionToken) {
        var _this = this;
        return this.http.get(this.apiService.apiUrl + "refreshSession?sessionToken=" + sessionToken, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["map"])(function (responseData) {
            _this.sessionObject = responseData;
            if (responseData.parmAuditReferralId)
                sessionStorage.setItem('auditReferralId', responseData.parmAuditReferralId);
            _this.timezoneService.getTimezones().subscribe(function () { });
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(this.apiService.handleError));
    };
    SessionService.ctorParameters = function () { return [
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] },
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_5__["HttpClient"] }
    ]; };
    SessionService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"], _angular_common_http__WEBPACK_IMPORTED_MODULE_5__["HttpClient"]])
    ], SessionService);
    return SessionService;
}());



/***/ }),

/***/ "./src/app/store/cart/cart-routing.module.ts":
/*!***************************************************!*\
  !*** ./src/app/store/cart/cart-routing.module.ts ***!
  \***************************************************/
/*! exports provided: CartRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CartRoutingModule", function() { return CartRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _cart_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cart.component */ "./src/app/store/cart/cart.component.ts");




var routes = [
    { path: 'cart', component: _cart_component__WEBPACK_IMPORTED_MODULE_3__["CartComponent"] }
];
var CartRoutingModule = /** @class */ (function () {
    function CartRoutingModule() {
    }
    CartRoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
        })
    ], CartRoutingModule);
    return CartRoutingModule;
}());



/***/ }),

/***/ "./src/app/store/cart/cart.component.css":
/*!***********************************************!*\
  !*** ./src/app/store/cart/cart.component.css ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ":host /deep/ div.mat-card-header-text {\n    width: 100%;\n}\n.mat-card>.mat-card-actions:last-child {\n    margin-bottom: 0;\n}\n.mat-card-actions {\n    margin-right: 0px;\n}\n:host /deep/ .mat-list-base .mat-list-item {\n    min-height: 100px;\n}\nmat-list > mat-list-item:hover{\n    cursor: auto;\n    background-color: transparent;\n}\n#cartItemsCard mat-list mat-list-item {\n    margin-top: 15px;\n    padding-bottom: 25px;\n}\n#cartItemsCard mat-list mat-list-item:first-child {\n    margin-top: 10px;\n}\n#cartItemsCard mat-form-field {\n    margin-top: 10px;\n}\nmat-card-content.mat-card-content {\n    margin-top: 0px;\n    margin-bottom: 0px;\n}\n.mat-list-base {\n    padding-top: 0px;\n}\n#cartSummaryCard mat-list mat-list-item {\n    display: flex;\n    align-items: center;\n}\n.summaryDetail {\n    position: absolute;\n    right: 0;\n    top: 10px;\n}\nh4.summaryDetail, h4.summaryLabel {\n    display: inline;\n}\n:host /deep/ mat-list-item .mat-list-item-content {\n    width: 100%;\n}\n:host /deep/ .mat-select-arrow-wrapper {\n    position: relative;\n    top: 5px;\n}\n:host /deep/ mat-list-item.mat-list-item-mobile .mat-list-item-content{\n    display: block;\n}\n:host /deep/ mat-list-item.mat-list-item-mobile .mat-list-text{\n    display: inline;\n    width: 65%;\n}\n:host /deep/ mat-list-item.mat-list-item-mobile .mat-line{\n    width: 65%;\n}\nmat-list-item.mat-list-item-mobile mat-form-field {\n    display: inline;\n    width: 30%;\n    float: right;\n    position: absolute;\n    right: 0;\n    top: -20px;\n    margin-top: 0px;\n}\n:host /deep/ mat-list-item coupon-search {\n    position: absolute;\n    clear: both;\n    top: 45px;\n\n}\nmat-list-item#couponListItem.applyingCoupon{\n    padding-bottom: 15px;\n    min-height: 140px;\n}\nmat-list-item#couponListItem.applyingCoupon.couponError{\n    min-height: 160px;\n}\n:host /deep/ mat-list-item#couponListItem.applyingCoupon.couponError .mat-list-item-content {\n    position: relative;\n    top: -20px;\n}\n:host /deep/ mat-list-item#couponListItem.applyingCoupon .mat-list-item-content {\n    padding-right: 0px;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3RvcmUvY2FydC9jYXJ0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2Y7QUFDQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksaUJBQWlCO0FBQ3JCO0FBRUE7SUFDSSxpQkFBaUI7QUFDckI7QUFDQTtJQUNJLFlBQVk7SUFDWiw2QkFBNkI7QUFDakM7QUFDQTtJQUNJLGdCQUFnQjtJQUNoQixvQkFBb0I7QUFDeEI7QUFDQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxlQUFlO0lBQ2Ysa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7QUFDdkI7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixRQUFRO0lBQ1IsU0FBUztBQUNiO0FBQ0E7SUFDSSxlQUFlO0FBQ25CO0FBQ0E7SUFDSSxXQUFXO0FBQ2Y7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixRQUFRO0FBQ1o7QUFDQTtJQUNJLGNBQWM7QUFDbEI7QUFDQTtJQUNJLGVBQWU7SUFDZixVQUFVO0FBQ2Q7QUFDQTtJQUNJLFVBQVU7QUFDZDtBQUNBO0lBQ0ksZUFBZTtJQUNmLFVBQVU7SUFDVixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixVQUFVO0lBQ1YsZUFBZTtBQUNuQjtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxTQUFTOztBQUViO0FBQ0E7SUFDSSxvQkFBb0I7SUFDcEIsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxpQkFBaUI7QUFDckI7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixVQUFVO0FBQ2Q7QUFDQTtJQUNJLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL3N0b3JlL2NhcnQvY2FydC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgL2RlZXAvIGRpdi5tYXQtY2FyZC1oZWFkZXItdGV4dCB7XG4gICAgd2lkdGg6IDEwMCU7XG59XG4ubWF0LWNhcmQ+Lm1hdC1jYXJkLWFjdGlvbnM6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbi5tYXQtY2FyZC1hY3Rpb25zIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDBweDtcbn1cblxuOmhvc3QgL2RlZXAvIC5tYXQtbGlzdC1iYXNlIC5tYXQtbGlzdC1pdGVtIHtcbiAgICBtaW4taGVpZ2h0OiAxMDBweDtcbn1cbm1hdC1saXN0ID4gbWF0LWxpc3QtaXRlbTpob3ZlcntcbiAgICBjdXJzb3I6IGF1dG87XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG4jY2FydEl0ZW1zQ2FyZCBtYXQtbGlzdCBtYXQtbGlzdC1pdGVtIHtcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAyNXB4O1xufVxuI2NhcnRJdGVtc0NhcmQgbWF0LWxpc3QgbWF0LWxpc3QtaXRlbTpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbn1cbiNjYXJ0SXRlbXNDYXJkIG1hdC1mb3JtLWZpZWxkIHtcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xufVxubWF0LWNhcmQtY29udGVudC5tYXQtY2FyZC1jb250ZW50IHtcbiAgICBtYXJnaW4tdG9wOiAwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMHB4O1xufVxuLm1hdC1saXN0LWJhc2Uge1xuICAgIHBhZGRpbmctdG9wOiAwcHg7XG59XG4jY2FydFN1bW1hcnlDYXJkIG1hdC1saXN0IG1hdC1saXN0LWl0ZW0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5zdW1tYXJ5RGV0YWlsIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiAxMHB4O1xufVxuaDQuc3VtbWFyeURldGFpbCwgaDQuc3VtbWFyeUxhYmVsIHtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG59XG46aG9zdCAvZGVlcC8gbWF0LWxpc3QtaXRlbSAubWF0LWxpc3QtaXRlbS1jb250ZW50IHtcbiAgICB3aWR0aDogMTAwJTtcbn1cbjpob3N0IC9kZWVwLyAubWF0LXNlbGVjdC1hcnJvdy13cmFwcGVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiA1cHg7XG59XG46aG9zdCAvZGVlcC8gbWF0LWxpc3QtaXRlbS5tYXQtbGlzdC1pdGVtLW1vYmlsZSAubWF0LWxpc3QtaXRlbS1jb250ZW50e1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuOmhvc3QgL2RlZXAvIG1hdC1saXN0LWl0ZW0ubWF0LWxpc3QtaXRlbS1tb2JpbGUgLm1hdC1saXN0LXRleHR7XG4gICAgZGlzcGxheTogaW5saW5lO1xuICAgIHdpZHRoOiA2NSU7XG59XG46aG9zdCAvZGVlcC8gbWF0LWxpc3QtaXRlbS5tYXQtbGlzdC1pdGVtLW1vYmlsZSAubWF0LWxpbmV7XG4gICAgd2lkdGg6IDY1JTtcbn1cbm1hdC1saXN0LWl0ZW0ubWF0LWxpc3QtaXRlbS1tb2JpbGUgbWF0LWZvcm0tZmllbGQge1xuICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICB3aWR0aDogMzAlO1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiAtMjBweDtcbiAgICBtYXJnaW4tdG9wOiAwcHg7XG59XG46aG9zdCAvZGVlcC8gbWF0LWxpc3QtaXRlbSBjb3Vwb24tc2VhcmNoIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgY2xlYXI6IGJvdGg7XG4gICAgdG9wOiA0NXB4O1xuXG59XG5tYXQtbGlzdC1pdGVtI2NvdXBvbkxpc3RJdGVtLmFwcGx5aW5nQ291cG9ue1xuICAgIHBhZGRpbmctYm90dG9tOiAxNXB4O1xuICAgIG1pbi1oZWlnaHQ6IDE0MHB4O1xufVxubWF0LWxpc3QtaXRlbSNjb3Vwb25MaXN0SXRlbS5hcHBseWluZ0NvdXBvbi5jb3Vwb25FcnJvcntcbiAgICBtaW4taGVpZ2h0OiAxNjBweDtcbn1cbjpob3N0IC9kZWVwLyBtYXQtbGlzdC1pdGVtI2NvdXBvbkxpc3RJdGVtLmFwcGx5aW5nQ291cG9uLmNvdXBvbkVycm9yIC5tYXQtbGlzdC1pdGVtLWNvbnRlbnQge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IC0yMHB4O1xufVxuOmhvc3QgL2RlZXAvIG1hdC1saXN0LWl0ZW0jY291cG9uTGlzdEl0ZW0uYXBwbHlpbmdDb3Vwb24gLm1hdC1saXN0LWl0ZW0tY29udGVudCB7XG4gICAgcGFkZGluZy1yaWdodDogMHB4O1xufVxuIl19 */"

/***/ }),

/***/ "./src/app/store/cart/cart.component.ts":
/*!**********************************************!*\
  !*** ./src/app/store/cart/cart.component.ts ***!
  \**********************************************/
/*! exports provided: CartComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CartComponent", function() { return CartComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _store_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../store.service */ "./src/app/store/store.service.ts");
/* harmony import */ var _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _packages_packages_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../packages/packages.model */ "./src/app/store/packages/packages.model.ts");
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../auth/auth.service */ "./src/app/auth/auth.service.ts");
/* harmony import */ var _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../client-account/client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _styleSheetService__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../styleSheetService */ "./src/app/styleSheetService.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");












var CartComponent = /** @class */ (function () {
    function CartComponent(storeService, businessService, responsiveService, styleSheetService, authService, renderer, clientAccountService, router, route, schedulerPreferenceService) {
        this.storeService = storeService;
        this.businessService = businessService;
        this.responsiveService = responsiveService;
        this.styleSheetService = styleSheetService;
        this.authService = authService;
        this.renderer = renderer;
        this.clientAccountService = clientAccountService;
        this.router = router;
        this.route = route;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.continueToCheckoutAfterLogin = false;
        this.quantities = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
        this.calculatingCartTotal = false;
        this.calculatingCartTotalWithCoupon = false;
        this.showDiscountInput = false;
        this.showCouponError = false;
        this.loadCart = false;
    }
    CartComponent.prototype.changeCartItemQuantity = function (item, event) {
        item = item.calculateTotalPrice();
        this.storeService.setCartData(this.cart);
        this.calculateCartTotal();
    };
    CartComponent.prototype.applyCouponToLineItems = function (couponCode) {
        if (couponCode !== undefined && couponCode !== null) {
            couponCode = couponCode.trim();
        }
        if (couponCode === undefined || couponCode === null || couponCode === '') {
            this.storeService.couponStatus.next('ERROR');
            this.storeService.couponStatusDetail.next('NO_CODE_ENTERED');
            this.storeService.applyingCoupon.next(false);
        }
        else {
            this.storeService.applyingCoupon.next(true);
            this.couponCode = couponCode;
            this.calculateCartTotal(this.couponCode);
        }
    };
    CartComponent.prototype.removeFromCart = function (item) {
        // console.log("remove from cart")
        // console.log(item);
        for (var i = 0; i < this.cart.items.length; i++) {
            if (this.cart.items[i].id === item.id) {
                this.cart.items.splice(i, 1);
            }
        }
        this.storeService.setCartData(this.cart);
        this.calculateCartTotal();
    };
    CartComponent.prototype.showApplyDiscount = function () {
        this.showDiscountInput = !this.showDiscountInput;
    };
    CartComponent.prototype.turnCartItemsIntoInvoiceItems = function (packageSoldItems) {
        var invoiceItems = [];
        for (var i = 0, x = packageSoldItems.length; i < x; i++) {
            var clientId = null;
            if (packageSoldItems[i].client !== null)
                clientId = packageSoldItems[i].client.clientId;
            var invoiceItem = new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_3__["InvoiceItem"](packageSoldItems[i].businessId, clientId);
            invoiceItem.packageSoldId = packageSoldItems[i].packageSoldId;
            invoiceItem.rate = packageSoldItems[i].price;
            invoiceItem.quantity = 1;
            invoiceItem.taxable = packageSoldItems[i].taxable;
            invoiceItems.push(invoiceItem);
        }
        return invoiceItems;
    };
    CartComponent.prototype.createInvoice = function (packageSoldItems) {
        var _this = this;
        var invoiceItems = this.turnCartItemsIntoInvoiceItems(packageSoldItems);
        if (invoiceItems.length > 0) {
            var invoice = new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_3__["Invoice"](this.preference.businessId, this.clientAccountService.setSelectedClientOnComponent(this.preference));
            invoice.invoiceItem = invoiceItems;
            this.storeService.createInvoice(invoice, this.couponCode).subscribe(function (invoice) {
                _this.cart.items = [];
                _this.storeService.setCartData(_this.cart);
                var navigationExtras = {
                    relativeTo: _this.route.root,
                    queryParams: {
                        paying: false
                    },
                    state: {
                        invoice: invoice,
                        paymentRequired: true,
                        fromCart: true
                    },
                    queryParamsHandling: 'merge',
                };
                _this.router.navigate(['invoices/' + invoice.invoiceHash], navigationExtras);
            });
        }
    };
    CartComponent.prototype.createPackageSoldObjs = function (packageSoldItems, createInvoice) {
        var _this = this;
        this.storeService.createPackageSoldObjs(packageSoldItems).subscribe(function (packageSoldObjs) {
            for (var i = 0, x = packageSoldObjs.length; i < x; i++)
                packageSoldObjs[i].taxable = packageSoldObjs[i].pkg.taxable;
            if (createInvoice)
                _this.createInvoice(packageSoldObjs);
        });
    };
    CartComponent.prototype.getPackageItems = function () {
        var packageItems = [];
        for (var i = 0, x = this.cart.items.length; i < x; i++) {
            if (this.cart.items[i].type === 'PACKAGE')
                packageItems.push(this.cart.items[i]);
        }
        var packageSoldItems = [];
        if (packageItems.length > 0) {
            for (var i = 0, x = packageItems.length; i < x; i++) {
                var packageSold = new _packages_packages_model__WEBPACK_IMPORTED_MODULE_6__["PackageSold"]();
                packageSold.packageId = packageItems[i].id;
                packageSold.businessId = packageItems[i].businessId;
                packageSold.client = this.clientAccountService.setSelectedClientOnComponent(this.preference);
                packageSold.usedQuantity = 0;
                packageSold.price = packageItems[i].price;
                packageSold.taxable = packageItems[i].taxable;
                for (var j = 0, x_1 = packageItems[i].quantityInCart; j < x_1; j++)
                    packageSoldItems.push(packageSold);
            }
        }
        return packageSoldItems;
    };
    CartComponent.prototype.continueToCheckout = function () {
        if (!this.isAuthenticated) {
            var loginTriggeredData = new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_3__["loginRegisterPopUpObject"]();
            loginTriggeredData.loadMyAccount = false;
            loginTriggeredData.description = this.preference.labelMap.cartTriggerLoginMsg;
            loginTriggeredData.calledFrom = 'CART';
            loginTriggeredData.callSubscriptionNext = true;
            this.continueToCheckoutAfterLogin = true;
            this.authService.loginCalled.next(loginTriggeredData);
        }
        else {
            var packageSoldItems = this.getPackageItems();
            this.createPackageSoldObjs(packageSoldItems, true);
        }
    };
    CartComponent.prototype.updateCouponSubjects = function (couponCode, error, errorType) {
        if (couponCode !== undefined && couponCode !== null) {
            if (error) {
                this.storeService.applyingCoupon.next(false);
                this.storeService.couponStatus.next("ERROR");
                if (errorType === undefined || errorType === null) {
                    this.storeService.couponStatusDetail.next("HTTP");
                    this.showCouponError = false;
                }
                else {
                    this.storeService.couponStatusDetail.next(errorType);
                    this.showCouponError = true;
                }
            }
            else {
                this.storeService.applyingCoupon.next(false);
                this.showCouponError = false;
            }
        }
    };
    CartComponent.prototype.calculateCartTotal = function (couponCode) {
        var _this = this;
        var packageSoldItems = this.getPackageItems();
        var invoiceItems = this.turnCartItemsIntoInvoiceItems(packageSoldItems);
        if (invoiceItems.length > 0) {
            if (couponCode !== undefined)
                this.calculatingCartTotalWithCoupon = true;
            else
                this.calculatingCartTotal = true;
            var invoice = new _common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_3__["Invoice"](this.preference.businessId, this.clientAccountService.setSelectedClientOnComponent(this.preference));
            invoice.invoiceItem = invoiceItems;
            this.storeService.getCartTotal(invoice, couponCode).subscribe(function (invoice) {
                _this.calculatingCartTotal = false;
                _this.calculatingCartTotalWithCoupon = false;
                _this.cart.subTotalAmount = invoice.subtotalAmount;
                _this.cart.taxAmount = invoice.taxAmount;
                _this.cart.transactionFeeAmount = invoice.transactionFeeAmount;
                if (invoice.discountAmount === null)
                    invoice.discountAmount = 0;
                var couponError = false;
                var couponErrorCode = null;
                if (invoice.invoiceItem !== null && invoice.invoiceItem.length !== 0) {
                    for (var i = 0, x = invoice.invoiceItem.length; i < x; i++) {
                        if (invoice.invoiceItem[i].couponError !== null) {
                            couponError = true;
                            couponErrorCode = invoice.invoiceItem[i].couponError;
                        }
                    }
                }
                _this.cart.discountAmount = invoice.discountAmount;
                _this.cart.invoiceTotalAmount = invoice.invoiceTotalAmount;
                _this.updateCouponSubjects(couponCode, couponError, couponErrorCode);
            }, function (error) {
                _this.calculatingCartTotal = false;
                _this.calculatingCartTotalWithCoupon = false;
                _this.updateCouponSubjects(couponCode, true);
            });
        }
        else {
            this.cart.subTotalAmount = 0;
            this.cart.taxAmount = 0;
            this.cart.discountAmount = 0;
            this.cart.invoiceTotalAmount = 0;
        }
    };
    CartComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.displayConfig = this.styleSheetService.displayConfig;
        if (this.displayConfig.store.enable) {
            this.loadCart = true;
            this.cart = this.storeService.cart;
            this.currency = this.businessService.currency;
            // console.log("this.cart ")
            // console.log(this.cart);
            this.preference = this.schedulerPreferenceService.schedulerPreference;
            // if(this.responsiveService.onMobileViewPort){
            //   this.wrapItemsInRow();
            // }
            this.calculateCartTotal();
            this.isAuthenticated = this.authService.isAuth();
            this.authenticationSubscription = this.authService.authChange.subscribe(function (isAuth) {
                _this.isAuthenticated = _this.authService.isAuth();
            });
            this.loginClosedSubscription = this.authService.loginClosed.subscribe(function (loginTriggeredData) {
                if (_this.continueToCheckoutAfterLogin)
                    _this.continueToCheckout();
            });
            this.registerClosedSubscription = this.authService.registerClosed.subscribe(function (loginTriggeredData) {
                if (_this.continueToCheckoutAfterLogin)
                    _this.continueToCheckout();
            });
        }
        else {
            this.router.navigate(['scheduler'], { relativeTo: this.route.root });
        }
    };
    CartComponent.prototype.ngOnDestroy = function () {
        if (this.authenticationSubscription !== undefined)
            this.authenticationSubscription.unsubscribe();
        if (this.loginClosedSubscription !== undefined)
            this.loginClosedSubscription.unsubscribe();
        if (this.registerClosedSubscription !== undefined)
            this.registerClosedSubscription.unsubscribe();
    };
    CartComponent.ctorParameters = function () { return [
        { type: _store_service__WEBPACK_IMPORTED_MODULE_2__["StoreService"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_5__["ResponsiveService"] },
        { type: _styleSheetService__WEBPACK_IMPORTED_MODULE_10__["StyleSheetService"] },
        { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_7__["AuthService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"] },
        { type: _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_8__["ClientAccountService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_9__["Router"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_9__["ActivatedRoute"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_11__["SchedulerPreferenceService"] }
    ]; };
    CartComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-cart',
            template: __webpack_require__(/*! raw-loader!./cart.component.html */ "./node_modules/raw-loader/index.js!./src/app/store/cart/cart.component.html"),
            styles: [__webpack_require__(/*! ./cart.component.css */ "./src/app/store/cart/cart.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_store_service__WEBPACK_IMPORTED_MODULE_2__["StoreService"], _business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"], _responsive_service__WEBPACK_IMPORTED_MODULE_5__["ResponsiveService"], _styleSheetService__WEBPACK_IMPORTED_MODULE_10__["StyleSheetService"],
            _auth_auth_service__WEBPACK_IMPORTED_MODULE_7__["AuthService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_8__["ClientAccountService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_9__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_9__["ActivatedRoute"], _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_11__["SchedulerPreferenceService"]])
    ], CartComponent);
    return CartComponent;
}());



/***/ }),

/***/ "./src/app/store/cart/cart.model.ts":
/*!******************************************!*\
  !*** ./src/app/store/cart/cart.model.ts ***!
  \******************************************/
/*! exports provided: CartItem, Cart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CartItem", function() { return CartItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cart", function() { return Cart; });
var CartItem = /** @class */ (function () {
    function CartItem() {
        this.id = null;
        this.businessId = null;
        this.type = null;
        this.name = null;
        this.price = null;
        this.quantityOfAppts = null;
        this.expireInDays = null;
        this.taxable = null;
        this.imageURL = null;
        this.totalPrice = 0;
        this.quantityInCart = null;
    }
    CartItem.prototype.createCartItem = function (item) {
        for (var prop in item) {
            if (this.hasOwnProperty(prop)) {
                this[prop] = item[prop];
            }
        }
        return this;
    };
    CartItem.prototype.createPackageItem = function (pkg) {
        this.id = pkg.packageId;
        this.type = CartItem.TYPE_PKG;
        this.name = pkg.packageName;
        this.quantityOfAppts = pkg.quantity;
        for (var prop in pkg) {
            if (this.hasOwnProperty(prop)) {
                this[prop] = pkg[prop];
            }
        }
        return this;
    };
    CartItem.prototype.calculateTotalPrice = function () {
        this.totalPrice = this.price * this.quantityInCart;
        // localStorage.setItem('cart', JSON.stringify(this));
        return this;
    };
    CartItem.TYPE_PKG = "PACKAGE";
    return CartItem;
}());

var Cart = /** @class */ (function () {
    function Cart() {
        this.items = [];
        this.subTotalAmount = 0;
        this.taxAmount = 0;
        this.taxRate = 0;
        this.invoiceTotalAmount = 0;
        this.discountAmount = 0;
        this.transactionFeeAmount = 0;
    }
    return Cart;
}());



/***/ }),

/***/ "./src/app/store/cart/cart.module.ts":
/*!*******************************************!*\
  !*** ./src/app/store/cart/cart.module.ts ***!
  \*******************************************/
/*! exports provided: CartModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CartModule", function() { return CartModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _cart_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cart.component */ "./src/app/store/cart/cart.component.ts");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../material.module */ "./src/app/material.module.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _scheduler_common_components_coupon_coupon_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../scheduler/common-components/coupon/coupon.module */ "./src/app/scheduler/common-components/coupon/coupon.module.ts");
/* harmony import */ var _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../ui-elements/ui-elements.module */ "./src/app/ui-elements/ui-elements.module.ts");
/* harmony import */ var _cart_routing_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cart-routing.module */ "./src/app/store/cart/cart-routing.module.ts");








var CartModule = /** @class */ (function () {
    function CartModule() {
    }
    CartModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [
                _cart_component__WEBPACK_IMPORTED_MODULE_2__["CartComponent"],
            ],
            imports: [
                _cart_routing_module__WEBPACK_IMPORTED_MODULE_7__["CartRoutingModule"],
                _angular_common__WEBPACK_IMPORTED_MODULE_4__["CommonModule"],
                _material_module__WEBPACK_IMPORTED_MODULE_3__["MaterialModule"],
                _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_6__["UIElementsModule"],
                _scheduler_common_components_coupon_coupon_module__WEBPACK_IMPORTED_MODULE_5__["CouponModule"]
            ]
        })
    ], CartModule);
    return CartModule;
}());



/***/ }),

/***/ "./src/app/store/packages/packages.component.css":
/*!*******************************************************!*\
  !*** ./src/app/store/packages/packages.component.css ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ":host /deep/ div.mat-card-header-text {\n margin: 0px 0px;\n}\n:host /deep/ mat-card mat-card-actions.mat-card-actions,\n:host /deep/ mat-card mat-card-actions.mat-card-actions:last-child{\n margin: 0px;\n padding: 0px;\n}\nmat-card img {\n max-width: calc(100% + 32px);\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3RvcmUvcGFja2FnZXMvcGFja2FnZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLGVBQWU7QUFDaEI7QUFDQTs7Q0FFQyxXQUFXO0NBQ1gsWUFBWTtBQUNiO0FBQ0E7Q0FDQyw0QkFBNEI7QUFDN0IiLCJmaWxlIjoic3JjL2FwcC9zdG9yZS9wYWNrYWdlcy9wYWNrYWdlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgL2RlZXAvIGRpdi5tYXQtY2FyZC1oZWFkZXItdGV4dCB7XG4gbWFyZ2luOiAwcHggMHB4O1xufVxuOmhvc3QgL2RlZXAvIG1hdC1jYXJkIG1hdC1jYXJkLWFjdGlvbnMubWF0LWNhcmQtYWN0aW9ucyxcbjpob3N0IC9kZWVwLyBtYXQtY2FyZCBtYXQtY2FyZC1hY3Rpb25zLm1hdC1jYXJkLWFjdGlvbnM6bGFzdC1jaGlsZHtcbiBtYXJnaW46IDBweDtcbiBwYWRkaW5nOiAwcHg7XG59XG5tYXQtY2FyZCBpbWcge1xuIG1heC13aWR0aDogY2FsYygxMDAlICsgMzJweCk7XG59XG4iXX0= */"

/***/ }),

/***/ "./src/app/store/packages/packages.component.ts":
/*!******************************************************!*\
  !*** ./src/app/store/packages/packages.component.ts ***!
  \******************************************************/
/*! exports provided: PackagesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PackagesComponent", function() { return PackagesComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _store_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../store.service */ "./src/app/store/store.service.ts");
/* harmony import */ var _styleSheetService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../styleSheetService */ "./src/app/styleSheetService.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");







var PackagesComponent = /** @class */ (function () {
    function PackagesComponent(storeService, styleSheetService, schedulerPreferenceService, businessService, responsiveService) {
        this.storeService = storeService;
        this.styleSheetService = styleSheetService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.businessService = businessService;
        this.responsiveService = responsiveService;
        this.packagesLoading = true;
        this.errorLoading = false;
        this.packagesLoaded = false;
    }
    PackagesComponent.prototype.getPackages = function () {
        var _this = this;
        this.packagesLoading = true;
        this.storeService.getPackages()
            .subscribe(function (packages) {
            _this.packages = packages;
            // for(let i = 0, x = this.packages.length; i < x; i++){
            //
            // }
            _this.packagesLoading = false;
            _this.packagesLoaded = true;
            _this.errorLoading = false;
        }, function (error) {
            _this.packagesLoading = false;
            _this.packagesLoaded = false;
            _this.errorLoading = true;
        });
    };
    PackagesComponent.prototype.ngOnInit = function () {
        this.styleMap = this.styleSheetService.mwStyleMap;
        this.preference = this.schedulerPreferenceService.schedulerPreference;
        this.currency = this.businessService.currency;
        // console.log("this.styleMap " )
        // console.log(this.styleMap);
        this.getPackages();
    };
    PackagesComponent.ctorParameters = function () { return [
        { type: _store_service__WEBPACK_IMPORTED_MODULE_2__["StoreService"] },
        { type: _styleSheetService__WEBPACK_IMPORTED_MODULE_3__["StyleSheetService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_6__["SchedulerPreferenceService"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_5__["ResponsiveService"] }
    ]; };
    PackagesComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'packages-list',
            template: __webpack_require__(/*! raw-loader!./packages.component.html */ "./node_modules/raw-loader/index.js!./src/app/store/packages/packages.component.html"),
            styles: [__webpack_require__(/*! ./packages.component.css */ "./src/app/store/packages/packages.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_store_service__WEBPACK_IMPORTED_MODULE_2__["StoreService"], _styleSheetService__WEBPACK_IMPORTED_MODULE_3__["StyleSheetService"],
            _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_6__["SchedulerPreferenceService"],
            _business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"], _responsive_service__WEBPACK_IMPORTED_MODULE_5__["ResponsiveService"]])
    ], PackagesComponent);
    return PackagesComponent;
}());



/***/ }),

/***/ "./src/app/store/packages/packages.model.ts":
/*!**************************************************!*\
  !*** ./src/app/store/packages/packages.model.ts ***!
  \**************************************************/
/*! exports provided: Package, PackageSold */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Package", function() { return Package; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PackageSold", function() { return PackageSold; });
var Package = /** @class */ (function () {
    function Package() {
    }
    return Package;
}());

var PackageSold = /** @class */ (function () {
    function PackageSold() {
    }
    return PackageSold;
}());



/***/ }),

/***/ "./src/app/store/packages/packages.module.ts":
/*!***************************************************!*\
  !*** ./src/app/store/packages/packages.module.ts ***!
  \***************************************************/
/*! exports provided: PackagesModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PackagesModule", function() { return PackagesModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _packages_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./packages.component */ "./src/app/store/packages/packages.component.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../material.module */ "./src/app/material.module.ts");
/* harmony import */ var _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../ui-elements/ui-elements.module */ "./src/app/ui-elements/ui-elements.module.ts");






var PackagesModule = /** @class */ (function () {
    function PackagesModule() {
    }
    PackagesModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [_packages_component__WEBPACK_IMPORTED_MODULE_2__["PackagesComponent"]],
            imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"], _material_module__WEBPACK_IMPORTED_MODULE_4__["MaterialModule"], _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_5__["UIElementsModule"]],
            exports: [_packages_component__WEBPACK_IMPORTED_MODULE_2__["PackagesComponent"]]
        })
    ], PackagesModule);
    return PackagesModule;
}());



/***/ }),

/***/ "./src/app/store/store-routing.module.ts":
/*!***********************************************!*\
  !*** ./src/app/store/store-routing.module.ts ***!
  \***********************************************/
/*! exports provided: StoreRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StoreRoutingModule", function() { return StoreRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _store_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./store.component */ "./src/app/store/store.component.ts");




var routes = [
    { path: 'store', component: _store_component__WEBPACK_IMPORTED_MODULE_3__["StoreComponent"] }
];
var StoreRoutingModule = /** @class */ (function () {
    function StoreRoutingModule() {
    }
    StoreRoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
        })
    ], StoreRoutingModule);
    return StoreRoutingModule;
}());



/***/ }),

/***/ "./src/app/store/store.component.css":
/*!*******************************************!*\
  !*** ./src/app/store/store.component.css ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0b3JlL3N0b3JlLmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/store/store.component.ts":
/*!******************************************!*\
  !*** ./src/app/store/store.component.ts ***!
  \******************************************/
/*! exports provided: StoreComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StoreComponent", function() { return StoreComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _styleSheetService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styleSheetService */ "./src/app/styleSheetService.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _store_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./store.service */ "./src/app/store/store.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");






var StoreComponent = /** @class */ (function () {
    function StoreComponent(storeService, styleSheetService, businessService, router, route) {
        this.storeService = storeService;
        this.styleSheetService = styleSheetService;
        this.businessService = businessService;
        this.router = router;
        this.route = route;
        this.loadStore = false;
    }
    StoreComponent.prototype.ngOnInit = function () {
        this.styleMap = this.styleSheetService.mwStyleMap;
        this.displayConfig = this.styleSheetService.displayConfig;
        this.currency = this.businessService.currency;
        if (this.displayConfig.store) {
            this.loadStore = true;
        }
        else {
            this.router.navigate(['scheduler'], { relativeTo: this.route.root });
        }
    };
    StoreComponent.ctorParameters = function () { return [
        { type: _store_service__WEBPACK_IMPORTED_MODULE_4__["StoreService"] },
        { type: _styleSheetService__WEBPACK_IMPORTED_MODULE_2__["StyleSheetService"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"] }
    ]; };
    StoreComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-store',
            template: __webpack_require__(/*! raw-loader!./store.component.html */ "./node_modules/raw-loader/index.js!./src/app/store/store.component.html"),
            styles: [__webpack_require__(/*! ./store.component.css */ "./src/app/store/store.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_store_service__WEBPACK_IMPORTED_MODULE_4__["StoreService"],
            _styleSheetService__WEBPACK_IMPORTED_MODULE_2__["StyleSheetService"],
            _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"],
            _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]])
    ], StoreComponent);
    return StoreComponent;
}());



/***/ }),

/***/ "./src/app/store/store.module.ts":
/*!***************************************!*\
  !*** ./src/app/store/store.module.ts ***!
  \***************************************/
/*! exports provided: StoreModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StoreModule", function() { return StoreModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _store_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./store.component */ "./src/app/store/store.component.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _packages_packages_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./packages/packages.module */ "./src/app/store/packages/packages.module.ts");
/* harmony import */ var _store_routing_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./store-routing.module */ "./src/app/store/store-routing.module.ts");






var StoreModule = /** @class */ (function () {
    function StoreModule() {
    }
    StoreModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [_store_component__WEBPACK_IMPORTED_MODULE_2__["StoreComponent"]],
            imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__["CommonModule"], _packages_packages_module__WEBPACK_IMPORTED_MODULE_4__["PackagesModule"], _store_routing_module__WEBPACK_IMPORTED_MODULE_5__["StoreRoutingModule"]]
        })
    ], StoreModule);
    return StoreModule;
}());



/***/ }),

/***/ "./src/app/store/store.service.ts":
/*!****************************************!*\
  !*** ./src/app/store/store.service.ts ***!
  \****************************************/
/*! exports provided: StoreService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StoreService", function() { return StoreService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/internal/operators */ "./node_modules/rxjs/internal/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _cart_cart_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cart/cart.model */ "./src/app/store/cart/cart.model.ts");







var StoreService = /** @class */ (function () {
    function StoreService(http) {
        this.http = http;
        this.cartChange = new rxjs__WEBPACK_IMPORTED_MODULE_5__["Subject"]();
        this.cart = new _cart_cart_model__WEBPACK_IMPORTED_MODULE_6__["Cart"]();
        this.applyingCoupon = new rxjs__WEBPACK_IMPORTED_MODULE_5__["Subject"]();
        this.couponStatus = new rxjs__WEBPACK_IMPORTED_MODULE_5__["Subject"]();
        this.couponStatusDetail = new rxjs__WEBPACK_IMPORTED_MODULE_5__["Subject"]();
        this.coupon = new rxjs__WEBPACK_IMPORTED_MODULE_5__["Subject"]();
        this.apiUrl = sessionStorage.getItem('csAPIBase') + 'cs/';
    }
    StoreService.prototype.handleError = function (error) {
        return Promise.reject(error);
    };
    StoreService.prototype.setCartData = function (cart) {
        this.cart = cart;
        localStorage.setItem('cart', JSON.stringify(this.cart));
        this.cartChange.next(true);
    };
    StoreService.prototype.addPackageToCart = function (pkg) {
        // console.log(pkg);
        pkg.showAddedToCartSuccess = true;
        var pkgInCart = false;
        // if(this.cart.items !== undefined)
        for (var i = 0, x = this.cart.items.length; i < x; i++) {
            if (this.cart.items[i].id === pkg.packageId) {
                pkgInCart = true;
                this.cart.items[i].quantityInCart = this.cart.items[i].quantityInCart + 1;
                this.cart.items[i] = this.cart.items[i].calculateTotalPrice();
            }
        }
        if (!pkgInCart) {
            var item = new _cart_cart_model__WEBPACK_IMPORTED_MODULE_6__["CartItem"]();
            item = item.createPackageItem(pkg);
            item.quantityInCart = 1;
            item = item.calculateTotalPrice();
            // item.id = pkg.packageId;
            // item.type = CartItem.TYPE_PKG;
            // item.name = pkg.packageName;
            // console.log(item);
            this.cart.items.push(item);
        }
        // console.log(this.cart.items);
        this.setCartData(this.cart);
        setTimeout(function () {
            pkg.showAddedToCartSuccess = false;
        }, 2000);
    };
    StoreService.prototype.getPackages = function () {
        return this.http
            .get(this.apiUrl + 'packages', { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            responseData = responseData.sort(function (a, b) { return (a.sortOrder < b.sortOrder) ? -1 : 1; });
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    StoreService.prototype.loadCart = function (businessId) {
        // localStorage.removeItem('cart');
        var cartFromMemory = localStorage.getItem('cart');
        // console.log("cartFromMemory ")
        // console.log(cartFromMemory);
        if (cartFromMemory !== undefined && cartFromMemory !== null && cartFromMemory !== '') {
            var cart = JSON.parse(cartFromMemory);
            for (var i = 0, x = cart.items.length; i < x; i++) {
                if (cart.items[i].businessId === businessId) {
                    var item = new _cart_cart_model__WEBPACK_IMPORTED_MODULE_6__["CartItem"]();
                    item = item.createCartItem(cart.items[i]);
                    this.cart.items.push(item);
                }
            }
            this.setCartData(this.cart);
        }
    };
    StoreService.prototype.getCartTotal = function (invoice, couponCode) {
        var paramsToPass = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]();
        paramsToPass = paramsToPass.append('couponCode', couponCode);
        return this.http
            .post(this.apiUrl + 'cartTotal', invoice, { observe: "body", responseType: 'json', params: paramsToPass })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    StoreService.prototype.createInvoice = function (invoice, couponCode) {
        var paramsToPass = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]();
        paramsToPass = paramsToPass.append('couponCode', couponCode);
        return this.http
            .post(this.apiUrl + 'invoices', invoice, { observe: "body", responseType: 'json', params: paramsToPass })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    StoreService.prototype.createPackageSoldObjs = function (packageItems) {
        return this.http
            .post(this.apiUrl + 'packageSold', packageItems, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    StoreService.prototype.updateCart = function () {
        var itemsInCart = 0;
        for (var i = 0, x = this.cart.items.length; i < x; i++) {
            itemsInCart = itemsInCart + this.cart.items[i].quantityInCart;
        }
        return itemsInCart;
    };
    StoreService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] }
    ]; };
    StoreService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]])
    ], StoreService);
    return StoreService;
}());



/***/ }),

/***/ "./src/app/styleSheetService.ts":
/*!**************************************!*\
  !*** ./src/app/styleSheetService.ts ***!
  \**************************************/
/*! exports provided: StyleSheetService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StyleSheetService", function() { return StyleSheetService; });
/* harmony import */ var _common_classes_default_styles_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common-classes/default-styles.model */ "./src/app/common-classes/default-styles.model.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./responsive.service */ "./src/app/responsive.service.ts");


var StyleSheetService = /** @class */ (function () {
    function StyleSheetService(responsiveService) {
        this.responsiveService = responsiveService;
        this.baseButtons = new _common_classes_default_styles_model__WEBPACK_IMPORTED_MODULE_0__["BaseButtons"]();
        this.baseChips = new _common_classes_default_styles_model__WEBPACK_IMPORTED_MODULE_0__["BaseChips"]();
        this.baseAlerts = new _common_classes_default_styles_model__WEBPACK_IMPORTED_MODULE_0__["BaseAlerts"]();
        this.baseLinks = new _common_classes_default_styles_model__WEBPACK_IMPORTED_MODULE_0__["BaseLinks"]();
        this.baseSpinner = new _common_classes_default_styles_model__WEBPACK_IMPORTED_MODULE_0__["BaseSpinner"]();
        this.baseFormElements = new _common_classes_default_styles_model__WEBPACK_IMPORTED_MODULE_0__["BaseFormElements"]();
        this.displayConfig = new _common_classes_default_styles_model__WEBPACK_IMPORTED_MODULE_0__["MiniWebsiteDisplayConfig"]();
        this.mwStyleMap = {};
        this.newStylePropsToMap = new _common_classes_default_styles_model__WEBPACK_IMPORTED_MODULE_0__["NewToOldStylesMap"]().map;
    }
    StyleSheetService.prototype.addStylesheetToHead = function (stylesheet) {
        if (stylesheet !== null) {
            var link = document.createElement("link");
            link.href = stylesheet;
            link.type = "text/css";
            link.rel = "stylesheet";
            link.media = "screen,print";
            document.getElementsByTagName("head")[0].appendChild(link);
        }
    };
    StyleSheetService.prototype.mapOldColorsToNewStyles = function (miniWebsiteStyles, oldStylesMap) {
        for (var i = 0, x = this.newStylePropsToMap.length; i < x; i++) {
            for (var bcProp in oldStylesMap) {
                for (var j = 0, y = this.newStylePropsToMap[i].oldProps.length; j < y; j++) {
                    if (bcProp === this.newStylePropsToMap[i].oldProps[j].oldPropName) {
                        var newProp = this.newStylePropsToMap[i].newProp;
                        var propAlreadyOnMWS = false;
                        for (var mwProp in miniWebsiteStyles) {
                            if (mwProp === newProp) {
                                propAlreadyOnMWS = true;
                                var cssPropsOnMW = new _common_classes_default_styles_model__WEBPACK_IMPORTED_MODULE_0__["CSSProperties"]();
                                cssPropsOnMW.setStyles(miniWebsiteStyles[mwProp]); //since array has it as backgroundColor and styleMap has it as background-color
                                if (cssPropsOnMW[this.newStylePropsToMap[i].oldProps[j].newPropProperty] === undefined) {
                                    var cssProps = new _common_classes_default_styles_model__WEBPACK_IMPORTED_MODULE_0__["CSSProperties"]();
                                    cssProps[this.newStylePropsToMap[i].oldProps[j].newPropProperty] = oldStylesMap[bcProp];
                                    // let styleObject = cssProps.getStylesForStylesheet();
                                    // for(let cssprop in styleObject){
                                    //     miniWebsiteStyles[mwProp][cssprop] = oldStylesMap[bcProp];
                                    // }
                                    for (var cssProp in miniWebsiteStyles[mwProp]) {
                                        cssProps[cssProp] = miniWebsiteStyles[mwProp][cssProp];
                                    }
                                    miniWebsiteStyles[mwProp] = cssProps;
                                }
                            }
                        }
                        if (!propAlreadyOnMWS) {
                            // let cssProperties = new CSSProperties();
                            // cssProperties[this.newStylePropsToMap[i].oldProps[j].newPropProperty]= oldStylesMap[bcProp];
                            // miniWebsiteStyles[newProp] = cssProperties.getStylesForStylesheet();
                            miniWebsiteStyles[newProp] = new _common_classes_default_styles_model__WEBPACK_IMPORTED_MODULE_0__["CSSProperties"]();
                            miniWebsiteStyles[newProp][this.newStylePropsToMap[i].oldProps[j].newPropProperty] = oldStylesMap[bcProp];
                        }
                    }
                }
            }
        }
        return miniWebsiteStyles;
    };
    StyleSheetService.prototype.mapColorsToElements = function (styleMap, baseElements) {
        for (var el in baseElements) {
            for (var styleProp in styleMap) {
                if (styleProp === el) {
                    baseElements[el].setStyles(styleMap[styleProp]);
                }
            }
        }
    };
    StyleSheetService.prototype.mapPropsToDisplayConfig = function (styleMap, displayConfig) {
        //If they have store set to enabled then packages should inherit from store
        for (var prop in displayConfig) {
            if (styleMap[prop] !== undefined && displayConfig[prop].children !== undefined && displayConfig[prop].children !== null && displayConfig[prop].children.length > 0) {
                //let's say they have store set on stylemap but not packages which is a child of store
                for (var i = 0, x = displayConfig[prop].children.length; i < x; i++) {
                    if (styleMap[displayConfig[prop].children[i]] === undefined) {
                        styleMap[displayConfig[prop].children[i]] = styleMap[prop];
                    }
                }
            }
        }
        for (var prop in displayConfig) {
            if (styleMap[prop] && styleMap[prop].enable !== undefined) {
                displayConfig[prop].enable = styleMap[prop].enable;
            }
        }
        return displayConfig;
    };
    StyleSheetService.prototype.getStyleObject = function (styleMap, formElement, styleMapElement) {
        if (formElement.backgroundSelector !== undefined) {
            if (styleMap[formElement.backgroundSelector] === undefined)
                styleMap[formElement.backgroundSelector] = {};
            if (styleMapElement.backgroundColor !== undefined)
                styleMap[formElement.backgroundSelector].backgroundColor = styleMapElement.backgroundColor;
            else
                styleMap[formElement.backgroundSelector].backgroundColor = styleMapElement.color;
        }
        if (formElement.colorSelector !== undefined) {
            if (styleMap[formElement.colorSelector] === undefined)
                styleMap[formElement.colorSelector] = {};
            styleMap[formElement.colorSelector].color = styleMapElement.color;
        }
        if (formElement.textSelector) {
            if (!styleMap[formElement.textSelector])
                styleMap[formElement.textSelector] = {};
            styleMap[formElement.textSelector].fontSize = styleMapElement.fontSize;
        }
        if (formElement.borderSelector !== undefined) {
            if (styleMap[formElement.borderSelector] === undefined)
                styleMap[formElement.borderSelector] = {};
            styleMap[formElement.borderSelector].borderColor = styleMapElement.color;
        }
        if (formElement.dottedUnderlineSelector !== undefined) {
            if (styleMap[formElement.dottedUnderlineSelector] === undefined)
                styleMap[formElement.dottedUnderlineSelector] = {};
            var dottedUnderlineObj = 'linear-gradient(to right, ' + styleMapElement.color + ' 0, ' + styleMapElement.color + ' 33%, #0000 0)';
            styleMap[formElement.dottedUnderlineSelector].backgroundImage = dottedUnderlineObj;
        }
        if (formElement.strokeSelector !== undefined) {
            if (styleMap[formElement.strokeSelector] === undefined)
                styleMap[formElement.strokeSelector] = {};
            styleMap[formElement.strokeSelector].stroke = styleMapElement.color;
        }
        return styleMap;
    };
    StyleSheetService.prototype.setDefaultElementsFromStyleMap = function (styleMap, defaultProps) {
        for (var feProp in defaultProps) {
            for (var mwProp in styleMap) {
                if (defaultProps[feProp].savedSelectorValue === mwProp) {
                    styleMap = this.getStyleObject(styleMap, defaultProps[feProp], styleMap[mwProp]);
                    delete styleMap[mwProp];
                }
            }
        }
        return styleMap;
    };
    StyleSheetService.prototype.mapStyleSheetDefaults = function (styleMap) {
        if (!styleMap['.mat-radio-button-tt']) {
            styleMap['.mat-radio-button-tt'] = this.baseFormElements.radioDial.getStylesForStylesheet();
            styleMap['.mat-radio-button-tt-print'] = this.baseFormElements.radioDial.getStylesForStylesheet();
        }
        if (!styleMap['.mat-checkbox-tt'])
            styleMap['.mat-checkbox-tt'] = this.baseFormElements.checkBox.getStylesForStylesheet();
        if (!styleMap['mat-form-field.mat-form-field'])
            styleMap['mat-form-field.mat-form-field'] = this.baseFormElements.formFieldGeneral.getStylesForStylesheet();
        if (!styleMap['.mat-form-field'])
            styleMap['.mat-form-field'] = this.baseFormElements.formFieldResting.getStylesForStylesheet();
        if (!styleMap['.mat-form-field.mat-focused'])
            styleMap['.mat-form-field.mat-focused'] = this.baseFormElements.formFieldFocused.getStylesForStylesheet();
        if (!styleMap['.mat-form-field-invalid'])
            styleMap['.mat-form-field-invalid'] = this.baseFormElements.formFieldInvalid.getStylesForStylesheet();
        if (!styleMap['.mat-form-field-print'])
            styleMap['.mat-form-field-print'] = this.baseFormElements.formFieldPrint.getStylesForStylesheet();
        if (!styleMap.body || (styleMap.body && !styleMap.body['loadingSpinner']))
            styleMap['loadingSpinner'] = this.baseSpinner.spinner.getStylesForStylesheet();
        else
            styleMap['loadingSpinner'] = { 'color': styleMap.body['loadingSpinner'] };
        return this.setDefaultElementsFromStyleMap(styleMap, new _common_classes_default_styles_model__WEBPACK_IMPORTED_MODULE_0__["FormElements"]());
    };
    // TT-6476 -- for now since we haven't separated mat-cards into the header, content, and footer elements in the schedulerStyleSheet, take it
    // and apply the mat-card styling to the elements for borders; if come back later and add in the header/content/footer, may not need this
    StyleSheetService.prototype.mapMatCardSubStyles = function (styleMap) {
        var propertiesGettingSet = ['borderBottomColor', 'borderBottomWidth'];
        var cardProps = [
            { styleMapProp: 'mat-card', selector: 'mat-toolbar.toolbarCardHeader, mat-card-header.toolbarCardHeader, .invoiceBalanceDivider, mat-card-content, mat-list-item' },
            { styleMapProp: 'schedulerBox', selector: '#schedulerBox mat-toolbar.toolbarCardHeader, #schedulerBox mat-card-header.toolbarCardHeader, #schedulerBox mat-card-content, #schedulerBox mat-list-item' },
            { styleMapProp: 'myAccountCard', selector: '#myAccountCard mat-toolbar.toolbarCardHeader, #myAccountCard mat-card-header.toolbarCardHeader, #myAccountCard mat-card-content, #myAccountCard mat-list-item' },
            { styleMapProp: 'businessInfo', selector: '#businessInfo mat-toolbar.toolbarCardHeader, #businessInfo mat-card-header.toolbarCardHeader, #businessInfo mat-list-item' },
            { styleMapProp: 'policy', selector: '#policy mat-toolbar.toolbarCardHeader, #policy mat-card-header.toolbarCardHeader, #policy mat-list-item' },
        ];
        var styleProps = new _common_classes_default_styles_model__WEBPACK_IMPORTED_MODULE_0__["CSSProperties"]();
        styleProps.borderBottomColor = '#ebedf2';
        styleProps.borderBottomWidth = '1px';
        if (styleMap['mat-card'] == undefined) {
            styleMap['mat-card'] = styleProps;
        }
        // @ts-ignore
        // console.log("styleMap 2 " + JSON.stringify(styleMap, true, 2));
        for (var i = 0, x = cardProps.length; i < x; i++) {
            if (styleMap[cardProps[i].styleMapProp] !== undefined) {
                var styleObjToSet = {};
                var propCounter = 0;
                for (var prop in styleMap[cardProps[i].styleMapProp]) {
                    if (propertiesGettingSet.indexOf(prop) !== -1 && styleMap[cardProps[i].styleMapProp][prop] !== undefined) {
                        styleObjToSet[prop] = styleMap[cardProps[i].styleMapProp][prop];
                        propCounter++;
                    }
                }
                if (propCounter > 0)
                    styleMap[cardProps[i].selector] = styleObjToSet;
            }
        }
        return styleMap;
    };
    StyleSheetService.prototype.configureLogoAlignment = function (miniWebsite, preference) {
        var alignment = 'left';
        if (miniWebsite.styleSheetMap.businessLogo && miniWebsite.styleSheetMap.businessLogo.alignment) {
            alignment = miniWebsite.styleSheetMap.businessLogo.alignment;
        }
        else if (miniWebsite.logoAlign && miniWebsite.logoAlign) {
            alignment = miniWebsite.logoAlign;
        }
        //If logo is not displayed at all, then align left
        if (miniWebsite.styleSheetMap.businessLogo &&
            miniWebsite.styleSheetMap.businessLogo.display &&
            miniWebsite.styleSheetMap.businessLogo.display === 'none') {
            alignment = 'left';
            miniWebsite.styleSheetMap['#topNav.topNavRow'] = { 'justifyContent': 'flex-end' };
        }
        //left is default so if it is set to left, don't need to do anything
        if (alignment === 'center') {
            var showLogin = true;
            if (preference !== undefined) {
                var showBtns = this.responsiveService.showLoginRegisterBtnLogic(preference);
                showLogin = showBtns.showLoginBtn;
            }
            if (!this.responsiveService.onMobileViewPort || !showLogin) {
                miniWebsite.styleSheetMap['login-register-btns'] = { float: 'right', position: 'relative', 'top': '-50px' };
                miniWebsite.styleSheetMap['#topNav.topNavRow'] = { 'justifyContent': 'center' };
            }
            else {
                alignment = 'left';
            }
        }
        miniWebsite.logoAlign = alignment;
        return miniWebsite;
    };
    StyleSheetService.prototype.createStyleSheet = function (miniWebsite, preference) {
        if (miniWebsite.styleSheetMap === undefined) {
            // LHB 04/04/2022 TT-8577 -- reconciling styles that can be set on custom booking site
            var defaultStyleSheetMap = null;
            var schedulerLinkStyleSheetMap = null;
            if (miniWebsite.landingPageStylesJSON !== undefined && miniWebsite.landingPageStylesJSON !== null)
                defaultStyleSheetMap = JSON.parse(miniWebsite.landingPageStylesJSON);
            if (miniWebsite.schedulerLinkLandingPageStylesJson !== undefined && miniWebsite.schedulerLinkLandingPageStylesJson !== null)
                schedulerLinkStyleSheetMap = JSON.parse(miniWebsite.schedulerLinkLandingPageStylesJson);
            if (defaultStyleSheetMap && schedulerLinkStyleSheetMap) {
                for (var prop in schedulerLinkStyleSheetMap) {
                    if (defaultStyleSheetMap[prop]) {
                        for (var cssStyle in schedulerLinkStyleSheetMap[prop]) {
                            if (defaultStyleSheetMap[prop][cssStyle]) {
                                defaultStyleSheetMap[prop][cssStyle] = schedulerLinkStyleSheetMap[prop][cssStyle];
                            }
                        }
                    }
                    else
                        defaultStyleSheetMap[prop] = schedulerLinkStyleSheetMap[prop];
                }
                miniWebsite.styleSheetMap = defaultStyleSheetMap;
            }
            else if (schedulerLinkStyleSheetMap)
                miniWebsite.styleSheetMap = schedulerLinkStyleSheetMap;
            else if (defaultStyleSheetMap)
                miniWebsite.styleSheetMap = defaultStyleSheetMap;
            else
                miniWebsite.styleSheetMap = {};
        }
        if (miniWebsite.logoUrl === undefined || miniWebsite.logoUrl === null) {
            miniWebsite.logoUrl = 'https://9a812d2609e610ab07eb-b463fa4ca2c8095be4f297e4d7f6781b.ssl.cf2.rackcdn.com/timetap-logo-black.png';
        }
        //For old data migration, copy what was set in the styles map previously to new format
        // let landingPageStylesMap = new BaseColors();
        if (miniWebsite.landingPageStylesMap === undefined || miniWebsite.landingPageStylesMap === null) {
            miniWebsite.landingPageStylesMap = {};
        }
        //check and see if properties that are stored flat on object have been returned in map; if they haven't, write them to the map (likely update hasn't been called in backend)
        var flatPropertiesToWriteToMap = ['businessInfoColor', 'footerTextColor', 'footerLinkColor', 'headerColor', 'logoAlign', 'navigationBackgroundColor', 'websiteBackgroundColor', 'policyBackgroundColor'];
        for (var i = 0, x = flatPropertiesToWriteToMap.length; i < x; i++) {
            if (!miniWebsite.landingPageStylesMap.hasOwnProperty(flatPropertiesToWriteToMap[i])) {
                miniWebsite.landingPageStylesMap[flatPropertiesToWriteToMap[i]] = miniWebsite[flatPropertiesToWriteToMap[i]];
            }
        }
        // LHB 03/17/2022 TT-8597 -- with release of color scheme and styles in new back office, removing need to map legacy props to existing
        // miniWebsite.styleSheetMap = this.mapOldColorsToNewStyles(miniWebsite.styleSheetMap, miniWebsite.landingPageStylesMap);
        //Since the form override selectors are kind of complicated, don't want to store them as such on backoffice
        //instead, grab any that are in class FormElements here and replace the selector
        miniWebsite.styleSheetMap = this.mapStyleSheetDefaults(miniWebsite.styleSheetMap);
        //do the same thing with list elements
        miniWebsite.styleSheetMap = this.setDefaultElementsFromStyleMap(miniWebsite.styleSheetMap, new _common_classes_default_styles_model__WEBPACK_IMPORTED_MODULE_0__["MatListElements"]());
        //same thing with spinner
        miniWebsite.styleSheetMap = this.setDefaultElementsFromStyleMap(miniWebsite.styleSheetMap, new _common_classes_default_styles_model__WEBPACK_IMPORTED_MODULE_0__["SpinnerElement"]());
        // TT-6476 -- for now since we haven't separated mat-cards into the header, content, and footer elements in the schedulerStyleSheet, take it
        // and apply the mat-card styling to the elements for borders; if come back later and add in the header/content/footer, may not need this
        miniWebsite.styleSheetMap = this.mapMatCardSubStyles(miniWebsite.styleSheetMap);
        //Logo is difficult to define through just one property so depending on what they have selected we configure styles to match
        //doing this before loop below so style is applied to stylesheet
        miniWebsite = this.configureLogoAlignment(miniWebsite, preference);
        //If they set the default text color but not any of the other text colors, other properties are overriding; add check to add other text elements to list if needed
        if (miniWebsite.styleSheetMap.body !== undefined && miniWebsite.styleSheetMap.body.color !== undefined) {
            var textElements = ['h1', 'h2', 'h3', 'h4', 'h5', 'label', 'div', 'span', 'p', 'i'];
            for (var i = 0, x = textElements.length; i < x; i++) {
                if (miniWebsite.styleSheetMap[textElements[i]] === undefined) { //don't have an h1/div/label/etc. property on there at all
                    miniWebsite.styleSheetMap[textElements[i]] = { color: miniWebsite.styleSheetMap.body.color };
                }
                else if (miniWebsite.styleSheetMap[textElements[i]].color === undefined) {
                    miniWebsite.styleSheetMap[textElements[i]].color = miniWebsite.styleSheetMap.body.color;
                }
            }
        }
        //Set property flags to hide or show
        //for testing, adding in packages to styleMap
        // miniWebsite.styleSheetMap.store = {enable: true};
        // miniWebsite.styleSheetMap.packages = {enable: true, columns: 3}
        if (preference && preference.booleanMap)
            miniWebsite.styleSheetMap.waitList = { enable: preference.booleanMap.showJoinWaitListTab };
        miniWebsite.displayConfig = this.mapPropsToDisplayConfig(miniWebsite.styleSheetMap, this.displayConfig);
        // console.log("this.displayConfig")
        // console.log(this.displayConfig);
        //Lastly, add properties to styleMap from DefaultStyleMap if they are not already set
        var defaultStyleMap = new _common_classes_default_styles_model__WEBPACK_IMPORTED_MODULE_0__["DefaultStyleMap"]();
        for (var prop in defaultStyleMap) {
            if (miniWebsite.styleSheetMap[prop] === undefined) {
                miniWebsite.styleSheetMap[prop] = defaultStyleMap[prop];
            }
            else {
                for (var childProp in defaultStyleMap[prop]) {
                    if (miniWebsite.styleSheetMap[prop][childProp] === undefined) {
                        miniWebsite.styleSheetMap[prop][childProp] = defaultStyleMap[prop][childProp];
                    }
                }
            }
        }
        //@ts-ignore
        // console.log("miniWebsite.styleSheetMap " + JSON.stringify(miniWebsite.styleSheetMap, true, 2));
        var styleEl = document.createElement('style');
        var styleSheet;
        // Append style element to head
        document.head.appendChild(styleEl);
        // Grab style sheet
        styleSheet = styleEl.sheet;
        for (var prop in miniWebsite.styleSheetMap) {
            var selector = prop;
            //since storing as backgroundColor, borderColor, etc, need to create properties object which will reformat as expected for CSS into background-color, border-color, etc.
            var cssProperties = new _common_classes_default_styles_model__WEBPACK_IMPORTED_MODULE_0__["CSSProperties"]();
            cssProperties.setStyles(miniWebsite.styleSheetMap[prop]);
            var styleProperties = cssProperties.getStylesForStylesheet();
            var propStr = '';
            for (var styleProp in styleProperties) {
                propStr += styleProp + ':' + styleProperties[styleProp] + ';\n';
            }
            styleSheet.insertRule(selector + '{' + propStr + '}', styleSheet.cssRules.length);
        }
        this.mapColorsToElements(miniWebsite.styleSheetMap, this.baseButtons);
        this.mapColorsToElements(miniWebsite.styleSheetMap, this.baseChips);
        this.mapColorsToElements(miniWebsite.styleSheetMap, this.baseAlerts);
        this.mwStyleMap = miniWebsite.styleSheetMap;
    };
    StyleSheetService.ctorParameters = function () { return [
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_1__["ResponsiveService"] }
    ]; };
    return StyleSheetService;
}());



/***/ }),

/***/ "./src/app/tags.service.ts":
/*!*********************************!*\
  !*** ./src/app/tags.service.ts ***!
  \*********************************/
/*! exports provided: TagsService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TagsService", function() { return TagsService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var moment_moment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! moment/moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment_moment__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(moment_moment__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment-timezone/moment-timezone */ "./node_modules/moment-timezone/moment-timezone.js");
/* harmony import */ var moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _scheduler_time_moment_timezones_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scheduler/time/moment-timezones.service */ "./src/app/scheduler/time/moment-timezones.service.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./common-classes/TableColumnData.model */ "./src/app/common-classes/TableColumnData.model.ts");
/* harmony import */ var _pipes_localecurrency_pipe__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../pipes/localecurrency.pipe */ "./src/pipes/localecurrency.pipe.ts");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./business.service */ "./src/app/business.service.ts");
/* harmony import */ var _models_Appointment_model__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../models/Appointment.model */ "./src/models/Appointment.model.ts");
/* harmony import */ var _models_Reason_model__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../models/Reason.model */ "./src/models/Reason.model.ts");













var TagsService = /** @class */ (function () {
    function TagsService(datePipe, localeCurrency, titleCasePipe, timeService, momentTimezoneService, injector) {
        this.datePipe = datePipe;
        this.localeCurrency = localeCurrency;
        this.titleCasePipe = titleCasePipe;
        this.timeService = timeService;
        this.momentTimezoneService = momentTimezoneService;
        this.injector = injector;
        this.addOnReasonListTags = ['%ADD_ON_REASON_LIST_SIMPLE%',
            '%ADD_ON_REASON_LIST_PRICE%',
            '%ADD_ON_REASON_LIST_DESC%',
            '%ADD_ON_REASON_LIST_INSTRUCTIONS%',
            '%ADD_ON_REASON_LIST_INSTRUCTIONS2%',
            '%ADD_ON_REASON_LIST_PRICE_DESC%',
            '%ADD_ON_REASON_LIST_PRICE_INSTRUCTIONS%',
            '%ADD_ON_REASON_LIST_PRICE_INSTRUCTIONS2%'];
        this.addOnReasonListTagLabelMap = [{ labelMapProp: 'addOnReasonListItemLabelSimple', tag: '%ADD_ON_REASON_LIST_SIMPLE%' },
            { labelMapProp: 'addOnReasonListItemLabelPrice', tag: '%ADD_ON_REASON_LIST_PRICE%' },
            { labelMapProp: 'addOnReasonListItemLabelDesc', tag: '%ADD_ON_REASON_LIST_DESC%' },
            { labelMapProp: 'addOnReasonListItemLabelInstructions', tag: '%ADD_ON_REASON_LIST_INSTRUCTIONS%' },
            { labelMapProp: 'addOnReasonListItemLabelInstructions2', tag: '%ADD_ON_REASON_LIST_INSTRUCTIONS2%' },
            { labelMapProp: 'addOnReasonListItemLabelPriceDesc', tag: '%ADD_ON_REASON_LIST_PRICE_DESC%' },
            { labelMapProp: 'addOnReasonListItemLabelPriceInstructions', tag: '%ADD_ON_REASON_LIST_PRICE_INSTRUCTIONS%' },
            { labelMapProp: 'addOnReasonListItemLabelPriceInstructions2', tag: '%ADD_ON_REASON_LIST_PRICE_INSTRUCTIONS2%' }];
        this.businessTagsArray = [
            { propName: 'businessName', tags: ["%BUSINESS_NAME%"] }
        ];
        this.preferenceTagsArray = [
            { propName: 'maxActiveApptClient', tags: ["%MAX_ACTIVE_APPTS%"] },
            { propName: 'rescheduleHrs', tags: ["%ALLOWED_RESCHEDULE_HOURS%"] },
            { propName: 'cancelHrs', tags: ["%ALLOWED_CANCEL_HOURS%"] },
        ];
        this.clientTagsArray = [
            { propName: "fullName", tags: ["%CLIENT_FULLNAME%"] },
            { propName: "firstName", tags: ["%CLIENT_FIRSTNAME%"], fallBackProp: "fullName" },
            { propName: "activeApptCount", tags: ["%CLIENT_ACTIVE_APPT_COUNT%"] }
        ];
        this.locationFieldTags = [
            { propName: "locationName", tags: ["%LOCATION_NAME%"] },
            { propName: "description", tags: ["%LOCATION_ADDRESS%"] },
            { propName: "directions", tags: ["%LOCATION_DIRECTIONS%"] },
            { propName: "officePhone", tags: ["%LOCATION_OFFICEPHONE%"] },
            { propName: "emailAddress", tags: ["%LOCATION_EMAIL%"] },
            { propName: 'virtualRoomUrl', tags: ['%LOCATION_VIRTUAL_ROOM_URL%'] }
        ];
        this.locationGroupFieldTags = [
            { propName: "groupName", tags: ["%LOCATION_GROUP_NAME%"] },
            { propName: "groupDescription", tags: ["%LOCATION_GROUP_DESCRIPTION%"] },
            { propName: "directions", tags: ["%LOCATION_GROUP_DIRECTIONS%"] },
            { propName: "privateUrl", tags: ["%LOCATION_GROUP_BOOKURL%"] }
        ];
        this.staffFieldTags = [
            { propName: "fullName", tags: ["%STAFF_FULLNAME%"] },
            { propName: "fullName", tags: ["%STAFF_FIRSTNAME%"] },
            { propName: "description", tags: ["%STAFF_DESCRIPTION%"] },
            { propName: "email", tags: ["%STAFF_EMAIL%"] },
            { propName: "skypeId", tags: ["%STAFF_SKYPE_ID%"] },
            { propName: "cellPhone", tags: ["%STAFF_MOBILE%"] },
            { propName: "emailFooter", tags: ["%STAFF_SIGNATURE%"] },
            { propName: "emailInstructions", tags: ["%STAFF_INSTRUCTIONS%"] },
            { propName: "emailInstructions2", tags: ["%STAFF_INSTRUCTIONS2%"] }
        ];
        this.reasonFieldTags = [
            { propName: 'reasonDesc', tags: ['%REASON%'] },
            { propName: 'reasonDetail', tags: ['%REASON_DESCRIPTION%'] },
            { propName: 'price', tags: ['%REASON_PRICE%'] },
            { propName: 'emailInstructions', tags: ['%REASON_INSTRUCTIONS%'] },
            { propName: 'emailInstructions2', tags: ['%REASON_INSTRUCTIONS2%'] }
        ];
        this.repeatingApptTags = [
            { propName: 'recurringAppointmentId', tags: ['%RECURRING_APPT_ID%'] },
            { propName: 'status', tags: ['%RECURRING_STATUS%'] },
            { propName: 'startDate', tags: ['%RECURRING_APPT_STARTDATE%'] },
            { propName: 'endDate', tags: ['%RECURRING_APPT_ENDDATE%'] },
            { propName: 'weeksOrMonths', tags: ['%REPEAT_PERIOD%'] },
            { propName: 'frequency', tags: ['%REPEAT_FREQUENCY%'] }
        ];
        this.repeatingApptOptionTags = [
            { propName: 'numberOfAppointments', tags: ['%REASON_REPEATING_OPTION_SESSION_COUNT%'] }
        ];
        this.waitlistRegistrationTags = [
            { propName: 'waitListId', tags: ['%WAIT_LIST_ID%'] },
            { propName: 'status', tags: ['%WAIT_LIST_STATUS%'] },
            { propName: 'preferredDate', tags: ['%WAIT_LIST_PREFERRED_DATE%'] },
            { propName: 'preferredDateStart', tags: ['%WAIT_LIST_PREFERRED_DATE_START%'] },
            { propName: 'preferredDateEnd', tags: ['%WAIT_LIST_PREFERRED_DATE_END%'] },
        ];
        this.invoiceFieldTags = [
            { propName: 'balanceAmount', tags: ['%INVOICE_BALANCE_AMOUNT%'] },
            { propName: 'invoiceNumber', tags: ['%INVOICE_NUMBER%'] },
            { propName: 'subtotalAmount', tags: ['%INVOICE_SUBTOTAL_AMOUNT%'] },
            { propName: 'taxAmount', tags: ['%INVOICE_TAX_AMOUNT%'] },
            { propName: 'tax2Amount', tags: ['%INVOICE_TAX2_AMOUNT%'] },
            { propName: 'invoiceTotalAmount', tags: ['%INVOICE_AMOUNT%'] },
            { propName: 'paidAmount', tags: ['%INVOICE_PAID_AMOUNT%'] },
            { propName: 'paymentAmount', tags: ['%INVOICE_PAYMENT_AMOUNT%'] },
        ];
        this.invoiceItemFieldTags = [
            { propName: 'description', tags: ['%INVOICE_ITEM_DESCRIPTION%'] }
        ];
        this.creditCardFieldTags = [
            { propName: 'brand', tags: ['%CREDIT_CARD_BRAND%'] },
            { propName: 'last4', tags: ['%CREDIT_CARD_LAST4%'] },
            { propName: 'expiration', tags: ['%CREDIT_CARD_EXPIRATION%'] },
            { propName: 'zip', tags: ['%CREDIT_CARD_ZIP%'] },
        ];
        this.packageFieldTags = [
            { propName: 'packageName', tags: ['%PACKAGE_NAME%'] },
        ];
        this.packageSoldFieldTags = [
            { propName: 'usedQuantity', tags: ['%PACKAGE_USED_QUANTITY%'] },
            { propName: 'remainingQuantity', tags: ['%PACKAGE_REMAINING_QUANTITY%'] },
            { propName: 'maxQuantity', tags: ['%PACKAGE_MAX_QUANTITY%'] },
            { propName: 'expireDate', tags: ['%PACKAGE_EXPIRE_DATE%'] },
            { propName: 'status', tags: ['%PACKAGE_STATUS%'] }
        ];
        this.couponFieldTags = [
            { propName: 'couponCode', tags: ['%COUPON_CODE%'] },
            { propName: 'couponName', tags: ['%COUPON_NAME%'] },
            { propName: 'description', tags: ['%COUPON_DESCRIPTION%'] },
            { propName: 'endDate', tags: ['%COUPON_ENDDATE%'] },
            { propName: 'maxUseCount', tags: ['%COUPON_MAX_USE_COUNT%'] },
            { propName: 'appliedReasonCount', tags: ['%COUPON_APPLIED_REASON_COUNT%'] },
        ];
        this.disclaimerFormTags = [
            { propName: 'formName', tags: ['%FORM_NAME%'] },
        ];
        this.clientFormListObjTags = [
            { propName: 'formName', tags: ['%FORM_NAME%'] },
            { propName: 'disclaimerFormDataUrl', tags: ['%FORM_URL%'] },
            { propName: 'disclaimerFormUuid', tags: ['%FORM_UUID%'] },
        ];
        this.apptFieldTags = [
            { propName: 'appointmentDateTimeClient', tags: ['%APPT_DATE_TIME%'] },
            { propName: 'appointmentDateTimeStaff', tags: ['%APPT_DATE_TIME_STAFF%'] },
            { propName: 'status', tags: ['%APPT_STATUS%'], filter: 'titleCase' },
            { propName: 'subStatus', tags: ['%APPT_SUBSTATUS%'], filter: 'titleCase' },
            // {propName: 'clientStartDate', tags: ['%APPT_DATE%', '%APPT_CLIENT_START_DATE_FULL%','%APPT_CLIENT_START_DATE_LONG','%APPT_CLIENT_START_DATE_MEDIUM%','%APPT_CLIENT_START_DATE_SHORT%']},
            // {propName: 'clientEndDate', tags: ['%APPT_END_DATE%','%APPT_CLIENT_END_DATE_FULL%','%APPT_CLIENT_END_DATE_LONG%','%APPT_CLIENT_END_DATE_MEDIUM%','%APPT_CLIENT_END_DATE_SHORT%']},
            // {propName: 'clientStartTime', tags: ['%APPT_START_TIME%','%APPT_CLIENT_START_TIME_FULL%','%APPT_CLIENT_START_TIME_MEDIUM%','%APPT_CLIENT_START_TIME_SHORT%']},
            // {propName: 'clientEndTime', tags: ['%APPT_END_TIME%','%APPT_CLIENT_END_TIME_FULL%','%APPT_CLIENT_END_TIME_MEDIUM%','%APPT_CLIENT_END_TIME_SHORT%']},
            { propName: 'startTime', tags: ['%APPT_START_TIME_STAFF%'] },
            { propName: 'endTime', tags: ['%APPT_END_TIME_STAFF%'] },
            { propName: 'clientStartTimeDate', tags: ['%APPT_CLIENT_START_DATE_TIME_FULL%', '%APPT_CLIENT_START_DATE_TIME_LONG%', '%APPT_CLIENT_START_DATE_TIME_MEDIUM%',
                    '%APPT_DATE%', '%APPT_CLIENT_START_DATE_FULL%', '%APPT_CLIENT_START_DATE_LONG%', '%APPT_CLIENT_START_DATE_MEDIUM%', '%APPT_CLIENT_START_DATE_SHORT%', '%APPT_CLIENT_START_DATE_TIME_SHORT%',
                    '%APPT_START_TIME%', '%APPT_CLIENT_START_TIME_FULL%', '%APPT_CLIENT_START_TIME_MEDIUM%', '%APPT_CLIENT_START_TIME_SHORT%', '%TIMEZONE_SHORT%'
                ] },
            { propName: 'clientEndTimeDate', tags: ['%APPT_CLIENT_END_DATE_TIME_FULL%', '%APPT_CLIENT_END_DATE_TIME_LONG%', '%APPT_CLIENT_END_DATE_TIME_MEDIUM%', '%APPT_CLIENT_END_DATE_TIME_SHORT%',
                    '%APPT_END_DATE%', '%APPT_CLIENT_END_DATE_FULL%', '%APPT_CLIENT_END_DATE_LONG%', '%APPT_CLIENT_END_DATE_MEDIUM%', '%APPT_CLIENT_END_DATE_SHORT%',
                    '%APPT_END_TIME%', '%APPT_CLIENT_END_TIME_FULL%', '%APPT_CLIENT_END_TIME_MEDIUM%', '%APPT_CLIENT_END_TIME_SHORT%'
                ] },
            { propName: 'staffStartTimeDate', tags: ['%APPT_STAFF_START_DATE_TIME_FULL%', '%APPT_STAFF_START_DATE_TIME_LONG%', '%APPT_STAFF_START_DATE_TIME_MEDIUM%',
                    '%APPT_STAFF_START_DATE_FULL%', '%APPT_STAFF_START_DATE_LONG%', '%APPT_STAFF_START_DATE_MEDIUM%', '%APPT_STAFF_START_DATE_SHORT%',
                    '%APPT_START_TIME_STAFF%', '%APPT_STAFF_START_TIME_FULL%', '%APPT_STAFF_START_TIME_MEDIUM%', '%APPT_STAFF_START_TIME_SHORT%', '%APPT_STAFF_START_DATE_TIME_SHORT%'
                ] },
            { propName: 'staffEndTimeDate', tags: ['%APPT_STAFF_END_DATE_TIME_FULL%', '%APPT_STAFF_END_DATE_TIME_LONG%', '%APPT_STAFF_END_DATE_TIME_MEDIUM%', '%APPT_STAFF_END_DATE_TIME_SHORT%',
                    '%APPT_STAFF_END_DATE_FULL%', '%APPT_STAFF_END_DATE_LONG%', '%APPT_STAFF_END_DATE_MEDIUM%', '%APPT_STAFF_END_DATE_SHORT%',
                    '%APPT_END_TIME_STAFF%', '%APPT_STAFF_END_TIME_FULL%', '%APPT_STAFF_END_TIME_MEDIUM%', '%APPT_STAFF_END_TIME_SHORT%'
                ] },
            { propName: 'calendarId', tags: ['%APPT_ID%'] },
            { propName: 'classScheduleId', tags: ['%CLASS_SESSION_ID%'] },
            { propName: 'price', tags: ['%APPT_AMOUNT%'] },
            { propName: 'classroom', tags: ['%CLASSROOM%', '%CLASS_ROOM%'] },
            { propName: 'seats', tags: ['%APPT_SEATS%'] },
            { propName: 'note', tags: ['%APPOINTMENT_NOTE%'] },
            { propName: 'address', tags: ['%APPT_ADDRESS%'] },
            { propName: 'changeSummaryClient', tags: ['%CHANGE_SUMMARY_CLIENT%'] },
            { propName: 'changeSummaryStaff', tags: ['%CHANGE_SUMMARY_STAFF%'] },
            { propName: 'customFieldDesc', tags: ['%CUSTOM_FIELDS%'], filter: 'lineBreak' },
            { propName: 'reasonDesc', tags: ['%APPT_REASON_DESC%'] },
            { propName: 'hashId', tags: ['%MANAGE_APPT_URL%'] },
            { propName: 'apptQRCode', tags: ['%APPT_QR_CODE%'] },
            { propName: 'apptCheckInQRCode', tags: ['%APPT_CHECKIN_QR_CODE%'] },
        ];
        this.dateTimeTagMap = [
            { 'tags': ['%APPT_CLIENT_START_DATE_TIME_FULL%', '%APPT_CLIENT_END_DATE_TIME_FULL%', '%APPT_STAFF_START_DATE_TIME_FULL%', '%APPT_STAFF_END_DATE_TIME_FULL%'], 'filterFormats': ['LLLL'] },
            { 'tags': ['%TIMEZONE_SHORT%'], 'filterFormats': ['z'] },
            { 'tags': ['%APPT_CLIENT_START_DATE_TIME_LONG%', '%APPT_CLIENT_END_DATE_TIME_LONG%', '%APPT_STAFF_START_DATE_TIME_LONG%', '%APPT_STAFF_END_DATE_TIME_LONG%'], 'filterFormats': ['LL', 'LTS'] },
            { 'tags': ['%APPT_CLIENT_START_DATE_TIME_MEDIUM%', '%APPT_CLIENT_END_DATE_TIME_MEDIUM%', '%APPT_STAFF_START_DATE_TIME_MEDIUM%', '%APPT_STAFF_END_DATE_TIME_MEDIUM%'], 'filterFormats': ['LL', 'LTS'] },
            { 'tags': ['%APPT_CLIENT_START_DATE_TIME_SHORT%', '%APPT_CLIENT_END_DATE_TIME_SHORT%', '%APPT_STAFF_START_DATE_TIME_SHORT%', '%APPT_STAFF_END_DATE_TIME_SHORT%'], 'filterFormats': ['L', 'LT'] },
            { 'tags': ['%APPT_CLIENT_START_DATE_FULL%', '%APPT_CLIENT_END_DATE_FULL%', '%APPT_STAFF_START_DATE_FULL%', '%APPT_STAFF_END_DATE_FULL%'], 'filterFormats': ['dddd, LL '] },
            { 'tags': ['%APPT_CLIENT_START_DATE_LONG%', '%APPT_CLIENT_END_DATE_LONG%', '%APPT_STAFF_START_DATE_LONG%', '%APPT_STAFF_END_DATE_LONG%'], 'filterFormats': ['LL'] },
            { 'tags': ['%APPT_CLIENT_START_DATE_MEDIUM%', '%APPT_CLIENT_END_DATE_MEDIUM%', '%APPT_STAFF_START_DATE_MEDIUM%', '%APPT_STAFF_END_DATE_MEDIUM%'], 'filterFormats': ['LL'] },
            { 'tags': ['%APPT_DATE%', '%APPT_END_DATE%', '%APPT_CLIENT_START_DATE_SHORT%', '%APPT_CLIENT_END_DATE_SHORT%', '%APPT_STAFF_START_DATE_SHORT%', '%APPT_STAFF_END_DATE_SHORT%', '%COUPON_ENDDATE%'], 'filterFormats': ['L'] },
            { 'tags': ['%APPT_CLIENT_START_TIME_FULL%', '%APPT_CLIENT_START_TIME_MEDIUM%', '%APPT_CLIENT_END_TIME_FULL%', '%APPT_CLIENT_END_TIME_MEDIUM%', '%APPT_STAFF_START_TIME_FULL%', '%APPT_STAFF_START_TIME_MEDIUM%', '%APPT_STAFF_END_TIME_FULL%', '%APPT_STAFF_END_TIME_MEDIUM%'], 'filterFormats': ['LTS'] },
            { 'tags': ['%APPT_START_TIME%', '%APPT_END_TIME%', '%APPT_CLIENT_START_TIME_SHORT%', '%APPT_CLIENT_END_TIME_SHORT%', '%APPT_START_TIME_STAFF%', '%APPT_END_TIME_STAFF%', '%APPT_STAFF_START_TIME_SHORT%', '%APPT_STAFF_END_TIME_SHORT%'], 'filterFormats': ['LT'] },
        ];
        this.dateTimeTags = ['%APPT_CLIENT_START_DATE_TIME_FULL%', '%APPT_CLIENT_START_DATE_TIME_LONG%', '%APPT_CLIENT_START_DATE_TIME_MEDIUM%', '%APPT_STAFF_START_DATE_TIME_SHORT%',
            '%APPT_CLIENT_END_DATE_TIME_FULL%', '%APPT_CLIENT_END_DATE_TIME_LONG%', '%APPT_CLIENT_END_DATE_TIME_MEDIUM%', '%APPT_STAFF_END_DATE_TIME_SHORT%',
            '%APPT_DATE%', '%APPT_CLIENT_START_DATE_FULL%', '%APPT_CLIENT_START_DATE_LONG%', '%APPT_CLIENT_START_DATE_MEDIUM%', '%APPT_CLIENT_START_DATE_SHORT%',
            '%APPT_END_DATE%', '%APPT_CLIENT_END_DATE_FULL%', '%APPT_CLIENT_END_DATE_LONG%', '%APPT_CLIENT_END_DATE_MEDIUM%', '%APPT_CLIENT_END_DATE_SHORT%',
            '%APPT_START_TIME%', '%APPT_CLIENT_START_TIME_FULL%', '%APPT_CLIENT_START_TIME_MEDIUM%', '%APPT_CLIENT_START_TIME_SHORT%',
            '%APPT_END_TIME%', '%APPT_CLIENT_END_TIME_FULL%', '%APPT_CLIENT_END_TIME_MEDIUM%', '%APPT_CLIENT_END_TIME_SHORT%', '%COUPON_ENDDATE%', '%PACKAGE_EXPIRE_DATE%', '%TIMEZONE_SHORT%'
        ];
        this.timeTags = ['%APPT_CLIENT_START_DATE_TIME_LONG%', '%APPT_CLIENT_START_DATE_TIME_MEDIUM%', '%APPT_STAFF_START_DATE_TIME_SHORT%',
            '%APPT_CLIENT_END_DATE_TIME_FULL%', '%APPT_CLIENT_END_DATE_TIME_LONG%', '%APPT_CLIENT_END_DATE_TIME_MEDIUM%', '%APPT_STAFF_END_DATE_TIME_SHORT%',
            '%APPT_DATE%', '%APPT_CLIENT_START_DATE_FULL%', '%APPT_CLIENT_START_DATE_LONG%', '%APPT_CLIENT_START_DATE_MEDIUM%', '%APPT_CLIENT_START_DATE_SHORT%',
            '%APPT_END_DATE%', '%APPT_CLIENT_END_DATE_FULL%', '%APPT_CLIENT_END_DATE_LONG%', '%APPT_CLIENT_END_DATE_MEDIUM%', '%APPT_CLIENT_END_DATE_SHORT%',
            '%APPT_START_TIME%', '%APPT_CLIENT_START_TIME_FULL%', '%APPT_CLIENT_START_TIME_MEDIUM%', '%APPT_CLIENT_START_TIME_SHORT%',
            '%APPT_END_TIME%', '%APPT_CLIENT_END_TIME_FULL%', '%APPT_CLIENT_END_TIME_MEDIUM%', '%APPT_CLIENT_END_TIME_SHORT%', '%COUPON_ENDDATE%', '%PACKAGE_EXPIRE_DATE%', '%TIMEZONE_SHORT%'];
        this.currencyTags = ['%INVOICE_BALANCE_AMOUNT%', '%INVOICE_PAYMENT_AMOUNT%', '%INVOICE_SUBTOTAL_AMOUNT%', '%INVOICE_TAX_AMOUNT%', '%INVOICE_TAX2_AMOUNT%', '%INVOICE_AMOUNT%', '%INVOICE_PAID_AMOUNT%', '%APPT_AMOUNT%', '%REASON_PRICE%'];
        this.assignObjectToTags = function (calendarObj, stringWithTag, tags, currency, allowTZChange) {
            if (calendarObj !== undefined && calendarObj !== null) {
                for (var prop in calendarObj) {
                    for (var i = 0, x = tags.length; i < x; i++) {
                        if (prop === tags[i].propName) {
                            for (var j = 0, y = tags[i].tags.length; j < y; j++) {
                                var valueToReplace = '';
                                if (calendarObj[prop] !== null) {
                                    valueToReplace = calendarObj[prop];
                                    if (tags[i].filter === 'titleCase')
                                        valueToReplace = this.titleCasePipe.transform(valueToReplace);
                                    if (tags[i].filter === 'lineBreak')
                                        valueToReplace = valueToReplace.replace(new RegExp(/\n/, 'g'), "<br/>");
                                }
                                else if (calendarObj[prop] === null && tags[i].fallBackProp !== undefined && calendarObj[tags[i].fallBackProp] !== null) {
                                    valueToReplace = calendarObj[tags[i].fallBackProp];
                                }
                                else if (calendarObj[prop] === null) {
                                    valueToReplace = '';
                                }
                                if (tags[i].tags[j] === '%MANAGE_APPT_URL%') {
                                    var newUrl = window.location.href.substring(0, window.location.href.indexOf('#'));
                                    valueToReplace = newUrl + '#/appts/' + calendarObj[prop];
                                }
                                if (tags[i].tags[j] === '%MANAGE_APPT_URL%') {
                                    var newUrl = window.location.href.substring(0, window.location.href.indexOf('#'));
                                    valueToReplace = newUrl + '#/appts/' + calendarObj[prop];
                                }
                                if (this.dateTimeTags.indexOf(tags[i].tags[j]) !== -1) {
                                    var timezone = this.timeService.getApptTimezone(calendarObj.location, calendarObj.locationGroup, calendarObj.staff); // LHB 10/2/2020 TT-7052
                                    if (allowTZChange === 1) {
                                        if (calendarObj.client && calendarObj.client.timeZoneCode) // LHB 11/10/2020 TT-7153
                                            timezone = calendarObj.client.timeZoneCode.timeZoneCode;
                                        else if (this.timeService.clientTimezone) // LHB 10/16/2020 TT-7087
                                            timezone = this.timeService.clientTimezone;
                                    }
                                    var timeZoneForMoment = this.timeService.checkToAddMomentTimezoneDefaultSchedulerPreference(timezone);
                                    for (var k = 0, z = this.dateTimeTagMap.length; k < z; k++) {
                                        if (this.dateTimeTagMap[k].tags.indexOf(tags[i].tags[j]) !== -1) {
                                            for (var l = 0, a = this.dateTimeTagMap[k].filterFormats.length; l < a; l++) {
                                                if (l === 0) {
                                                    // valueToReplace = momentTimezone(calendarObj[prop]).tz(timeZoneForMoment).format(this.dateTimeTagMap[k].filterFormats[l]);
                                                    valueToReplace = this.getMomentFormatString(calendarObj[prop], timeZoneForMoment, this.dateTimeTagMap[k].filterFormats[l]);
                                                }
                                                else {
                                                    // valueToReplace = valueToReplace + " " + momentTimezone(calendarObj[prop]).tz(timeZoneForMoment).format(this.dateTimeTagMap[k].filterFormats[l]);
                                                    valueToReplace = valueToReplace + " " + this.getMomentFormatString(calendarObj[prop], timeZoneForMoment, this.dateTimeTagMap[k].filterFormats[l]);
                                                }
                                            }
                                        }
                                    }
                                }
                                if (this.currencyTags.indexOf(tags[i].tags[j]) !== -1 && currency !== undefined) {
                                    valueToReplace = this.localeCurrency.transform(valueToReplace, currency);
                                    var currencySymbol = Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["getCurrencySymbol"])(currency.currencyCode, "wide");
                                    //TT-6463 -- to fix, need to make sure the $ sign that is added to the valueToReplace is added right before current dollar sign
                                    var indexOfCurrencySymobol = valueToReplace.indexOf(currencySymbol);
                                    var currencySymbolPrefix = valueToReplace.substring(indexOfCurrencySymobol, currencySymbol.length);
                                    if (currencySymbolPrefix === '$') { // LHB 08/26/2020 TT-6928 when it is a euro as a prefix no need to adjust with $ sign
                                        var valueSuffix = valueToReplace.substring(currencySymbol.length);
                                        valueToReplace = currencySymbolPrefix + '$' + valueSuffix; //TT-6120 -- use $ as escape character in regex https://mattsnider.com/safari-regex-issue-with-0-9-in-replacement-text/
                                    }
                                }
                                if (stringWithTag !== null) {
                                    stringWithTag = stringWithTag.replace(new RegExp(tags[i].tags[j], 'g'), valueToReplace);
                                }
                            }
                        }
                    }
                }
            }
            else if (stringWithTag !== null) {
                for (var i = 0, x = tags.length; i < x; i++) {
                    for (var j = 0, y = tags[i].tags.length; j < y; j++) {
                        var tagToRemove = tags[i].tags[j];
                        //Need to clean up booking summaries so that if location and/or staff are not included in the flow that "with" and "at" don't hang in the string
                        if (tagToRemove === '%LOCATION_NAME%' && stringWithTag.toUpperCase().indexOf('AT %LOCATION_NAME%') !== -1) {
                            tagToRemove = 'AT ' + tagToRemove;
                        }
                        if ((tagToRemove === '%STAFF_FULLNAME%' && stringWithTag.toUpperCase().indexOf('WITH %STAFF_FULLNAME%') !== -1) ||
                            (tagToRemove === '%STAFF_FIRSTNAME%' && stringWithTag.toUpperCase().indexOf('WITH %STAFF_FIRSTNAME%') !== -1)) {
                            tagToRemove = 'WITH ' + tagToRemove;
                        }
                        stringWithTag = stringWithTag.replace(new RegExp(tagToRemove, 'gi'), '');
                    }
                }
            }
            return stringWithTag;
        };
        this.getStringFromCommonObjectProperties = function (stringPropertyToConvert, preference, location, staff, reason, client, locationGroup) {
            var stringToDisplay = this.assignObjectToTags(location, preference.labelMap[stringPropertyToConvert], this.locationFieldTags);
            stringToDisplay = this.assignObjectToTags(staff, stringToDisplay, this.staffFieldTags);
            stringToDisplay = this.assignObjectToTags(reason, stringToDisplay, this.reasonFieldTags);
            stringToDisplay = this.assignObjectToTags(client, stringToDisplay, this.clientTagsArray);
            stringToDisplay = this.assignObjectToTags(locationGroup, stringToDisplay, this.locationGroupFieldTags);
            return stringToDisplay;
        };
        this.convertRepeatingApptPropertiesToTags = function (stringPropertyToConvert, preference, recurringAppt, appointments) {
            var stringToDisplay = this.getStringFromCommonObjectProperties(stringPropertyToConvert, preference, recurringAppt.location, recurringAppt.staff, recurringAppt.reason, recurringAppt.client, recurringAppt.locationGroup);
            //BEFORE WE CAN TRANSFORM ANY OF THE DATE AND TIME TAGS, NEED TO FIRST FORMAT AS DATE OBJECT;
            if (typeof recurringAppt.startDate === 'string') {
                if (recurringAppt.clientStartTime === null) {
                    recurringAppt.clientStartTime = 0;
                }
                recurringAppt.startTimeDate = this.timeService.convertStringDateToObject(recurringAppt.startDate, recurringAppt.clientStartTime);
            }
            if (typeof recurringAppt.endDate === 'string') {
                if (recurringAppt.clientEndTime === null) {
                    recurringAppt.clientEndTime = 0;
                }
                recurringAppt.endTimeDate = this.timeService.convertStringDateToObject(recurringAppt.endDate, recurringAppt.clientEndTime);
            }
            stringToDisplay = this.assignObjectToTags(recurringAppt, stringToDisplay, this.apptFieldTags);
            if (stringToDisplay.indexOf('%REPEATING_APPT_DATE_LIST%') !== -1 && appointments.length !== 0) {
                var stringToAdd = '<ul>';
                for (var i = 0, x = appointments.length; i < x; i++) {
                    stringToAdd = stringToAdd + '<li>' + this.convertApptPropertiesToTags('repeatingApptDateList', preference, appointments[i]) + '</li>';
                }
                stringToAdd = stringToAdd + '</ul>';
                stringToDisplay = stringToDisplay.replace(new RegExp('%REPEATING_APPT_DATE_LIST%', 'g'), stringToAdd);
            }
            return stringToDisplay;
        };
        this.getStringFromIndyWaitListObjs = function (waitListObj, stringToAdd, preference, waitlistLength) {
            waitListObj.waitListDateList = this.sortWaitListDates(waitListObj.waitListDateList);
            if (waitListObj.reason && waitListObj.reason.reasonType === _models_Reason_model__WEBPACK_IMPORTED_MODULE_12__["ReasonTypes"].COURSE) {
                for (var i = 0, x = waitListObj.waitListDateList.length; i < x; i++) {
                    var waitListAppt = new _models_Appointment_model__WEBPACK_IMPORTED_MODULE_11__["Appointment"]();
                    waitListAppt.status = waitListObj.status;
                    waitListAppt.subStatus = waitListObj.status;
                    waitListAppt.clientStartDate = this.datePipe.transform(waitListObj.waitListDateList[i].date, 'yyyy-MM-dd', 'UTC', this.locale);
                    waitListAppt.clientEndDate = this.datePipe.transform(waitListObj.waitListDateList[i].date, 'yyyy-MM-dd', 'UTC', this.locale);
                    waitListAppt.location = waitListObj.location;
                    waitListAppt.staff = waitListObj.staff;
                    waitListAppt.reason = waitListObj.reason;
                    waitListAppt.client = waitListObj.client;
                    waitListAppt.fields = waitListObj.fields;
                    waitListAppt.startDate = this.datePipe.transform(waitListObj.waitListDateList[i].date, 'yyyy-MM-dd', 'UTC', this.locale);
                    waitListAppt.endDate = this.datePipe.transform(waitListObj.waitListDateList[i].date, 'yyyy-MM-dd', 'UTC', this.locale);
                    waitListAppt.waitListMode = true;
                    if (waitListObj.waitListDateList[i].recurringScheduleId === null) { //waitlist is first available so show corresponding message
                        if (waitlistLength === 1)
                            stringToAdd = stringToAdd + this.convertApptPropertiesToTags('waitListDateListFirstAvail', preference, waitListAppt);
                        else
                            stringToAdd = stringToAdd + '<li>' + this.convertApptPropertiesToTags('waitListDateListFirstAvail', preference, waitListAppt) + '</li>';
                    }
                    else if (x === 1) {
                        stringToAdd = stringToAdd + this.convertApptPropertiesToTags('waitListDateListService', preference, waitListAppt);
                    }
                    else {
                        stringToAdd = stringToAdd + '<li>' + this.convertApptPropertiesToTags('waitListDateListService', preference, waitListAppt) + '</li>';
                    }
                }
            }
            else {
                for (var i = 0, x = waitListObj.waitListDateList.length; i < x; i++) {
                    waitListObj.waitListDateList[i].waitListDateTimeList = this.sortWaitListDateTimes(waitListObj.waitListDateList[i].waitListDateTimeList);
                    for (var j = 0, y = waitListObj.waitListDateList[i].waitListDateTimeList.length; j < y; j++) {
                        var waitListAppt = new _models_Appointment_model__WEBPACK_IMPORTED_MODULE_11__["Appointment"]();
                        var isAllDay = false;
                        if (waitListObj.waitListDateList[i].waitListDateTimeList[j].startTime === 0 && waitListObj.waitListDateList[i].waitListDateTimeList[j].endTime === 2400)
                            isAllDay = true;
                        waitListAppt.status = waitListObj.status;
                        waitListAppt.subStatus = waitListObj.status;
                        waitListAppt.startDateTimeUTC = waitListObj.waitListDateList[i].waitListDateTimeList[j].startDateTimeUTC;
                        waitListAppt.endDateTimeUTC = waitListObj.waitListDateList[i].waitListDateTimeList[j].endDateTimeUTC;
                        waitListAppt.clientStartTimeDate = waitListObj.waitListDateList[i].waitListDateTimeList[j].startDateTimeUTC;
                        waitListAppt.clientEndTimeDate = waitListObj.waitListDateList[i].waitListDateTimeList[j].endDateTimeUTC;
                        waitListAppt.clientStartDate = this.datePipe.transform(waitListObj.waitListDateList[i].date, 'yyyy-MM-dd', 'UTC', this.locale);
                        waitListAppt.clientEndDate = this.datePipe.transform(waitListObj.waitListDateList[i].date, 'yyyy-MM-dd', 'UTC', this.locale);
                        waitListAppt.clientStartTime = waitListObj.waitListDateList[i].waitListDateTimeList[j].clientStartTimeForDisplay || waitListObj.waitListDateList[i].waitListDateTimeList[j].startTime;
                        waitListAppt.clientEndTime = waitListObj.waitListDateList[i].waitListDateTimeList[j].clientEndTimeForDisplay || waitListObj.waitListDateList[i].waitListDateTimeList[j].endTime;
                        waitListAppt.location = waitListObj.location;
                        waitListAppt.staff = waitListObj.staff;
                        waitListAppt.reason = waitListObj.reason;
                        waitListAppt.client = waitListObj.client;
                        waitListAppt.fields = waitListObj.fields;
                        waitListAppt.startDate = this.datePipe.transform(waitListObj.waitListDateList[i].date, 'yyyy-MM-dd', 'UTC', this.locale);
                        waitListAppt.endDate = this.datePipe.transform(waitListObj.waitListDateList[i].date, 'yyyy-MM-dd', 'UTC', this.locale);
                        waitListAppt.startTime = waitListObj.waitListDateList[i].waitListDateTimeList[j].clientStartTimeForDisplay || waitListObj.waitListDateList[i].waitListDateTimeList[j].startTime;
                        waitListAppt.endTime = waitListObj.waitListDateList[i].waitListDateTimeList[j].clientEndTimeForDisplay || waitListObj.waitListDateList[i].waitListDateTimeList[j].endTime;
                        waitListAppt.waitListMode = true;
                        if (waitListObj.waitListDateList[i].date === null) { //waitlist is first available so show corresponding message
                            if (waitlistLength === 1)
                                stringToAdd = stringToAdd + this.convertApptPropertiesToTags('waitListDateListFirstAvail', preference, waitListAppt);
                            else
                                stringToAdd = stringToAdd + '<li>' + this.convertApptPropertiesToTags('waitListDateListFirstAvail', preference, waitListAppt) + '</li>';
                        }
                        else if (x === 1 && y === 1) {
                            if (isAllDay)
                                stringToAdd = stringToAdd + this.convertApptPropertiesToTags('waitListDateListAllDay', preference, waitListAppt);
                            else
                                stringToAdd = stringToAdd + this.convertApptPropertiesToTags('waitListDateListService', preference, waitListAppt);
                        }
                        else {
                            if (isAllDay)
                                stringToAdd = stringToAdd + '<li>' + this.convertApptPropertiesToTags('waitListDateListAllDay', preference, waitListAppt) + '</li>';
                            else
                                stringToAdd = stringToAdd + '<li>' + this.convertApptPropertiesToTags('waitListDateListService', preference, waitListAppt) + '</li>';
                        }
                    }
                }
            }
            return stringToAdd;
        };
        this.convertWaitListPropertiesToTags = function (stringPropertyToConvert, preference, waitLists, waitListObj) {
            var stringToDisplay = this.getStringFromCommonObjectProperties(stringPropertyToConvert, preference, waitListObj.location, waitListObj.staff, waitListObj.reason, waitListObj.client, null);
            if (waitLists !== null && stringToDisplay.indexOf('%WAITLIST_DATE_LIST%') !== -1) {
                var stringToAdd = '';
                if (waitLists.length > 1) {
                    stringToAdd = '<ul>';
                }
                for (var i = 0, x = waitLists.length; i < x; i++) {
                    stringToAdd = this.getStringFromIndyWaitListObjs(waitLists[i], stringToAdd, preference, x);
                }
                if (waitLists.length > 1) {
                    stringToAdd = stringToAdd + '</ul>';
                }
                stringToDisplay = stringToDisplay.replace(new RegExp('%WAITLIST_DATE_LIST%', 'g'), stringToAdd);
            }
            return stringToDisplay;
        };
        this.assignClientValuesToTags = function (stringWithTag, fields, client) {
            var stringToReturn = this.assignFieldsValuesToTags(stringWithTag, fields);
            if (stringToReturn === '') {
                stringToReturn = this.assignObjectToTags(client, stringWithTag, this.clientTagsArray);
            }
            else {
                stringToReturn = this.assignObjectToTags(client, stringToReturn, this.clientTagsArray);
            }
            //NOW REMOVE ANY TAGS THAT DIDN'T GET CONVERTED; NOT DOING THIS IN THE FIRST LOOP BECAUSE IT MAY BE FLAT ON TEH CLIENT OBJECT AND WILL BE TAKEN CARE OF WHEN PASSED TO ASSIGNOBJECTOTAGS FUNCTION
            stringToReturn = this.removeNonConvertedTags(stringToReturn, fields);
            return stringToReturn;
        };
        this.getApptListColumnValues = function (originalFieldList, fields, labelMap, onMobileViewPort, bookingObjFieldTagsProp) {
            var appointmentFieldList = lodash__WEBPACK_IMPORTED_MODULE_7__["cloneDeep"](originalFieldList);
            var columns = [];
            for (var i = 0, x = appointmentFieldList.length; i < x; i++) {
                columns = this.addValuesToColumnsArray(appointmentFieldList[i], this.locationFieldTags, 'location.', columns, labelMap);
                columns = this.addValuesToColumnsArray(appointmentFieldList[i], this.locationGroupFieldTags, 'locationGroup.', columns, labelMap);
                columns = this.addValuesToColumnsArray(appointmentFieldList[i], this.staffFieldTags, 'staff.', columns, labelMap);
                columns = this.addValuesToColumnsArray(appointmentFieldList[i], this.reasonFieldTags, 'reason.', columns, labelMap);
                columns = this.addValuesToColumnsArray(appointmentFieldList[i], this[bookingObjFieldTagsProp], '', columns, labelMap);
                for (var j = 0, y = fields.length; j < y; j++) {
                    if (fields[j].valueTag === appointmentFieldList[i]) {
                        var columnPropRef = "field_" + fields[j].schedulerPreferenceFieldDefnId;
                        var columnObject = new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_8__["TableColumnDataModel"](columnPropRef, fields[j].label);
                        columnObject.tag = appointmentFieldList[i];
                        columns.push(columnObject);
                    }
                }
            }
            for (var i = 0, x = columns.length; i < x; i++) {
                var indexToReplace = appointmentFieldList.indexOf(columns[i].tag);
                appointmentFieldList[indexToReplace] = columns[i].name;
            }
            if (!onMobileViewPort) {
                appointmentFieldList.push('actions');
            }
            return { columns: columns, appointmentFieldList: appointmentFieldList };
        };
        try {
            this.locale = sessionStorage.getItem('locale');
        }
        catch (e) {
            this.locale = 'en-US';
        }
        moment_moment__WEBPACK_IMPORTED_MODULE_4__["locale"](this.locale);
        this.businessService = injector.get(_business_service__WEBPACK_IMPORTED_MODULE_10__["BusinessService"]);
    }
    TagsService.prototype.timeFormatting = function (time) {
        if (time !== undefined && time !== null) {
            var returnString = time.toString();
            var hour = void 0, minutes = void 0;
            if (returnString.length === 3) {
                hour = returnString.substring(0, 1);
                minutes = returnString.substring(1, 3);
            }
            else if (returnString.length === 1) {
                hour = "00";
                minutes = "0" + returnString;
            }
            else if (returnString.length === 2) {
                //if it's 2, then it's going to be 12 am
                hour = "00";
                minutes = returnString;
            }
            else {
                hour = returnString.substring(0, 2);
                minutes = returnString.substring(2, 4);
            }
            if (hour !== "00") {
                hour = parseInt(hour);
            }
            var fullDate = new Date();
            var newDate = new Date(fullDate.getFullYear(), fullDate.getMonth(), fullDate.getDay(), hour, minutes);
            returnString = this.datePipe.transform(newDate, 'hh:mm a', sessionStorage.getItem("timezone"), sessionStorage.getItem('locale'));
            return returnString;
        }
        else {
            return time;
        }
    };
    TagsService.prototype.convertSessionTZFromMoment = function (timeZoneCode) {
        var timeZoneForTimeZoneFilter = timeZoneCode;
        for (var i = 0, x = this.momentTimezoneService.allTimezones.links.length; i < x; i++) {
            if (this.momentTimezoneService.allTimezones.links[i].indexOf(timeZoneCode) !== -1) {
                var indexOfPipe = this.momentTimezoneService.allTimezones.links[i].indexOf("|");
                timeZoneForTimeZoneFilter = this.momentTimezoneService.allTimezones.links[i].substring(indexOfPipe + 1);
            }
        }
        return timeZoneForTimeZoneFilter;
    };
    TagsService.prototype.guessClientsTimezone = function () {
        return moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5__["tz"].guess();
    };
    TagsService.prototype.getMomentFormatString = function (timePropValue, timeZoneForMoment, filterFormat) {
        if (filterFormat === 'z') {
            return moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5__(timePropValue).tz(timeZoneForMoment).zoneAbbr();
        }
        else {
            var timeToReturn = moment_timezone_moment_timezone__WEBPACK_IMPORTED_MODULE_5__(timePropValue).tz(timeZoneForMoment).format(filterFormat);
            return timeToReturn;
        }
    };
    TagsService.prototype.assignFieldsValuesToTags = function (stringWithTag, fields) {
        if (fields !== undefined && fields !== null) {
            for (var i = 0, x = fields.length; i < x; i++) {
                if (stringWithTag.indexOf(fields[i].valueTag) !== -1 && fields[i].value !== null) {
                    stringWithTag = stringWithTag.replace(new RegExp(fields[i].valueTag, 'g'), fields[i].value);
                }
                if (stringWithTag.indexOf(fields[i].labelTag) !== -1 && fields[i].label !== null) {
                    stringWithTag = stringWithTag.replace(new RegExp(fields[i].labelTag, 'g'), fields[i].label);
                }
            }
        }
        return stringWithTag;
    };
    TagsService.prototype.removeNonConvertedTags = function (stringWithTag, fields) {
        if (fields !== undefined && fields !== null) {
            for (var i = 0, x = fields.length; i < x; i++) {
                if (stringWithTag.indexOf(fields[i].valueTag) !== -1 && fields[i].value === null) {
                    stringWithTag = stringWithTag.replace(new RegExp(fields[i].valueTag, 'g'), '');
                }
                if (stringWithTag.indexOf(fields[i].labelTag) !== -1 && fields[i].label === null) {
                    stringWithTag = stringWithTag.replace(new RegExp(fields[i].labelTag, 'g'), '');
                }
            }
        }
        return stringWithTag;
    };
    TagsService.prototype.convertApptPropertiesToTags = function (stringPropertyToConvert, preference, appt) {
        var stringToDisplay;
        stringToDisplay = this.getStringFromCommonObjectProperties(stringPropertyToConvert, preference, appt.location, appt.staff, appt.reason, appt.client, appt.locationGroup);
        stringToDisplay = this.assignFieldsValuesToTags(stringToDisplay, appt.fields);
        if (appt.client !== undefined && appt.client !== null)
            stringToDisplay = this.assignFieldsValuesToTags(stringToDisplay, appt.client.fields);
        appt = this.timeService.getApptDateTimeDisplayPropertiesWithTimezone(appt, preference.allowTZChange);
        stringToDisplay = this.assignObjectToTags(appt, stringToDisplay, this.apptFieldTags, undefined, preference.allowTZChange);
        if (this.businessService.business)
            stringToDisplay = this.assignObjectToTags(this.businessService.business, stringToDisplay, this.businessTagsArray);
        if (stringToDisplay)
            for (var i = 0, x = this.addOnReasonListTags.length; i < x; i++) {
                var tag = this.addOnReasonListTags[i];
                if (stringToDisplay.indexOf(tag) !== -1) {
                    var prop = 'addOnReasonListItemLabelSimple';
                    for (var j = 0, y = this.addOnReasonListTagLabelMap.length; j < y; j++) {
                        var mapTag = this.addOnReasonListTagLabelMap[j].tag;
                        if (mapTag === tag)
                            prop = this.addOnReasonListTagLabelMap[j].labelMapProp;
                    }
                    var stringToAdd = '';
                    if (appt.addOnReasonList && appt.addOnReasonList.length > 0) {
                        stringToAdd = '<ul>';
                        for (var j = 0, y = appt.addOnReasonList.length; j < y; j++) {
                            stringToAdd = stringToAdd + '<li>' + this.assignObjectToTags(appt.addOnReasonList[j], preference.labelMap[prop], this.reasonFieldTags, this.businessService.currency) + '</li>';
                        }
                        stringToAdd = stringToAdd + '</ul>';
                    }
                    stringToDisplay = stringToDisplay.replace(new RegExp(tag, 'g'), stringToAdd);
                }
            }
        stringToDisplay = this.removeNonConvertedTags(stringToDisplay, appt.fields);
        if (appt.client !== undefined && appt.client !== null)
            stringToDisplay = this.removeNonConvertedTags(stringToDisplay, appt.client.fields);
        return stringToDisplay;
    };
    ;
    TagsService.prototype.convertClientFormsList = function (stringPropertyToConvert, client, preference) {
        var stringToDisplay = this.assignClientValuesToTags(stringPropertyToConvert, client.fields, client);
        if (stringToDisplay.indexOf('%FORM_LINK_LIST%') !== -1 && client.formList !== undefined && client.formList !== null && client.formList.length > 0) {
            var labelMapString = "<a href='%FORM_URL%' target='_blank'>" + preference.labelMap.disclaimerFormLink + "</a>";
            var stringToAdd = '<ul>';
            // <li><a href='%FORM_URL%' target='_blank'>%FORM_NAME%</a></li>
            for (var i = 0, x = client.formList.length; i < x; i++) {
                stringToAdd = stringToAdd + '<li>' + this.assignObjectToTags(client.formList[i], labelMapString, this.clientFormListObjTags) + '</li>';
            }
            stringToAdd = stringToAdd + '</ul>';
            stringToDisplay = stringToDisplay.replace(new RegExp('%FORM_LINK_LIST%', 'g'), stringToAdd);
        }
        return stringToDisplay;
    };
    TagsService.prototype.sortWaitListDates = function (waitListDateList) {
        return waitListDateList.sort(function (a, b) { return (a.date < b.date) ? -1 : 1; });
    };
    TagsService.prototype.sortWaitListDateTimes = function (waitListDateTimeList) {
        return waitListDateTimeList.sort(function (a, b) { return (a.startTime < b.startTime) ? -1 : 1; });
    };
    TagsService.prototype.addValuesToColumnsArray = function (tag, tagsList, propPrefix, columns, labelMap) {
        for (var j = 0, y = tagsList.length; j < y; j++) {
            if (tagsList[j].tags.indexOf(tag) !== -1) {
                var columnPropRef = propPrefix + tagsList[j].propName;
                var columnLabel = tagsList[j].propName;
                if (labelMap[columnPropRef] !== undefined)
                    columnLabel = labelMap[columnPropRef];
                else
                    columnLabel = this.titleCasePipe.transform(columnLabel);
                var filterType = null;
                var filterFormats = [];
                if (this.dateTimeTags.indexOf(tag) !== -1) { // LHB 05/21/2021 TT-7810 -- check if column needs a filter format applied
                    filterType = 'date';
                    for (var k = 0, z = this.dateTimeTagMap.length; k < z; k++)
                        if (this.dateTimeTagMap[k].tags.indexOf(tag) !== -1) {
                            for (var l = 0, a = this.dateTimeTagMap[k].filterFormats.length; l < a; l++) {
                                if (a === 2 && (this.dateTimeTagMap[k].filterFormats[l] === 'LT' || this.dateTimeTagMap[k].filterFormats[l] === 'LTS')) {
                                    var timeConcatenator = new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_8__["TableColumnDataFilterFormat"](' at ', true);
                                    filterFormats.push(timeConcatenator);
                                }
                                var filterFormat = new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_8__["TableColumnDataFilterFormat"](this.dateTimeTagMap[k].filterFormats[l], false, true);
                                filterFormats.push(filterFormat);
                            }
                        }
                }
                var columnObject = new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_8__["TableColumnDataModel"](columnPropRef, columnLabel);
                if (filterType !== null)
                    columnObject = new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_8__["TableColumnDataModel"](columnPropRef, columnLabel, filterType, filterFormats);
                columnObject.tag = tag;
                columns.push(columnObject);
            }
        }
        return columns;
    };
    TagsService.prototype.getInvalidFormFieldErrorMsg = function (fields, fieldsPropId, formGroup, preference, labelMapErrorMsgProp) {
        // LHB 08/08/2020 TT-6867 show error pop up when fields are invalid
        var invalidFieldsString = '<ul>';
        var invalidFieldCount = 0;
        for (var prop in formGroup.controls) {
            if (formGroup.controls[prop].invalid) {
                invalidFieldCount++;
                for (var i = 0, x = fields.length; i < x; i++) {
                    if (prop === fields[i][fieldsPropId].toString())
                        invalidFieldsString = invalidFieldsString + '<li>' + fields[i].label + '</li>';
                }
            }
        }
        invalidFieldsString = invalidFieldsString + '</ul>';
        var errorMessage = preference.labelMap[labelMapErrorMsgProp];
        if (errorMessage.indexOf('%INVALID_FIELD_COUNT%') !== -1) {
            errorMessage = errorMessage.replace(new RegExp("%INVALID_FIELD_COUNT%", 'g'), invalidFieldCount.toString());
        }
        return errorMessage + invalidFieldsString;
    };
    TagsService.ctorParameters = function () { return [
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_2__["DatePipe"] },
        { type: _pipes_localecurrency_pipe__WEBPACK_IMPORTED_MODULE_9__["LocaleCurrency"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_2__["TitleCasePipe"] },
        { type: _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_3__["TimeService"] },
        { type: _scheduler_time_moment_timezones_service__WEBPACK_IMPORTED_MODULE_6__["MomentTimezoneService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] }
    ]; };
    TagsService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_2__["DatePipe"], _pipes_localecurrency_pipe__WEBPACK_IMPORTED_MODULE_9__["LocaleCurrency"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["TitleCasePipe"],
            _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_3__["TimeService"], _scheduler_time_moment_timezones_service__WEBPACK_IMPORTED_MODULE_6__["MomentTimezoneService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]])
    ], TagsService);
    return TagsService;
}());



/***/ }),

/***/ "./src/app/ui-elements/alert.directive.ts":
/*!************************************************!*\
  !*** ./src/app/ui-elements/alert.directive.ts ***!
  \************************************************/
/*! exports provided: AlertDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlertDirective", function() { return AlertDirective; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _styleSheetService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styleSheetService */ "./src/app/styleSheetService.ts");



var AlertDirective = /** @class */ (function () {
    function AlertDirective(styleSheetService, el) {
        this.styleSheetService = styleSheetService;
        this.el = el;
    }
    AlertDirective.prototype.setBaseStyleProp = function () {
        var baseStyleProp = 'infoAlert';
        switch (this.baseStyle) {
            case 'success':
                baseStyleProp = 'successAlert';
                break;
            case 'error':
                baseStyleProp = 'errorAlert';
                break;
        }
        return baseStyleProp;
    };
    AlertDirective.prototype.setStyles = function () {
        var baseStyleProp = this.setBaseStyleProp();
        var baseAlertMap = this.styleSheetService.baseAlerts;
        this.backgroundColor = baseAlertMap[baseStyleProp].backgroundColor;
        this.fontColor = baseAlertMap[baseStyleProp].color;
        this.borderColor = baseAlertMap[baseStyleProp].borderColor;
        this.el.nativeElement.style.backgroundColor = this.backgroundColor;
        this.el.nativeElement.style.color = this.fontColor;
        this.el.nativeElement.style.borderColor = this.borderColor;
    };
    AlertDirective.prototype.ngOnChanges = function (changes) {
        if (changes.baseStyle)
            this.setStyles();
    };
    AlertDirective.prototype.ngOnInit = function () {
        this.setStyles();
    };
    AlertDirective.ctorParameters = function () { return [
        { type: _styleSheetService__WEBPACK_IMPORTED_MODULE_2__["StyleSheetService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], AlertDirective.prototype, "baseStyle", void 0);
    AlertDirective = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
            selector: '[appAlert]'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_styleSheetService__WEBPACK_IMPORTED_MODULE_2__["StyleSheetService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]])
    ], AlertDirective);
    return AlertDirective;
}());



/***/ }),

/***/ "./src/app/ui-elements/background-styling.directive.ts":
/*!*************************************************************!*\
  !*** ./src/app/ui-elements/background-styling.directive.ts ***!
  \*************************************************************/
/*! exports provided: BackgroundStylingDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BackgroundStylingDirective", function() { return BackgroundStylingDirective; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _styleSheetService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styleSheetService */ "./src/app/styleSheetService.ts");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_3__);




var BackgroundStylingDirective = /** @class */ (function () {
    function BackgroundStylingDirective(stylesheetService, elementRef) {
        this.stylesheetService = stylesheetService;
        this.elementRef = elementRef;
    }
    BackgroundStylingDirective.prototype.matchAndApplyStyles = function () {
        var styleMap = this.stylesheetService.mwStyleMap;
        var tagName = this.elementRef.nativeElement.tagName.toLowerCase();
        var propToMatch = null;
        if (this.containerClass !== undefined) {
            propToMatch = this.containerClass;
        }
        if (this.containerId !== undefined) {
            propToMatch = this.containerId;
        }
        var matchFound = false;
        if (propToMatch !== null) {
            for (var prop in styleMap) {
                if (prop === propToMatch && styleMap[prop].backgroundColor !== undefined) {
                    matchFound = true;
                    this.backgroundColor = styleMap[prop].backgroundColor;
                }
            }
        }
        if (!matchFound) {
            if (this.defaultColor === undefined) {
                for (var prop in styleMap) {
                    if (prop === tagName && styleMap[prop].backgroundColor !== undefined) {
                        matchFound = true;
                        this.backgroundColor = styleMap[prop].backgroundColor;
                    }
                }
            }
            else {
                matchFound = true;
                this.backgroundColor = this.defaultColor;
            }
        }
        if (matchFound) {
            if (this.parentElement !== undefined) { //need to target parent element container passed in to set the background color on
                jquery__WEBPACK_IMPORTED_MODULE_3__(this.parentElement).css({ backgroundColor: this.backgroundColor });
            }
            else {
                this.elementRef.nativeElement.style.backgroundColor = this.backgroundColor;
                if (this.backgroundColor === 'transparent') {
                    this.elementRef.nativeElement.style.boxShadow = 'none';
                }
            }
        }
    };
    BackgroundStylingDirective.prototype.ngOnChanges = function (changes) {
        if (changes.containerId !== undefined && changes.containerId !== null && changes.containerId.previousValue !== undefined && changes.containerId.previousValue !== null) {
            if (changes.containerId.previousValue !== changes.containerId.currentValue) {
                this.matchAndApplyStyles();
            }
        }
        if (changes.containerClass !== undefined && changes.containerClass !== null && changes.containerClass.previousValue !== undefined && changes.containerClass.previousValue !== null) {
            if (changes.containerClass.previousValue !== changes.containerClass.currentValue) {
                this.matchAndApplyStyles();
            }
        }
    };
    BackgroundStylingDirective.prototype.ngOnInit = function () {
        this.matchAndApplyStyles();
    };
    BackgroundStylingDirective.ctorParameters = function () { return [
        { type: _styleSheetService__WEBPACK_IMPORTED_MODULE_2__["StyleSheetService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], BackgroundStylingDirective.prototype, "containerId", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], BackgroundStylingDirective.prototype, "containerClass", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], BackgroundStylingDirective.prototype, "defaultColor", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], BackgroundStylingDirective.prototype, "parentElement", void 0);
    BackgroundStylingDirective = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
            selector: '[backgroundStyling]'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_styleSheetService__WEBPACK_IMPORTED_MODULE_2__["StyleSheetService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]])
    ], BackgroundStylingDirective);
    return BackgroundStylingDirective;
}());



/***/ }),

/***/ "./src/app/ui-elements/button-save/button-save.component.ts":
/*!******************************************************************!*\
  !*** ./src/app/ui-elements/button-save/button-save.component.ts ***!
  \******************************************************************/
/*! exports provided: ButtonSaveComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ButtonSaveComponent", function() { return ButtonSaveComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");


var ButtonSaveComponent = /** @class */ (function () {
    function ButtonSaveComponent() {
        this.showSaveIcon = false;
        this.saveIcon = 'la la-save';
        this.noTextOnBtn = false;
        this.showSpinner = true;
        this.onSavedDismissed = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.onErrorSavingDismissed = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    }
    ButtonSaveComponent.prototype.ngOnChanges = function (changes) {
        var _this = this;
        if (changes.hasOwnProperty('saved') && changes.saved.currentValue)
            setTimeout(function () {
                _this.saved = false;
                _this.onSavedDismissed.emit();
            }, 3000);
        if (changes.hasOwnProperty('errorSaving') && changes.errorSaving.currentValue)
            setTimeout(function () {
                _this.errorSaving = false;
                _this.onErrorSavingDismissed.emit();
            }, 3000);
    };
    ButtonSaveComponent.prototype.ngOnInit = function () {
        if (!this.saveText && !this.noTextOnBtn)
            this.saveText = 'Save';
        if (!this.savedText && !this.noTextOnBtn)
            this.savedText = 'Saved!';
        if (!this.savingText && !this.noTextOnBtn)
            this.savingText = 'Saving...';
        if (!this.errorSavingText && !this.noTextOnBtn)
            this.errorSavingText = 'Error Saving!';
    };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], ButtonSaveComponent.prototype, "saving", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], ButtonSaveComponent.prototype, "saved", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], ButtonSaveComponent.prototype, "errorSaving", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], ButtonSaveComponent.prototype, "showSaveIcon", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ButtonSaveComponent.prototype, "saveIcon", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ButtonSaveComponent.prototype, "saveText", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ButtonSaveComponent.prototype, "savedText", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ButtonSaveComponent.prototype, "savingText", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ButtonSaveComponent.prototype, "errorSavingText", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], ButtonSaveComponent.prototype, "noTextOnBtn", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], ButtonSaveComponent.prototype, "showSpinner", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ButtonSaveComponent.prototype, "onSavedDismissed", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ButtonSaveComponent.prototype, "onErrorSavingDismissed", void 0);
    ButtonSaveComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'tt-button-save',
            template: "\n    <span *ngIf=\"!saving && !errorSaving && !saved\"><i *ngIf=\"showSaveIcon\" [className]=\"saveIcon\"></i> {{saveText}}</span>\n    <span *ngIf=\"saved\"><i class=\"fas fa-check\"></i> {{savedText}}</span>\n    <span *ngIf=\"saving\"><i *ngIf=\"showSpinner\" class=\"fa fa-spinner fa-spin fa-fw\"></i> {{savingText}}</span>\n    <span *ngIf=\"errorSaving\"><i class=\"far fa-times-circle\"></i> {{errorSavingText}}</span>\n  "
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
    ], ButtonSaveComponent);
    return ButtonSaveComponent;
}());



/***/ }),

/***/ "./src/app/ui-elements/button-styling.directive.ts":
/*!*********************************************************!*\
  !*** ./src/app/ui-elements/button-styling.directive.ts ***!
  \*********************************************************/
/*! exports provided: ButtonStylingDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ButtonStylingDirective", function() { return ButtonStylingDirective; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _styleSheetService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../styleSheetService */ "./src/app/styleSheetService.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../responsive.service */ "./src/app/responsive.service.ts");





var ButtonStylingDirective = /** @class */ (function () {
    function ButtonStylingDirective(styleSheetService, responsiveService, el, renderer) {
        this.styleSheetService = styleSheetService;
        this.responsiveService = responsiveService;
        this.el = el;
        this.renderer = renderer;
        this.actAsSpacer = false;
        this.fullHeight = false;
        this.catchOverflow = false;
        this.removeBorderLeftRadius = false;
        this.removeBorderRightRadius = false;
    }
    ButtonStylingDirective.prototype.setBaseStyleProp = function () {
        var baseStyleProp = 'basicBtn';
        switch (this.baseStyle) {
            case 'primary':
                baseStyleProp = 'primaryBtn';
                break;
            case 'success':
                baseStyleProp = 'successBtn';
                break;
            case 'error':
                baseStyleProp = 'errorBtn';
                break;
            case 'accent':
                baseStyleProp = 'accentBtn';
                break;
        }
        return baseStyleProp;
    };
    ButtonStylingDirective.prototype.setStyleOnButton = function () {
        jquery__WEBPACK_IMPORTED_MODULE_2__(this.selector).css({ 'border-color': this.borderColor });
        jquery__WEBPACK_IMPORTED_MODULE_2__(this.fontSelector).css({ 'color': this.fontColor });
        jquery__WEBPACK_IMPORTED_MODULE_2__(this.backgroundSelector).css({ 'background-color': this.color });
        if (this.actAsSpacer) {
            this.renderer.setStyle(this.el.nativeElement, 'visibility', 'hidden');
            // $(this.selector).css({'visibility': 'hidden'});
        }
        if (this.removeBorderLeftRadius) {
            this.renderer.setStyle(this.el.nativeElement, 'border-top-left-radius', '0px');
            this.renderer.setStyle(this.el.nativeElement, 'border-bottom-left-radius', '0px');
            // $(this.selector).css({'border-top-left-radius': '0px', 'border-bottom-left-radius': '0px'});
        }
        if (this.removeBorderRightRadius) {
            this.renderer.setStyle(this.el.nativeElement, 'border-top-right-radius', '0px');
            this.renderer.setStyle(this.el.nativeElement, 'border-top-right-radius', '0px');
            // $(this.selector).css({'border-top-right-radius': '0px', 'border-bottom-right-radius': '0px'});
        }
        if (this.fullHeight) {
            this.renderer.setStyle(this.el.nativeElement, 'flex', '1 1 100%');
            this.renderer.setStyle(this.el.nativeElement, 'height', '100%');
            this.renderer.setStyle(this.el.nativeElement, 'display', 'block');
            this.renderer.setStyle(this.el.nativeElement, 'width', '100%');
            var fontSize = '1rem';
            if (this.responsiveService.onMobileViewPort)
                fontSize = '.84rem';
            this.renderer.setStyle(this.el.nativeElement, 'font-size', fontSize);
        }
        if (this.catchOverflow) {
            this.renderer.setStyle(this.el.nativeElement, 'white-space', 'normal');
            this.renderer.setStyle(this.el.nativeElement, 'overflow-wrap', 'break-word');
        }
        if (this.lineHeight !== undefined) {
            this.renderer.setStyle(this.el.nativeElement, 'line-height', this.lineHeight);
        }
        if (this.float !== undefined) {
            this.renderer.setStyle(this.el.nativeElement, 'float', this.float);
        }
        if (this.responsiveService.onMobileViewPort) {
            this.renderer.addClass(this.el.nativeElement, 'btn-sm');
            if (this.classesOnMobile !== undefined && this.classesOnMobile !== null && this.classesOnMobile.length > 0) {
                for (var i = 0, x = this.classesOnMobile.length; i < x; i++) {
                    this.renderer.addClass(this.el.nativeElement, this.classesOnMobile[i]);
                }
            }
        }
    };
    ButtonStylingDirective.prototype.ngAfterViewChecked = function () {
        this.setStyleOnButton();
    };
    ButtonStylingDirective.prototype.defineStyles = function () {
        var baseStyleProp = this.setBaseStyleProp();
        var baseButtonMap = this.styleSheetService.baseButtons;
        //If I don't have to set the btn id on the template then I am not; only when it has to get interpretted on load (like for the nextBtn) am I setting it; otherwise, reading from nativeElement
        if (this.btnId === undefined && this.el.nativeElement.attributes.id !== undefined) {
            this.btnId = this.el.nativeElement.attributes.id.value;
        }
        // console.log("This.btnid = " + this.btnId)
        var propToMatchOn = this.btnId;
        this.selector = "#" + this.btnId;
        if (this.btnStyleId !== undefined) {
            propToMatchOn = this.btnStyleId;
        }
        if (propToMatchOn === undefined) {
            propToMatchOn = this.btnClass;
            this.selector = "." + propToMatchOn;
        }
        this.selector = this.selector + '.mat-stroked-button';
        // console.log("propToMatchOn ")
        // console.log(propToMatchOn)
        this.color = baseButtonMap[baseStyleProp].color;
        // console.log('baseButtonMap', baseButtonMap);
        var mwStyleMap = this.styleSheetService.mwStyleMap;
        // console.log("mwStyleMap ")
        // console.log(mwStyleMap)
        for (var prop in mwStyleMap) {
            if (prop === propToMatchOn) {
                this.color = mwStyleMap[prop].color;
            }
        }
        // console.log("this.color " + this.color);
        this.borderColor = this.color + '80';
        this.fontColor = this.color;
        this.fontSelector = this.selector + ' span, ' + this.selector + ' span > span, ' + this.selector + ' i';
        this.backgroundSelector = this.selector + ' > div.mat-button-ripple > div.mat-ripple-element, #' + this.btnId + '.mat-button-focus-overlay';
        // console.log(this.el.nativeElement.attributes);
    };
    ButtonStylingDirective.prototype.ngOnInit = function () {
        this.defineStyles();
    };
    ButtonStylingDirective.ctorParameters = function () { return [
        { type: _styleSheetService__WEBPACK_IMPORTED_MODULE_3__["StyleSheetService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_4__["ResponsiveService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ButtonStylingDirective.prototype, "btnId", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ButtonStylingDirective.prototype, "btnClass", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ButtonStylingDirective.prototype, "btnStyleId", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ButtonStylingDirective.prototype, "baseStyle", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], ButtonStylingDirective.prototype, "actAsSpacer", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], ButtonStylingDirective.prototype, "fullHeight", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], ButtonStylingDirective.prototype, "catchOverflow", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ButtonStylingDirective.prototype, "lineHeight", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], ButtonStylingDirective.prototype, "removeBorderLeftRadius", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], ButtonStylingDirective.prototype, "removeBorderRightRadius", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Array)
    ], ButtonStylingDirective.prototype, "classesOnMobile", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ButtonStylingDirective.prototype, "float", void 0);
    ButtonStylingDirective = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
            selector: '[buttonStyling]'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_styleSheetService__WEBPACK_IMPORTED_MODULE_3__["StyleSheetService"], _responsive_service__WEBPACK_IMPORTED_MODULE_4__["ResponsiveService"],
            _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]])
    ], ButtonStylingDirective);
    return ButtonStylingDirective;
}());



/***/ }),

/***/ "./src/app/ui-elements/chip.directive.ts":
/*!***********************************************!*\
  !*** ./src/app/ui-elements/chip.directive.ts ***!
  \***********************************************/
/*! exports provided: ChipDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChipDirective", function() { return ChipDirective; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _styleSheetService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styleSheetService */ "./src/app/styleSheetService.ts");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../responsive.service */ "./src/app/responsive.service.ts");





var ChipDirective = /** @class */ (function () {
    function ChipDirective(styleSheetService, el, responsiveService) {
        this.styleSheetService = styleSheetService;
        this.el = el;
        this.responsiveService = responsiveService;
    }
    ChipDirective.prototype.setBaseStyleProp = function () {
        var baseStyleProp = 'basicChip';
        switch (this.baseStyle) {
            case 'primary':
                baseStyleProp = 'primaryChip';
                break;
            case 'success':
                baseStyleProp = 'successChip';
                break;
            case 'error':
                baseStyleProp = 'errorChip';
                break;
            case 'accent':
                baseStyleProp = 'accentChip';
                break;
            case 'warning':
                baseStyleProp = 'warningChip';
                break;
        }
        return baseStyleProp;
    };
    ChipDirective.prototype.setStyleOnChip = function () {
        jquery__WEBPACK_IMPORTED_MODULE_3__(this.fullSelectorIncludeSpan).css({ 'background-color': this.backgroundColor, 'color': this.fontColor });
        if (this.responsiveService.onMobileViewPort) {
            jquery__WEBPACK_IMPORTED_MODULE_3__(this.baseSelector).css({ 'margin': '0px', 'padding': '5px 10px', 'font-size': '12px' });
        }
    };
    ChipDirective.prototype.setColors = function () {
        var baseStyleProp = this.setBaseStyleProp();
        var baseChipMap = this.styleSheetService.baseChips;
        var propToMatchOn = this.chipClass;
        this.baseSelector = '.' + this.chipClass + '.mat-chip.mat-standard-chip';
        this.fullSelectorIncludeSpan = this.baseSelector + ', ' + this.baseSelector + ' span';
        this.backgroundColor = baseChipMap[baseStyleProp].backgroundColor;
        this.fontColor = baseChipMap[baseStyleProp].color;
        var styleMap = this.styleSheetService.mwStyleMap;
        for (var prop in styleMap) {
            if (prop === propToMatchOn) {
                if (styleMap[prop].color !== undefined) {
                    this.fontColor = styleMap[prop].color;
                }
                if (styleMap[prop].backgroundColor !== undefined) {
                    this.backgroundColor = styleMap[prop].backgroundColor;
                }
            }
        }
        this.setStyleOnChip();
    };
    ChipDirective.prototype.ngAfterViewChecked = function () {
        this.setColors();
    };
    ChipDirective.prototype.ngOnInit = function () {
        this.setColors();
    };
    ChipDirective.ctorParameters = function () { return [
        { type: _styleSheetService__WEBPACK_IMPORTED_MODULE_2__["StyleSheetService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_4__["ResponsiveService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ChipDirective.prototype, "chipClass", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ChipDirective.prototype, "baseStyle", void 0);
    ChipDirective = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
            selector: '[ttChip]',
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_styleSheetService__WEBPACK_IMPORTED_MODULE_2__["StyleSheetService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _responsive_service__WEBPACK_IMPORTED_MODULE_4__["ResponsiveService"]])
    ], ChipDirective);
    return ChipDirective;
}());



/***/ }),

/***/ "./src/app/ui-elements/field-label/field-label.component.ts":
/*!******************************************************************!*\
  !*** ./src/app/ui-elements/field-label/field-label.component.ts ***!
  \******************************************************************/
/*! exports provided: FieldLabelComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FieldLabelComponent", function() { return FieldLabelComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");



var FieldLabelComponent = /** @class */ (function () {
    function FieldLabelComponent(responsiveService) {
        this.responsiveService = responsiveService;
        this.labelAlign = 'right';
        this.required = false;
        this.italics = false;
        this.removePaddingRight = this.responsiveService.onMobileViewPort;
        this.removePaddingLeft = this.responsiveService.onMobileViewPort;
        this.helpLinkClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    }
    FieldLabelComponent.prototype.ngOnInit = function () {
    };
    FieldLabelComponent.ctorParameters = function () { return [
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_2__["ResponsiveService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], FieldLabelComponent.prototype, "labelAlign", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], FieldLabelComponent.prototype, "label", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], FieldLabelComponent.prototype, "required", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], FieldLabelComponent.prototype, "italics", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], FieldLabelComponent.prototype, "removePaddingRight", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], FieldLabelComponent.prototype, "removePaddingLeft", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], FieldLabelComponent.prototype, "externalLink", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], FieldLabelComponent.prototype, "hasError", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], FieldLabelComponent.prototype, "showHelpLink", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], FieldLabelComponent.prototype, "helpLinkText", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], FieldLabelComponent.prototype, "helpLinkClicked", void 0);
    FieldLabelComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-field-label',
            template: "\n    <label class=\"col-form-label\"\n           [ngClass]=\"{'text-right': labelAlign==='right', 'text-left': labelAlign==='left', 'text-center': labelAlign==='center', 'hasError': hasError,\n                'pr-0': removePaddingRight, 'pl-0': removePaddingLeft, 'italicText': italics}\">\n      <a *ngIf=\"externalLink\" href=\"{{externalLink}}\" target=\"_blank\"><i class=\"fas fa-external-link-alt\"></i> </a><span\n        *ngIf=\"required\" class=\"text-danger\">* </span> {{label | titlecase}}:\n    </label>\n    <div [ngClass]=\"{'text-right': labelAlign==='right', 'text-left': labelAlign==='left', 'text-center': labelAlign==='center', 'pr-0': removePaddingRight, 'pl-0': removePaddingLeft}\" *ngIf=\"showHelpLink\">\n      <a (click)=\"helpLinkClicked.emit()\" class=\"ttLink\">{{helpLinkText}}</a>\n    </div>\n  ",
            styles: [".hasError {color: #f64e60;} .col-form-label {z-index: 0; width: 100%}"]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_responsive_service__WEBPACK_IMPORTED_MODULE_2__["ResponsiveService"]])
    ], FieldLabelComponent);
    return FieldLabelComponent;
}());



/***/ }),

/***/ "./src/app/ui-elements/image-sizer.directive.ts":
/*!******************************************************!*\
  !*** ./src/app/ui-elements/image-sizer.directive.ts ***!
  \******************************************************/
/*! exports provided: ImageSizerDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImageSizerDirective", function() { return ImageSizerDirective; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _styleSheetService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styleSheetService */ "./src/app/styleSheetService.ts");



var ImageSizerDirective = /** @class */ (function () {
    function ImageSizerDirective(stylesheetService, elementRef) {
        this.stylesheetService = stylesheetService;
        this.elementRef = elementRef;
        this.imageWidth = '100%';
        this.imageMaxWidth = '100%';
        this.imageHeight = 'auto';
        this.displayImage = 'inherit';
    }
    ImageSizerDirective.prototype.ngOnInit = function () {
        var styleMap = this.stylesheetService.mwStyleMap;
        var propToMatch = null;
        if (this.imageClass !== undefined) {
            propToMatch = this.imageClass;
        }
        if (this.imageId !== undefined) {
            propToMatch = this.imageId;
        }
        var widthMatchFound = false;
        var maxWidthMatchFound = false;
        var heightMatchFound = false;
        var displayMatchFound = false;
        if (propToMatch !== null) {
            for (var prop in styleMap) {
                if (prop === propToMatch) {
                    if (styleMap[prop].width) {
                        widthMatchFound = true;
                        this.imageWidth = styleMap[prop].width;
                    }
                    if (styleMap[prop].maxWidth) {
                        maxWidthMatchFound = true;
                        this.imageMaxWidth = styleMap[prop].maxWidth;
                    }
                    if (styleMap[prop].height) {
                        heightMatchFound = true;
                        this.imageHeight = styleMap[prop].height;
                    }
                    if (styleMap[prop].display) {
                        displayMatchFound = true;
                        this.displayImage = styleMap[prop].display;
                    }
                }
            }
        }
        if (widthMatchFound)
            this.elementRef.nativeElement.style.width = this.imageWidth;
        if (maxWidthMatchFound)
            this.elementRef.nativeElement.style.maxWidth = this.imageMaxWidth;
        if (heightMatchFound)
            this.elementRef.nativeElement.style.height = this.imageHeight;
        if (displayMatchFound)
            this.elementRef.nativeElement.style.display = this.displayImage;
    };
    ImageSizerDirective.ctorParameters = function () { return [
        { type: _styleSheetService__WEBPACK_IMPORTED_MODULE_2__["StyleSheetService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ImageSizerDirective.prototype, "imageId", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ImageSizerDirective.prototype, "imageClass", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ImageSizerDirective.prototype, "defaultImageWidth", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ImageSizerDirective.prototype, "defaultImageHeight", void 0);
    ImageSizerDirective = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
            selector: '[appImageSizer]'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_styleSheetService__WEBPACK_IMPORTED_MODULE_2__["StyleSheetService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]])
    ], ImageSizerDirective);
    return ImageSizerDirective;
}());



/***/ }),

/***/ "./src/app/ui-elements/link.directive.ts":
/*!***********************************************!*\
  !*** ./src/app/ui-elements/link.directive.ts ***!
  \***********************************************/
/*! exports provided: LinkDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LinkDirective", function() { return LinkDirective; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _styleSheetService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styleSheetService */ "./src/app/styleSheetService.ts");



var LinkDirective = /** @class */ (function () {
    function LinkDirective(stylesheetService, elementRef) {
        this.stylesheetService = stylesheetService;
        this.elementRef = elementRef;
        this.linkColor = '#1C827C';
    }
    LinkDirective.prototype.ngOnInit = function () {
        var styleMap = this.stylesheetService.mwStyleMap;
        var propToMatch = null;
        if (this.linkClass !== undefined) {
            propToMatch = this.linkClass;
        }
        if (this.linkId !== undefined) {
            propToMatch = this.linkId;
        }
        var matchFound = false;
        if (propToMatch !== null) {
            for (var prop in styleMap) {
                if (prop === propToMatch && styleMap[prop].color !== undefined) {
                    matchFound = true;
                    this.linkColor = styleMap[prop].color;
                }
            }
        }
        if (!matchFound) {
            for (var prop in styleMap) {
                if (prop === 'a' && styleMap[prop].color !== undefined) {
                    this.linkColor = styleMap[prop].color;
                }
            }
        }
        this.elementRef.nativeElement.style.color = this.linkColor;
        this.elementRef.nativeElement.style.textDecoration = 'none';
        this.elementRef.nativeElement.style.cursor = 'pointer';
    };
    LinkDirective.ctorParameters = function () { return [
        { type: _styleSheetService__WEBPACK_IMPORTED_MODULE_2__["StyleSheetService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], LinkDirective.prototype, "linkId", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], LinkDirective.prototype, "linkClass", void 0);
    LinkDirective = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
            selector: '[appLink]'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_styleSheetService__WEBPACK_IMPORTED_MODULE_2__["StyleSheetService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"]])
    ], LinkDirective);
    return LinkDirective;
}());



/***/ }),

/***/ "./src/app/ui-elements/multi-checkbox-form-field/multi-checkbox-form-field.component.ts":
/*!**********************************************************************************************!*\
  !*** ./src/app/ui-elements/multi-checkbox-form-field/multi-checkbox-form-field.component.ts ***!
  \**********************************************************************************************/
/*! exports provided: MultiCheckboxFormFieldComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultiCheckboxFormFieldComponent", function() { return MultiCheckboxFormFieldComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _form_functions_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../form-functions.service */ "./src/app/form-functions.service.ts");




var MultiCheckboxFormFieldComponent = /** @class */ (function () {
    function MultiCheckboxFormFieldComponent(cdRef, formFunctionsService) {
        this.cdRef = cdRef;
        this.formFunctionsService = formFunctionsService;
        this.onValueChanges = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.formControl = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('');
        this.required = false;
        this.loaded = false;
    }
    MultiCheckboxFormFieldComponent.prototype.selectChange = function (event, valueOption) {
        if (this.formControl.enabled) {
            valueOption.selected = !valueOption.selected;
            var currentValue = this.formControl.value;
            var checkboxSelectedValues = this.formFunctionsService.setMultiCheckboxValue(currentValue, String(valueOption.value), event);
            this.formControl.setValue(checkboxSelectedValues);
            var eventToEmit = { formControl: this.formControl, event: event };
            this.onValueChanges.emit(eventToEmit);
        }
    };
    MultiCheckboxFormFieldComponent.prototype.renderField = function () {
        this.formControl = this.formFunctionsService.renderField(this.formControl, this.passedControl);
        this.required = this.formFunctionsService.checkRequired(this.formControl);
        this.loaded = true;
        this.cdRef.detectChanges();
    };
    MultiCheckboxFormFieldComponent.prototype.ngOnChanges = function (changes) {
        if (changes.hasOwnProperty('passedControl') && !changes.passedControl.firstChange)
            this.renderField();
    };
    MultiCheckboxFormFieldComponent.prototype.ngOnInit = function () {
        this.renderField();
    };
    MultiCheckboxFormFieldComponent.ctorParameters = function () { return [
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
        { type: _form_functions_service__WEBPACK_IMPORTED_MODULE_3__["FormFunctionsService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"])
    ], MultiCheckboxFormFieldComponent.prototype, "passedControl", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], MultiCheckboxFormFieldComponent.prototype, "onValueChanges", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Array)
    ], MultiCheckboxFormFieldComponent.prototype, "dropdownValues", void 0);
    MultiCheckboxFormFieldComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-multi-checkbox-form-field',
            template: "\n    <div class=\"checkbox-list\" *ngIf=\"loaded\">\n      <label class=\"checkbox checkbox-outline checkbox-outline-2x\" [ngClass]=\"{'checkbox-disabled': formControl.disabled}\" *ngFor=\"let valueOption of dropdownValues\">\n        <input type=\"checkbox\" [checked]=\"valueOption.selected\" [disabled]=\"formControl.disabled\"\n               [ngClass]=\"{'is-invalid': formControl.touched && formControl.errors}\" [value]=\"valueOption.value\"\n               (change)=\"$event.preventDefault(); selectChange($event, valueOption)\">\n        <span></span> {{valueOption.label}}\n      </label>\n    </div>\n  ",
            styles: [".checkbox-list {display: flex; flex-direction: column;}"]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"], _form_functions_service__WEBPACK_IMPORTED_MODULE_3__["FormFunctionsService"]])
    ], MultiCheckboxFormFieldComponent);
    return MultiCheckboxFormFieldComponent;
}());



/***/ }),

/***/ "./src/app/ui-elements/text-formatting.directive.ts":
/*!**********************************************************!*\
  !*** ./src/app/ui-elements/text-formatting.directive.ts ***!
  \**********************************************************/
/*! exports provided: TextFormattingDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextFormattingDirective", function() { return TextFormattingDirective; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _styleSheetService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styleSheetService */ "./src/app/styleSheetService.ts");



var TextFormattingDirective = /** @class */ (function () {
    function TextFormattingDirective(stylesheetService, elementRef, renderer) {
        this.stylesheetService = stylesheetService;
        this.elementRef = elementRef;
        this.renderer = renderer;
    }
    TextFormattingDirective.prototype.matchAndApplyStyles = function () {
        var styleMap = this.stylesheetService.mwStyleMap;
        var tagName = this.elementRef.nativeElement.tagName.toLowerCase();
        var propToMatch = null;
        if (this.textClass !== undefined) {
            propToMatch = this.textClass;
        }
        if (this.textId !== undefined) {
            propToMatch = this.textId;
        }
        var colorMatchFound = false;
        var fontSizeMatchFound = false;
        if (propToMatch !== null) {
            for (var prop in styleMap) {
                if (prop === propToMatch) {
                    if (styleMap[prop].color !== undefined) {
                        colorMatchFound = true;
                        this.color = styleMap[prop].color;
                    }
                    if (styleMap[prop].fontSize !== undefined) {
                        fontSizeMatchFound = true;
                        this.fontSize = styleMap[prop].fontSize;
                    }
                }
            }
        }
        for (var prop in styleMap) {
            if (prop === tagName) {
                if (!colorMatchFound) {
                    if (this.inheritedColorOverride === undefined && styleMap[prop].color !== undefined) {
                        colorMatchFound = true;
                        this.color = styleMap[prop].color;
                    }
                    else if (this.inheritedColorOverride !== undefined) {
                        colorMatchFound = true;
                        this.color = this.inheritedColorOverride;
                    }
                }
                if (!fontSizeMatchFound && styleMap[prop].fontSize !== undefined) {
                    fontSizeMatchFound = true;
                    this.fontSize = styleMap[prop].fontSize;
                }
            }
        }
        if (!colorMatchFound && this.inheritedColorOverride !== undefined) {
            this.color = this.inheritedColorOverride;
            colorMatchFound = true;
        }
        if (this.displayInline)
            this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'inline');
        if (this.textAlign)
            this.renderer.setStyle(this.elementRef.nativeElement, 'text-align', this.textAlign);
        if (colorMatchFound) {
            this.elementRef.nativeElement.style.color = this.color;
        }
        if (fontSizeMatchFound) {
            this.elementRef.nativeElement.style.fontSize = this.fontSize;
        }
    };
    TextFormattingDirective.prototype.ngOnChanges = function (changes) {
        if (changes.textId !== undefined && changes.textId !== null && changes.textId.previousValue !== undefined && changes.textId.previousValue !== null) {
            if (changes.textId.previousValue !== changes.textId.currentValue) {
                this.matchAndApplyStyles();
            }
        }
        if (changes.textClass !== undefined && changes.textClass !== null && changes.textClass.previousValue !== undefined && changes.textClass.previousValue !== null) {
            if (changes.textClass.previousValue !== changes.textClass.currentValue) {
                this.matchAndApplyStyles();
            }
        }
    };
    TextFormattingDirective.prototype.ngOnInit = function () {
        this.matchAndApplyStyles();
    };
    TextFormattingDirective.ctorParameters = function () { return [
        { type: _styleSheetService__WEBPACK_IMPORTED_MODULE_2__["StyleSheetService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], TextFormattingDirective.prototype, "textId", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], TextFormattingDirective.prototype, "textClass", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], TextFormattingDirective.prototype, "textType", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], TextFormattingDirective.prototype, "inheritedColorOverride", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], TextFormattingDirective.prototype, "displayInline", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], TextFormattingDirective.prototype, "textAlign", void 0);
    TextFormattingDirective = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
            selector: '[textFormatting]'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_styleSheetService__WEBPACK_IMPORTED_MODULE_2__["StyleSheetService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]])
    ], TextFormattingDirective);
    return TextFormattingDirective;
}());



/***/ }),

/***/ "./src/app/ui-elements/ui-elements.module.ts":
/*!***************************************************!*\
  !*** ./src/app/ui-elements/ui-elements.module.ts ***!
  \***************************************************/
/*! exports provided: UIElementsModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UIElementsModule", function() { return UIElementsModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _alert_directive__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./alert.directive */ "./src/app/ui-elements/alert.directive.ts");
/* harmony import */ var _link_directive__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./link.directive */ "./src/app/ui-elements/link.directive.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _text_formatting_directive__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./text-formatting.directive */ "./src/app/ui-elements/text-formatting.directive.ts");
/* harmony import */ var _image_sizer_directive__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./image-sizer.directive */ "./src/app/ui-elements/image-sizer.directive.ts");
/* harmony import */ var _chip_directive__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./chip.directive */ "./src/app/ui-elements/chip.directive.ts");
/* harmony import */ var _button_styling_directive__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./button-styling.directive */ "./src/app/ui-elements/button-styling.directive.ts");
/* harmony import */ var _background_styling_directive__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./background-styling.directive */ "./src/app/ui-elements/background-styling.directive.ts");
/* harmony import */ var _wrapper_classes_directive__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./wrapper-classes.directive */ "./src/app/ui-elements/wrapper-classes.directive.ts");
/* harmony import */ var _multi_checkbox_form_field_multi_checkbox_form_field_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./multi-checkbox-form-field/multi-checkbox-form-field.component */ "./src/app/ui-elements/multi-checkbox-form-field/multi-checkbox-form-field.component.ts");
/* harmony import */ var _field_label_field_label_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./field-label/field-label.component */ "./src/app/ui-elements/field-label/field-label.component.ts");
/* harmony import */ var _button_save_button_save_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./button-save/button-save.component */ "./src/app/ui-elements/button-save/button-save.component.ts");














var UIElementsModule = /** @class */ (function () {
    function UIElementsModule() {
    }
    UIElementsModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [
                _alert_directive__WEBPACK_IMPORTED_MODULE_2__["AlertDirective"],
                _link_directive__WEBPACK_IMPORTED_MODULE_3__["LinkDirective"],
                _text_formatting_directive__WEBPACK_IMPORTED_MODULE_5__["TextFormattingDirective"],
                _image_sizer_directive__WEBPACK_IMPORTED_MODULE_6__["ImageSizerDirective"],
                _chip_directive__WEBPACK_IMPORTED_MODULE_7__["ChipDirective"],
                _button_styling_directive__WEBPACK_IMPORTED_MODULE_8__["ButtonStylingDirective"],
                _background_styling_directive__WEBPACK_IMPORTED_MODULE_9__["BackgroundStylingDirective"],
                _wrapper_classes_directive__WEBPACK_IMPORTED_MODULE_10__["WrapperClassesDirective"],
                _multi_checkbox_form_field_multi_checkbox_form_field_component__WEBPACK_IMPORTED_MODULE_11__["MultiCheckboxFormFieldComponent"],
                _field_label_field_label_component__WEBPACK_IMPORTED_MODULE_12__["FieldLabelComponent"],
                _button_save_button_save_component__WEBPACK_IMPORTED_MODULE_13__["ButtonSaveComponent"]
            ],
            imports: [_angular_common__WEBPACK_IMPORTED_MODULE_4__["CommonModule"]],
            exports: [
                _alert_directive__WEBPACK_IMPORTED_MODULE_2__["AlertDirective"],
                _link_directive__WEBPACK_IMPORTED_MODULE_3__["LinkDirective"],
                _text_formatting_directive__WEBPACK_IMPORTED_MODULE_5__["TextFormattingDirective"],
                _image_sizer_directive__WEBPACK_IMPORTED_MODULE_6__["ImageSizerDirective"],
                _chip_directive__WEBPACK_IMPORTED_MODULE_7__["ChipDirective"],
                _button_styling_directive__WEBPACK_IMPORTED_MODULE_8__["ButtonStylingDirective"],
                _background_styling_directive__WEBPACK_IMPORTED_MODULE_9__["BackgroundStylingDirective"],
                _wrapper_classes_directive__WEBPACK_IMPORTED_MODULE_10__["WrapperClassesDirective"],
                _multi_checkbox_form_field_multi_checkbox_form_field_component__WEBPACK_IMPORTED_MODULE_11__["MultiCheckboxFormFieldComponent"],
                _field_label_field_label_component__WEBPACK_IMPORTED_MODULE_12__["FieldLabelComponent"],
                _button_save_button_save_component__WEBPACK_IMPORTED_MODULE_13__["ButtonSaveComponent"]
            ]
        })
    ], UIElementsModule);
    return UIElementsModule;
}());



/***/ }),

/***/ "./src/app/ui-elements/wrapper-classes.directive.ts":
/*!**********************************************************!*\
  !*** ./src/app/ui-elements/wrapper-classes.directive.ts ***!
  \**********************************************************/
/*! exports provided: WrapperClassesDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WrapperClassesDirective", function() { return WrapperClassesDirective; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../responsive.service */ "./src/app/responsive.service.ts");



var WrapperClassesDirective = /** @class */ (function () {
    function WrapperClassesDirective(elementRef, responsiveService, renderer) {
        this.elementRef = elementRef;
        this.responsiveService = responsiveService;
        this.renderer = renderer;
    }
    WrapperClassesDirective.prototype.ngOnInit = function () {
        if (this.onMobile && this.responsiveService.onMobileViewPort) {
            var wrapperEl = this.renderer.createElement(this.wrapperElement);
            this.renderer.addClass(wrapperEl, this.wrapperClass);
            // console.log(wrapperEl);
            var el = this.elementRef.nativeElement;
            // console.log(el);
            var parent_1 = el.parentNode;
            // console.log(parent);
            this.renderer.insertBefore(parent_1, wrapperEl, el);
            this.renderer.appendChild(wrapperEl, el);
        }
    };
    WrapperClassesDirective.ctorParameters = function () { return [
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_2__["ResponsiveService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], WrapperClassesDirective.prototype, "wrapperElement", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], WrapperClassesDirective.prototype, "wrapperClass", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], WrapperClassesDirective.prototype, "onMobile", void 0);
    WrapperClassesDirective = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
            selector: '[appWrapperClasses]'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _responsive_service__WEBPACK_IMPORTED_MODULE_2__["ResponsiveService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]])
    ], WrapperClassesDirective);
    return WrapperClassesDirective;
}());



/***/ }),

/***/ "./src/app/waitlist/client-waitlist-times/client-waitlist-times-table.component.ts":
/*!*****************************************************************************************!*\
  !*** ./src/app/waitlist/client-waitlist-times/client-waitlist-times-table.component.ts ***!
  \*****************************************************************************************/
/*! exports provided: ClientWaitlistTimesTableComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientWaitlistTimesTableComponent", function() { return ClientWaitlistTimesTableComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ "./node_modules/@angular/material/esm5/table.es5.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/esm5/sort.es5.js");
/* harmony import */ var _data_tables_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../data-tables.service */ "./src/app/data-tables.service.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _models_Appointment_model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../models/Appointment.model */ "./src/models/Appointment.model.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");











var ClientWaitlistTimesTableComponent = /** @class */ (function () {
    function ClientWaitlistTimesTableComponent(route, dataTablesService, router, timeService, schedulerPreferenceService, businessService, responsiveService) {
        this.route = route;
        this.dataTablesService = dataTablesService;
        this.router = router;
        this.timeService = timeService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.businessService = businessService;
        this.responsiveService = responsiveService;
        this.loading = true;
        this.errorLoading = false;
        this.loaded = false;
        this.preference = this.schedulerPreferenceService.schedulerPreference;
        this.displayedColumns = this.dataTablesService.getDefaultApptDisplayedColumns();
        this.columnDefs = this.dataTablesService.getDefaultApptColumnDefs();
        this.appts = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__["MatTableDataSource"]();
    }
    Object.defineProperty(ClientWaitlistTimesTableComponent.prototype, "matSort", {
        set: function (ms) {
            this.sort = ms;
            this.appts.sort = this.sort;
        },
        enumerable: true,
        configurable: true
    });
    ClientWaitlistTimesTableComponent.prototype.organizeWaitlistHolds = function () {
        var appts = [];
        if (this.waitlistClaims !== undefined && this.waitlistClaims !== null && this.waitlistClaims.length > 0) {
            for (var i = 0, x = this.waitlistClaims.length; i < x; i++) {
                if (this.waitlistClaims[i].status !== 'PAST_START' && this.waitlistClaims[i].status !== 'OUTSIDE_BOOKING_WINDOW' && this.waitlistClaims[i].status !== 'CANCELLED') {
                    if (this.waitlistClaims[i].appointment) {
                        this.waitlistClaims[i].appointment.waitListInviteUUId = this.waitlistClaims[i].waitListInviteUUId;
                        this.waitlistClaims[i].appointment.clientStartTimeDate = this.timeService.convertStringDateToObject(this.waitlistClaims[i].appointment.clientStartDate, Number(this.waitlistClaims[i].appointment.clientStartTime));
                        appts.push(this.waitlistClaims[i].appointment);
                    }
                    else if (this.waitlistClaims[i].courseSetRegistration) {
                        var appointment = new _models_Appointment_model__WEBPACK_IMPORTED_MODULE_9__["AppointmentBase"]();
                        appointment.waitListInviteUUId = this.waitlistClaims[i].waitListInviteUUId;
                        appointment.calendarId = this.waitlistClaims[i].courseSetRegistration.recurringAppointmentId;
                        for (var prop in this.waitlistClaims[i].courseSetRegistration) {
                            appointment[prop] = this.waitlistClaims[i].courseSetRegistration[prop];
                        }
                        appointment.clientStartTimeDate = this.waitlistClaims[i].courseSetRegistration.recurringSchedule.courseSetName;
                        appts.push(appointment);
                    }
                }
            }
        }
        appts.sort(function (a, b) { return (a.clientStartTimeDate < b.clientStartTimeDate) ? -1 : 1; });
        this.appts.data = appts;
        this.loading = false;
        this.loaded = true;
        this.errorLoading = false;
    };
    ClientWaitlistTimesTableComponent.prototype.getDisplayedColumns = function () {
        var columnsForTable = this.dataTablesService.getDisplayedColumns(this.preferenceDefinedColumns, this.columnDefs, this.preference, this.responsiveService.onMobileViewPort, null);
        console.log('columnsForTable', columnsForTable);
        this.displayedColumns = columnsForTable.appointmentFieldList;
        this.columnDefs = columnsForTable.columns;
        this.organizeWaitlistHolds();
    };
    ClientWaitlistTimesTableComponent.prototype.ngOnChanges = function (changes) {
        // console.log(changes);
        if (changes.waitlistClaims !== undefined && changes.waitlistClaims.currentValue !== undefined) {
            // if(this.preference.appointmentFieldList === undefined || this.preference.appointmentFieldList === null)
            //     this.preferenceDefinedColumns = this.dataTablesService.getDefaultApptDisplayedColumns();
            // else
            //     this.preferenceDefinedColumns = this.preference.appointmentFieldList;
            this.preferenceDefinedColumns = this.dataTablesService.getDefaultApptDisplayedColumns();
            this.getDisplayedColumns();
        }
    };
    ClientWaitlistTimesTableComponent.prototype.ngOnInit = function () {
    };
    ClientWaitlistTimesTableComponent.prototype.viewWaitlistClaimDetails = function (waitlistHold) {
        var onClaimTimesPage = false;
        var onWaitListRegistrationDetailPage = false;
        if (this.router.url.indexOf("waitlist/claimTimes") !== -1) {
            onClaimTimesPage = true;
        }
        if (this.router.url.indexOf("my-account/waitlistRegistration") !== -1) {
            onWaitListRegistrationDetailPage = true;
        }
        this.router.navigate(['waitlist/claimTimes/' + this.clientHash + "/" + waitlistHold.waitListInviteUUId], { relativeTo: this.route.root, state: { onClaimTimesPage: onClaimTimesPage, onWaitListRegistrationDetailPage: onWaitListRegistrationDetailPage } });
    };
    ClientWaitlistTimesTableComponent.ctorParameters = function () { return [
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"] },
        { type: _data_tables_service__WEBPACK_IMPORTED_MODULE_6__["DataTablesService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
        { type: _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_8__["TimeService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_10__["SchedulerPreferenceService"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_7__["ResponsiveService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Array)
    ], ClientWaitlistTimesTableComponent.prototype, "waitlistClaims", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], ClientWaitlistTimesTableComponent.prototype, "selectedClient", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
    ], ClientWaitlistTimesTableComponent.prototype, "clientHash", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_5__["MatSort"], { static: false }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_material_sort__WEBPACK_IMPORTED_MODULE_5__["MatSort"]),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_material_sort__WEBPACK_IMPORTED_MODULE_5__["MatSort"]])
    ], ClientWaitlistTimesTableComponent.prototype, "matSort", null);
    ClientWaitlistTimesTableComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'client-waitlist-times-table',
            template: __webpack_require__(/*! raw-loader!./client-waitlist-times-table.component.html */ "./node_modules/raw-loader/index.js!./src/app/waitlist/client-waitlist-times/client-waitlist-times-table.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"], _data_tables_service__WEBPACK_IMPORTED_MODULE_6__["DataTablesService"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"],
            _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_8__["TimeService"], _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_10__["SchedulerPreferenceService"],
            _business_service__WEBPACK_IMPORTED_MODULE_3__["BusinessService"], _responsive_service__WEBPACK_IMPORTED_MODULE_7__["ResponsiveService"]])
    ], ClientWaitlistTimesTableComponent);
    return ClientWaitlistTimesTableComponent;
}());



/***/ }),

/***/ "./src/app/waitlist/client-waitlist-times/client-waitlist-times.component.ts":
/*!***********************************************************************************!*\
  !*** ./src/app/waitlist/client-waitlist-times/client-waitlist-times.component.ts ***!
  \***********************************************************************************/
/*! exports provided: ClientWaitlistTimesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientWaitlistTimesComponent", function() { return ClientWaitlistTimesComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _waitlist_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../waitlist.service */ "./src/app/waitlist/waitlist.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../client-account/client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");







var ClientWaitlistTimesComponent = /** @class */ (function () {
    function ClientWaitlistTimesComponent(waitlistService, route, router, schedulerPreferenceService, businessService, clientAccountService) {
        this.waitlistService = waitlistService;
        this.route = route;
        this.router = router;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.businessService = businessService;
        this.clientAccountService = clientAccountService;
        this.loading = true;
        this.errorLoading = false;
        this.loaded = false;
        this.showWaitlistSuccess = false;
        this.preference = this.schedulerPreferenceService.schedulerPreference;
    }
    ClientWaitlistTimesComponent.prototype.getWaitlistHoldsByClient = function () {
        var _this = this;
        this.route.params.subscribe(function (params) {
            _this.clientHash = params["clientHash"];
        });
        this.waitlistService.getWaitlistHoldsByClient(this.clientHash)
            .subscribe(function (waitlistClaims) {
            _this.waitlistClaims = waitlistClaims;
            _this.loading = false;
            _this.loaded = true;
            _this.errorLoading = false;
        }, function (error) {
            _this.loading = false;
            _this.loaded = false;
            _this.errorLoading = true;
        });
    };
    ClientWaitlistTimesComponent.prototype.ngOnInit = function () {
        this.selectedClient = this.clientAccountService.setSelectedClientOnComponent(this.preference);
        this.getWaitlistHoldsByClient();
    };
    ClientWaitlistTimesComponent.ctorParameters = function () { return [
        { type: _waitlist_service__WEBPACK_IMPORTED_MODULE_2__["WaitlistService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_6__["SchedulerPreferenceService"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"] },
        { type: _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_5__["ClientAccountService"] }
    ]; };
    ClientWaitlistTimesComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'client-waitlist-times',
            template: __webpack_require__(/*! raw-loader!./client-waitlist-times.component.html */ "./node_modules/raw-loader/index.js!./src/app/waitlist/client-waitlist-times/client-waitlist-times.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_waitlist_service__WEBPACK_IMPORTED_MODULE_2__["WaitlistService"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
            _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_6__["SchedulerPreferenceService"],
            _business_service__WEBPACK_IMPORTED_MODULE_4__["BusinessService"], _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_5__["ClientAccountService"]])
    ], ClientWaitlistTimesComponent);
    return ClientWaitlistTimesComponent;
}());



/***/ }),

/***/ "./src/app/waitlist/confirm-waitlist/claim-waitlist.component.ts":
/*!***********************************************************************!*\
  !*** ./src/app/waitlist/confirm-waitlist/claim-waitlist.component.ts ***!
  \***********************************************************************/
/*! exports provided: ClaimWaitlistComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClaimWaitlistComponent", function() { return ClaimWaitlistComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _waitlist_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../waitlist.service */ "./src/app/waitlist/waitlist.service.ts");
/* harmony import */ var _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../client-account/client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _auth_auth_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../auth/auth.service */ "./src/app/auth/auth.service.ts");
/* harmony import */ var _modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../modals/error-modal/error-modal.component */ "./src/app/modals/error-modal/error-modal.component.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../models/SchedulerPanel.model */ "./src/models/SchedulerPanel.model.ts");
/* harmony import */ var _scheduler_scheduler_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../scheduler/scheduler.service */ "./src/app/scheduler/scheduler.service.ts");














var ClaimWaitlistComponent = /** @class */ (function () {
    function ClaimWaitlistComponent(waitlistService, businessService, schedulerService, clientAccountService, router, route, tagsService, authService, dialog, responsiveService, schedulerPreferenceService) {
        this.waitlistService = waitlistService;
        this.businessService = businessService;
        this.schedulerService = schedulerService;
        this.clientAccountService = clientAccountService;
        this.router = router;
        this.route = route;
        this.tagsService = tagsService;
        this.authService = authService;
        this.dialog = dialog;
        this.responsiveService = responsiveService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.clientAccount = this.clientAccountService.loggedInClient;
        this.waitlistClaimLoaded = false;
        this.waitlistClaimLoading = true;
        this.showBackButton = false;
        this.showWaitlistSuccess = false;
        this.claimingAppt = false;
        this.preference = schedulerPreferenceService.schedulerPreference;
    }
    ClaimWaitlistComponent.prototype.goToScheduler = function () {
        this.router.navigate(['scheduler']);
    };
    ClaimWaitlistComponent.prototype.showWaitlistClaimCancelled = function () {
        this.waitlistClaimTitle = this.preference.labelMap.waitlistClaimedApptCancelledTitle;
        if (this.appt !== undefined)
            this.waitlistClaimText = this.tagsService.convertApptPropertiesToTags('waitlistClaimedApptCancelledText', this.preference, this.appt);
        else
            this.waitlistClaimText = this.preference.labelMap.waitlistClaimedApptCancelledTextNoApptData;
        this.waitlistClaimLoading = false;
        this.waitlistClaimLoaded = true;
    };
    ClaimWaitlistComponent.prototype.showWaitlistClaimExceedsMaxActiveAppts = function () {
        var dialogRef = this.dialog.open(_modals_error_modal_error_modal_component__WEBPACK_IMPORTED_MODULE_8__["ErrorModalComponent"], { maxWidth: this.responsiveService.getMaxWidthForModals(), data: { preference: this.preference, errorType: 'maxApptsReached' } });
        this.waitlistClaimLoading = false;
        this.waitlistClaimLoaded = true;
    };
    ClaimWaitlistComponent.prototype.showWaitlistAlreadyClaimed = function () {
        this.waitlistClaimTitle = this.preference.labelMap.waitlistAlreadyClaimed;
        this.waitlistClaimText = this.tagsService.convertWaitListPropertiesToTags('waitlistAlreadyClaimedText', this.preference, null, this.waitlistClaim.waitlist);
        this.waitlistClaimLoading = false;
        this.waitlistClaimLoaded = true;
    };
    ClaimWaitlistComponent.prototype.showWaitlistClaimSuccess = function () {
        this.finalConfirmationPanel = new _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_12__["schedulerPanel"](_models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_12__["SchedulerPanelValues"].finalConfirmation, null, false, 10, true, 'thanksTitle', 'thanksInfo', 'thanksPnlErrorLoading', false);
        this.finalConfirmationPanel.formGroup = this.schedulerService.getPanelForm(this.finalConfirmationPanel.panel, this.preference.schedulerPreferenceFieldDefnList);
        this.showWaitlistSuccess = true;
    };
    ClaimWaitlistComponent.prototype.showWaitlistClaimSuccessCourseSet = function () {
        this.finalConfirmationPanel = new _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_12__["schedulerPanel"](_models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_12__["SchedulerPanelValues"].finalConfirmation, null, false, 10, true, 'thanksTitle', 'thanksInfoRepeating', 'thanksPnlErrorLoading', false);
        this.finalConfirmationPanel.formGroup = this.schedulerService.getPanelForm(this.finalConfirmationPanel.panel, this.preference.schedulerPreferenceFieldDefnList);
        this.showWaitlistSuccess = true;
    };
    ClaimWaitlistComponent.prototype.getAppt = function () {
        var _this = this;
        this.businessService.getApptDetail(this.waitlistClaim.appointment.hashId)
            .subscribe(function (appt) {
            _this.appt = appt;
            if (_this.appt.status !== 'CANCELLED') {
                _this.showWaitlistClaimSuccess();
            }
            else {
                _this.showWaitlistClaimCancelled();
            }
        });
    };
    ClaimWaitlistComponent.prototype.getCourseSetRegistration = function () {
        var _this = this;
        this.businessService.getRepeatingApptDetail(String(this.waitlistClaim.courseSetRegistration.hashId))
            .subscribe(function (multipleAppts) {
            _this.multipleAppts = multipleAppts;
            if (_this.multipleAppts.recurringAppointment.status.toUpperCase() !== 'CANCELLED')
                _this.showWaitlistClaimSuccessCourseSet();
            else
                _this.showWaitlistClaimCancelled();
        }, function (error) {
        });
    };
    ClaimWaitlistComponent.prototype.claimAppt = function () {
        var _this = this;
        this.claimingAppt = true;
        this.waitlistService.claimAppt(this.waitlistInviteId)
            .subscribe(function (response) {
            _this.waitlistClaim = response.waitlistClaim;
            if (_this.waitlistClaim.status === 'SUCCESS') {
                if (response.appointment) {
                    _this.appt = response.appointment;
                    _this.showWaitlistClaimSuccess();
                }
                else if (response.courseSetRegistration) {
                    _this.multipleAppts = response.courseSetRegistration;
                    _this.showWaitlistClaimSuccessCourseSet();
                }
            }
            else if (_this.waitlistClaim.status === 'EXCEEDS_MAX_ACTIVE_APPTS') { // LHB 4/20/2021 TT-7689
                _this.showWaitlistClaimExceedsMaxActiveAppts();
            }
            else {
                _this.showWaitlistAlreadyClaimed();
            }
            _this.waitlistClaimLoading = false;
            _this.waitlistClaimLoaded = true;
            _this.claimingAppt = false;
        }, function (error) {
            // console.log(error);
        });
    };
    ClaimWaitlistComponent.prototype.goBack = function () {
        if (this.authService.isAuth()) {
            var waitlistId = sessionStorage.getItem("waitlistRegistrationDetailId");
            var waitListDateTimeId = sessionStorage.getItem("waitListDateTimeId");
            if (history.state !== undefined && history.state !== null &&
                history.state.onWaitListRegistrationDetailPage !== undefined &&
                history.state.onWaitListRegistrationDetailPage !== null &&
                history.state.onWaitListRegistrationDetailPage === true &&
                waitlistId !== null &&
                waitListDateTimeId !== null) {
                this.router.navigate(['my-account/waitlistRegistration/' + waitlistId, { waitListDateTimeId: waitListDateTimeId }], { relativeTo: this.route.root });
            }
            else
                this.router.navigate(['../'], { relativeTo: this.route });
        }
        else {
            this.router.navigate(['../'], { relativeTo: this.route });
        }
    };
    ClaimWaitlistComponent.prototype.getWaitlistDetail = function () {
        var _this = this;
        this.route.params.subscribe(function (params) {
            _this.waitlistInviteId = params["waitlistInviteId"];
            _this.clientHash = params["clientHash"];
            if (_this.clientHash !== undefined && _this.clientHash !== null && _this.clientHash !== "") {
                _this.showBackButton = true;
            }
        });
        this.waitlistService.getWaitlistClaim(this.waitlistInviteId)
            .subscribe(function (waitlistClaim) {
            _this.waitlistClaim = waitlistClaim;
            if (_this.waitlistClaim.appointment && _this.waitlistClaim.waitlist)
                _this.waitlistClaim.appointment.client = _this.waitlistClaim.waitlist.client;
            if (_this.waitlistClaim.status === 'UNCLAIMED') {
                _this.waitlistClaimTitle = _this.preference.labelMap.waitListAcceptScreenHeader;
                if (_this.waitlistClaim.appointment)
                    _this.waitlistClaimText = _this.tagsService.convertApptPropertiesToTags('waitListAcceptScreenText', _this.preference, _this.waitlistClaim.appointment);
                else if (_this.waitlistClaim.courseSetRegistration)
                    _this.waitlistClaimText = _this.tagsService.convertRepeatingApptPropertiesToTags('waitListAcceptCourseRegistrationScreenText', _this.preference, _this.waitlistClaim.courseSetRegistration, _this.waitlistClaim.courseSetRegistrationAppointments);
                _this.waitlistClaimLoading = false;
                _this.waitlistClaimLoaded = true;
            }
            else if (_this.waitlistClaim.status === 'PAST_START') {
                _this.waitlistClaimTitle = _this.preference.labelMap.waitlistPastStartTimeTitle;
                _this.waitlistClaimText = _this.tagsService.convertWaitListPropertiesToTags('waitlistPastStartTimeText', _this.preference, null, _this.waitlistClaim.waitlist);
                _this.waitlistClaimLoading = false;
                _this.waitlistClaimLoaded = true;
            }
            else if (_this.waitlistClaim.status === 'OUTSIDE_BOOKING_WINDOW') {
                _this.waitlistClaimTitle = _this.preference.labelMap.waitListOutsideBookingWindowTitle;
                _this.waitlistClaimText = _this.tagsService.convertWaitListPropertiesToTags('waitListOutsideBookingWindowMsg', _this.preference, null, _this.waitlistClaim.waitlist);
                _this.waitlistClaimLoading = false;
                _this.waitlistClaimLoaded = true;
            }
            else if (_this.waitlistClaim.status === 'CANCELLED') {
                _this.showWaitlistClaimCancelled();
            }
            else if (_this.waitlistClaim.status === 'CLAIMED') {
                if (_this.waitlistClaim.waitlistId === _this.waitlistClaim.waitlist.waitListId) {
                    if (_this.waitlistClaim.appointment)
                        _this.getAppt();
                    else if (_this.waitlistClaim.courseSetRegistration)
                        _this.getCourseSetRegistration();
                }
                else {
                    _this.showWaitlistAlreadyClaimed();
                }
            }
        }, function (error) {
            _this.waitlistClaimTitle = _this.preference.labelMap.waitListAcceptScreenErrorTitle;
            _this.waitlistClaimText = _this.preference.labelMap.waitListAcceptScreenErrorText;
            _this.waitlistClaimLoading = false;
            _this.waitlistClaimLoaded = true;
        });
    };
    ClaimWaitlistComponent.prototype.ngOnInit = function () {
        this.selectedClient = this.clientAccountService.setSelectedClientOnComponent(this.preference);
        this.getWaitlistDetail();
    };
    ClaimWaitlistComponent.ctorParameters = function () { return [
        { type: _waitlist_service__WEBPACK_IMPORTED_MODULE_3__["WaitlistService"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_2__["BusinessService"] },
        { type: _scheduler_scheduler_service__WEBPACK_IMPORTED_MODULE_13__["SchedulerService"] },
        { type: _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_4__["ClientAccountService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_6__["TagsService"] },
        { type: _auth_auth_service__WEBPACK_IMPORTED_MODULE_7__["AuthService"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_9__["ResponsiveService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_11__["SchedulerPreferenceService"] }
    ]; };
    ClaimWaitlistComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-claim-waitlist',
            template: __webpack_require__(/*! raw-loader!./claim-waitlist.component.html */ "./node_modules/raw-loader/index.js!./src/app/waitlist/confirm-waitlist/claim-waitlist.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_waitlist_service__WEBPACK_IMPORTED_MODULE_3__["WaitlistService"],
            _business_service__WEBPACK_IMPORTED_MODULE_2__["BusinessService"],
            _scheduler_scheduler_service__WEBPACK_IMPORTED_MODULE_13__["SchedulerService"],
            _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_4__["ClientAccountService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"],
            _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"],
            _tags_service__WEBPACK_IMPORTED_MODULE_6__["TagsService"],
            _auth_auth_service__WEBPACK_IMPORTED_MODULE_7__["AuthService"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"], _responsive_service__WEBPACK_IMPORTED_MODULE_9__["ResponsiveService"],
            _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_11__["SchedulerPreferenceService"]])
    ], ClaimWaitlistComponent);
    return ClaimWaitlistComponent;
}());



/***/ }),

/***/ "./src/app/waitlist/join-wait-list/join-wait-list.component.css":
/*!**********************************************************************!*\
  !*** ./src/app/waitlist/join-wait-list/join-wait-list.component.css ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "mat-form-field, tt-wait-list-registration-detail-table {\n    width: 100%;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2FpdGxpc3Qvam9pbi13YWl0LWxpc3Qvam9pbi13YWl0LWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL3dhaXRsaXN0L2pvaW4td2FpdC1saXN0L2pvaW4td2FpdC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCwgdHQtd2FpdC1saXN0LXJlZ2lzdHJhdGlvbi1kZXRhaWwtdGFibGUge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuIl19 */"

/***/ }),

/***/ "./src/app/waitlist/join-wait-list/join-wait-list.component.ts":
/*!*********************************************************************!*\
  !*** ./src/app/waitlist/join-wait-list/join-wait-list.component.ts ***!
  \*********************************************************************/
/*! exports provided: JoinWaitListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JoinWaitListComponent", function() { return JoinWaitListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../client-account/client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _scheduler_scheduler_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../scheduler/scheduler.service */ "./src/app/scheduler/scheduler.service.ts");
/* harmony import */ var _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../models/BookingSelectionOption.model */ "./src/models/BookingSelectionOption.model.ts");
/* harmony import */ var _models_Group_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../models/Group.model */ "./src/models/Group.model.ts");
/* harmony import */ var _models_ValueOption_model__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../models/ValueOption.model */ "./src/models/ValueOption.model.ts");
/* harmony import */ var _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../models/WaitList.model */ "./src/models/WaitList.model.ts");
/* harmony import */ var _join_wait_list_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./join-wait-list.service */ "./src/app/waitlist/join-wait-list/join-wait-list.service.ts");
/* harmony import */ var _scheduler_time_time_objects_model__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../scheduler/time/time-objects.model */ "./src/app/scheduler/time/time-objects.model.ts");
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var _models_MainObjectTypes_model__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../models/MainObjectTypes.model */ "./src/models/MainObjectTypes.model.ts");
/* harmony import */ var _booking_components_availability_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../booking-components/availability.service */ "./src/app/booking-components/availability.service.ts");
/* harmony import */ var _models_Reason_model__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../models/Reason.model */ "./src/models/Reason.model.ts");
/* harmony import */ var _reasons_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../reasons.service */ "./src/app/reasons.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _config_list_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../config-list.service */ "./src/app/config-list.service.ts");
/* harmony import */ var _models_Staff_model__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../models/Staff.model */ "./src/models/Staff.model.ts");
/* harmony import */ var _pipes_militaryTimeConversion_pipe__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../../pipes/militaryTimeConversion.pipe */ "./src/pipes/militaryTimeConversion.pipe.ts");
/* harmony import */ var _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../../models/SchedulerPanel.model */ "./src/models/SchedulerPanel.model.ts");
/* harmony import */ var _responsive_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../responsive.service */ "./src/app/responsive.service.ts");
/* harmony import */ var _models_SelectedDateTimeObj_model__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../../models/SelectedDateTimeObj.model */ "./src/models/SelectedDateTimeObj.model.ts");
/* harmony import */ var _scheduler_common_components_timezone_timezone_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../../scheduler/common-components/timezone/timezone.service */ "./src/app/scheduler/common-components/timezone/timezone.service.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_24__);
/* harmony import */ var _format_functions_service__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../format-functions.service */ "./src/app/format-functions.service.ts");


























var JoinWaitListComponent = /** @class */ (function () {
    function JoinWaitListComponent(businessService, clientAccountService, formatFunctionsService, timeService, availabilityService, reasonsService, schedulerService, joinWaitListService, cdRef, schedulerPreferenceService, configListService, militaryTimeConversion, responsiveService, timezoneService) {
        this.businessService = businessService;
        this.clientAccountService = clientAccountService;
        this.formatFunctionsService = formatFunctionsService;
        this.timeService = timeService;
        this.availabilityService = availabilityService;
        this.reasonsService = reasonsService;
        this.schedulerService = schedulerService;
        this.joinWaitListService = joinWaitListService;
        this.cdRef = cdRef;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.configListService = configListService;
        this.militaryTimeConversion = militaryTimeConversion;
        this.responsiveService = responsiveService;
        this.timezoneService = timezoneService;
        this.clientAccount = this.clientAccountService.loggedInClient;
        this.configList = this.configListService.configList;
        this.objectType = _models_MainObjectTypes_model__WEBPACK_IMPORTED_MODULE_12__["MainObjectTypes"].WAIT_LIST;
        this.joiningWaitList = false;
        this.bookingSelectionFlow = [];
        this.firstAvailableValueOption = new _models_ValueOption_model__WEBPACK_IMPORTED_MODULE_7__["ValueOptionModel"]('First Available', _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationDateOptionValues"].FIRST_AVAILABLE, false);
        this.byDateValueOption = new _models_ValueOption_model__WEBPACK_IMPORTED_MODULE_7__["ValueOptionModel"]('By Specific Dates & Times', _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationDateOptionValues"].DATE_TIME, false);
        this.waitListRegistrationDateOptions = [];
        this.specificTimeValueOption = new _models_ValueOption_model__WEBPACK_IMPORTED_MODULE_7__["ValueOptionModel"]('Select from booked times', _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationTimeOptionValues"].BOOKED_TIMES, false);
        this.customTimeRangeValueOption = new _models_ValueOption_model__WEBPACK_IMPORTED_MODULE_7__["ValueOptionModel"]('Enter custom time frame', _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationTimeOptionValues"].CUSTOM_TIME, false);
        this.allDayTimeRangeValueOption = new _models_ValueOption_model__WEBPACK_IMPORTED_MODULE_7__["ValueOptionModel"]('Add the whole day', _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationTimeOptionValues"].ALL_DAY, false);
        this.waitListRegistrationTimeOptionValues = _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationTimeOptionValues"];
        this.waitListRegistrationDateOptionValues = _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationDateOptionValues"];
        this.addingTime = false;
        this.addedTime = false;
        this.errorAddingTime = false;
        this.disableSave = false;
        this.panels = [];
        this.choosingWaitListTimes = true;
        this.enteringClientInfo = false;
        this.showConfirmation = false;
        this.inputValues = [];
        this.preference = schedulerPreferenceService.schedulerPreference;
    }
    JoinWaitListComponent.prototype.movePanels = function (moveData) {
        var _this = this;
        this.joinWaitListHeaderClickSubscription = this.joinWaitListService.joinWaitListHeaderClicked.subscribe(function () {
            _this.showConfirmation = false;
            _this.enteringClientInfo = false;
            _this.choosingWaitListTimes = true;
            _this.availabilityService.availabilityFilterData = null;
            _this.loadForm();
            _this.joinWaitListHeaderClickSubscription.unsubscribe();
        });
        switch (moveData.panel.panel) {
            case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_20__["SchedulerPanelValues"].clientInfo:
                this.enteringClientInfo = false;
                if (moveData.direction === 'back')
                    this.choosingWaitListTimes = true;
                else if (moveData.direction === 'next') {
                    this.showConfirmation = true;
                    this.waitLists = moveData.waitLists;
                }
                break;
            case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_20__["SchedulerPanelValues"].finalConfirmation:
                this.showConfirmation = false;
                this.enteringClientInfo = false;
                this.choosingWaitListTimes = true;
                this.availabilityService.availabilityFilterData = null;
                this.loadForm();
                break;
        }
    };
    JoinWaitListComponent.prototype.setBtnLabel = function () {
        if (this.waitListRegistrationDateOption && this.waitListRegistrationDateOption.value === _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationDateOptionValues"].FIRST_AVAILABLE)
            this.joinWaitListBtn = this.preference.labelMap.joinWaitListBtnFirstAvailable;
        else
            this.joinWaitListBtn = this.preference.labelMap.joinWaitListBtnSpecificTimes;
    };
    JoinWaitListComponent.prototype.setTextProperties = function () {
        this.joinWaitListTitle = this.preference.labelMap.timePnlWaitlistTitle;
        this.joinWaitListDescription = this.preference.labelMap.joinWaitListDescription;
        this.setBtnLabel();
    };
    JoinWaitListComponent.prototype.timeChanged = function (time, property) {
        this.customTimeSlot[property] = time;
        var minutes = 5;
        minutes = this.availabilityService.getApptDuration(this.waitList, this.objectType);
        switch (property) {
            case 'endTime':
                this.customTimeSlot.startTime = this.timeService.checkStartTimeBeforeEndTime(this.waitList.startDate, this.waitList.startDate, this.customTimeSlot.startTime, this.customTimeSlot.endTime, 'startTime', false, minutes);
                break;
            case 'startTime':
                this.customTimeSlot.endTime = this.timeService.checkStartTimeBeforeEndTime(this.waitList.startDate, this.waitList.startDate, this.customTimeSlot.startTime, this.customTimeSlot.endTime, 'endTime', false, minutes);
                break;
        }
    };
    JoinWaitListComponent.prototype.storeTimeSlot = function (timeSlot) {
        if (timeSlot) {
            var added = this.joinWaitListService.storeTimeSlotOnWaitList(this.waitList, timeSlot);
            if (this.waitListRegistrationTimeOption.value !== _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationTimeOptionValues"].BOOKED_TIMES) {
                this.addingTime = false;
                if (added)
                    this.addedTime = true;
                else
                    this.errorAddingTime = true;
            }
        }
    };
    JoinWaitListComponent.prototype.storeTimeSlots = function (timeSlots) {
        for (var i = 0, x = timeSlots.length; i < x; i++)
            this.storeTimeSlot(timeSlots[i]);
        this.configureOnloadAndChanges(this.waitList);
    };
    JoinWaitListComponent.prototype.getTimezoneForDisplay = function (onload) {
        var _this = this;
        this.timezoneService.getTimezoneForDisplay(this.CSFilterObj)
            .subscribe(function (timezone) {
            if (onload) {
                _this.CSFilterObj = _this.timezoneService.matchClientTZ(timezone, _this.CSFilterObj);
                _this.setWaitListRegistrationDateOption(_this.waitListRegistrationDateOptions[0]);
            }
        });
    };
    JoinWaitListComponent.prototype.timeZoneChanged = function (timezoneChangeEvent) {
        this.CSFilterObj.clientTimeZone = timezoneChangeEvent.timezoneCode;
        this.CSFilterObj.clientTimeZoneId = timezoneChangeEvent.timezoneId;
        this.waitList.waitListTZ = this.CSFilterObj.clientTimeZone;
        if (this.timeslotMultiSelectComponent)
            this.timeslotMultiSelectComponent.changeTimeZoneForTimeSlots();
        this.selectedTimezone = timezoneChangeEvent.timezoneCode;
    };
    JoinWaitListComponent.prototype.changeTriggeredToCheckTimezoneDisplay = function (originalFilter, updatedFilter) {
        var checkTimezone = false;
        if (!this.formatFunctionsService.arraysEqual(originalFilter.staffIdList, updatedFilter.staffIdList))
            return true;
        else if (!this.formatFunctionsService.arraysEqual(originalFilter.locationIdList, updatedFilter.locationIdList))
            return true;
        else if (!this.formatFunctionsService.arraysEqual(originalFilter.locationGroupIdList, updatedFilter.locationGroupIdList))
            return true;
        else
            return checkTimezone;
    };
    JoinWaitListComponent.prototype.configureOnloadAndChanges = function (waitList) {
        this.waitList = waitList;
        var originalCSFilter = lodash__WEBPACK_IMPORTED_MODULE_24__["cloneDeep"](this.CSFilterObj);
        this.CSFilterObj = this.joinWaitListService.setCSFilterObject(this.bookingSelectionFlow, this.CSFilterObj);
        if (this.changeTriggeredToCheckTimezoneDisplay(originalCSFilter, this.CSFilterObj))
            this.getTimezoneForDisplay();
        this.joinWaitListService.setCurrentEvent(waitList);
        this.availabilityService.setMinMaxBookingDates(waitList.reason);
        this.checkDisableSave();
        this.cdRef.detectChanges();
    };
    JoinWaitListComponent.prototype.checkLoadCompleted = function (counter, bookingFlowLength) {
        if (counter === bookingFlowLength) {
            if (this.noWaitListAbleReasons) {
                this.showNoWaitListReasonsMsg = false;
                if (this.bookingSelectionFlow[0].objectType === _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_5__["BookingSelectionObjectTypes"].REASON) {
                    this.showNoWaitListReasonsMsg = true;
                }
                else {
                    var allSelectionsHaveOneValue = true;
                    for (var i = 0, x = this.bookingSelectionFlow.length; i < x; i++) {
                        if (this.bookingSelectionFlow[i].objectType === _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_5__["BookingSelectionObjectTypes"].REASON) // reached reason, can assume all before have been checked
                            break;
                        else if (this.bookingSelectionFlow[i].options.length > 1)
                            allSelectionsHaveOneValue = false;
                    }
                    if (allSelectionsHaveOneValue)
                        this.showNoWaitListReasonsMsg = true;
                }
            }
            this.getTimezoneForDisplay(true);
            this.configureOnloadAndChanges(this.waitList);
            this.waitListOptionsLoading = false;
        }
    };
    JoinWaitListComponent.prototype.setWaitListRegistrationDateOption = function (waitListRegistrationDateOption) {
        this.waitListRegistrationDateOption = this.joinWaitListService.setWaitListRegistrationDateTimeOption(waitListRegistrationDateOption.value, this.waitListRegistrationDateOptions);
        if (!this.waitListRegistrationTimeOption && this.waitListRegistrationDateOption.value === _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationDateOptionValues"].DATE_TIME) {
            for (var i = 0, x = this.waitListRegistrationTimeOptions.length; i < x; i++)
                if (this.waitListRegistrationTimeOptions[i].value === _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationTimeOptionValues"].BOOKED_TIMES)
                    this.setWaitListRegistrationTimeOption(this.waitListRegistrationTimeOptions[i]);
        }
        this.setBtnLabel();
        this.checkDisableSave();
    };
    JoinWaitListComponent.prototype.setWaitListRegistrationTimeOption = function (waitListRegistrationDateTimeOption) {
        this.waitListRegistrationTimeOption = this.joinWaitListService.setWaitListRegistrationDateTimeOption(waitListRegistrationDateTimeOption.value, this.waitListRegistrationTimeOptions);
        if (this.waitListRegistrationTimeOption.value === _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationTimeOptionValues"].CUSTOM_TIME) {
            this.customTimeSlot = new _scheduler_time_time_objects_model__WEBPACK_IMPORTED_MODULE_10__["SingleTimeSlot"]();
            this.customTimeSlot.startTime = 800;
            this.customTimeSlot.endTime = this.timeService.calculateEndTime(this.waitList.reason.visitMinutes, this.customTimeSlot.startTime, 'roundUp');
            this.customTimeSlot.selected = true;
        }
        else if (this.waitListRegistrationTimeOption.value === _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationTimeOptionValues"].ALL_DAY) {
            this.customTimeSlot = new _scheduler_time_time_objects_model__WEBPACK_IMPORTED_MODULE_10__["SingleTimeSlot"]();
            this.customTimeSlot.startTime = 0;
            this.customTimeSlot.endTime = 2400;
            this.customTimeSlot.selected = true;
        }
    };
    JoinWaitListComponent.prototype.getOptionsForWaitListChoices = function () {
        return tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"](this, void 0, void 0, function () {
            var counter, _loop_1, _i, _a, bs;
            var _this = this;
            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_b) {
                switch (_b.label) {
                    case 0:
                        this.CSFilterObj = this.schedulerService.newCSFilterObj();
                        counter = 0;
                        _loop_1 = function (bs) {
                            var _a;
                            return tslib__WEBPACK_IMPORTED_MODULE_0__["__generator"](this, function (_b) {
                                switch (_b.label) {
                                    case 0:
                                        _a = bs.objectType;
                                        switch (_a) {
                                            case _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_5__["BookingSelectionObjectTypes"].LOCATION: return [3 /*break*/, 1];
                                            case _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_5__["BookingSelectionObjectTypes"].STAFF: return [3 /*break*/, 3];
                                            case _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_5__["BookingSelectionObjectTypes"].REASON: return [3 /*break*/, 5];
                                            case _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_5__["BookingSelectionObjectTypes"].GROUP: return [3 /*break*/, 7];
                                        }
                                        return [3 /*break*/, 9];
                                    case 1: return [4 /*yield*/, new Promise(function (resolve, reject) {
                                            _this.businessService.getLocations(_this.CSFilterObj).subscribe(function (locations) {
                                                bs.options = locations;
                                                bs.selectedOption = bs.options[0];
                                                _this.waitList.location = bs.selectedOption;
                                                _this.CSFilterObj.locationIdList = [bs.selectedOption.locationId];
                                                counter++;
                                                _this.checkLoadCompleted(counter, _this.bookingSelectionFlow.length);
                                                resolve();
                                            });
                                        })];
                                    case 2:
                                        _b.sent();
                                        return [3 /*break*/, 9];
                                    case 3: return [4 /*yield*/, new Promise(function (resolve, reject) {
                                            _this.businessService.getStaff(_this.CSFilterObj).subscribe(function (staff) {
                                                if (_this.preference.staffNoPreference === 0 && staff.length > 1) {
                                                    var noPreferenceStaff = new _models_Staff_model__WEBPACK_IMPORTED_MODULE_18__["Staff"](null, _this.preference.labelMap.labelNoPreference);
                                                    noPreferenceStaff.imageUrl = null;
                                                    noPreferenceStaff.staffProfile = null;
                                                    staff.unshift(noPreferenceStaff);
                                                }
                                                bs.options = staff;
                                                bs.selectedOption = bs.options[0];
                                                _this.waitList.staff = bs.selectedOption;
                                                _this.CSFilterObj.staffIdList = [bs.selectedOption.professionalId];
                                                counter++;
                                                _this.checkLoadCompleted(counter, _this.bookingSelectionFlow.length);
                                                resolve();
                                            });
                                        })];
                                    case 4:
                                        _b.sent();
                                        return [3 /*break*/, 9];
                                    case 5: return [4 /*yield*/, new Promise(function (resolve, reject) {
                                            _this.reasonsService.getReasons(_this.CSFilterObj, true).subscribe(function (reasonReturnData) {
                                                if (reasonReturnData.reasonAPIBeanList && reasonReturnData.reasonAPIBeanList.length > 0) {
                                                    bs.options = reasonReturnData.reasonAPIBeanList;
                                                    _this.noWaitListAbleReasons = false;
                                                }
                                                else {
                                                    var noReasonForBooking = new _models_Reason_model__WEBPACK_IMPORTED_MODULE_14__["Reason"]();
                                                    noReasonForBooking.createNoWaitListAbleReason(_this.configList);
                                                    bs.options = [noReasonForBooking];
                                                    _this.CSFilterObj.reasonIdList = [];
                                                    _this.noWaitListAbleReasons = true;
                                                }
                                                bs.selectedOption = bs.options[0];
                                                _this.waitList.reason = bs.selectedOption;
                                                _this.CSFilterObj.reasonIdList = [bs.selectedOption.reasonId];
                                                counter++;
                                                _this.checkLoadCompleted(counter, _this.bookingSelectionFlow.length);
                                                resolve();
                                            });
                                        })];
                                    case 6:
                                        _b.sent();
                                        return [3 /*break*/, 9];
                                    case 7: return [4 /*yield*/, new Promise(function (resolve, reject) {
                                            _this.businessService.getGroups(bs.groupType, _this.CSFilterObj).subscribe(function (groups) {
                                                bs.options = groups;
                                                bs.selectedOption = bs.options[0];
                                                switch (bs.groupType) {
                                                    case _models_Group_model__WEBPACK_IMPORTED_MODULE_6__["GroupTypes"].LOCATION_GROUP:
                                                        _this.waitList.locationSuperGroup = bs.selectedOption;
                                                        _this.CSFilterObj.locationSuperGroupIdList = [bs.selectedOption.groupId];
                                                        break;
                                                    case _models_Group_model__WEBPACK_IMPORTED_MODULE_6__["GroupTypes"].LOCATION:
                                                        _this.waitList.locationGroup = bs.selectedOption;
                                                        _this.CSFilterObj.locationGroupIdList = [bs.selectedOption.groupId];
                                                        break;
                                                    case _models_Group_model__WEBPACK_IMPORTED_MODULE_6__["GroupTypes"].SERVICE_GROUP:
                                                        _this.waitList.reasonSuperGroup = bs.selectedOption;
                                                        _this.CSFilterObj.reasonSuperGroupIdList = [bs.selectedOption.groupId];
                                                        break;
                                                    case _models_Group_model__WEBPACK_IMPORTED_MODULE_6__["GroupTypes"].SERVICE:
                                                        _this.waitList.reasonGroup = bs.selectedOption;
                                                        _this.CSFilterObj.reasonGroupIdList = [bs.selectedOption.groupId];
                                                        break;
                                                }
                                                counter++;
                                                _this.checkLoadCompleted(counter, _this.bookingSelectionFlow.length);
                                                resolve();
                                            });
                                        })];
                                    case 8:
                                        _b.sent();
                                        return [3 /*break*/, 9];
                                    case 9: return [2 /*return*/];
                                }
                            });
                        };
                        _i = 0, _a = this.bookingSelectionFlow;
                        _b.label = 1;
                    case 1:
                        if (!(_i < _a.length)) return [3 /*break*/, 4];
                        bs = _a[_i];
                        return [5 /*yield**/, _loop_1(bs)];
                    case 2:
                        _b.sent();
                        _b.label = 3;
                    case 3:
                        _i++;
                        return [3 /*break*/, 1];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    JoinWaitListComponent.prototype.setUpWaitListChoices = function () {
        this.waitListOptionsLoading = true;
        var bookingSelectionFlowValues = this.schedulerService.getPanelOrder(this.preference.appMode, this.preference.showServiceGroup, this.preference.showServiceSuperGroup);
        this.panels = this.schedulerService.configurePanels(true, bookingSelectionFlowValues);
        this.bookingSelectionFlow = [];
        for (var i = 0, x = bookingSelectionFlowValues.length; i < x; i++) {
            if (bookingSelectionFlowValues[i] === 'locations')
                this.bookingSelectionFlow.push(this.schedulerService.createLocationBookingOption());
            else if (bookingSelectionFlowValues[i] === 'staff')
                this.bookingSelectionFlow.push(this.schedulerService.createStaffBookingOption());
            else if (bookingSelectionFlowValues[i] === 'reasons')
                this.bookingSelectionFlow.push(this.schedulerService.createReasonBookingOption());
            else if (bookingSelectionFlowValues[i] === 'locationSuperGroups')
                this.bookingSelectionFlow.push(this.schedulerService.createGroupBookingOption(_models_Group_model__WEBPACK_IMPORTED_MODULE_6__["GroupTypes"].LOCATION_GROUP));
            else if (bookingSelectionFlowValues[i] === 'locationGroups')
                this.bookingSelectionFlow.push(this.schedulerService.createGroupBookingOption(_models_Group_model__WEBPACK_IMPORTED_MODULE_6__["GroupTypes"].LOCATION));
            else if (bookingSelectionFlowValues[i] === 'reasonSuperGroups')
                this.bookingSelectionFlow.push(this.schedulerService.createGroupBookingOption(_models_Group_model__WEBPACK_IMPORTED_MODULE_6__["GroupTypes"].SERVICE_GROUP));
            else if (bookingSelectionFlowValues[i] === 'reasonGroups')
                this.bookingSelectionFlow.push(this.schedulerService.createGroupBookingOption(_models_Group_model__WEBPACK_IMPORTED_MODULE_6__["GroupTypes"].SERVICE));
        }
        this.getOptionsForWaitListChoices();
    };
    JoinWaitListComponent.prototype.checkDisableSave = function () {
        var disableSave = true;
        if (this.waitList.reason && this.waitList.reason.reasonId !== -1 && ((this.waitListRegistrationDateOption && this.waitListRegistrationDateOption.value === _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationDateOptionValues"].FIRST_AVAILABLE) ||
            (this.waitList.waitListDateList && this.waitList.waitListDateList.length > 0)))
            disableSave = false;
        this.disableSave = disableSave;
        this.cdRef.detectChanges();
    };
    JoinWaitListComponent.prototype.joinWaitList = function () {
        for (var i = 0, x = this.panels.length; i < x; i++) {
            switch (this.panels[i].panel) {
                case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_20__["SchedulerPanelValues"].locations:
                    this.panels[i].formGroup.patchValue({ location: this.waitList.location, preference: this.preference });
                    this.inputValues = this.schedulerService.arrangeInputValues(this.inputValues, this.panels[i].formGroup.value, i, this.panels, this.CSFilterObj);
                    break;
                case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_20__["SchedulerPanelValues"].staff:
                    this.panels[i].formGroup.patchValue({ staff: this.waitList.staff });
                    this.inputValues = this.schedulerService.arrangeInputValues(this.inputValues, this.panels[i].formGroup.value, i, this.panels, this.CSFilterObj);
                    break;
                case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_20__["SchedulerPanelValues"].reasons:
                    this.panels[i].formGroup.patchValue({ reason: this.waitList.reason });
                    this.inputValues = this.schedulerService.arrangeInputValues(this.inputValues, this.panels[i].formGroup.value, i, this.panels, this.CSFilterObj);
                    break;
                case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_20__["SchedulerPanelValues"].time:
                    if (this.waitListRegistrationDateOption.value === _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationDateOptionValues"].FIRST_AVAILABLE) {
                        var firstAvailTime = this.availabilityService.createFirstAvailableTimeSlot(this.waitList.reason, this.waitList.staff, this.waitList.location);
                        var selectedDateTimeObj = new _models_SelectedDateTimeObj_model__WEBPACK_IMPORTED_MODULE_22__["SelectedDateTimeObj"]().createFromSingleTimeSlot(firstAvailTime, this.waitList.reason, this.waitList.staff, this.waitList.location, this.preference.labelMap.labelNoPreference);
                        this.panels[i].formGroup.controls['selectedDateTime'].setValue(selectedDateTimeObj);
                    }
                    else {
                        this.panels[i].formGroup = this.schedulerService.getPanelForm(this.panels[i].panel, this.preference.schedulerPreferenceFieldDefnList);
                        for (var j = 0, y = this.waitList.selectedTimes.length; j < y; j++) {
                            // @ts-ignore
                            if (this.panels[i].formGroup.controls['selectedDateTime'].controls.clientStartTime.value === null) {
                                this.panels[i].formGroup.controls['selectedDateTime'].setValue(this.waitList.selectedTimes[j]);
                            }
                            else {
                                var count = 0;
                                for (var prop in this.panels[i].formGroup.controls) {
                                    count++;
                                }
                                var formControlName = 'selectedDateTime' + count;
                                this.panels[i].formGroup.addControl(formControlName, this.schedulerService.getTimeSlotFormGroup());
                                this.panels[i].formGroup.controls[formControlName].setValue(this.waitList.selectedTimes[j]);
                            }
                        }
                    }
                    this.inputValues = this.schedulerService.arrangeInputValues(this.inputValues, this.panels[i].formGroup.value, i, this.panels, this.CSFilterObj);
                    break;
                case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_20__["SchedulerPanelValues"].clientInfo:
                    this.clientInfoPanel = this.panels[i];
                    break;
                case _models_SchedulerPanel_model__WEBPACK_IMPORTED_MODULE_20__["SchedulerPanelValues"].finalConfirmation:
                    this.finalConfirmationPanel = this.panels[i];
                    break;
            }
            this.choosingWaitListTimes = false;
            this.enteringClientInfo = true;
        }
    };
    JoinWaitListComponent.prototype.checkShowDateAndTimeSlotSelector = function () {
        return this.waitList.reason && this.waitList.reason.reasonId !== -1 && this.waitList.reason.reasonType !== _models_Reason_model__WEBPACK_IMPORTED_MODULE_14__["ReasonTypes"].COURSE && this.waitListRegistrationDateOption && this.waitListRegistrationDateOption.value === _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationDateOptionValues"].DATE_TIME;
    };
    JoinWaitListComponent.prototype.checkShowDateAndTimeTable = function () {
        return this.waitList.reason && this.waitList.reason.reasonId !== -1 && this.waitListRegistrationDateOption && this.waitListRegistrationDateOption.value === _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationDateOptionValues"].DATE_TIME;
    };
    JoinWaitListComponent.prototype.checkShowChooseTimes = function (waitListRegistrationTimeOptionValue) {
        if (waitListRegistrationTimeOptionValue === _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationTimeOptionValues"].BOOKED_TIMES)
            return this.waitList.reason && this.waitList.reason.reasonId !== -1 && this.waitListRegistrationDateOption && this.waitListRegistrationDateOption.value === _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationDateOptionValues"].DATE_TIME && this.waitListRegistrationTimeOption && this.waitListRegistrationTimeOption.value === _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationTimeOptionValues"].BOOKED_TIMES;
        else if (waitListRegistrationTimeOptionValue === _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationTimeOptionValues"].CUSTOM_TIME)
            return this.waitList.reason && this.waitList.reason.reasonId !== -1 && this.waitListRegistrationDateOption && this.waitListRegistrationDateOption.value === _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationDateOptionValues"].DATE_TIME && this.waitListRegistrationTimeOption && this.waitListRegistrationTimeOption.value === _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationTimeOptionValues"].CUSTOM_TIME;
    };
    JoinWaitListComponent.prototype.checkShowAddTimeButton = function () {
        return this.waitList.reason && this.waitList.reason.reasonId !== -1 && this.waitListRegistrationDateOption && this.waitListRegistrationDateOption.value === _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitListRegistrationDateOptionValues"].DATE_TIME && this.waitListRegistrationTimeOption && (this.waitListRegistrationTimeOption.value === this.waitListRegistrationTimeOptionValues.CUSTOM_TIME || this.waitListRegistrationTimeOption.value === this.waitListRegistrationTimeOptionValues.ALL_DAY);
    };
    JoinWaitListComponent.prototype.addingTimeDismissed = function () {
        this.addingTime = false;
        this.addedTime = false;
        this.errorAddingTime = false;
    };
    JoinWaitListComponent.prototype.addCustomTimeSlot = function () {
        this.addingTime = true;
        this.customTimeSlot.createCustomTimeSlotFromWaitList(this.waitList, this.militaryTimeConversion, this.preference.timeFormat24Hrs, this.timeService);
        this.storeTimeSlot(this.customTimeSlot);
        this.configureOnloadAndChanges(this.waitList);
    };
    JoinWaitListComponent.prototype.configureWaitListBaseProps = function () {
        this.waitList = new _models_WaitList_model__WEBPACK_IMPORTED_MODULE_8__["WaitList"]();
        var dateForAppt = new Date();
        var utcDate = new Date(Date.UTC(dateForAppt.getFullYear(), dateForAppt.getMonth(), dateForAppt.getDate()));
        this.waitList.startDate = utcDate;
        this.waitList.waitListDateList = [];
        this.setUpWaitListChoices();
    };
    JoinWaitListComponent.prototype.loadForm = function () {
        if (this.preference && this.preference.booleanMap && this.preference.booleanMap.allowWaitListRegistrationOutsideOfAvailability)
            this.waitListRegistrationTimeOptions = [this.specificTimeValueOption, this.customTimeRangeValueOption, this.allDayTimeRangeValueOption];
        else
            this.waitListRegistrationTimeOptions = [this.specificTimeValueOption];
        this.selectedClient = this.clientAccountService.setSelectedClientOnComponent(this.preference);
        this.availabilityService.waitListMode = true;
        this.setTextProperties();
        this.configureWaitListBaseProps();
    };
    JoinWaitListComponent.prototype.ngOnInit = function () {
        this.waitListOptionsLoading = true;
        if (this.preference.waitListFirstAvailable)
            this.waitListRegistrationDateOptions = [this.byDateValueOption, this.firstAvailableValueOption];
        else
            this.waitListRegistrationDateOptions = [this.byDateValueOption];
        this.loadForm();
    };
    JoinWaitListComponent.prototype.ngOnDestroy = function () {
        this.availabilityService.clearCurrentEvent();
        if (this.joinWaitListHeaderClickSubscription)
            this.joinWaitListHeaderClickSubscription.unsubscribe();
    };
    JoinWaitListComponent.ctorParameters = function () { return [
        { type: _business_service__WEBPACK_IMPORTED_MODULE_2__["BusinessService"] },
        { type: _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_3__["ClientAccountService"] },
        { type: _format_functions_service__WEBPACK_IMPORTED_MODULE_25__["FormatFunctionsService"] },
        { type: _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_11__["TimeService"] },
        { type: _booking_components_availability_service__WEBPACK_IMPORTED_MODULE_13__["AvailabilityService"] },
        { type: _reasons_service__WEBPACK_IMPORTED_MODULE_15__["ReasonsService"] },
        { type: _scheduler_scheduler_service__WEBPACK_IMPORTED_MODULE_4__["SchedulerService"] },
        { type: _join_wait_list_service__WEBPACK_IMPORTED_MODULE_9__["JoinWaitListService"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_16__["SchedulerPreferenceService"] },
        { type: _config_list_service__WEBPACK_IMPORTED_MODULE_17__["ConfigListService"] },
        { type: _pipes_militaryTimeConversion_pipe__WEBPACK_IMPORTED_MODULE_19__["MilitaryTimeConversion"] },
        { type: _responsive_service__WEBPACK_IMPORTED_MODULE_21__["ResponsiveService"] },
        { type: _scheduler_common_components_timezone_timezone_service__WEBPACK_IMPORTED_MODULE_23__["TimezoneService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])('timeslotMultiSelectComponent', { static: false }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], JoinWaitListComponent.prototype, "timeslotMultiSelectComponent", void 0);
    JoinWaitListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-join-wait-list',
            template: __webpack_require__(/*! raw-loader!./join-wait-list.component.html */ "./node_modules/raw-loader/index.js!./src/app/waitlist/join-wait-list/join-wait-list.component.html"),
            styles: [__webpack_require__(/*! ./join-wait-list.component.css */ "./src/app/waitlist/join-wait-list/join-wait-list.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_business_service__WEBPACK_IMPORTED_MODULE_2__["BusinessService"], _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_3__["ClientAccountService"], _format_functions_service__WEBPACK_IMPORTED_MODULE_25__["FormatFunctionsService"],
            _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_11__["TimeService"], _booking_components_availability_service__WEBPACK_IMPORTED_MODULE_13__["AvailabilityService"], _reasons_service__WEBPACK_IMPORTED_MODULE_15__["ReasonsService"],
            _scheduler_scheduler_service__WEBPACK_IMPORTED_MODULE_4__["SchedulerService"], _join_wait_list_service__WEBPACK_IMPORTED_MODULE_9__["JoinWaitListService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"],
            _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_16__["SchedulerPreferenceService"], _config_list_service__WEBPACK_IMPORTED_MODULE_17__["ConfigListService"], _pipes_militaryTimeConversion_pipe__WEBPACK_IMPORTED_MODULE_19__["MilitaryTimeConversion"],
            _responsive_service__WEBPACK_IMPORTED_MODULE_21__["ResponsiveService"], _scheduler_common_components_timezone_timezone_service__WEBPACK_IMPORTED_MODULE_23__["TimezoneService"]])
    ], JoinWaitListComponent);
    return JoinWaitListComponent;
}());



/***/ }),

/***/ "./src/app/waitlist/join-wait-list/join-wait-list.service.ts":
/*!*******************************************************************!*\
  !*** ./src/app/waitlist/join-wait-list/join-wait-list.service.ts ***!
  \*******************************************************************/
/*! exports provided: JoinWaitListService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JoinWaitListService", function() { return JoinWaitListService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_WaitList_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../models/WaitList.model */ "./src/models/WaitList.model.ts");
/* harmony import */ var _scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../scheduler/time/time.service */ "./src/app/scheduler/time/time.service.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _models_MainObjectTypes_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../models/MainObjectTypes.model */ "./src/models/MainObjectTypes.model.ts");
/* harmony import */ var _booking_components_availability_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../booking-components/availability.service */ "./src/app/booking-components/availability.service.ts");
/* harmony import */ var rxjs_index__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs/index */ "./node_modules/rxjs/index.js");
/* harmony import */ var rxjs_index__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(rxjs_index__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _models_SelectedDateTimeObj_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../models/SelectedDateTimeObj.model */ "./src/models/SelectedDateTimeObj.model.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../models/BookingSelectionOption.model */ "./src/models/BookingSelectionOption.model.ts");
/* harmony import */ var _models_Group_model__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../models/Group.model */ "./src/models/Group.model.ts");












var JoinWaitListService = /** @class */ (function () {
    function JoinWaitListService(injector) {
        this.injector = injector;
        this.currentEventChanged = new rxjs_index__WEBPACK_IMPORTED_MODULE_7__["Subject"]();
        this.joinWaitListHeaderClicked = new rxjs_index__WEBPACK_IMPORTED_MODULE_7__["Subject"]();
        this.availabilityService = injector.get(_booking_components_availability_service__WEBPACK_IMPORTED_MODULE_6__["AvailabilityService"]);
        this.timeService = injector.get(_scheduler_time_time_service__WEBPACK_IMPORTED_MODULE_3__["TimeService"]);
        this.schedulerPreferenceService = injector.get(_scheduler_preference_service__WEBPACK_IMPORTED_MODULE_9__["SchedulerPreferenceService"]);
    }
    JoinWaitListService.prototype.setCurrentEvent = function (waitList, onRemoveTime) {
        var oldEventData = lodash__WEBPACK_IMPORTED_MODULE_4__["cloneDeep"](this.currentEvent);
        this.currentEvent = waitList;
        // this.timeService.getTimezoneForEvent(this.currentEvent as WaitList);
        var newEventData = lodash__WEBPACK_IMPORTED_MODULE_4__["cloneDeep"](this.currentEvent);
        this.availabilityService.setCurrentEvent(this.currentEvent, _models_MainObjectTypes_model__WEBPACK_IMPORTED_MODULE_5__["MainObjectTypes"].WAIT_LIST, onRemoveTime);
        this.currentEventChanged.next({ newEventData: newEventData, oldEventData: oldEventData });
    };
    JoinWaitListService.prototype.getCurrentEvent = function () {
        return lodash__WEBPACK_IMPORTED_MODULE_4__["cloneDeep"](this.currentEvent);
    };
    JoinWaitListService.prototype.clearCurrentEvent = function () {
        this.currentEvent = null;
    };
    JoinWaitListService.prototype.setWaitListRegistrationDateTimeOption = function (selectedValue, waitListRegistrationDateTimeOptions) {
        for (var i = 0, x = waitListRegistrationDateTimeOptions.length; i < x; i++)
            waitListRegistrationDateTimeOptions[i].selected = false;
        for (var i = 0, x = waitListRegistrationDateTimeOptions.length; i < x; i++)
            if (waitListRegistrationDateTimeOptions[i].value === selectedValue) {
                waitListRegistrationDateTimeOptions[i].selected = true;
                return waitListRegistrationDateTimeOptions[i];
            }
    };
    JoinWaitListService.prototype.removeTimeSlot = function (waitList, waitListDate, waitListDateTime, timeSlot) {
        for (var i = 0, x = waitList.waitListDateList.length; i < x; i++)
            if (!waitListDate.recurringScheduleId && waitList.waitListDateList[i].date === waitListDate.date) {
                for (var j = 0; j < waitList.waitListDateList[i].waitListDateTimeList.length; j++)
                    if (waitList.waitListDateList[i].waitListDateTimeList[j].startTime === waitListDateTime.startTime)
                        waitList.waitListDateList[i].waitListDateTimeList.splice(j, 1);
            }
            else if (waitListDate.recurringScheduleId && waitListDate.recurringScheduleId === waitList.waitListDateList[i].recurringScheduleId) {
                waitList.waitListDateList.splice(i, 1);
            }
        if (waitList.selectedTimes)
            for (var i = 0, x = waitList.selectedTimes.length; i < x; i++)
                if (waitList.selectedTimes[i].timeSlotId === timeSlot.timeSlotId)
                    waitList.selectedTimes.splice(i, 1);
    };
    JoinWaitListService.prototype.storeTimeSlotOnWaitList = function (waitList, timeSlot) {
        var added = false;
        var selectedDateTimeObj = new _models_SelectedDateTimeObj_model__WEBPACK_IMPORTED_MODULE_8__["SelectedDateTimeObj"]().createFromSingleTimeSlot(timeSlot, waitList.reason, waitList.staff, waitList.location, this.schedulerPreferenceService.schedulerPreference.labelMap.labelNoPreference);
        if (!waitList.selectedTimes)
            waitList.selectedTimes = [];
        var selectedTimeIdList = [];
        for (var i = 0, x = waitList.selectedTimes.length; i < x; i++) {
            selectedTimeIdList.push(waitList.selectedTimes[i].timeSlotId);
        }
        if (selectedTimeIdList.indexOf(selectedDateTimeObj.timeSlotId) === -1) {
            waitList.selectedTimes.push(selectedDateTimeObj);
        }
        var year = Number(this.timeService.getPipeYearFromDate(timeSlot.staffStartDateTimeUTC));
        var month = Number(this.timeService.getPipeMonthFromDate(timeSlot.staffStartDateTimeUTC)) - 1;
        var day = Number(this.timeService.getPipeDayFromDate(timeSlot.staffStartDateTimeUTC));
        var objectDate = new Date(Date.UTC(year, month, day));
        var dateTime = objectDate.getTime();
        var waitListDate = new _models_WaitList_model__WEBPACK_IMPORTED_MODULE_2__["WaitListDate"](dateTime);
        waitListDate.recurringScheduleId = timeSlot.recurringScheduleId;
        waitListDate.courseSet = timeSlot.courseSet;
        var waitListDateTime = new _models_WaitList_model__WEBPACK_IMPORTED_MODULE_2__["WaitListDateTime"](timeSlot.startTime, timeSlot.endTime);
        waitListDateTime.timeString = timeSlot.timeString;
        waitListDateTime.classScheduleId = timeSlot.classScheduleId;
        waitListDateTime.clientStartTimeForDisplay = selectedDateTimeObj.cartDisplayStartDateTime;
        waitListDateTime.clientEndTimeForDisplay = selectedDateTimeObj.cartDisplayEndDateTime;
        waitListDateTime.startDateTimeUTC = selectedDateTimeObj.startDateTimeUTC;
        waitListDateTime.endDateTimeUTC = selectedDateTimeObj.endDateTimeUTC;
        waitListDate.waitListDateTimeList = [waitListDateTime];
        if (waitListDate.recurringScheduleId) {
            waitListDate.date = null;
            waitListDate.preferredDate = null;
            waitListDate.waitListDateTimeList = [];
        }
        if (timeSlot.selected) {
            var datesInWaitListCart = []; // GET AN ARRAY OF ALL THE DATES IN THE WAITLIST CART TO COMPARE NEW SELECTION TO
            // console.log(timeSlot);
            // console.log(selectedDateTimeObj);
            // console.log(waitListDateTime);
            if (waitList.waitListDateList.length > 0) {
                for (var i = 0, x = waitList.waitListDateList.length; i < x; i++)
                    datesInWaitListCart.push(waitList.waitListDateList[i].date);
                if (datesInWaitListCart.indexOf(waitListDate.date) !== -1) { // DATE IS IN THE WAITLIST CART ALREADY AND JUST NEED TO ADD TIME TO IT
                    for (var i = 0, x = waitList.waitListDateList.length; i < x; i++)
                        if (waitList.waitListDateList[i].date === waitListDate.date)
                            if (waitList.waitListDateList[i].waitListDateTimeList.length === 0) {
                                waitList.waitListDateList[i].waitListDateTimeList = [waitListDateTime];
                                added = true;
                            }
                            else { // NEXT NEED TO MAKE SURE THAT THE TIME IS NOT CURRENTLY PART OF THE DATE (fixes TT-2351)
                                var timesOnDate = [];
                                for (var j = 0, y = waitList.waitListDateList[i].waitListDateTimeList.length; j < y; j++)
                                    timesOnDate.push(waitList.waitListDateList[i].waitListDateTimeList[j].timeString);
                                if (timesOnDate.indexOf(waitListDateTime.timeString) === -1) { // TIME IS NOT IN THE DATE LIST YET AND NEEDS TO BE PUSHED
                                    waitList.waitListDateList[i].waitListDateTimeList = [waitListDateTime];
                                    added = true;
                                }
                            }
                }
                else { // DATE IS NOT IN THE CART
                    waitList.waitListDateList.push(waitListDate);
                    added = true;
                }
            }
            else { // WAITLIST CART IS EMPTY AND THIS IS THE FIRST ENTRY
                if (!waitList.waitListDateList)
                    waitList.waitListDateList = [];
                waitList.waitListDateList.push(waitListDate);
                added = true;
            }
        }
        else
            this.removeTimeSlot(waitList, waitListDate, waitListDateTime, timeSlot);
        return added;
    };
    JoinWaitListService.prototype.setCSFilterObject = function (bookingSelectionFlow, csFilterObj) {
        var filterObj = lodash__WEBPACK_IMPORTED_MODULE_4__["cloneDeep"](csFilterObj);
        bookingSelectionFlow.forEach(function (bs, index) {
            switch (bs.objectType) {
                case _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_10__["BookingSelectionObjectTypes"].LOCATION:
                    // @ts-ignore
                    filterObj.locationIdList = [bs.selectedOption.locationId];
                    break;
                case _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_10__["BookingSelectionObjectTypes"].STAFF:
                    // @ts-ignore
                    filterObj.staffIdList = [bs.selectedOption.professionalId];
                    break;
                case _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_10__["BookingSelectionObjectTypes"].REASON:
                    // @ts-ignore
                    filterObj.reasonIdList = [bs.selectedOption.reasonId];
                    break;
                case _models_BookingSelectionOption_model__WEBPACK_IMPORTED_MODULE_10__["BookingSelectionObjectTypes"].GROUP:
                    switch (bs.groupType) {
                        case _models_Group_model__WEBPACK_IMPORTED_MODULE_11__["GroupTypes"].LOCATION_GROUP:
                            // @ts-ignore
                            filterObj.locationSuperGroupIdList = [bs.selectedOption.groupId];
                            break;
                        case _models_Group_model__WEBPACK_IMPORTED_MODULE_11__["GroupTypes"].LOCATION:
                            // @ts-ignore
                            filterObj.locationGroupIdList = [bs.selectedOption.groupId];
                            break;
                        case _models_Group_model__WEBPACK_IMPORTED_MODULE_11__["GroupTypes"].SERVICE_GROUP:
                            // @ts-ignore
                            filterObj.reasonSuperGroupIdList = [bs.selectedOption.groupId];
                            break;
                        case _models_Group_model__WEBPACK_IMPORTED_MODULE_11__["GroupTypes"].SERVICE:
                            // @ts-ignore
                            filterObj.reasonGroupIdList = [bs.selectedOption.groupId];
                            break;
                    }
                    break;
            }
        });
        return filterObj;
    };
    JoinWaitListService.ctorParameters = function () { return [
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] }
    ]; };
    JoinWaitListService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"]])
    ], JoinWaitListService);
    return JoinWaitListService;
}());



/***/ }),

/***/ "./src/app/waitlist/remove-waitlist/remove-waitlist.component.ts":
/*!***********************************************************************!*\
  !*** ./src/app/waitlist/remove-waitlist/remove-waitlist.component.ts ***!
  \***********************************************************************/
/*! exports provided: RemoveWaitlistComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RemoveWaitlistComponent", function() { return RemoveWaitlistComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _business_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../business.service */ "./src/app/business.service.ts");
/* harmony import */ var _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../client-account/client-account.service */ "./src/app/client-account/client-account.service.ts");
/* harmony import */ var _waitlist_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../waitlist.service */ "./src/app/waitlist/waitlist.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _tags_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../tags.service */ "./src/app/tags.service.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");








var RemoveWaitlistComponent = /** @class */ (function () {
    function RemoveWaitlistComponent(waitlistService, businessService, route, clientAccountService, tagsService, schedulerPreferenceService) {
        this.waitlistService = waitlistService;
        this.businessService = businessService;
        this.route = route;
        this.clientAccountService = clientAccountService;
        this.tagsService = tagsService;
        this.schedulerPreferenceService = schedulerPreferenceService;
        this.preference = this.schedulerPreferenceService.schedulerPreference;
        this.clientAccount = this.clientAccountService.loggedInClient;
        this.waitlistRemoveLoaded = false;
        this.waitlistRemoveLoading = true;
        this.waitlistRemoving = false;
        this.waitlistRemoved = false;
        this.errorLoading = false;
        this.errorRemoving = false;
    }
    RemoveWaitlistComponent.prototype.removeSuccess = function () {
        this.waitlistRemoving = false;
        this.waitlistRemoved = true;
        this.waitlistRemoveTitle = this.preference.labelMap.waitlistRemoveSuccessTitle;
        this.waitlistRemoveText = this.tagsService.convertWaitListPropertiesToTags('waitlistRemoveSuccessText', this.preference, [this.waitlist], this.waitlist);
    };
    RemoveWaitlistComponent.prototype.removeError = function () {
        this.waitlistRemoving = false;
        this.errorRemoving = true;
    };
    RemoveWaitlistComponent.prototype.removeFromWaitlist = function () {
        var _this = this;
        this.waitlistRemoving = true;
        this.waitlistService.removeFromWaitlist(this.waitlist.waitListId)
            .subscribe(function (waitlist) {
            _this.waitlist = waitlist;
            _this.removeSuccess();
        }, function (error) {
            _this.removeError();
        });
    };
    RemoveWaitlistComponent.prototype.getWaitlist = function () {
        var _this = this;
        this.route.params.subscribe(function (params) {
            _this.waitlistHash = params["waitlistHash"];
        });
        this.waitlistService.getWaitlist(this.waitlistHash)
            .subscribe(function (waitlist) {
            _this.waitlist = waitlist;
            if (_this.waitlist.status !== 'REMOVED') {
                _this.waitlistRemoveTitle = _this.preference.labelMap.waitlistRemoveTitle;
                _this.waitlistRemoveText = _this.tagsService.convertWaitListPropertiesToTags('waitlistRemoveText', _this.preference, [_this.waitlist], _this.waitlist);
            }
            else {
                _this.removeSuccess();
            }
            _this.waitlistRemoveLoading = false;
            _this.waitlistRemoveLoaded = true;
            _this.errorLoading = false;
        }, function (error) {
            _this.waitlistRemoveLoading = false;
            _this.waitlistRemoveLoaded = false;
            _this.errorLoading = true;
        });
    };
    RemoveWaitlistComponent.prototype.ngOnInit = function () {
        this.selectedClient = this.clientAccountService.setSelectedClientOnComponent(this.preference);
        this.getWaitlist();
    };
    RemoveWaitlistComponent.ctorParameters = function () { return [
        { type: _waitlist_service__WEBPACK_IMPORTED_MODULE_4__["WaitlistService"] },
        { type: _business_service__WEBPACK_IMPORTED_MODULE_2__["BusinessService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"] },
        { type: _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_3__["ClientAccountService"] },
        { type: _tags_service__WEBPACK_IMPORTED_MODULE_6__["TagsService"] },
        { type: _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_7__["SchedulerPreferenceService"] }
    ]; };
    RemoveWaitlistComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-remove-waitlist',
            template: __webpack_require__(/*! raw-loader!./remove-waitlist.component.html */ "./node_modules/raw-loader/index.js!./src/app/waitlist/remove-waitlist/remove-waitlist.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_waitlist_service__WEBPACK_IMPORTED_MODULE_4__["WaitlistService"],
            _business_service__WEBPACK_IMPORTED_MODULE_2__["BusinessService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"],
            _client_account_client_account_service__WEBPACK_IMPORTED_MODULE_3__["ClientAccountService"],
            _tags_service__WEBPACK_IMPORTED_MODULE_6__["TagsService"],
            _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_7__["SchedulerPreferenceService"]])
    ], RemoveWaitlistComponent);
    return RemoveWaitlistComponent;
}());



/***/ }),

/***/ "./src/app/waitlist/wait-list-registration-detail-table/wait-list-registration-detail-table.component.css":
/*!****************************************************************************************************************!*\
  !*** ./src/app/waitlist/wait-list-registration-detail-table/wait-list-registration-detail-table.component.css ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "div.alert {\n    width: 100%;\n    margin-top: 1rem;\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd2FpdGxpc3Qvd2FpdC1saXN0LXJlZ2lzdHJhdGlvbi1kZXRhaWwtdGFibGUvd2FpdC1saXN0LXJlZ2lzdHJhdGlvbi1kZXRhaWwtdGFibGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC93YWl0bGlzdC93YWl0LWxpc3QtcmVnaXN0cmF0aW9uLWRldGFpbC10YWJsZS93YWl0LWxpc3QtcmVnaXN0cmF0aW9uLWRldGFpbC10YWJsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZGl2LmFsZXJ0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tdG9wOiAxcmVtO1xufVxuIl19 */"

/***/ }),

/***/ "./src/app/waitlist/wait-list-registration-detail-table/wait-list-registration-detail-table.component.ts":
/*!***************************************************************************************************************!*\
  !*** ./src/app/waitlist/wait-list-registration-detail-table/wait-list-registration-detail-table.component.ts ***!
  \***************************************************************************************************************/
/*! exports provided: WaitListRegistrationDetailTableComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WaitListRegistrationDetailTableComponent", function() { return WaitListRegistrationDetailTableComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _models_WaitList_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../models/WaitList.model */ "./src/models/WaitList.model.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _data_tables_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../data-tables.service */ "./src/app/data-tables.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _waitlist_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../waitlist.service */ "./src/app/waitlist/waitlist.service.ts");
/* harmony import */ var _join_wait_list_join_wait_list_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../join-wait-list/join-wait-list.service */ "./src/app/waitlist/join-wait-list/join-wait-list.service.ts");
/* harmony import */ var _models_Reason_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../models/Reason.model */ "./src/models/Reason.model.ts");









var WaitListRegistrationDetailTableComponent = /** @class */ (function () {
    function WaitListRegistrationDetailTableComponent(dataTablesService, router, route, waitListsService, joinWaitListService) {
        this.dataTablesService = dataTablesService;
        this.router = router;
        this.route = route;
        this.waitListsService = waitListsService;
        this.joinWaitListService = joinWaitListService;
        this.onAddNew = false;
        this.onRemoveTime = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.displayedColumns = this.waitListsService.getDisplayedColumns();
        this.columnDefs = this.waitListsService.getColumnDefs();
        this.elementList = new _angular_material__WEBPACK_IMPORTED_MODULE_3__["MatTableDataSource"]();
    }
    WaitListRegistrationDetailTableComponent.prototype.checkIsCourseRegistration = function () {
        var isCourse = false;
        if (this.waitList && this.waitList.reason && this.waitList.reason.reasonType === _models_Reason_model__WEBPACK_IMPORTED_MODULE_8__["ReasonTypes"].COURSE)
            isCourse = true;
        return isCourse;
    };
    WaitListRegistrationDetailTableComponent.prototype.establishTable = function (waitListDateList) {
        var isCourse = this.checkIsCourseRegistration();
        this.displayedColumns = this.waitListsService.getDisplayedColumns(isCourse);
        this.elements = waitListDateList;
        this.loading = false;
        this.elementList.data = this.elements;
    };
    WaitListRegistrationDetailTableComponent.prototype.removeTime = function (wld) {
        if (this.onAddNew) {
            var waitListDateTime = void 0;
            var waitListDate = void 0;
            for (var i = 0, x = this.waitList.waitListDateList.length; i < x; i++) {
                if (wld.date === this.waitList.waitListDateList[i].date) {
                    waitListDate = this.waitList.waitListDateList[i];
                    for (var j = 0, y = this.waitList.waitListDateList[i].waitListDateTimeList.length; j < y; j++)
                        if (wld.waitListDateTime.startTime === this.waitList.waitListDateList[i].waitListDateTimeList[j].startTime &&
                            wld.waitListDateTime.endTime === this.waitList.waitListDateList[i].waitListDateTimeList[j].endTime)
                            waitListDateTime = this.waitList.waitListDateList[i].waitListDateTimeList[j];
                }
            }
            if (waitListDateTime && waitListDate) {
                this.waitListsService.removeTimeSlot(this.waitList, waitListDate, waitListDateTime);
            }
            if (waitListDate && !waitListDateTime) {
                this.waitListsService.removeTimeSlotDate(this.waitList, waitListDate);
            }
            this.joinWaitListService.setCurrentEvent(this.waitList, true);
        }
    };
    WaitListRegistrationDetailTableComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.establishTable(this.waitListsService.createWaitListDateListArrayForTable(this.waitList));
        this.waitListChanged = this.joinWaitListService.currentEventChanged.subscribe(function (currentEventData) {
            _this.waitList = currentEventData.newEventData;
            _this.establishTable(_this.waitListsService.createWaitListDateListArrayForTable(_this.waitList));
        });
    };
    WaitListRegistrationDetailTableComponent.prototype.ngOnDestroy = function () {
        if (this.waitListChanged)
            this.waitListChanged.unsubscribe();
    };
    WaitListRegistrationDetailTableComponent.ctorParameters = function () { return [
        { type: _data_tables_service__WEBPACK_IMPORTED_MODULE_4__["DataTablesService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"] },
        { type: _waitlist_service__WEBPACK_IMPORTED_MODULE_6__["WaitlistService"] },
        { type: _join_wait_list_join_wait_list_service__WEBPACK_IMPORTED_MODULE_7__["JoinWaitListService"] }
    ]; };
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Number)
    ], WaitListRegistrationDetailTableComponent.prototype, "waitListId", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _models_WaitList_model__WEBPACK_IMPORTED_MODULE_2__["WaitList"])
    ], WaitListRegistrationDetailTableComponent.prototype, "waitList", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Boolean)
    ], WaitListRegistrationDetailTableComponent.prototype, "onAddNew", void 0);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
    ], WaitListRegistrationDetailTableComponent.prototype, "onRemoveTime", void 0);
    WaitListRegistrationDetailTableComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'tt-wait-list-registration-detail-table',
            template: __webpack_require__(/*! raw-loader!./wait-list-registration-detail-table.component.html */ "./node_modules/raw-loader/index.js!./src/app/waitlist/wait-list-registration-detail-table/wait-list-registration-detail-table.component.html"),
            styles: [__webpack_require__(/*! ./wait-list-registration-detail-table.component.css */ "./src/app/waitlist/wait-list-registration-detail-table/wait-list-registration-detail-table.component.css")]
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_data_tables_service__WEBPACK_IMPORTED_MODULE_4__["DataTablesService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"], _waitlist_service__WEBPACK_IMPORTED_MODULE_6__["WaitlistService"], _join_wait_list_join_wait_list_service__WEBPACK_IMPORTED_MODULE_7__["JoinWaitListService"]])
    ], WaitListRegistrationDetailTableComponent);
    return WaitListRegistrationDetailTableComponent;
}());



/***/ }),

/***/ "./src/app/waitlist/wait-list-routing.module.ts":
/*!******************************************************!*\
  !*** ./src/app/waitlist/wait-list-routing.module.ts ***!
  \******************************************************/
/*! exports provided: WaitListRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WaitListRoutingModule", function() { return WaitListRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _waitlist_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./waitlist.component */ "./src/app/waitlist/waitlist.component.ts");
/* harmony import */ var _client_waitlist_times_client_waitlist_times_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./client-waitlist-times/client-waitlist-times.component */ "./src/app/waitlist/client-waitlist-times/client-waitlist-times.component.ts");
/* harmony import */ var _confirm_waitlist_claim_waitlist_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./confirm-waitlist/claim-waitlist.component */ "./src/app/waitlist/confirm-waitlist/claim-waitlist.component.ts");
/* harmony import */ var _remove_waitlist_remove_waitlist_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./remove-waitlist/remove-waitlist.component */ "./src/app/waitlist/remove-waitlist/remove-waitlist.component.ts");
/* harmony import */ var _join_wait_list_join_wait_list_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./join-wait-list/join-wait-list.component */ "./src/app/waitlist/join-wait-list/join-wait-list.component.ts");








var routes = [
    { path: 'waitlist', component: _waitlist_component__WEBPACK_IMPORTED_MODULE_3__["WaitlistComponent"],
        children: [
            { path: "", component: _waitlist_component__WEBPACK_IMPORTED_MODULE_3__["WaitlistComponent"] },
            { path: "claimTimes/:clientHash", component: _client_waitlist_times_client_waitlist_times_component__WEBPACK_IMPORTED_MODULE_4__["ClientWaitlistTimesComponent"] },
            { path: "claimTimes/:clientHash/:waitlistInviteId", component: _confirm_waitlist_claim_waitlist_component__WEBPACK_IMPORTED_MODULE_5__["ClaimWaitlistComponent"] },
            { path: "claim/:waitlistInviteId", component: _confirm_waitlist_claim_waitlist_component__WEBPACK_IMPORTED_MODULE_5__["ClaimWaitlistComponent"] },
            { path: "remove/:waitlistHash", component: _remove_waitlist_remove_waitlist_component__WEBPACK_IMPORTED_MODULE_6__["RemoveWaitlistComponent"] },
            { path: "join", component: _join_wait_list_join_wait_list_component__WEBPACK_IMPORTED_MODULE_7__["JoinWaitListComponent"] },
        ]
    }
];
var WaitListRoutingModule = /** @class */ (function () {
    function WaitListRoutingModule() {
    }
    WaitListRoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
        })
    ], WaitListRoutingModule);
    return WaitListRoutingModule;
}());



/***/ }),

/***/ "./src/app/waitlist/wait-list.module.ts":
/*!**********************************************!*\
  !*** ./src/app/waitlist/wait-list.module.ts ***!
  \**********************************************/
/*! exports provided: WaitListModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WaitListModule", function() { return WaitListModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _waitlist_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./waitlist.component */ "./src/app/waitlist/waitlist.component.ts");
/* harmony import */ var _remove_waitlist_remove_waitlist_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./remove-waitlist/remove-waitlist.component */ "./src/app/waitlist/remove-waitlist/remove-waitlist.component.ts");
/* harmony import */ var _confirm_waitlist_claim_waitlist_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./confirm-waitlist/claim-waitlist.component */ "./src/app/waitlist/confirm-waitlist/claim-waitlist.component.ts");
/* harmony import */ var _client_waitlist_times_client_waitlist_times_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./client-waitlist-times/client-waitlist-times.component */ "./src/app/waitlist/client-waitlist-times/client-waitlist-times.component.ts");
/* harmony import */ var _client_waitlist_times_client_waitlist_times_table_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./client-waitlist-times/client-waitlist-times-table.component */ "./src/app/waitlist/client-waitlist-times/client-waitlist-times-table.component.ts");
/* harmony import */ var _material_module__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../material.module */ "./src/app/material.module.ts");
/* harmony import */ var _client_account_client_account_header_client_account_header_module__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../client-account/client-account-header/client-account-header.module */ "./src/app/client-account/client-account-header/client-account-header.module.ts");
/* harmony import */ var _wait_list_routing_module__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./wait-list-routing.module */ "./src/app/waitlist/wait-list-routing.module.ts");
/* harmony import */ var _pipes_pipes_module__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../pipes/pipes.module */ "./src/pipes/pipes.module.ts");
/* harmony import */ var _scheduler_confirmation_confirmation_module__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../scheduler/confirmation/confirmation.module */ "./src/app/scheduler/confirmation/confirmation.module.ts");
/* harmony import */ var _join_wait_list_join_wait_list_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./join-wait-list/join-wait-list.component */ "./src/app/waitlist/join-wait-list/join-wait-list.component.ts");
/* harmony import */ var _scheduler_common_components_title_bar_title_bar_module__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../scheduler/common-components/title-bar/title-bar.module */ "./src/app/scheduler/common-components/title-bar/title-bar.module.ts");
/* harmony import */ var _booking_components_booking_components_module__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../booking-components/booking-components.module */ "./src/app/booking-components/booking-components.module.ts");
/* harmony import */ var _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../ui-elements/ui-elements.module */ "./src/app/ui-elements/ui-elements.module.ts");
/* harmony import */ var _wait_list_registration_detail_table_wait_list_registration_detail_table_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./wait-list-registration-detail-table/wait-list-registration-detail-table.component */ "./src/app/waitlist/wait-list-registration-detail-table/wait-list-registration-detail-table.component.ts");
/* harmony import */ var _scheduler_client_info_client_info_module__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../scheduler/client-info/client-info.module */ "./src/app/scheduler/client-info/client-info.module.ts");
/* harmony import */ var _scheduler_common_components_timezone_timezone_module__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../scheduler/common-components/timezone/timezone.module */ "./src/app/scheduler/common-components/timezone/timezone.module.ts");




















var WaitListModule = /** @class */ (function () {
    function WaitListModule() {
    }
    WaitListModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [_waitlist_component__WEBPACK_IMPORTED_MODULE_3__["WaitlistComponent"], _remove_waitlist_remove_waitlist_component__WEBPACK_IMPORTED_MODULE_4__["RemoveWaitlistComponent"], _confirm_waitlist_claim_waitlist_component__WEBPACK_IMPORTED_MODULE_5__["ClaimWaitlistComponent"], _client_waitlist_times_client_waitlist_times_component__WEBPACK_IMPORTED_MODULE_6__["ClientWaitlistTimesComponent"], _client_waitlist_times_client_waitlist_times_table_component__WEBPACK_IMPORTED_MODULE_7__["ClientWaitlistTimesTableComponent"], _join_wait_list_join_wait_list_component__WEBPACK_IMPORTED_MODULE_13__["JoinWaitListComponent"], _wait_list_registration_detail_table_wait_list_registration_detail_table_component__WEBPACK_IMPORTED_MODULE_17__["WaitListRegistrationDetailTableComponent"]],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
                _material_module__WEBPACK_IMPORTED_MODULE_8__["MaterialModule"],
                _client_account_client_account_header_client_account_header_module__WEBPACK_IMPORTED_MODULE_9__["ClientAccountHeaderModule"],
                _wait_list_routing_module__WEBPACK_IMPORTED_MODULE_10__["WaitListRoutingModule"],
                _pipes_pipes_module__WEBPACK_IMPORTED_MODULE_11__["PipesModule"],
                _scheduler_confirmation_confirmation_module__WEBPACK_IMPORTED_MODULE_12__["ConfirmationModule"],
                _scheduler_common_components_title_bar_title_bar_module__WEBPACK_IMPORTED_MODULE_14__["TitleBarModule"],
                _booking_components_booking_components_module__WEBPACK_IMPORTED_MODULE_15__["BookingComponentsModule"],
                _ui_elements_ui_elements_module__WEBPACK_IMPORTED_MODULE_16__["UIElementsModule"],
                _scheduler_client_info_client_info_module__WEBPACK_IMPORTED_MODULE_18__["ClientInfoModule"],
                _scheduler_common_components_timezone_timezone_module__WEBPACK_IMPORTED_MODULE_19__["TimezoneModule"]
            ],
            exports: [_waitlist_component__WEBPACK_IMPORTED_MODULE_3__["WaitlistComponent"], _remove_waitlist_remove_waitlist_component__WEBPACK_IMPORTED_MODULE_4__["RemoveWaitlistComponent"], _confirm_waitlist_claim_waitlist_component__WEBPACK_IMPORTED_MODULE_5__["ClaimWaitlistComponent"], _client_waitlist_times_client_waitlist_times_component__WEBPACK_IMPORTED_MODULE_6__["ClientWaitlistTimesComponent"], _client_waitlist_times_client_waitlist_times_table_component__WEBPACK_IMPORTED_MODULE_7__["ClientWaitlistTimesTableComponent"]]
        })
    ], WaitListModule);
    return WaitListModule;
}());



/***/ }),

/***/ "./src/app/waitlist/waitlist.component.ts":
/*!************************************************!*\
  !*** ./src/app/waitlist/waitlist.component.ts ***!
  \************************************************/
/*! exports provided: WaitlistComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WaitlistComponent", function() { return WaitlistComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");



var WaitlistComponent = /** @class */ (function () {
    function WaitlistComponent(router, route) {
        this.router = router;
        this.route = route;
    }
    WaitlistComponent.prototype.ngOnInit = function () {
        //For now, if land on waitlist component without going to claim or remove, redirect to scheduler component
        // console.log("this.router.url " + this.router.url);
        // console.log("this.router ");
        // console.log(this.router);
        // console.log("this.route ");
        // console.log(this.route);
        if (this.router.url.indexOf("claim") === -1 && this.router.url.indexOf("join") === -1 && this.router.url.indexOf("remove") === -1 && this.router.url.indexOf("claimTimes") === -1) {
            var navigationExtras = {
                relativeTo: this.route.root,
            };
            this.router.navigate(['scheduler'], navigationExtras);
        }
    };
    WaitlistComponent.ctorParameters = function () { return [
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"] }
    ]; };
    WaitlistComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'app-waitlist',
            template: __webpack_require__(/*! raw-loader!./waitlist.component.html */ "./node_modules/raw-loader/index.js!./src/app/waitlist/waitlist.component.html")
        }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]])
    ], WaitlistComponent);
    return WaitlistComponent;
}());



/***/ }),

/***/ "./src/app/waitlist/waitlist.service.ts":
/*!**********************************************!*\
  !*** ./src/app/waitlist/waitlist.service.ts ***!
  \**********************************************/
/*! exports provided: WaitlistService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WaitlistService", function() { return WaitlistService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/internal/operators */ "./node_modules/rxjs/internal/operators/index.js");
/* harmony import */ var rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _format_functions_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../format-functions.service */ "./src/app/format-functions.service.ts");
/* harmony import */ var _models_WaitList_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../models/WaitList.model */ "./src/models/WaitList.model.ts");
/* harmony import */ var _pipes_militaryTimeConversion_pipe__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../pipes/militaryTimeConversion.pipe */ "./src/pipes/militaryTimeConversion.pipe.ts");
/* harmony import */ var _scheduler_preference_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../scheduler-preference.service */ "./src/app/scheduler-preference.service.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../common-classes/TableColumnData.model */ "./src/app/common-classes/TableColumnData.model.ts");
/* harmony import */ var _data_tables_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../data-tables.service */ "./src/app/data-tables.service.ts");












var WaitlistService = /** @class */ (function () {
    // private headers = new HttpHeaders( {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + sessionStorage.getItem('token')});
    function WaitlistService(http, injector, militaryTime) {
        this.http = http;
        this.injector = injector;
        this.militaryTime = militaryTime;
        this.formatFnsService = injector.get(_format_functions_service__WEBPACK_IMPORTED_MODULE_5__["FormatFunctionsService"]);
        this.schedulerPreferenceService = injector.get(_scheduler_preference_service__WEBPACK_IMPORTED_MODULE_8__["SchedulerPreferenceService"]);
        try {
            this.apiUrl = sessionStorage.getItem('csAPIBase') + 'cs/';
        }
        catch (e) {
        }
        this.dataTablesService = injector.get(_data_tables_service__WEBPACK_IMPORTED_MODULE_11__["DataTablesService"]);
    }
    WaitlistService.prototype.handleError = function (error) {
        return Promise.reject(error);
    };
    WaitlistService.prototype.getWaitlist = function (waitlistHash) {
        return this.http
            .get(this.apiUrl + 'waitlist/' + waitlistHash, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    WaitlistService.prototype.getWaitlistClaim = function (waitlistInviteId) {
        return this.http
            .get(this.apiUrl + 'waitlist/invite/' + waitlistInviteId, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    WaitlistService.prototype.getWaitlistHoldsByClient = function (clientHash) {
        return this.http
            .get(this.apiUrl + 'waitlistholds/client/' + clientHash, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    WaitlistService.prototype.claimAppt = function (waitlistInviteId) {
        return this.http
            .post(this.apiUrl + 'waitlist/claim/' + waitlistInviteId, null, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    WaitlistService.prototype.removeFromWaitlist = function (waitlistId) {
        return this.http
            .put(this.apiUrl + 'waitlist/remove/' + waitlistId, null, { observe: "body", responseType: 'json' })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    WaitlistService.prototype.cancelWaitlistDateTime = function (waitlistId, waitlistDateId, waitListDateTimeIds) {
        var paramsToPass = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]();
        // let waitListDateTimeIdString: string = "";
        // for(let i = 0, x = waitListDateTimeIds.length; i < x; i++){
        //     if(waitListDateTimeIdString === "")
        //         waitListDateTimeIdString = waitListDateTimeIds[i].toString();
        //     else
        //         waitListDateTimeIdString = waitListDateTimeIdString + "," + waitListDateTimeIds[i];
        // }
        var waitListDateTimeIdString = this.formatFnsService.formatArrayIntoCommaSeparatedString(waitListDateTimeIds);
        paramsToPass = paramsToPass.append('waitListDateTimeIdList', waitListDateTimeIdString);
        // paramsToPass = paramsToPass.append('waitListDateTimeIdList', JSON.stringify(waitListDateTimeIds));
        return this.http
            .put(this.apiUrl + 'waitlist/remove/' + waitlistId + '/waitlistDate/' + waitlistDateId, null, { observe: "body", responseType: 'json', params: paramsToPass })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    WaitlistService.prototype.formatWaitlistForSingleTime = function (waitList) {
        var waitLists = [];
        if (waitList.waitListDateList !== null && waitList.waitListDateList.length > 0) {
            for (var j = 0, y = waitList.waitListDateList.length; j < y; j++) {
                for (var k = 0, z = waitList.waitListDateList[j].waitListDateTimeList.length; k < z; k++) {
                    var waitListToAdd = new _models_WaitList_model__WEBPACK_IMPORTED_MODULE_6__["WaitList"]();
                    waitListToAdd.copyPrimaryFieldsFromExistingWaitList(waitList);
                    waitListToAdd.preferredDate = waitList.waitListDateList[j].waitListDateTimeList[k].startDateTimeUTC;
                    waitListToAdd.preferredDateStart = waitList.waitListDateList[j].waitListDateTimeList[k].startDateTimeUTC;
                    waitListToAdd.preferredDateEnd = waitList.waitListDateList[j].waitListDateTimeList[k].endDateTimeUTC;
                    waitListToAdd.selectedDateTimeFromList = waitList.waitListDateList[j].waitListDateTimeList[k];
                    waitLists.push(waitListToAdd);
                }
            }
        }
        else {
            waitLists.push(waitList);
        }
        return waitLists;
    };
    WaitlistService.prototype.removeTimeSlot = function (waitList, waitListDate, waitListDateTime) {
        for (var i = 0, x = waitList.waitListDateList.length; i < x; i++)
            if (waitList.waitListDateList[i].date === waitListDate.date)
                for (var j = 0; j < waitList.waitListDateList[i].waitListDateTimeList.length; j++)
                    if (waitList.waitListDateList[i].waitListDateTimeList[j].startTime === waitListDateTime.startTime) {
                        waitList.waitListDateList[i].waitListDateTimeList.splice(j, 1);
                    }
    };
    WaitlistService.prototype.removeTimeSlotDate = function (waitList, waitListDate) {
        for (var i = 0, x = waitList.waitListDateList.length; i < x; i++)
            if (waitList.waitListDateList[i].date === waitListDate.date)
                waitList.waitListDateList.splice(i, 1);
    };
    WaitlistService.prototype.getWaitlistRegistrationDetail = function (waitlistId, waitListDateTimeId) {
        var _this = this;
        return this.http
            .get(this.apiUrl + 'waitlistRegistrationDetail/' + waitlistId, {
            observe: 'body',
            responseType: 'json',
        })
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (responseData) {
            var waitLists = _this.formatWaitlistForSingleTime(responseData.waitlist);
            for (var i = 0, x = waitLists.length; i < x; i++) {
                if (waitLists[i].selectedDateTimeFromList.waitListDateTimeId.toString() === waitListDateTimeId) {
                    responseData.waitlist = waitLists[i];
                }
            }
            return responseData;
        }), Object(rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(this.handleError));
    };
    WaitlistService.prototype.sortWaitListRegistrationDates = function (waitListDateList) {
        return waitListDateList.sort(function (a, b) { return (a.date < b.date) ? -1 : 1; });
    };
    WaitlistService.prototype.createWaitListDateListArrayForTable = function (waitList) {
        var waitListDateList = [];
        if (waitList.waitListDateList.length !== 0)
            for (var j = 0, y = waitList.waitListDateList.length; j < y; j++) {
                if (waitList.waitListDateList[j].active) {
                    var waitListDate = new _models_WaitList_model__WEBPACK_IMPORTED_MODULE_6__["WaitListDate"](waitList.waitListDateList[j].date, waitList.waitListDateList[j].waitListDateId, waitList.waitListDateList[j].waitListId);
                    waitListDate.copyPropsFromAPI(waitList.waitListDateList[j]);
                    if (waitList.waitListDateList[j].waitListDateTimeList)
                        for (var k = 0, z = waitList.waitListDateList[j].waitListDateTimeList.length; k < z; k++) {
                            var waitListDateTime = new _models_WaitList_model__WEBPACK_IMPORTED_MODULE_6__["WaitListDateTime"](waitList.waitListDateList[j].waitListDateTimeList[k].startTime, waitList.waitListDateList[j].waitListDateTimeList[k].endTime, waitList.waitListDateList[j].waitListDateTimeList[k].waitListDateTimeId, waitList.waitListDateList[j].waitListDateTimeList[k].classScheduleId, waitList.waitListDateList[j].waitListDateTimeList[k].clientStartTimeForDisplay, waitList.waitListDateList[j].waitListDateTimeList[k].clientEndTimeForDisplay);
                            waitListDateTime.startDateTimeUTC = waitList.waitListDateList[j].waitListDateTimeList[k].startDateTimeUTC;
                            waitListDateTime.endDateTimeUTC = waitList.waitListDateList[j].waitListDateTimeList[k].endDateTimeUTC;
                            // waitListEntryTime.displayStartTime = $filter('militaryTime')(waitListEntryTime.startTime);
                            // waitListEntryTime.displayEndTime = $filter('militaryTime')(waitListEntryTime.endTime);
                            waitListDate.waitListDateTime = lodash__WEBPACK_IMPORTED_MODULE_9__["cloneDeep"](waitListDateTime);
                        }
                    waitListDateList.push(lodash__WEBPACK_IMPORTED_MODULE_9__["cloneDeep"](waitListDate));
                }
            }
        return this.sortWaitListRegistrationDates(waitListDateList);
    };
    WaitlistService.prototype.getDisplayedColumns = function (isCourse) {
        if (isCourse)
            return ['courseSet.courseSetName', 'courseSet.startDate', 'courseSet.endDate', 'actions'];
        else
            return ['date', 'waitListDateTime.clientStartTimeForDisplay', 'waitListDateTime.clientEndTimeForDisplay', 'actions'];
    };
    WaitlistService.prototype.getColumnDefs = function () {
        var columnDefs = [
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_10__["TableColumnDataModel"]('date', 'Date', 'date', [this.dataTablesService.fullDateFilterUTC], null, null, null, null, 'Any Date'),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_10__["TableColumnDataModel"]('waitListDateTime.clientStartTimeForDisplay', 'Start Time', 'date', [this.dataTablesService.momentTimeFilter]),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_10__["TableColumnDataModel"]('waitListDateTime.clientEndTimeForDisplay', 'End Time', 'date', [this.dataTablesService.momentTimeFilter]),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_10__["TableColumnDataModel"]('courseSet.courseSetName', 'Set Name', null),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_10__["TableColumnDataModel"]('courseSet.startDate', 'Start Date', 'date', [this.dataTablesService.fullDateFilterUTC]),
            new _common_classes_TableColumnData_model__WEBPACK_IMPORTED_MODULE_10__["TableColumnDataModel"]('courseSet.endDate', 'End Date', 'date', [this.dataTablesService.fullDateFilterUTC]),
        ];
        return columnDefs;
    };
    WaitlistService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] },
        { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"] },
        { type: _pipes_militaryTimeConversion_pipe__WEBPACK_IMPORTED_MODULE_7__["MilitaryTimeConversion"] }
    ]; };
    WaitlistService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injector"], _pipes_militaryTimeConversion_pipe__WEBPACK_IMPORTED_MODULE_7__["MilitaryTimeConversion"]])
    ], WaitlistService);
    return WaitlistService;
}());



/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hammerjs */ "./node_modules/hammerjs/hammer.js");
/* harmony import */ var hammerjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(hammerjs__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "./node_modules/@angular/platform-browser-dynamic/fesm5/platform-browser-dynamic.js");
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/app.module */ "./src/app/app.module.ts");




// if (environment.production) {
Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["enableProdMode"])();
// }
Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_2__["platformBrowserDynamic"])().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_3__["AppModule"])
    .catch(function (err) { return console.error(err); });


/***/ }),

/***/ "./src/models/Appointment.model.ts":
/*!*****************************************!*\
  !*** ./src/models/Appointment.model.ts ***!
  \*****************************************/
/*! exports provided: AppointmentBase, Appointment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppointmentBase", function() { return AppointmentBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Appointment", function() { return Appointment; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");

var AppointmentBase = /** @class */ (function () {
    function AppointmentBase() {
        this.status = 'OPEN';
        this.subStatus = 'OPEN';
        this.fields = [];
    }
    AppointmentBase.prototype.copyPropsFromAPI = function (appointment) {
        for (var prop in appointment)
            this[prop] = appointment[prop];
    };
    AppointmentBase.prototype.createNew = function () {
        this.calendarId = null;
        this.businessId = null;
        this.status = null;
        this.subStatus = null;
        this.clientStartDate = null;
        this.clientEndDate = null;
        this.clientStartTime = null;
        this.clientEndTime = null;
        this.locationGroup = null;
        this.location = null;
        this.staff = null;
        this.reasonGroup = null;
        this.reason = null;
    };
    return AppointmentBase;
}());

var Appointment = /** @class */ (function (_super) {
    tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"](Appointment, _super);
    function Appointment() {
        return _super.call(this) || this;
    }
    Appointment.prototype.copyPropsFromAPI = function (appointment) {
        _super.prototype.copyPropsFromAPI.call(this, appointment);
        for (var prop in appointment)
            this[prop] = appointment[prop];
    };
    Appointment.prototype.createNew = function () {
        _super.prototype.createNew.call(this);
        this.client = null;
        this.calTimeSlot = null;
        this.reasonDesc = null;
        this.duration = null;
        return this;
    };
    return Appointment;
}(AppointmentBase));



/***/ }),

/***/ "./src/models/AvailabilityFilterData.model.ts":
/*!****************************************************!*\
  !*** ./src/models/AvailabilityFilterData.model.ts ***!
  \****************************************************/
/*! exports provided: AvailabilityFilterData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AvailabilityFilterData", function() { return AvailabilityFilterData; });
var AvailabilityFilterData = /** @class */ (function () {
    function AvailabilityFilterData() {
        this.address = null;
        this.clientId = null;
        this.duration = null;
        this.locationGroupIdList = null;
        this.locationIdList = null;
        this.locationSuperGroupIdList = null;
        this.reasonGroupIdList = null;
        this.reasonIdList = null;
        this.reasonSuperGroupIdList = null;
        this.resourceId = null;
        this.showClientTimezone = null;
        this.staffIdList = null;
        this.waitListMode = null;
    }
    return AvailabilityFilterData;
}());



/***/ }),

/***/ "./src/models/BookingSelectionOption.model.ts":
/*!****************************************************!*\
  !*** ./src/models/BookingSelectionOption.model.ts ***!
  \****************************************************/
/*! exports provided: BookingSelectionObjectTypes, BookingSelectionOption */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BookingSelectionObjectTypes", function() { return BookingSelectionObjectTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BookingSelectionOption", function() { return BookingSelectionOption; });
var BookingSelectionObjectTypes;
(function (BookingSelectionObjectTypes) {
    BookingSelectionObjectTypes["REASON"] = "REASON";
    BookingSelectionObjectTypes["LOCATION"] = "LOCATION";
    BookingSelectionObjectTypes["STAFF"] = "STAFF";
    BookingSelectionObjectTypes["GROUP"] = "GROUP";
})(BookingSelectionObjectTypes || (BookingSelectionObjectTypes = {}));
var BookingSelectionOption = /** @class */ (function () {
    function BookingSelectionOption() {
    }
    return BookingSelectionOption;
}());



/***/ }),

/***/ "./src/models/ClassSession.model.ts":
/*!******************************************!*\
  !*** ./src/models/ClassSession.model.ts ***!
  \******************************************/
/*! exports provided: ClassSession */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClassSession", function() { return ClassSession; });
var ClassSession = /** @class */ (function () {
    function ClassSession() {
    }
    ClassSession.prototype.copyPropsFromAPI = function (classSession) {
        for (var prop in classSession)
            this[prop] = classSession[prop];
    };
    return ClassSession;
}());



/***/ }),

/***/ "./src/models/DateAvailability.model.ts":
/*!**********************************************!*\
  !*** ./src/models/DateAvailability.model.ts ***!
  \**********************************************/
/*! exports provided: DateAvailability */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateAvailability", function() { return DateAvailability; });
var DateAvailability = /** @class */ (function () {
    function DateAvailability(clustered, date, timeSlots) {
        this.clustered = clustered;
        this.date = date;
        this.timeSlots = timeSlots;
    }
    DateAvailability.ctorParameters = function () { return [
        { type: Boolean },
        { type: String },
        { type: Array }
    ]; };
    return DateAvailability;
}());



/***/ }),

/***/ "./src/models/EmailCategory.model.ts":
/*!*******************************************!*\
  !*** ./src/models/EmailCategory.model.ts ***!
  \*******************************************/
/*! exports provided: EmailCategory, CategoryNamesByCode, ClientEmailCategoryCodeRef, StaffEmailCategoryCodeRef, ClientTextCategoryCodeRef, StaffTextCategoryCodeRef, EmailCategoryNameMapObj, EmailCategoryNameMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmailCategory", function() { return EmailCategory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CategoryNamesByCode", function() { return CategoryNamesByCode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientEmailCategoryCodeRef", function() { return ClientEmailCategoryCodeRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StaffEmailCategoryCodeRef", function() { return StaffEmailCategoryCodeRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClientTextCategoryCodeRef", function() { return ClientTextCategoryCodeRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StaffTextCategoryCodeRef", function() { return StaffTextCategoryCodeRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmailCategoryNameMapObj", function() { return EmailCategoryNameMapObj; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmailCategoryNameMap", function() { return EmailCategoryNameMap; });
var EmailCategory = /** @class */ (function () {
    function EmailCategory() {
        this.changingSubscribeStatus = false;
        this.errorChangingSubscribeStatus = false;
        this.subscribeStatusChanged = false;
    }
    return EmailCategory;
}());

var CategoryNamesByCode = /** @class */ (function () {
    function CategoryNamesByCode(clientLabel, staffLabel, classLabel, courseLabel) {
        this.clientLabel = clientLabel;
        this.staffLabel = staffLabel;
        this.classLabel = classLabel;
        this.courseLabel = courseLabel;
        this.ACCOUNT_APPROVE_STAFF = 'Pending ' + this.staffLabel + ' Requires Approval';
        this.ACCOUNT_NEW_STAFF = 'New User ' + this.staffLabel + ' Welcome Message';
        this.ACCOUNT_PENDING_STAFF_APPROVED = 'Pending ' + this.staffLabel + ' Approved';
        this.ACCOUNT_PENDING_STAFF_DECLINED = 'Pending ' + this.staffLabel + ' Declined';
        this.APPT_BULK_MSG = 'Invitation Template';
        this.APPT_CANCEL_CLIENT_WEB = 'Appointment Cancellation by ' + this.clientLabel;
        this.APPT_CANCEL_CLIENT = 'Appointment Cancellation by ' + this.staffLabel;
        this.APPT_CANCEL_NONPAY_CLIENT = 'Appointment Cancellation Due to Non-Payment';
        this.APPT_CHANGE_CLIENT = 'Appointment Changed or Rescheduled';
        this.APPT_CHANGE_STAFF = 'Appointment Changed or Rescheduled';
        this.APPT_CHANGE_STAFF_SMS = 'Appointment Changed Text Message';
        this.APPT_COMPLETED_CLIENT = 'Appointment Completed';
        this.APPT_END_STAFF = 'Appointment Triggers';
        this.APPT_END_CLIENT = 'Appointment Triggers';
        this.APPT_END_STAFF_SMS = 'Appointment Text Message Triggers';
        this.APPT_END_CLIENT_SMS = 'Appointment Text Message Triggers';
        this.APPT_NEW_CLIENT = 'New Appointment by ' + this.staffLabel;
        this.APPT_NEW_CLIENT_WEB = 'New Appointment by ' + this.clientLabel;
        this.APPT_NEW_STAFF_CONFIRM = 'Appointment Requested by ' + this.clientLabel;
        this.APPT_NEW_STAFF_CONFIRM_TEXT = 'Appointment Requested by ' + this.clientLabel + ' Text Message';
        this.APPT_NEW_STAFF_WEB = 'New Appointment';
        this.APPT_NEW_STAFF_WEB_SMS = 'New Appointment Text Message';
        this.APPT_NOSHOW_CLIENT = 'Appointment No Show';
        this.APPT_CANCEL_STAFF_WEB = 'Appointment Cancellation';
        this.APPT_CANCEL_NONPAY_STAFF = 'Appointment Cancellation Due to Non-Payment';
        this.APPT_CANCEL_STAFF_SMS = 'Appointment Cancellation Text Message';
        this.APPT_NEW_STAFF_CONFIRM_CLIENT = 'Appointment Requests Under Review';
        this.APPT_REMINDER_CLIENT = 'Appointment Reminder';
        this.APPT_REMINDER_CLIENT_SMS = 'Appointment Reminder Text Message';
        this.APPT_REMINDER_STAFF = 'Appointment Reminder';
        this.APPT_REMINDER_STAFF_SMS = 'Appointment Reminder Text Message';
        this.APPT_STAFF_DECLINE_CLIENT = 'Appointment Declined by ' + this.staffLabel;
        this.AVAIL_REQUEST_ASSIGN_NOTIF = 'Education Request Assignment to ' + this.staffLabel;
        this.AVAIL_REQUEST_ASSIGN_CONFIRM = 'Education Request Confirmation to Admin';
        this.AVAIL_REQUEST_RETURN_CONFIRM = 'Education Request Returned to ' + this.staffLabel;
        this.AVAIL_REQUEST_RETURN_NOTIF = 'Education Request Returned to Admin';
        this.CLASS_SCHED_CHANGE = this.classLabel + ' Session Changed';
        this.CLASS_SCHED_STAFF_NEW = 'New ' + this.classLabel + ' Session Scheduled';
        this.CLASS_SCHED_REMINDER_STAFF = this.classLabel + ' Session Reminder';
        this.CLIENT_PWD = this.clientLabel + ' Password Reset Request';
        this.CLIENT_WELCOME_BULK = 'Invitation Template';
        this.CLIENT_WELCOME_BULK_SMS = 'Invitation Text Message Template';
        this.COURSE_APPT_CLIENT_NEW = 'New ' + this.courseLabel + ' Registration';
        this.COURSE_APPT_CLIENT_CANCEL = this.courseLabel + ' Registration Cancellation';
        this.COURSE_APPT_CLIENT_CANCEL_NOPAY = this.courseLabel + ' Registration Cancellation due to non payment';
        this.COURSE_APPT_STAFF_NEW = 'New ' + this.courseLabel + ' Registration';
        this.COURSE_APPT_STAFF_CANCEL = this.courseLabel + ' Registration Cancellation';
        this.COURSE_APPT_STAFF_CANCEL_NOPAY = this.courseLabel + 'Registration Cancellation due to non payment';
        this.COURSE_APPT_STAFF_REQUEST = this.courseLabel + ' Registration Request';
        this.DISCLAIMER_FORM_CLIENT = 'Disclaimer Form Added';
        this.DISCLAIMER_FORM_CHANGE_CLIENT = 'Disclaimer Form Updated';
        this.DISCLAIMER_FORM_NEW_STAFF = 'Disclaimer Form Added';
        this.DISCLAIMER_FORM_CHANGE_STAFF = 'Disclaimer Form Updated';
        this.INV_BULK = 'Bulk Invoice Email';
        this.INVITE_COMPLETE_BULK = 'Automated Completion Templates for Invitations';
        this.INVITE_REMIND_BULK = this.clientLabel + ' Automated Reminder Templates for Invitations';
        this.INVITE_REMIND_BULK_STAFF = this.staffLabel + ' Automated Reminder Templates for Invitations';
        this.PACKAGE_USED_UP = 'Package almost used up';
        this.PAY_INVOICE = 'Invoice pay remaining balance';
        this.REC_APPT_CLIENT_CANCEL = 'Repeating Appointment Cancellation Sent to ' + this.clientLabel;
        this.REC_APPT_CLIENT_CHANGE = 'Repeating Appointment Change Sent to ' + this.clientLabel;
        this.REC_APPT_STAFF_CANCEL = 'Repeating Appointment Cancellation Sent to ' + this.staffLabel;
        this.REC_APPT_STAFF_CHANGE = 'Repeating Appointment Change Sent to ' + this.staffLabel;
        this.REC_CLASS_CLIENT = 'New Repeating Appointments';
        this.REC_CLASS_STAFF = 'New Repeating Appointments';
        this.RECALL_CLIENT = 'Appointment Recall';
        this.RECALL_CLIENT_SMS = 'Appointment Recall Text Message';
        this.RECALL_STAFF = 'Appointment Recall';
        this.RECALL_STAFF_SMS = 'Appointment Recall Text Message';
        this.REVIEW_QUOTE = 'Quote Email';
        this.STAFF_BULK_MSG = 'Invitation Template/Bulk Message to ' + this.staffLabel;
        this.WAIT_LIST_ADD_CLIENT = 'Added to Waitlist Confirmation';
        this.WAIT_LIST_ADD_CLIENT_SMS = 'Added to Waitlist SMS Confirmation';
        this.WAIT_LIST_ADD_STAFF = this.clientLabel + ' Added to your Waitlist';
        this.WAIT_LIST_CLIENT_TO_CLIENT = 'View All Available Wait List Times';
        this.WAIT_LIST_CLIENT_TO_CLIENT_SMS = 'View All Available Wait List Times Text Message';
        this.WAIT_LIST_NEW_SLOTS = 'Wait List New Appointment Time Available';
        this.WAIT_LIST_NEW_SLOTS_SMS = 'Wait List New Appointment Times Available Text Message';
        this.WAIT_LIST_CHANGED_TO_CLIENT = 'Wait List Registration Details Changed';
        this.WAIT_LIST_EXPIRED_TO_CLIENT = 'Wait List Registration Expired';
        this.WAIT_LIST_REMOVED_TO_CLIENT = 'Wait List Registration Removed';
        this.WAIT_LIST_CHANGED_TO_STAFF = 'Wait List Registration Details Changed';
        this.WAIT_LIST_EXPIRED_TO_STAFF = 'Wait List Registration Expired';
        this.WAIT_LIST_REMOVED_TO_STAFF = 'Wait List Registration Removed';
    }
    CategoryNamesByCode.ctorParameters = function () { return [
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return CategoryNamesByCode;
}());

var ClientEmailCategoryCodeRef = /** @class */ (function () {
    function ClientEmailCategoryCodeRef() {
        this.cancelApptByStaff = 'APPT_CANCEL_CLIENT';
        this.cancelApptByClient = 'APPT_CANCEL_CLIENT_WEB';
        this.cancelApptNonPayment = 'APPT_CANCEL_NONPAY_CLIENT';
        this.cancelCourse = 'COURSE_APPT_CLIENT_CANCEL';
        this.cancelCourseNonPayment = 'COURSE_APPT_CLIENT_CANCEL_NOPAY';
        this.cancelRecurring = 'REC_APPT_CLIENT_CANCEL';
        this.changedAppt = 'APPT_CHANGE_CLIENT';
        this.changedDisclaimerForm = 'DISCLAIMER_FORM_CHANGE_CLIENT';
        this.changedRecurring = 'REC_APPT_CLIENT_CHANGE';
        this.changedWaitListRegistration = 'WAIT_LIST_CHANGED_TO_CLIENT';
        this.completedAppt = 'APPT_COMPLETED_CLIENT';
        this.completedPackage = 'PACKAGE_USED_UP';
        this.decline = 'APPT_STAFF_DECLINE_CLIENT';
        this.expiredWaitListRegistration = 'WAIT_LIST_EXPIRED_TO_CLIENT';
        this.invitation = 'CLIENT_WELCOME_BULK';
        this.invoice = 'INV_BULK';
        this.newApptByStaff = 'APPT_NEW_CLIENT';
        this.newApptByClient = 'APPT_NEW_CLIENT_WEB';
        this.newCourseRegistration = 'COURSE_APPT_CLIENT_NEW';
        this.newDisclaimerForm = 'DISCLAIMER_FORM_CLIENT';
        this.newPendingAppt = 'APPT_NEW_STAFF_CONFIRM_CLIENT';
        this.newRecurring = 'REC_CLASS_CLIENT';
        this.newWaitlistInvitationGeneric = 'WAIT_LIST_CLIENT_TO_CLIENT'; // used when recurring cancelled; default template includes link to landing page to see all appt times
        this.newWaitlistInvitationSpecific = 'WAIT_LIST_NEW_SLOTS'; // for when a specific time has become available
        this.newWaitlistRegistration = 'WAIT_LIST_ADD_CLIENT';
        this.noShowAppt = 'APPT_NOSHOW_CLIENT';
        this.payInvoice = 'PAY_INVOICE';
        this.pendingInvoice = 'REVIEW_QUOTE';
        this.password = 'CLIENT_PWD';
        this.recallAppt = 'RECALL_CLIENT';
        this.removedWaitListRegistration = 'WAIT_LIST_REMOVED_TO_CLIENT';
        this.reminderAppt = 'APPT_REMINDER_CLIENT';
        this.trigger = 'APPT_END_CLIENT';
    }
    return ClientEmailCategoryCodeRef;
}());

var StaffEmailCategoryCodeRef = /** @class */ (function () {
    function StaffEmailCategoryCodeRef() {
        this.approvedPendingStaff = 'ACCOUNT_PENDING_STAFF_APPROVED';
        this.assignAvailRequest = 'AVAIL_REQUEST_ASSIGN_NOTIF';
        this.cancelAppt = 'APPT_CANCEL_STAFF_WEB';
        this.cancelApptNonPayment = 'APPT_CANCEL_NONPAY_STAFF';
        this.cancelCourse = 'COURSE_APPT_STAFF_CANCEL';
        this.cancelCourseNonPayment = 'COURSE_APPT_STAFF_CANCEL_NOPAY';
        this.cancelRecurring = 'REC_APPT_STAFF_CANCEL';
        this.changedAppt = 'APPT_CHANGE_STAFF';
        this.changedClassSession = 'CLASS_SCHED_CHANGE';
        this.changedDisclaimerForm = 'DISCLAIMER_FORM_CHANGE_STAFF';
        this.changedRecurring = 'REC_APPT_STAFF_CHANGE';
        this.changedWaitListRegistration = 'WAIT_LIST_CHANGED_TO_STAFF';
        this.confirmAvailRequestAssignment = 'AVAIL_REQUEST_ASSIGN_CONFIRM';
        this.confirmAvailRequestReturn = 'AVAIL_REQUEST_RETURN_CONFIRM';
        this.dayFull = 'DAY_FULL_EMAIL';
        this.declinedPendingStaff = 'ACCOUNT_PENDING_STAFF_DECLINED';
        this.expiredWaitListRegistration = 'WAIT_LIST_EXPIRED_TO_STAFF';
        this.invitation = 'STAFF_BULK_MSG';
        this.invitationComplete = 'INVITE_COMPLETE_BULK';
        this.invitationRemind = 'INVITE_REMIND_BULK_STAFF';
        this.newAccountWelcome = 'ACCOUNT_NEW_OWNER';
        this.newAppt = 'APPT_NEW_STAFF_WEB';
        this.newApptCourse = 'COURSE_APPT_STAFF_NEW';
        this.newClassSession = 'CLASS_SCHED_STAFF_NEW';
        this.newDisclaimerForm = 'DISCLAIMER_FORM_NEW_STAFF';
        this.newPendingAppt = 'APPT_NEW_STAFF_CONFIRM';
        this.newPendingApptCourse = 'COURSE_APPT_STAFF_REQUEST';
        this.newPendingStaff = 'ACCOUNT_APPROVE_STAFF';
        this.newStaffWelcome = 'ACCOUNT_NEW_STAFF';
        this.newWaitlistRegistration = 'WAIT_LIST_ADD_STAFF';
        this.reminderAppt = 'APPT_REMINDER_STAFF';
        this.recallAppt = 'RECALL_STAFF';
        this.recurringClass = 'REC_CLASS_STAFF';
        this.reminderClassSession = 'CLASS_SCHED_REMINDER_STAFF';
        this.returnAvailRequest = 'AVAIL_REQUEST_RETURN_NOTIF';
        this.trigger = 'APPT_END_STAFF';
        this.removedWaitListRegistration = 'WAIT_LIST_REMOVED_TO_STAFF';
    }
    return StaffEmailCategoryCodeRef;
}());

var ClientTextCategoryCodeRef = /** @class */ (function () {
    function ClientTextCategoryCodeRef() {
        this.invitation = 'CLIENT_WELCOME_BULK_SMS';
        this.newWaitlistInvitationGeneric = 'WAIT_LIST_CLIENT_TO_CLIENT_SMS'; // used when recurring cancelled; default template includes link to landing page to see all appt times
        this.newWaitlistInvitationSpecific = 'WAIT_LIST_NEW_SLOTS_SMS'; // for when a specific time has become available
        this.reminderAppt = 'APPT_REMINDER_CLIENT_SMS';
        this.trigger = 'APPT_END_CLIENT_SMS';
    }
    return ClientTextCategoryCodeRef;
}());

var StaffTextCategoryCodeRef = /** @class */ (function () {
    function StaffTextCategoryCodeRef() {
        this.cancelAppt = 'APPT_CANCEL_STAFF_SMS';
        this.changedAppt = 'APPT_CHANGE_STAFF_SMS';
        this.newAppt = 'APPT_NEW_STAFF_WEB_SMS';
        this.newApptConfirm = 'APPT_NEW_STAFF_CONFIRM_TEXT';
        this.recallAppt = 'RECALL_STAFF_SMS';
        this.reminderAppt = 'APPT_REMINDER_STAFF_SMS';
        this.trigger = 'APPT_END_STAFF_SMS';
    }
    return StaffTextCategoryCodeRef;
}());

var EmailCategoryNameMapObj = /** @class */ (function () {
    function EmailCategoryNameMapObj(codeName, categoryNamesByCode) {
        this.codeName = codeName;
        this.displayName = categoryNamesByCode[codeName];
    }
    EmailCategoryNameMapObj.ctorParameters = function () { return [
        { type: String },
        { type: CategoryNamesByCode }
    ]; };
    return EmailCategoryNameMapObj;
}());

var EmailCategoryNameMap = /** @class */ (function () {
    function EmailCategoryNameMap(categoryNamesByCode) {
        this.categoryNamesByCode = categoryNamesByCode;
        this.clientEmailCategoryCodeRef = new ClientEmailCategoryCodeRef();
        this.clientTextCategoryCodeRef = new ClientTextCategoryCodeRef();
        this.staffEmailCategoryCodeRef = new StaffEmailCategoryCodeRef();
        this.client_cancelApptByStaff = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.cancelApptByStaff, this.categoryNamesByCode);
        this.client_cancelApptByClient = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.cancelApptByClient, this.categoryNamesByCode);
        this.client_cancelApptNonPayment = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.cancelApptNonPayment, this.categoryNamesByCode);
        this.client_cancelCourse = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.cancelCourse, this.categoryNamesByCode);
        this.client_cancelCourseNonPayment = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.cancelCourseNonPayment, this.categoryNamesByCode);
        this.client_cancelRecurring = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.cancelRecurring, this.categoryNamesByCode);
        this.client_changedAppt = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.changedAppt, this.categoryNamesByCode);
        this.client_changedDisclaimerForm = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.changedDisclaimerForm, this.categoryNamesByCode);
        this.client_changedRecurring = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.changedRecurring, this.categoryNamesByCode);
        this.client_changedWaitListRegistration = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.changedWaitListRegistration, this.categoryNamesByCode);
        this.client_completedAppt = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.completedAppt, this.categoryNamesByCode);
        this.client_completedPackage = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.completedPackage, this.categoryNamesByCode);
        this.client_decline = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.decline, this.categoryNamesByCode);
        this.client_expiredWaitListRegistration = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.expiredWaitListRegistration, this.categoryNamesByCode);
        this.client_invitation = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.invitation, this.categoryNamesByCode);
        this.client_invoice = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.invoice, this.categoryNamesByCode);
        this.client_newApptByStaff = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.newApptByStaff, this.categoryNamesByCode);
        this.client_newApptByClient = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.newApptByClient, this.categoryNamesByCode);
        this.client_newCourseRegistration = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.newCourseRegistration, this.categoryNamesByCode);
        this.client_newDisclaimerForm = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.newDisclaimerForm, this.categoryNamesByCode);
        this.client_newPendingAppt = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.newPendingAppt, this.categoryNamesByCode);
        this.client_newRecurring = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.newRecurring, this.categoryNamesByCode);
        this.client_newWaitlistInvitationGeneric = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.newWaitlistInvitationGeneric, this.categoryNamesByCode);
        this.client_newWaitlistInvitationSpecific = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.newWaitlistInvitationSpecific, this.categoryNamesByCode);
        this.client_newWaitlistRegistration = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.newWaitlistRegistration, this.categoryNamesByCode);
        this.client_noShowAppt = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.noShowAppt, this.categoryNamesByCode);
        this.client_payInvoice = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.payInvoice, this.categoryNamesByCode);
        this.client_pendingInvoice = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.pendingInvoice, this.categoryNamesByCode);
        this.client_password = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.password, this.categoryNamesByCode);
        this.client_recallAppt = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.recallAppt, this.categoryNamesByCode);
        this.client_reminderAppt = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.reminderAppt, this.categoryNamesByCode);
        this.client_removedWaitListRegistration = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.removedWaitListRegistration, this.categoryNamesByCode);
        this.client_trigger = new EmailCategoryNameMapObj(this.clientEmailCategoryCodeRef.trigger, this.categoryNamesByCode);
        this.client_sms_invitation = new EmailCategoryNameMapObj(this.clientTextCategoryCodeRef.invitation, this.categoryNamesByCode);
        this.client_sms_newWaitlistInvitationGeneric = new EmailCategoryNameMapObj(this.clientTextCategoryCodeRef.newWaitlistInvitationGeneric, this.categoryNamesByCode);
        this.client_sms_newWaitlistInvitationSpecific = new EmailCategoryNameMapObj(this.clientTextCategoryCodeRef.newWaitlistInvitationSpecific, this.categoryNamesByCode);
        this.client_sms_reminderAppt = new EmailCategoryNameMapObj(this.clientTextCategoryCodeRef.reminderAppt, this.categoryNamesByCode);
        this.client_sms_trigger = new EmailCategoryNameMapObj(this.clientTextCategoryCodeRef.trigger, this.categoryNamesByCode);
        this.staff_approvedPendingStaff = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.approvedPendingStaff, this.categoryNamesByCode);
        this.staff_assignAvailRequest = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.assignAvailRequest, this.categoryNamesByCode);
        this.staff_cancelAppt = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.cancelAppt, this.categoryNamesByCode);
        this.staff_cancelApptNonPayment = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.cancelApptNonPayment, this.categoryNamesByCode);
        this.staff_cancelCourse = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.cancelCourse, this.categoryNamesByCode);
        this.staff_cancelCourseNonPayment = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.cancelCourseNonPayment, this.categoryNamesByCode);
        this.staff_cancelRecurring = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.cancelRecurring, this.categoryNamesByCode);
        this.staff_changedAppt = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.changedAppt, this.categoryNamesByCode);
        this.staff_changedClassSession = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.changedClassSession, this.categoryNamesByCode);
        this.staff_changedDisclaimerForm = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.changedDisclaimerForm, this.categoryNamesByCode);
        this.staff_changedRecurring = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.changedRecurring, this.categoryNamesByCode);
        this.staff_changedWaitListRegistration = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.changedWaitListRegistration, this.categoryNamesByCode);
        this.staff_confirmAvailRequestAssignment = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.confirmAvailRequestAssignment, this.categoryNamesByCode);
        this.staff_confirmAvailRequestReturn = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.confirmAvailRequestReturn, this.categoryNamesByCode);
        this.staff_dayFull = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.dayFull, this.categoryNamesByCode);
        this.staff_declinedPendingStaff = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.declinedPendingStaff, this.categoryNamesByCode);
        this.staff_expiredWaitListRegistration = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.expiredWaitListRegistration, this.categoryNamesByCode);
        this.staff_invitation = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.invitation, this.categoryNamesByCode);
        this.staff_invitationComplete = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.invitationComplete, this.categoryNamesByCode);
        this.staff_invitationRemind = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.invitationRemind, this.categoryNamesByCode);
        this.staff_newAccountWelcome = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.newAccountWelcome, this.categoryNamesByCode);
        this.staff_newAppt = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.newAppt, this.categoryNamesByCode);
        this.staff_newApptCourse = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.newApptCourse, this.categoryNamesByCode);
        this.staff_newClassSession = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.newClassSession, this.categoryNamesByCode);
        this.staff_newDisclaimerForm = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.newDisclaimerForm, this.categoryNamesByCode);
        this.staff_newPendingAppt = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.newPendingAppt, this.categoryNamesByCode);
        this.staff_newPendingApptCourse = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.newPendingApptCourse, this.categoryNamesByCode);
        this.staff_newPendingStaff = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.newPendingStaff, this.categoryNamesByCode);
        this.staff_newStaffWelcome = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.newStaffWelcome, this.categoryNamesByCode);
        this.staff_newWaitlistRegistration = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.newWaitlistRegistration, this.categoryNamesByCode);
        this.staff_reminderAppt = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.reminderAppt, this.categoryNamesByCode);
        this.staff_recallAppt = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.recallAppt, this.categoryNamesByCode);
        this.staff_recurringClass = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.recurringClass, this.categoryNamesByCode);
        this.staff_reminderClassSession = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.reminderClassSession, this.categoryNamesByCode);
        this.staff_removedWaitListRegistration = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.removedWaitListRegistration, this.categoryNamesByCode);
        this.staff_returnAvailRequest = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.returnAvailRequest, this.categoryNamesByCode);
        this.staff_trigger = new EmailCategoryNameMapObj(this.staffEmailCategoryCodeRef.trigger, this.categoryNamesByCode);
    }
    EmailCategoryNameMap.ctorParameters = function () { return [
        { type: CategoryNamesByCode }
    ]; };
    return EmailCategoryNameMap;
}());



/***/ }),

/***/ "./src/models/EmailSettingsList.model.ts":
/*!***********************************************!*\
  !*** ./src/models/EmailSettingsList.model.ts ***!
  \***********************************************/
/*! exports provided: EmailSettingConfig */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EmailSettingConfig", function() { return EmailSettingConfig; });
var EmailSettingConfig = /** @class */ (function () {
    function EmailSettingConfig() {
        this.changingSubscribeStatus = false;
        this.errorChangingSubscribeStatus = false;
        this.subscribeStatusChanged = false;
    }
    return EmailSettingConfig;
}());



/***/ }),

/***/ "./src/models/Group.model.ts":
/*!***********************************!*\
  !*** ./src/models/Group.model.ts ***!
  \***********************************/
/*! exports provided: GroupTypes, Group */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupTypes", function() { return GroupTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Group", function() { return Group; });
/* harmony import */ var _ScreeningQuestion_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ScreeningQuestion.model */ "./src/models/ScreeningQuestion.model.ts");

var GroupTypes;
(function (GroupTypes) {
    GroupTypes["LOCATION_GROUP"] = "LOCATION_GROUP";
    GroupTypes["LOCATION"] = "LOCATION";
    GroupTypes["SERVICE_GROUP"] = "SERVICE_GROUP";
    GroupTypes["SERVICE"] = "SERVICE";
})(GroupTypes || (GroupTypes = {}));
var Group = /** @class */ (function () {
    function Group(groupId, groupName, groupDescription, logoUrl, selected, screeningQuestion) {
        this.groupId = groupId;
        this.groupName = groupName;
        this.groupDescription = groupDescription;
        this.logoUrl = logoUrl;
        this.selected = selected;
        this.screeningQuestion = screeningQuestion;
    }
    Group.ctorParameters = function () { return [
        { type: Number },
        { type: String },
        { type: String },
        { type: String },
        { type: Boolean },
        { type: _ScreeningQuestion_model__WEBPACK_IMPORTED_MODULE_0__["ScreeningQuestion"] }
    ]; };
    return Group;
}());



/***/ }),

/***/ "./src/models/IDProps.model.ts":
/*!*************************************!*\
  !*** ./src/models/IDProps.model.ts ***!
  \*************************************/
/*! exports provided: IDProps */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IDProps", function() { return IDProps; });
var IDProps;
(function (IDProps) {
    IDProps["REASON_ID"] = "reasonId";
    IDProps["STAFF_ID"] = "professionalId";
})(IDProps || (IDProps = {}));


/***/ }),

/***/ "./src/models/Location.model.ts":
/*!**************************************!*\
  !*** ./src/models/Location.model.ts ***!
  \**************************************/
/*! exports provided: Location */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Location", function() { return Location; });
var Location = /** @class */ (function () {
    function Location() {
    }
    return Location;
}());



/***/ }),

/***/ "./src/models/MainObjectTypes.model.ts":
/*!*********************************************!*\
  !*** ./src/models/MainObjectTypes.model.ts ***!
  \*********************************************/
/*! exports provided: MainObjectTypes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MainObjectTypes", function() { return MainObjectTypes; });
var MainObjectTypes;
(function (MainObjectTypes) {
    MainObjectTypes["APPT"] = "APPOINTMENT";
    MainObjectTypes["AUDIT_TRAIL"] = "AUDIT_TRAIL";
    MainObjectTypes["CLASS"] = "CLASS";
    MainObjectTypes["CLIENT"] = "CLIENT";
    MainObjectTypes["COUPON"] = "COUPON";
    MainObjectTypes["COURSE_SET"] = "COURSE_SET";
    MainObjectTypes["COURSE_SET_SESSION"] = "COURSE_SET_SESSION";
    MainObjectTypes["COURSE_SET_REGISTRATION"] = "COURSE_SET_REGISTRATION";
    MainObjectTypes["DISCLAIMER_FORM"] = "DISCLAIMER_FORM";
    MainObjectTypes["DISCLAIMER_FORM_DATA"] = "DISCLAIMER_FORM_DATA";
    MainObjectTypes["EMAIL"] = "EMAIL";
    MainObjectTypes["EMAIL_CATEGORY"] = "EMAIL_CATEGORY";
    MainObjectTypes["EMAIL_TEMPLATE"] = "EMAIL_TEMPLATE";
    MainObjectTypes["GIFT_CARD"] = "GIFT_CARD";
    MainObjectTypes["INVOICE"] = "INVOICE";
    MainObjectTypes["INVOICE_ITEM"] = "INVOICE_ITEM";
    MainObjectTypes["PACKAGE_SOLD"] = "PACKAGE_SOLD";
    MainObjectTypes["PAYMENT"] = "PAYMENT";
    MainObjectTypes["PRODUCT"] = "PRODUCT";
    MainObjectTypes["REASON"] = "REASON";
    MainObjectTypes["REPEATING_APPOINTMENT"] = "REPEATING_APPOINTMENT";
    MainObjectTypes["REPEATING_CLASS_SCHEDULE"] = "REPEATING_CLASS_SCHEDULE";
    MainObjectTypes["STAFF"] = "STAFF";
    MainObjectTypes["TIME_OFF"] = "TIME_OFF";
    MainObjectTypes["WAIT_LIST"] = "WAIT_LIST";
    MainObjectTypes["WAIT_LIST_HOLD"] = "WAIT_LIST_HOLD";
    MainObjectTypes["WAIT_LIST_INVITE"] = "WAIT_LIST_INVITE";
    MainObjectTypes["VACATION"] = "VACATION";
})(MainObjectTypes || (MainObjectTypes = {}));


/***/ }),

/***/ "./src/models/ParameterPassedField.model.ts":
/*!**************************************************!*\
  !*** ./src/models/ParameterPassedField.model.ts ***!
  \**************************************************/
/*! exports provided: ParameterPassedField */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ParameterPassedField", function() { return ParameterPassedField; });
var ParameterPassedField = /** @class */ (function () {
    function ParameterPassedField(tagName, value) {
        this.tagName = tagName;
        this.value = value;
        try {
            this.value = decodeURIComponent(value);
        }
        catch (e) {
            // could not decode
        }
    }
    ParameterPassedField.ctorParameters = function () { return [
        { type: String },
        { type: undefined }
    ]; };
    return ParameterPassedField;
}());



/***/ }),

/***/ "./src/models/Reason.model.ts":
/*!************************************!*\
  !*** ./src/models/Reason.model.ts ***!
  \************************************/
/*! exports provided: ReasonTypes, ReasonDuration, RepeatingApptOption, Reason */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReasonTypes", function() { return ReasonTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReasonDuration", function() { return ReasonDuration; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RepeatingApptOption", function() { return RepeatingApptOption; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Reason", function() { return Reason; });
var ReasonTypes;
(function (ReasonTypes) {
    ReasonTypes["SERVICE"] = "SERVICE";
    ReasonTypes["CLASS"] = "CLASS";
    ReasonTypes["COURSE"] = "COURSE";
    ReasonTypes["PERSONAL"] = "PERSONAL";
    ReasonTypes["ADDON"] = "ADDON";
})(ReasonTypes || (ReasonTypes = {}));
var ReasonDuration = /** @class */ (function () {
    function ReasonDuration() {
    }
    return ReasonDuration;
}());

var RepeatingApptOption = /** @class */ (function () {
    function RepeatingApptOption() {
    }
    return RepeatingApptOption;
}());

var Reason = /** @class */ (function () {
    function Reason() {
    }
    Reason.prototype.createNoWaitListAbleReason = function (configList) {
        this.reasonId = -1;
        this.displayName = 'No ' + configList.serviceLabelPlural + ' or ' + configList.classLabelPlural + ' allow wait listing for the selected ' + configList.locationLabel + ' and ' + configList.staffLabel;
        return this;
    };
    return Reason;
}());



/***/ }),

/***/ "./src/models/SchedulerBooleanMap.model.ts":
/*!*************************************************!*\
  !*** ./src/models/SchedulerBooleanMap.model.ts ***!
  \*************************************************/
/*! exports provided: SchedulerBooleanMapModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchedulerBooleanMapModel", function() { return SchedulerBooleanMapModel; });
var SchedulerBooleanMapModel = /** @class */ (function () {
    function SchedulerBooleanMapModel() {
        this.autoAdvanceWhenSingle = true;
        this.autoProgressToPaymentPortal = true;
        this.defaultSMSRemindValue = false;
        this.timePnlAutoSelectTime = true;
        this.timePnlShowTimezones = false;
        this.showJoinWaitListTab = false;
        this.allowWaitListRegistrationOutsideOfAvailability = false;
        this.reasonDisplayBanner = false;
        this.businessInfoVisible = true;
        this.policyVisible = false;
        this.cancelReasonList = false;
        this.allowClientAddressValidation = false;
    }
    return SchedulerBooleanMapModel;
}());



/***/ }),

/***/ "./src/models/SchedulerPanel.model.ts":
/*!********************************************!*\
  !*** ./src/models/SchedulerPanel.model.ts ***!
  \********************************************/
/*! exports provided: SchedulerPanelValues, schedulerPanel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SchedulerPanelValues", function() { return SchedulerPanelValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "schedulerPanel", function() { return schedulerPanel; });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");

var SchedulerPanelValues;
(function (SchedulerPanelValues) {
    SchedulerPanelValues["welcome"] = "welcome";
    SchedulerPanelValues["locationSuperGroups"] = "locationSuperGroups";
    SchedulerPanelValues["locationGroups"] = "locationGroups";
    SchedulerPanelValues["locations"] = "locations";
    SchedulerPanelValues["staff"] = "staff";
    SchedulerPanelValues["reasonSuperGroups"] = "reasonSuperGroups";
    SchedulerPanelValues["reasonGroups"] = "reasonGroups";
    SchedulerPanelValues["reasons"] = "reasons";
    SchedulerPanelValues["time"] = "time";
    SchedulerPanelValues["clientInfo"] = "clientInfo";
    SchedulerPanelValues["finalConfirmation"] = "finalConfirmation";
})(SchedulerPanelValues || (SchedulerPanelValues = {}));
var schedulerPanel = /** @class */ (function () {
    function schedulerPanel(panel, panelOrder, displayed, index, stepOptional, panelTitleProperty, panelTextProperty, panelErrorLoadingProperty, hasSelectedValues, csFilterObjProps, idPropName, panelNoObjectsProperty, formGroup, recordNavigatePanel) {
        this.panel = panel;
        this.panelOrder = panelOrder;
        this.displayed = displayed;
        this.index = index;
        this.stepOptional = stepOptional;
        this.panelTitleProperty = panelTitleProperty;
        this.panelTextProperty = panelTextProperty;
        this.panelErrorLoadingProperty = panelErrorLoadingProperty;
        this.hasSelectedValues = hasSelectedValues;
        this.csFilterObjProps = csFilterObjProps;
        this.idPropName = idPropName;
        this.panelNoObjectsProperty = panelNoObjectsProperty;
        this.formGroup = formGroup;
        this.recordNavigatePanel = recordNavigatePanel;
    }
    schedulerPanel.ctorParameters = function () { return [
        { type: undefined },
        { type: Number },
        { type: Boolean },
        { type: Number },
        { type: Boolean },
        { type: String },
        { type: String },
        { type: String },
        { type: Boolean },
        { type: Array },
        { type: String },
        { type: String },
        { type: _angular_forms__WEBPACK_IMPORTED_MODULE_0__["FormGroup"] },
        { type: String }
    ]; };
    return schedulerPanel;
}());



/***/ }),

/***/ "./src/models/ScreeningQuestion.model.ts":
/*!***********************************************!*\
  !*** ./src/models/ScreeningQuestion.model.ts ***!
  \***********************************************/
/*! exports provided: ScreeningQuestion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScreeningQuestion", function() { return ScreeningQuestion; });
var ScreeningQuestion = /** @class */ (function () {
    function ScreeningQuestion(screeningQuestionId, businessId, name, question, failButton, failResponse, passButton) {
        this.screeningQuestionId = screeningQuestionId;
        this.businessId = businessId;
        this.name = name;
        this.question = question;
        this.failButton = failButton;
        this.failResponse = failResponse;
        this.passButton = passButton;
    }
    ScreeningQuestion.ctorParameters = function () { return [
        { type: Number },
        { type: Number },
        { type: String },
        { type: String },
        { type: String },
        { type: String },
        { type: String }
    ]; };
    return ScreeningQuestion;
}());



/***/ }),

/***/ "./src/models/SelectAddOnsModalData.model.ts":
/*!***************************************************!*\
  !*** ./src/models/SelectAddOnsModalData.model.ts ***!
  \***************************************************/
/*! exports provided: SelectAddOnsModalData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectAddOnsModalData", function() { return SelectAddOnsModalData; });
var SelectAddOnsModalData = /** @class */ (function () {
    function SelectAddOnsModalData() {
    }
    return SelectAddOnsModalData;
}());



/***/ }),

/***/ "./src/models/SelectedDateTimeObj.model.ts":
/*!*************************************************!*\
  !*** ./src/models/SelectedDateTimeObj.model.ts ***!
  \*************************************************/
/*! exports provided: SelectedDateTimeObj */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectedDateTimeObj", function() { return SelectedDateTimeObj; });
var SelectedDateTimeObj = /** @class */ (function () {
    function SelectedDateTimeObj() {
    }
    SelectedDateTimeObj.prototype.createFromClassSession = function (session, startDate, endDate, selectedReason, selectedStaff, selectedLocation, sessionWaitlistMode) {
        this.startTime = session.startTime;
        this.clientStartTime = session.startTime;
        this.clientStartTimeForDisplay = session.startTime;
        this.clientStartTimeDate = session.startDateTime || session.startDateTimeUTC;
        this.clientEndTime = session.endTime;
        this.clientEndTimeForDisplay = session.endTime;
        this.endTime = session.endTime;
        this.clientEndTimeDate = session.endDateTime || session.endDateTimeUTC;
        this.clientStartDate = startDate;
        this.clientEndDate = endDate;
        this.classScheduleId = session.classScheduleId;
        this.timeSlotId = String(session.classScheduleId);
        this.clientTimeSlotId = String(session.classScheduleId);
        this.htmlId = String(session.classScheduleId);
        this.recurringScheduleId = session.recurringScheduleId;
        this.hideGuestOption = session.hideGuestOption;
        this.cartDisplayStartDateTime = session.startDateTimeUTC;
        this.cartDisplayEndDateTime = session.endDateTimeUTC;
        this.maxCapacity = session.maxCapacity;
        this.currentCapacity = session.currentCapacity;
        this.reasonId = selectedReason.reasonId;
        this.professionalId = selectedStaff.professionalId || session.professionalId;
        this.locationId = selectedLocation.locationId || session.locationId;
        this.waitListMode = sessionWaitlistMode;
        this.isWaitListFirstAvail = false;
        this.startDateTimeUTC = session.startDateTimeUTC;
        this.endDateTimeUTC = session.endDateTimeUTC;
        this.calTimeSlot = null;
    };
    SelectedDateTimeObj.prototype.createFromSingleTimeSlot = function (time, reason, staff, location, labelNoPreference) {
        this.calTimeSlot = time;
        this.cartDisplayEndDateTime = time.endTimeDateForTimeslotDisplay;
        this.cartDisplayStartDateTime = time.startTimeDateForTimeslotDisplay;
        this.classScheduleId = time.classScheduleId;
        this.clientEndDate = time.staffEndDate;
        this.clientEndTime = time.endTime;
        this.clientEndTimeDate = time.endTimeDate;
        this.clientEndTimeForDisplay = time.clientEndTime;
        this.clientStartDate = time.staffStartDate;
        this.clientStartTime = time.startTime;
        this.clientStartTimeDate = time.startTimeDate;
        this.clientStartTimeForDisplay = time.clientStartTime;
        this.clientTimeSlotId = time.clientTimeSlotId;
        this.currentCapacity = null;
        this.endDateTimeUTC = time.staffEndDateTimeUTC;
        this.endTime = time.staffEndTime;
        this.hideGuestOption = false;
        this.htmlId = time.htmlId;
        this.isWaitListFirstAvail = time.isWaitListFirstAvail || false;
        this.locationId = null;
        if (location)
            this.locationId = location.locationId || null;
        if (time.locationId && location && !location.locationId)
            this.locationId = time.locationId;
        this.maxCapacity = null;
        this.professionalId = null;
        if (staff)
            this.professionalId = staff.professionalId;
        if (time.professionalId && staff && !staff.professionalId && staff.fullName !== labelNoPreference)
            this.professionalId = time.professionalId;
        this.reasonId = reason.reasonId;
        this.recurringScheduleId = null;
        this.startDateTimeUTC = time.staffStartDateTimeUTC;
        this.startTime = time.staffStartTime;
        this.timeSlotId = time.timeSlotId;
        this.waitListMode = time.waitListMode;
        this.recurringScheduleId = time.recurringScheduleId;
        for (var prop in this)
            if (this[prop] === undefined)
                this[prop] = null;
        return this;
    };
    return SelectedDateTimeObj;
}());



/***/ }),

/***/ "./src/models/Staff.model.ts":
/*!***********************************!*\
  !*** ./src/models/Staff.model.ts ***!
  \***********************************/
/*! exports provided: Staff */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Staff", function() { return Staff; });
var Staff = /** @class */ (function () {
    function Staff(professionalId, fullName) {
        this.professionalId = professionalId;
        this.fullName = fullName;
        this.displayName = fullName;
    }
    Staff.ctorParameters = function () { return [
        { type: Number },
        { type: String }
    ]; };
    return Staff;
}());



/***/ }),

/***/ "./src/models/ValueOption.model.ts":
/*!*****************************************!*\
  !*** ./src/models/ValueOption.model.ts ***!
  \*****************************************/
/*! exports provided: ValueOptionModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValueOptionModel", function() { return ValueOptionModel; });
var ValueOptionModel = /** @class */ (function () {
    function ValueOptionModel(label, value, selected) {
        this.selected = false;
        this.label = label;
        this.value = value;
        if (selected !== undefined)
            this.selected = selected;
    }
    ValueOptionModel.ctorParameters = function () { return [
        { type: String },
        { type: undefined },
        { type: Boolean }
    ]; };
    return ValueOptionModel;
}());



/***/ }),

/***/ "./src/models/WaitList.model.ts":
/*!**************************************!*\
  !*** ./src/models/WaitList.model.ts ***!
  \**************************************/
/*! exports provided: WaitListRegistrationDateOptionValues, WaitListRegistrationTimeOptionValues, WaitList, WaitListDate, WaitListDateTime, WaitlistClaim, WaitlistRegistrationDetail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WaitListRegistrationDateOptionValues", function() { return WaitListRegistrationDateOptionValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WaitListRegistrationTimeOptionValues", function() { return WaitListRegistrationTimeOptionValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WaitList", function() { return WaitList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WaitListDate", function() { return WaitListDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WaitListDateTime", function() { return WaitListDateTime; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WaitlistClaim", function() { return WaitlistClaim; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WaitlistRegistrationDetail", function() { return WaitlistRegistrationDetail; });
/* harmony import */ var _app_common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../app/common-classes/app-objects.model */ "./src/app/common-classes/app-objects.model.ts");

var WaitListRegistrationDateOptionValues;
(function (WaitListRegistrationDateOptionValues) {
    WaitListRegistrationDateOptionValues["FIRST_AVAILABLE"] = "FIRST_AVAILABLE";
    WaitListRegistrationDateOptionValues["DATE_TIME"] = "DATE_TIME";
})(WaitListRegistrationDateOptionValues || (WaitListRegistrationDateOptionValues = {}));
var WaitListRegistrationTimeOptionValues;
(function (WaitListRegistrationTimeOptionValues) {
    WaitListRegistrationTimeOptionValues["BOOKED_TIMES"] = "BOOKED_TIMES";
    WaitListRegistrationTimeOptionValues["CUSTOM_TIME"] = "CUSTOM_TIME";
    WaitListRegistrationTimeOptionValues["ALL_DAY"] = "ALL_DAY";
})(WaitListRegistrationTimeOptionValues || (WaitListRegistrationTimeOptionValues = {}));
var WaitList = /** @class */ (function () {
    function WaitList() {
    }
    WaitList.prototype.copyPrimaryFieldsFromExistingWaitList = function (waitList) {
        this.waitListId = waitList.waitListId;
        this.businessId = waitList.businessId;
        this.status = waitList.status;
        this.client = waitList.client;
        this.staff = waitList.staff;
        this.location = waitList.location;
        this.reason = waitList.reason;
        this.classScheduleId = waitList.classScheduleId;
        this.fields = waitList.fields;
    };
    return WaitList;
}());

var WaitListDate = /** @class */ (function () {
    function WaitListDate(date, waitListDateId, waitListId) {
        this.active = true;
        this.date = date;
        this.preferredDate = date;
        this.waitListDateId = waitListDateId;
        this.waitListId = waitListId;
        this.waitListDateTimeList = [];
    }
    WaitListDate.prototype.copyPropsFromAPI = function (waitListDate) {
        if (waitListDate.courseSet) {
            var repeatingClassSchedule = new _app_common_classes_app_objects_model__WEBPACK_IMPORTED_MODULE_0__["RecurringClassSchedule"]();
            repeatingClassSchedule.copyPropsFromAPI(waitListDate.courseSet);
            waitListDate.courseSet = repeatingClassSchedule;
        }
        for (var prop in waitListDate)
            this[prop] = waitListDate[prop];
    };
    WaitListDate.ctorParameters = function () { return [
        { type: undefined },
        { type: Number },
        { type: Number }
    ]; };
    return WaitListDate;
}());

var WaitListDateTime = /** @class */ (function () {
    function WaitListDateTime(startTime, endTime, waitListDateTimeId, classScheduleId, clientStartTimeForDisplay, clientEndTimeForDisplay) {
        this.startTime = startTime;
        this.endTime = endTime;
        this.waitListDateTimeId = waitListDateTimeId;
        this.classScheduleId = classScheduleId;
        this.clientStartTimeForDisplay = clientStartTimeForDisplay;
        this.clientEndTimeForDisplay = clientEndTimeForDisplay;
    }
    WaitListDateTime.ctorParameters = function () { return [
        { type: undefined },
        { type: Number },
        { type: Number },
        { type: Number },
        { type: undefined },
        { type: undefined }
    ]; };
    return WaitListDateTime;
}());

var WaitlistClaim = /** @class */ (function () {
    function WaitlistClaim() {
    }
    return WaitlistClaim;
}());

var WaitlistRegistrationDetail = /** @class */ (function () {
    function WaitlistRegistrationDetail() {
    }
    return WaitlistRegistrationDetail;
}());



/***/ }),

/***/ "./src/modernizr.js":
/*!**************************!*\
  !*** ./src/modernizr.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*! modernizr 3.9.1 (Custom Build) | MIT *
 * https://modernizr.com/download/?-promises-setclasses !*/
!function(n,e,s){function o(n,e){return typeof n===e}var i=[],a={_version:"3.9.1",_config:{classPrefix:"",enableClasses:!0,enableJSClass:!0,usePrefixes:!0},_q:[],on:function(n,e){var s=this;setTimeout(function(){e(s[n])},0)},addTest:function(n,e,s){i.push({name:n,fn:e,options:s})},addAsyncTest:function(n){i.push({name:null,fn:n})}},Modernizr=function(){};Modernizr.prototype=a,Modernizr=new Modernizr;var t=[],r=e.documentElement,f="svg"===r.nodeName.toLowerCase();Modernizr.addTest("promises",function(){return"Promise"in n&&"resolve"in n.Promise&&"reject"in n.Promise&&"all"in n.Promise&&"race"in n.Promise&&function(){var e;return new n.Promise(function(n){e=n}),"function"==typeof e}()}),function(){var n,e,s,a,r,f,l;for(var c in i)if(i.hasOwnProperty(c)){if(n=[],e=i[c],e.name&&(n.push(e.name.toLowerCase()),e.options&&e.options.aliases&&e.options.aliases.length))for(s=0;s<e.options.aliases.length;s++)n.push(e.options.aliases[s].toLowerCase());for(a=o(e.fn,"function")?e.fn():e.fn,r=0;r<n.length;r++)f=n[r],l=f.split("."),1===l.length?Modernizr[l[0]]=a:(Modernizr[l[0]]&&(!Modernizr[l[0]]||Modernizr[l[0]]instanceof Boolean)||(Modernizr[l[0]]=new Boolean(Modernizr[l[0]])),Modernizr[l[0]][l[1]]=a),t.push((a?"":"no-")+l.join("-"))}}(),function(n){var e=r.className,s=Modernizr._config.classPrefix||"";if(f&&(e=e.baseVal),Modernizr._config.enableJSClass){var o=new RegExp("(^|\\s)"+s+"no-js(\\s|$)");e=e.replace(o,"$1"+s+"js$2")}Modernizr._config.enableClasses&&(n.length>0&&(e+=" "+s+n.join(" "+s)),f?r.className.baseVal=e:r.className=e)}(t),delete a.addTest,delete a.addAsyncTest;for(var l=0;l<Modernizr._q.length;l++)Modernizr._q[l]();n.Modernizr=Modernizr}(window,document);

/***/ }),

/***/ "./src/pipes/localecurrency.pipe.ts":
/*!******************************************!*\
  !*** ./src/pipes/localecurrency.pipe.ts ***!
  \******************************************/
/*! exports provided: LocaleCurrency */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocaleCurrency", function() { return LocaleCurrency; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");



var LocaleCurrency = /** @class */ (function () {
    function LocaleCurrency(currencyPipe) {
        this.currencyPipe = currencyPipe;
    }
    LocaleCurrency.prototype.transform = function (value, currency) {
        return this.currencyPipe.transform(value, currency.currencyCode, "symbol", "1.2-2", sessionStorage.getItem('locale'));
    };
    LocaleCurrency.ctorParameters = function () { return [
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_2__["CurrencyPipe"] }
    ]; };
    LocaleCurrency = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Pipe"])({ name: 'localeCurrency' }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CurrencyPipe"]])
    ], LocaleCurrency);
    return LocaleCurrency;
}());



/***/ }),

/***/ "./src/pipes/militaryTimeConversion.pipe.ts":
/*!**************************************************!*\
  !*** ./src/pipes/militaryTimeConversion.pipe.ts ***!
  \**************************************************/
/*! exports provided: MilitaryTimeConversion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MilitaryTimeConversion", function() { return MilitaryTimeConversion; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");



var MilitaryTimeConversion = /** @class */ (function () {
    function MilitaryTimeConversion(datePipe) {
        this.datePipe = datePipe;
    }
    MilitaryTimeConversion.prototype.transform = function (time, showTimes24HourFormat) {
        if (time || time === 0) {
            var returnString = time.toString();
            var hour = void 0;
            var minutes = void 0;
            if (returnString.length === 3) {
                hour = Number(returnString.substring(0, 1));
                minutes = Number(returnString.substring(1, 3));
            }
            else if (returnString.length === 1) {
                hour = 0;
                minutes = Number('0' + returnString);
            }
            else if (returnString.length === 2) {
                // if it's 2, then it's going to be 12 am
                hour = 0;
                minutes = Number(returnString);
            }
            else {
                hour = Number(returnString.substring(0, 2));
                minutes = Number(returnString.substring(2, 4));
            }
            if (isNaN(hour) || isNaN(minutes))
                return returnString;
            var fullDate = new Date();
            var newDate = new Date(fullDate.getFullYear(), fullDate.getMonth(), fullDate.getDay(), hour, minutes);
            if (showTimes24HourFormat)
                returnString = this.datePipe.transform(newDate, 'HH:mm');
            else
                returnString = this.datePipe.transform(newDate, 'hh:mm a');
            return returnString;
        }
    };
    MilitaryTimeConversion.ctorParameters = function () { return [
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_2__["DatePipe"] }
    ]; };
    MilitaryTimeConversion = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Pipe"])({ name: 'militaryTime' }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_2__["DatePipe"]])
    ], MilitaryTimeConversion);
    return MilitaryTimeConversion;
}());



/***/ }),

/***/ "./src/pipes/pipes.module.ts":
/*!***********************************!*\
  !*** ./src/pipes/pipes.module.ts ***!
  \***********************************/
/*! exports provided: PipesModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PipesModule", function() { return PipesModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _safehtml_pipe__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./safehtml.pipe */ "./src/pipes/safehtml.pipe.ts");
/* harmony import */ var _localecurrency_pipe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./localecurrency.pipe */ "./src/pipes/localecurrency.pipe.ts");
/* harmony import */ var _militaryTimeConversion_pipe__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./militaryTimeConversion.pipe */ "./src/pipes/militaryTimeConversion.pipe.ts");





var PipesModule = /** @class */ (function () {
    function PipesModule() {
    }
    PipesModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
            declarations: [_safehtml_pipe__WEBPACK_IMPORTED_MODULE_2__["SafeHtml"], _localecurrency_pipe__WEBPACK_IMPORTED_MODULE_3__["LocaleCurrency"], _militaryTimeConversion_pipe__WEBPACK_IMPORTED_MODULE_4__["MilitaryTimeConversion"]],
            providers: [_localecurrency_pipe__WEBPACK_IMPORTED_MODULE_3__["LocaleCurrency"], _militaryTimeConversion_pipe__WEBPACK_IMPORTED_MODULE_4__["MilitaryTimeConversion"]],
            exports: [_safehtml_pipe__WEBPACK_IMPORTED_MODULE_2__["SafeHtml"], _localecurrency_pipe__WEBPACK_IMPORTED_MODULE_3__["LocaleCurrency"], _militaryTimeConversion_pipe__WEBPACK_IMPORTED_MODULE_4__["MilitaryTimeConversion"]]
        })
    ], PipesModule);
    return PipesModule;
}());



/***/ }),

/***/ "./src/pipes/safehtml.pipe.ts":
/*!************************************!*\
  !*** ./src/pipes/safehtml.pipe.ts ***!
  \************************************/
/*! exports provided: SafeHtml */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SafeHtml", function() { return SafeHtml; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");



var SafeHtml = /** @class */ (function () {
    function SafeHtml(sanitized) {
        this.sanitized = sanitized;
    }
    SafeHtml.prototype.transform = function (value) {
        return this.sanitized.bypassSecurityTrustHtml(value);
    };
    SafeHtml.ctorParameters = function () { return [
        { type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["DomSanitizer"] }
    ]; };
    SafeHtml = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Pipe"])({ name: 'safeHtml' }),
        tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["DomSanitizer"]])
    ], SafeHtml);
    return SafeHtml;
}());



/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /home/ubuntu/ttclientsched/web/src/main.ts */"./src/main.ts");


/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main.js.map